{"English":"search for all the php files in the folder \"\/home\/mywebsite\" which have been changed in the last 30*24 hours","Bash":"find \/home\/mywebsite -type f -name \"*.php\" -ctime -30"}
{"English":"Change the permission to 0644 for all files under current directory","Bash":"find . -type f -exec chmod 0644 {} \\;"}
{"English":"search for a word in all the regular files in the current folder.","Bash":"find -type f -print0 | xargs -r0 grep -F 'example'"}
{"English":"Remove the regular files from the current directory that were last modified on November, 22","Bash":"find -maxdepth 1 -type f -newermt \"Nov 22\" \\! -newermt \"Nov 23\" -delete"}
{"English":"Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND","Bash":"read XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND"}
{"English":"find all the perl files in \/var\/www ( case insensitive search )","Bash":"find \/var\/www\/ -type f -iname \"*.pl\" -print"}
{"English":"List all files\/directories under current directory ensuring white space safety","Bash":"find -print0 | xargs --null"}
{"English":"Sort \"file\" using a buffer with a size 50% of main memory","Bash":"sort -S 50% file"}
{"English":"Find all the files whose name is tecmint.txt in the current directory","Bash":"find . -name tecmint.txt"}
{"English":"show all the files in the folder \/etc which have been modified in the last 24 hours","Bash":"find \/etc -mtime -1"}
{"English":"Print the contents of \"filename\"","Bash":"cat filename"}
{"English":"Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories","Bash":"find ${x} -type d -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Print a sorted list of regular files from directory tree \/folder\/of\/stuff","Bash":"find \/folder\/of\/stuff -type f | sort"}
{"English":"Print variable \"$module\" in formatted columns with at most 80 characters per line","Bash":"echo $modules | column -t | fold | column -t"}
{"English":"Find all files\/directories that are bigger than 100 bytes under '\/home\/apache' directory tree","Bash":"find \/home\/apache -size 100c -print"}
{"English":"Search appended data in \"logfile.log\" for \"something\" with a timeout of 3 seconds","Bash":"tail -f logfile.log | grep --line-buffered \"something\" | read -t 3"}
{"English":"List common files in directories \"1\" and \"2\"","Bash":"cat <(ls 1 | sort -u) <(ls 2 | sort -u) | uniq -d"}
{"English":"Print each line in \"f1\" and \"f2\" separated by a space and \"f3\" separated by a tab","Bash":"paste <(paste -d\" \" f1 f2) f3"}
{"English":"Print \"new.txt\" with line numbers prepended and line 2 or any line containing \"2\" deleted","Bash":"cat new.txt  | nl | sed  \"\/2\/d\""}
{"English":"Print 10 space separated \"x\"s with at most 4 per line","Bash":"yes x | head -10 | awk 'BEGIN { RS = \"%%%%%%%\" } { split($0,a,\"\\n\"); for (i=1; i<length(a); i+=4) print a[i], a[i+1], a[i+2], a[i+3] }'"}
{"English":"Resolve symbolic link of file \"\/foo\/bar\/baz\"","Bash":"readlink -e \/foo\/bar\/baz"}
{"English":"Exclude directory from find . command","Bash":"find -iname example.com | grep -v beta"}
{"English":"List files ending in .html and residing in the current directory tree","Bash":"find . -name \"*.html\""}
{"English":"list all files","Bash":"find ."}
{"English":"display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)","Bash":"find . -type f \\( -name \"*.htm*\" -o -name \"*.js*\" -o -name \"*.txt\" \\) -print0 | xargs -0 -n1 echo"}
{"English":"Recursively change the owner and group of \"\/var\/antoniod-data\/\" to \"antoniod\"","Bash":"chown -R antoniod:antoniod \/var\/antoniod-data\/"}
{"English":"Execute 'echo -e \"\\tHello World\"' every 2 seconds","Bash":"watch 'echo -e \"\\tHello World\"'"}
{"English":"Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.","Bash":"egrep -w -R \"word-1|word-2\u201d directory-path"}
{"English":"Print details for all files in the .\/work directory tree with extension .sh that were modified less than 20 days ago","Bash":"find .\/work\/ -type f -name \"*.sh\" -mtime -20 | xargs -r ls -l"}
{"English":"Generates temporary file in a '\/dev\/shm' folder and saves path to it in a 'tFile' variable.","Bash":"tFile=$(mktemp --tmpdir=\/dev\/shm)"}
{"English":"copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old","Bash":"find . -type f -mtime +30 -name \"*.log\" -exec cp {} old \\;"}
{"English":"Create a compressed archive of \"\/home\" and split the contents into files with at most 4000 MiB each and use prefix \"\/media\/DRIVENAME\/BACKUPNAME.tgz\"","Bash":"tar --one-file-system -czv \/home | split -b 4000m - \/media\/DRIVENAME\/BACKUPNAME.tgz"}
{"English":"Print the list of all regular files on the system using \"echo\"","Bash":"find \/ -type f -exec echo {} \\;"}
{"English":"find all the directories in the current folder","Bash":"find . -type d -print"}
{"English":"Change the file extension from '.txt' to '.bak' for all files\/directories under current directory tree","Bash":"find . -name \"*.txt\" | sed \"s\/\\.txt$\/\/\" | xargs -i echo mv {}.txt {}.bak | sh"}
{"English":"find files which have all permissions to all the users in the current directory","Bash":"find . -type f -perm 0777 -print"}
{"English":"Find all *.m4a files\/directories under \/home\/family\/Music directory","Bash":"find \/home\/family\/Music -name *.m4a -print0"}
{"English":"find all the files that are modified exactly one day ago","Bash":"find -daystart -mtime 1"}
{"English":"find all files in the file system whose size is exactly 2KB","Bash":"find \/ -size 2048c"}
{"English":"Puts the job 1 in the background.","Bash":"bg %1 [puts the job in the background]"}
{"English":"list directories owned by group ID 100 in the file system","Bash":"find \/ -type d -gid  100"}
{"English":"Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.","Bash":"x=$(grep \"$(dirname \"$path\")\" file)"}
{"English":"search for all the file sin the current folder which are bigger than 10KB and display them smallest file","Bash":"find . -size +10k -exec ls -lS {} \\+ | head -1"}
{"English":"Split standard input into files of at most 3400000 lines each","Bash":"split -l 3400000"}
{"English":"Read a line from standard input into variable \"foobar\" and suppress showing user input","Bash":"read -s foobar"}
{"English":"Recursively changes group ownership on everything in the 'public_html' folder to 'website' group.","Bash":"chgrp --recursive website public_html"}
{"English":"Find files which are more than 2 days old under  ${userdir}\/${i}\/incoming directory and remove them","Bash":"find ${userdir}\/${i}\/incoming -mtime +2 -type f -exec rm {} \\;"}
{"English":"Executes tmux commands that are stored in the '$tmux_command' variable, and then attaches to the tmux session.","Bash":"tmux \"$tmux_command \\; attach\""}
{"English":"Display all files in a folder","Bash":"find man5 -print"}
{"English":"Split \"date.csv\" into files with at most 100 lines each","Bash":"split -l 100 date.csv"}
{"English":"Archive \"directory\" preserving hard links from host \"remote\" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made","Bash":"rsync -aPSHiv remote:directory ."}
{"English":"Find all files in and below all subdirectories of the current directory","Bash":"find . -mindepth 2"}
{"English":"Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.","Bash":"find . -name \"FILE-TO-FIND\" -exec rm -rf {} \\;"}
{"English":"Shows strings that NOT match regex '^($|\\s*#|\\s*[[:alnum:]_]+=)'","Bash":"echo \"${line}\" | egrep --invert-match '^($|\\s*#|\\s*[[:alnum:]_]+=)'"}
{"English":"Write \"[some repository]\" to standard output and append to \"\/etc\/apt\/sources.list\" as root","Bash":"echo \"[some repository]\" | sudo tee -a \/etc\/apt\/sources.list"}
{"English":"Find and delete all hard links in the \/home directory tree to file1","Bash":"find \/home -xdev -samefile file1 | xargs rm"}
{"English":"Counts lines of 'file' file.","Bash":"wc -l file"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and \"en\" and \"es\" directories","Bash":"find . \\( -name en -o -name es \\) -prune , -mtime 0 ! -name \"*.swp\""}
{"English":"Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them","Bash":"find MyApp.app -name Headers -type d -exec rm -rf \"{}\" \\;"}
{"English":"Search for the files that are owned by user rooter or by user www-data","Bash":"find -user root -o -user www-data"}
{"English":"Find all files and directories that have been modified in the last seven days.","Bash":"find . -mtime -7"}
{"English":"Find all directories with permissions 777 under and below \/var\/www\/html, and change their permissions to 755","Bash":"find \/var\/www\/html -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"search the entire file system for the file \"jan92.rpt\"","Bash":"find \/ -name jan92.rpt -print"}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -delete"}
{"English":"Split \"$ORIGINAL_FILE\" into files of at most \"$MAX_LINES_PER_CHUNK\" lines each with a prefix \"$CHUNK_FILE_PREFIX\"","Bash":"split -l $MAX_LINES_PER_CHUNK $ORIGINAL_FILE $CHUNK_FILE_PREFIX"}
{"English":"Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size","Bash":"find $dir -type f -size +\"$size\"M -printf '%s %p\\n' | sort -rn"}
{"English":"Read a line from standard input into variable \"message\" with the prompt \"Please Enter a Message: $cr\"","Bash":"read -p \"Please Enter a Message: $cr\" message"}
{"English":"search for the file \"job.history\" in the folder \/data\/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern","Bash":"find \/data\/SpoolIn -name job.history | xargs grep -o -m 1 -h 'FAIL\\|ABOR' | sort | uniq -c"}
{"English":"display all the files in the file system which belong to the user \"wnj\" and which are modified after the file \"ttt\"","Bash":"find \/ -newer ttt -user wnj -print"}
{"English":"For each line in list.txt, output the line adding \"FAIL\" if the same line appears in fail.txt, and \"PASS\" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.","Bash":"sed 's\/$\/ FAIL\/' fail.txt | join -a 1 -e PASS -j 1 -o 1.1,2.2 list.txt -"}
{"English":"find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.)","Bash":"find ~\/ -daystart -type f -mtime 1"}
{"English":"Copy a file xyz.c to all directories or over all files matching the letter 'c' at the end of their names under current directory tree","Bash":"find . -name \"*c\" -print0 | xargs -0 -n1 cp xyz.c"}
{"English":"Find all xml files under current directory","Bash":"find . -name '*.xml'"}
{"English":"display long listing of all the files in the folder \"\/myfiles\"","Bash":"find \/myfiles -exec ls -l {} ;"}
{"English":"create a compressed archive in my_dir directory matching '.[^.]* ..?*' glob pattern","Bash":"tar -C my_dir -zcvf my_dir.tar.gz .[^.]* ..?* *"}
{"English":"delete all the directories empty directories in the current folder","Bash":"find . -type d -empty -delete"}
{"English":"Numerically sort IPv4 addresses specified on standard input with presedence to first, second, third, then fourth octet","Bash":"tr '.' ' ' | sort -nu -t ' ' -k 1 -k 2 -k 3 -k 4 | tr ' ' '.'"}
{"English":"Print your\/dir if it's an empty directory","Bash":"find your\/dir -prune -empty -type d"}
{"English":"Search regular files under ~\/mail for string \"Linux\"","Bash":"find ~\/mail -type f | xargs grep \"Linux\""}
{"English":"find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.","Bash":"find .\/ | grep -E 'foo|bar'"}
{"English":"Print string \"123\" once with '1' replaced by 'a' and second time replaced by 'b'","Bash":"echo 123 | tee >(tr 1 a)  | tr 1 b"}
{"English":"Find all files in the current directory tree whose size is greater than 1MB","Bash":"find . -size +1M"}
{"English":"Make directories \"~\/foo\/bar\/baz\", \"~\/foo\/bar\/bif\", and \"~\/foo\/boo\/bang\" as needed","Bash":"mkdir -p ~\/foo\/bar\/baz ~\/foo\/bar\/bif ~\/foo\/boo\/bang"}
{"English":"Find files\/directories in entire file system with at least 644 permission","Bash":"find \/ -perm -644"}
{"English":"Search \/usr\/local for subdirectories whose names end with a number 0-9","Bash":"find \/usr\/local -maxdepth 1 -type d -name '*[0-9]'"}
{"English":"create directory \/tmp\/new","Bash":"mkdir \/tmp\/new"}
{"English":"Recursively copy everything in \/source\/path whose name doesn't begin with a period, to \/destination\/path, without overwriting existing files, and outputting a line for each file copied or skipped.","Bash":"cp -Rvn \/source\/path\/* \/destination\/path\/"}
{"English":"Counts non-empty lines in file fileName.","Bash":"cat fileName | grep -v ^$ | wc -l"}
{"English":"Move all directories from the `sourceDir' directory tree to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -type d  -exec mv -t destDir \"{}\"  \\+"}
{"English":"Add group write permission to all files matching \"*\" or \"...*\"","Bash":"chmod g+w * ...*"}
{"English":"Save all directories under the current directory as a comma separated list in variable \"FOLDERS\"","Bash":"FOLDERS=$(find $PWD -type d | paste -d, -s)"}
{"English":"Write output of \"ls -a\" to standard output and to \"output.file\"","Bash":"ls -a | tee output.file"}
{"English":"Recursively changes group ownership of everything within '.git' to 'git'.","Bash":"chgrp -R git .git"}
{"English":"View history using \"vim\" in read only mode","Bash":"history | vim -R -"}
{"English":"Save the directory name of the canonical path to the current script in variable \"MY_DIR\"","Bash":"MY_DIR=$(dirname $(readlink -f $0))"}
{"English":"Disables shell option 'dotglob'.","Bash":"shopt -u dotglob"}
{"English":"display all the \".mov\" video files in the current folder in the format filename and folder path","Bash":"find . -iname \"*.mov\" -printf \"%p %f\\n\""}
{"English":"Find all files in the `work' directory tree, pass them to grep and search for \"profit\"","Bash":"find .\/work -print | xargs grep \"profit\""}
{"English":"Moves the file that named like file $1 from '\/tmp' folder to the folder where $2 file is located.","Bash":"mv \"\/tmp\/`basename $1`\" \"`dirname $2`\""}
{"English":"Removes first and last parts of path $path and saves the result in 'finalName' variable.","Bash":"finalName=$(basename -- \"$(dirname -- \"$path\")\")"}
{"English":"Remove all vmware-*.log files under current directory","Bash":"find . -name vmware-*.log -delete"}
{"English":"display all the files in the \/usr folder which have the permissions 777","Bash":"find \/usr -perm 0777 -print"}
{"English":"find all the reguar\/normal php files in current directory.","Bash":"find . -type f -name \"*.php\""}
{"English":"find .bmp or .txt files","Bash":"find \/home\/user\/Desktop -name '*.bmp' -o -name '*.txt'"}
{"English":"List files in the current directory and below","Bash":"find -ls"}
{"English":"replace the word foo to bar in the current folder in all the regular\/normal files containing the word \"baz\" in their name (does not update the file)","Bash":"find . -type f -name \"*baz*\" -exec sed -i 's\/foo\/bar\/g' {} +"}
{"English":"Print contents of \"file\" as space separated hexadecimal bytes on a single line","Bash":"od -t x1 -An file |tr -d '\\n '"}
{"English":"find all the video files in the home folder","Bash":"find ~ -type f -exec file -i {} + | grep video"}
{"English":"Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands","Bash":"set -o pipefail"}
{"English":"Find all files and directories in the current directory tree with \"linkin park\" in their names and copy them to \/Users\/tommye\/Desktop\/LP","Bash":"find . -iname \"*linkin park*\" -exec cp -r {} \/Users\/tommye\/Desktop\/LP \\;"}
{"English":"Search the `images' directory tree for regular files","Bash":"find images\/ -type f"}
{"English":"Search  in current directory downwards all files whose size is 10 blocks .","Bash":"find .  -size 10 print"}
{"English":"Set permissions for all regular files under \/var\/www to 755","Bash":"find \/var\/www -type f -print0 | xargs -0 chmod 644"}
{"English":"Copy the entire directory tree under t1 to t2, do not create a containing t1 directory in t2.","Bash":"cp -R t1\/ t2"}
{"English":"Delete all hidden files\/directories under $some_directory","Bash":"find \"$some_directory\" -name '.*' ! -name '.' ! -name '..' -delete"}
{"English":"Find all the *.c files at any level of directory Programming under any 'src' directory","Bash":"find ~\/Programming -path '*\/src\/*.c'"}
{"English":"Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.","Bash":"find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"}
{"English":"Search the .java files from the \/Applications\/ directory tree for TODO lines","Bash":"find \/Applications\/ -name \"*.java\" -exec grep -i TODO {} +"}
{"English":"Search the current directory recursively for directories with the execute permission set for everybody","Bash":"find -type d ! -perm -111"}
{"English":"Find all *.txt files under the current directory whose names are not \"File.txt\"","Bash":"find . -maxdepth 1 -type f -regex '.*\\.txt' -not -name File.txt"}
{"English":"Search for all files with either \"sitesearch\" or \"demo\" in their path names","Bash":"find . -iregex '.*sitesearch.*' -iregex '.*demo.*'"}
{"English":"Back up all *.txt files\/directories in new files\/directories with a .bak extension in their names under \/etc directory","Bash":"find \/etc -name \"*.txt\" | xargs -I {} mv {} {}.bak"}
{"English":"Find all .rb files owned by root in the \/apps\/ folder and below that have been accessed in the last two minutes.","Bash":"find \/apps\/ -user root -type f -amin -2 -name *.rb"}
{"English":"remove all the DS_Store files in the current directory","Bash":"find . -name .DS_Store -exec rm {} \\;"}
{"English":"Search the file system for regular files whose names are shorter than 25 characters","Bash":"find \/ -type f|egrep \"\/[^\/]{0,24}$\""}
{"English":"List environment variables whose name matches '^\\w*X\\w*'","Bash":"set | grep -oP '^\\w*X\\w*(?==)'"}
{"English":"Lists all files that matches path pattern with wildcards.","Bash":"ls -l \/lib*\/ld-linux*.so.2"}
{"English":"Print each line in \"set1\" and \"set2\" that does not exist in the other","Bash":"sort set1 set2 | uniq"}
{"English":"find the type of all the regular\/normal files in the current folder (plus takes bulk of files as input to the file command)","Bash":"find . -type f -exec file {} \\+;"}
{"English":"Find all regular files in the current directory tree that are not readable by all","Bash":"find -type f ! -perm -444"}
{"English":"Search the current directory tree for files whose name is \".note\", case insensitive","Bash":"find -type d -exec find {} -maxdepth 1 \\! -type d -iname '.note' \\;"}
{"English":"Output the string 'yes' continously until killed","Bash":"yes"}
{"English":"create a symbolic link named \"test\" to file \".bashrc\"","Bash":"ln -s .bashrc test"}
{"English":"Find all *Company* files\/directories under \/root\/of\/where\/files\/are directory","Bash":"find \/root\/of\/where\/files\/are -name *Company*"}
{"English":"Split \"data.tsv\" into files of at most 5000000 lines each with prefix \"_tmp\"","Bash":"split -l5000000 data.tsv '_tmp';"}
{"English":"Counts lines in each *.php file.","Bash":"find . -name '*.php' -type f | xargs wc -l"}
{"English":"Invoke a trusted X11 forwarding SSH connection with server \"192.168.0.14\" on port 222 as user \"phil\"","Bash":"ssh -v -Y phil@192.168.0.14 -p 222"}
{"English":"Gets domain name from dig reverse lookup.","Bash":"dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}
{"English":"Display all variables with names starting with \"derby\" in a Window's command line","Bash":"set derby"}
{"English":"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories","Bash":"find . -type d -exec chmod u=rwx,g=rx,o=x {} \\;"}
{"English":"Prints folder path where $mystring file is located.","Bash":"echo dirname: $(dirname $mystring)"}
{"English":"Print a randomly sorted list of numbers from 1 to 10 to file \"\/tmp\/lst\" and the screen followed by \" -------\"","Bash":"seq 1 10 | sort -R | tee \/tmp\/lst |cat <(cat \/tmp\/lst) <(echo '-------')"}
{"English":"Print whether \"$file\" and \"${file\/${dir1}\/${dir2}}\" differ","Bash":"diff -q \"$file\" \"${file\/${dir1}\/${dir2}}\""}
{"English":"Find all *.py (case insensitive) files\/directories under dir directory ignoring .git path","Bash":"find dir -not -path '.git' -iname '*.py'"}
{"English":"Find files that are 0 bytes in size in the current directory and remove them","Bash":"find . -maxdepth 1 -size 0c -exec rm {} \\;"}
{"English":"Sort file \"foo.txt\" by line to standard output","Bash":"sort foo.txt"}
{"English":"Create a ssh key with no passphrase and store it in \"outfile\".","Bash":"ssh-keygen -f outfile -N ''"}
{"English":"Print IP addresses of the host name","Bash":"hostname --ip-address"}
{"English":"Print only first line of 'file' content, formatted as 29-symbol wide column","Bash":"cat file | fold -w29 | head -1"}
{"English":"Display the 'bash' manpage, going to the first occurence of \\' sequence of characters.","Bash":"man bash | less -Ip \"\\\\\\'\""}
{"English":"Search for all the files in man pages and return the manual page for grep","Bash":"find \/usr\/share\/man\/ -regex .*\/grep*"}
{"English":"find all foo.bar files in the entire file system","Bash":"find \/ -name foo.bar -print"}
{"English":"Move *wp-admin\/index.php files under \/var\/www\/  to .\/index_disabled","Bash":"find \/var\/www\/ -path '*wp-admin\/index.php' -exec mv {} $(dirname {})\/index_disabled"}
{"English":"Update the archive '2009.tar' with the files from the data\/ directory tree that match pattern 'filepattern-*2009*'","Bash":"find data\/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;"}
{"English":"Find and remove the file with inode number 782263 in the current directory tree","Bash":"find . -inum 782263 -exec rm -i {} \\;"}
{"English":"Prints $m latest modified files within the $d folder, using $f format for printing timestamp.","Bash":"find \"$d\" -type f -printf \"%T@ :$f %p\\n\" | sort -nr | cut -d: -f2- | head -n\"$m\""}
{"English":"Display all symlinks and their targets in the current directory tree","Bash":"find -P . -type l -exec echo -n \"{} -> \" \\; -exec readlink {} \\;"}
{"English":"Find SGID files","Bash":"find \/ -perm +g=s"}
{"English":"Move all files including hidden files in \"\/path\/subfolder\/\" to \"\/path\/\"","Bash":"mv \/path\/subfolder\/{.,}* \/path\/"}
{"English":"Copy all files below the current directory whose names contain \"FooBar\" to directory foo\/bar\/ in user's home directory.","Bash":"find . | grep FooBar | xargs -I{} cp {} ~\/foo\/bar"}
{"English":"Find recursively all empty directories in the current directory","Bash":"find . -type d -empty"}
{"English":"Split \"input.txt\" into files with 1 line each and use a prefix \"output.\" and a suffix length of 5","Bash":"split --lines=1 --suffix-length=5 input.txt output."}
{"English":"List all files that matches both the case insensitive patterns *$1* and *$2* under \/home\/musicuser\/Music\/ directory","Bash":"find \/home\/musicuser\/Music\/ -type f  -iname \"*$1*\" -iname \"*$2*\" -exec echo {} \\;"}
{"English":"Find all the files in file system which are modified 50 days back","Bash":"find \/ -mtime 50"}
{"English":"Find all files called wp-config.php in the \/var\/www directory and below","Bash":"find \/var\/www\/ -name wp-config.php"}
{"English":"Find root's files in the current directory tree","Bash":"find .\/ -user root"}
{"English":"display all the tex files in the current folder","Bash":"find . -name \"*.tex\""}
{"English":"Add a number prefix followed by ')' to each line in \"$string\"","Bash":"echo \"$string\" | nl -ba -s') '"}
{"English":"Search for \"facebook\\|xing\\|linkedin\\|googleplus\" in \"access-log.txt\" and print a count of the unique entries","Bash":"grep -ioh \"facebook\\|xing\\|linkedin\\|googleplus\" access-log.txt | sort | uniq -c | sort -n"}
{"English":"Find all files\/directories named 'vimrc' in the entire filesystem","Bash":"find \/ -name vimrc"}
{"English":"Create a gzip archive file ($tarFile) of all *.log files under $sourcePath","Bash":"find $sourcePath -type f -name \"*.log\" -exec tar -uvf $tarFile {} \\;"}
{"English":"Find all files and directories with permissions 664","Bash":"find . -perm 664"}
{"English":"Make 3 directories named \"~\/Labs\/lab4a\/folder\" followed by the number 1, 2, or 3","Bash":"mkdir ~\/Labs\/lab4a\/folder{1..3}"}
{"English":"List recursively all files and directories in \/var\/www","Bash":"find \/var\/www"}
{"English":"Make directory \"foo\"","Bash":"mkdir foo"}
{"English":"find all the files in the current directory and print them excluding those that have the name SCCS.","Bash":"find . -print -o -name SCCS -prune"}
{"English":"use regex with find command","Bash":"find . -regextype sed -regex \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\""}
{"English":"display all the text files and hidden files in the home folder","Bash":"find ~ -name \"*.txt\" \u2014 print -o -name \".*\" \u2014 print"}
{"English":"display all sqlite files in the current directory along with their timestamp","Bash":"find .\/ -name \"*.sqlite\" -printf '%Tc %p\\n'"}
{"English":"Show the number of lines for each PHP file in the current directory tree","Bash":"find . -type f -name \"*.php\" -exec wc -l {} +;"}
{"English":"Unzip all files matching \"test1\/*\/*.gz\"","Bash":"gunzip test1\/*\/*.gz"}
{"English":"Find *2011* files and grep for the string 'From: Ralph' in those files","Bash":"find . -name '*2011*' -print | xargs -n2 grep 'From: Ralph'"}
{"English":"Search the current directory tree for files whose name is \".note\", case insensitive","Bash":"find . -iname '.note' | sort -r"}
{"English":"Copy all files with '.png' (case insensitive) extension under '\/home\/mine' directory tree to '\/home\/mine\/pngcoppies\/copy.' directory","Bash":"find \/home\/mine -iname \"*.png\" -execdir cp {} \/home\/mine\/pngcoppies\/copy{} \\;"}
{"English":"Verbosely compresses all files on third and fourth depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*"}
{"English":"recursively change owner and group of the directory  \/opt\/antoniod\/ to user and group antoniod","Bash":"chown -R antoniod:antoniod \/opt\/antoniod\/"}
{"English":"Delete all directories in the TBD directory that were modified more than 1 day ago","Bash":"find \/TBD -mtime +1 -type d | xargs rm -f -r"}
{"English":"Recursively copies all files in the current directory but ones that names match pattern \"dirToExclude|targetDir\" to the 'targetDir' directory, printing info message on each operation.","Bash":"cp -rv `ls -A | grep -vE \"dirToExclude|targetDir\"` targetDir"}
{"English":"Run command specified by $line, replace space (' ') with newline and save the output to variable 'arr'","Bash":"arr=$( $line | tr \" \" \"\\n\")"}
{"English":"Number each line in \"foobar\" as right-justified zero padded to a width of 9","Bash":"nl -nrz -w9 foobar"}
{"English":"Extract two semicolon-separated fields from specified strings, output them separated by a space.","Bash":"echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'"}
{"English":"Print the last command in history","Bash":"history | tail -1 | awk '{print $1}'"}
{"English":"Find files in the current directory tree whose permissions are 775","Bash":"find .  -perm 775"}
{"English":"display all the directories in the current folder excluding those that are present in the aa directory tree","Bash":"find . -type d -name aa -prune -o -print"}
{"English":"Find all the *.pl files (Perl files) beneath the current directory.","Bash":"find . -name \"*.pl\""}
{"English":"List all environment variables whose name starts with PATH, showing the name and value of each one.","Bash":"env | grep ^PATH"}
{"English":"List the names of the directories in current directory without going into sub-directories","Bash":"find . -mindepth 1 -maxdepth 1 -type d -printf \"%P\\n\""}
{"English":"Sets 'extglob' shell variable.","Bash":"shopt -s extglob"}
{"English":"delete all the log files which have not been modified in the last 5 days after user confirmation","Bash":"find . \u2014 name \"*.LOG\" \u2014 mtime +5 -ok rm {} \\;"}
{"English":"change the permissions of all the directories  to 775 in the current folder","Bash":"find . -type d -exec chmod 775 {} \\;"}
{"English":"Find all executable files under current directory and show a few lines of output from the beginning","Bash":"find . -perm \/a=x | head"}
{"English":"Search the .\/bin directory recursively for files called \"cp\"","Bash":"find .\/bin -name \u201ccp\u201d"}
{"English":"find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files","Bash":"find . -name \\*.xml | grep -v \/workspace\/ | tr '\\n' '\\0' | xargs -0 tar -cf xml.tar"}
{"English":"Remove a leading \"machine\" from the system host name and save the result to variable \"machnum\"","Bash":"machnum=$(hostname | sed 's\/^machine\/\/')"}
{"English":"Recursively change the owner and group of all files in the current directory to \"andrewr\"","Bash":"chown -R andrewr:andrewr *"}
{"English":"file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.","Bash":"join -t, file1 file2 | awk -F, 'BEGIN{OFS=\",\"} {if ($3==$8 && $6==$9 && $7==$10) print $1,$2,$3,$4,$6,$7}'"}
{"English":"Replace \"foo\" with \"bar\" in all PHP files in the current directory tree","Bash":"find . -name \"*.php\" -exec sed -i 's\/foo\/bar\/g' {} \\;"}
{"English":"List all the emptry files in thecurrent directory only.","Bash":"find . -maxdepth 1 -empty"}
{"English":"Find files\/directories containing 'test' in their names and display the directory contents before the directories themselves","Bash":"find -name \"*test*\" -depth"}
{"English":"Print the base name of the current working directory","Bash":"basename `pwd`"}
{"English":"List environment variables and their values, escaping all semicolons with a backslash.","Bash":"env | sed 's\/;\/\\\\;\/g'"}
{"English":"Write the shell's input to standard error as it is read","Bash":"set -v"}
{"English":"Find all file in current directory with have .c extenstion & have 777 permission . delete then","Bash":"find . -name \"*.c\" -a  -perm -777 | xargs rm -rf"}
{"English":"Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.","Bash":"df $path_in_question | grep \" $path_in_question$\""}
{"English":"List all regular files under the current directory and below it","Bash":"find . -type f | xargs ls -l"}
{"English":"Search the \/storage\/sdcard0\/tencent\/MicroMsg\/ directory tree for JPG files","Bash":"find  \/storage\/sdcard0\/tencent\/MicroMsg\/ -type f  -iname '*.jpg' -print0"}
{"English":"Change permissions of \".bash_logout\", \".bashrc\", and \".profile\" to 444","Bash":"chmod 444 .bash_logout .bashrc .profile"}
{"English":"Removes all files from current folder but 5 newest ones.","Bash":"ls -tr | head -n -5 | xargs rm"}
{"English":"Read a line from standard input into variable \"i\" with the prompt \" Again? Y\/n \"","Bash":"read -p \" Again? Y\/n \" i"}
{"English":"Replace \"_\" with newlines in \"Testing\\r_Tested\" and display the named characters","Bash":"echo -e \"Testing\\r_Tested\" | awk -v RS=\"_\" '{ print $0; }' | od -a"}
{"English":"Find all *.tar.gz files\/directories under \/directory\/whatever which were modified more than $DAYS ago","Bash":"find \/directory\/whatever -name '*.tar.gz' -mtime +$DAYS"}
{"English":"Print the help message of command \"split\"","Bash":"split --help"}
{"English":"Print help on 'cat' command usage","Bash":"cat --help"}
{"English":"Counts all top-level files in a current folder.","Bash":"ls -1 | wc -l"}
{"English":"Delete all *.zip files under current directory that are older than 2 days","Bash":"find . -name \"*.zip\" -mtime +2 -print0 | xargs -0 -I {} rm {}"}
{"English":"Change owner to \"$user\" and group to \"$group\" of \"$file\"","Bash":"chown -- \"$user:$group\" \"$file\""}
{"English":"find all the links in the current folder and following it to the pointed path","Bash":"find -L \/target -type l"}
{"English":"Find files that are empty","Bash":"find -empty -type -f"}
{"English":"Allow all users to execute \"myscript.sh\"","Bash":"chmod a+x myscript.sh"}
{"English":"Output all lines in 'file' which contain a tab character.","Bash":"awk -F\"\\t\" 'NF>1' file"}
{"English":"Find all *.log files under current directory that contain the string \"Exception\"","Bash":"find . -name '*.log' -mtime -2 -exec grep -Hc Exception {} \\; | grep -v :0$"}
{"English":"Forcefully delete all files in the current directory","Bash":"find . -name '*' | xargs rm"}
{"English":"Create intermediate directories as required and directory \/tmp\/test\/blah\/oops\/something","Bash":"mkdir -p \/tmp\/test\/blah\/oops\/something"}
{"English":"Search the ~ and `Music' directory trees for .mp3 files","Bash":"find ~ Music -name '*.mp3'"}
{"English":"display the number of lines in all the files in the current folder","Bash":"find . -exec wc -l {} \\;"}
{"English":"Remove the \"123_\" prefix from all filenames of .txt files in current directory.","Bash":"rename 's\/^123_\/\/' *.txt"}
{"English":"Print '111 22 3\\n4 555 66\\n' by replacing the spaces with tabs and '\\n' with newlines","Bash":"echo -en '111 22 3\\n4 555 66\\n' | tr ' ' '\\t'"}
{"English":"get second-to-last comma-separated field of each line in file.txt","Bash":"cat file.txt | rev | cut -d ',' -f 2 | rev"}
{"English":"Find all *.py files under and below the current directory and search them for \"xrange\"","Bash":"find . -name '*.py' -exec grep --color 'xrange' {} +"}
{"English":"Print every 4th line from 10 lines of \"y\" with line numbers","Bash":"yes | cat -n | head -10 | awk 'NR % 4 == 1'"}
{"English":"Change owner of \"folder\" to \"user_name\"","Bash":"chown user_name folder"}
{"English":"Find all files named 'new' under current directory tree and display their contents","Bash":"find . -name new -print -exec cat {} \\;"}
{"English":"Set permissions to ug=rw,o= for files under the $d directory tree","Bash":"find $d -type f -exec chmod ug=rw,o= '{}' \\;"}
{"English":"Lookup information of the current user","Bash":"finger `whoami`"}
{"English":"Find all files under current directory that were modified in the last 24 hours","Bash":"find -mtime 0"}
{"English":"Search for the literal string 'v$process' in all files under current directory","Bash":"find . -print|xargs grep v\\$process"}
{"English":"Delete all .svn directories under current directory","Bash":"find . -type d -name .svn -print0|xargs -0 rm -rf"}
{"English":"Find all files\/directories that are owned by user 'dave' under current user's home directory tree","Bash":"find ~ -user dave -print"}
{"English":"Removes empty folder 'edi' and 'edw'.","Bash":"rmdir edi edw"}
{"English":"Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory","Bash":"find .\/ -name \"*\" -printf \"%f\\n\" | xargs grep \"searchName\""}
{"English":"Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories","Bash":"find . -maxdepth 1 -name \"*.jpg\" -size -50k | xargs rm -f"}
{"English":"Find broken symlinks in current directory","Bash":"find . -type l -xtype l"}
{"English":"Remove all the files and directories that are in \/dir1 but not in \/dir2.","Bash":"diff -rq \/dir1 \/dir2 | grep -E \"^Only in \/dir1.*\" | sed -n 's\/:\/\/p' | awk '{print $3\"\/\"$4}' xargs -I {} rm -r {}"}
{"English":"Search the current directory tree for regular files that were changed $FTIME days ago","Bash":"find . -type f -ctime $FTIME"}
{"English":"search for the file \"file\" in the current folder excluding those in the sub directory \".git\"","Bash":"find . -path .\/.git  -prune -o -name file  -print"}
{"English":"Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.","Bash":"comm -23 <(ls) <(ls *Music*)"}
{"English":"Find files\/directories in entire file system that have been modified in the last minute","Bash":"find \/ -mmin -1"}
{"English":"Find all *.ogg files on the system ignoring the case","Bash":"find \/ -iname '*.ogg'"}
{"English":"Unzip and untar \"myarchive.tar.gz\" and check for corruption","Bash":"gunzip -c myarchive.tar.gz | tar -tvf -"}
{"English":"Enables shell option 'cmdhist'.","Bash":"shopt -s cmdhist"}
{"English":"Save the number of bytes in \"$file\" after decompression into variable \"size\"","Bash":"size=\"$(zcat \"$file\" | wc -c)\""}
{"English":"create the compressed tar archive images.tar.gz containing all jpg files found under \/","Bash":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}
{"English":"find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB","Bash":"find . -atime +7 -size +20480 -print"}
{"English":"Remove all files in and below the current directory whose names begin with \"not\"","Bash":"find . -name not\\* | tr \\\\n \\\\0 | xargs -0 rm"}
{"English":"Compress all files in directory \"$PATH_TO_LOGS\" that were last modified more than \"$SOME_NUMBER_OF_DAYS\" days ago","Bash":"find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec gzip -N {} \\;"}
{"English":"Find all the files on the system that have been modified within the last hour","Bash":"find \/ -mmin -60"}
{"English":"Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.","Bash":"cat BIG_FILE.txt | less"}
{"English":"Remove all \"work\" directories residing in \/usr\/ports and below","Bash":"find \/usr\/ports\/ -name work -type d -print -exec rm -rf {} \\;"}
{"English":"Instantly kill all processes whose command is 'myprocess'.","Bash":"kill -9 \\`pgrep myprocess\\`"}
{"English":"Display a long listing of the oldest file under '\/hom\/backups' directory tree","Bash":"find \/home\/backups -printf \"%T@ %p\\n\" | sort -n | head -1 | cut -d\" \" -f2- | xargs ls -al"}
{"English":"Changes group ownership of '\/home\/www-user\/php_user.sh'  to 'www-data'.","Bash":"chgrp www-data \/home\/www-user\/php_user.sh"}
{"English":"Check the environment variables generated by switching to the root account.","Bash":"sudo env"}
{"English":"Make directory \"backup\"","Bash":"mkdir backup"}
{"English":"display all regular\/normal files in the current folder which are accessed in the last 7*24 hours","Bash":"find . -type f -atime -7"}
{"English":"Saves byte size of all content of $1 folder in 'uiTotalSize' variable.","Bash":"uiTotalSize=$(ls -l -R $1 | grep -v ^d | awk '{total+=$5;} END {print total;}')"}
{"English":"find all the directories in the file system which begin with \"man\"","Bash":"find \/ -type d -name 'man*' -print"}
{"English":"Prints name of a current shell binary file.","Bash":"ls -l \/proc\/$$\/exe | sed 's%.*\/%%'"}
{"English":"find regular files in the \"mail\" folder under the user's home directory, displaying filenames and lines that contain the text \"Linux\"","Bash":"find ~\/mail -type f | xargs grep \"Linux\""}
{"English":"Search \"mygzfile.gz\" for \"string to be searched\"","Bash":"gunzip -c mygzfile.gz | grep \"string to be searched\""}
{"English":"find the count of text files that are present in the current working directory.","Bash":"find . -maxdepth 1 -name \\*.txt -print0 | grep -cz ."}
{"English":"Save number of lines with any-cased 'merge' from $COMMIT_EDITMSG file in 'MERGE' variable","Bash":"MERGE=$(cat $COMMIT_EDITMSG|grep -i 'merge'|wc -l)"}
{"English":"Unzip file \"$empty_variable\"","Bash":"gunzip $empty_variable"}
{"English":"display all the text files in current folder","Bash":"find . -name \"*.txt\""}
{"English":"Change permissions of all directories in the ~\/dir_data directory tree in accordance with mode `a+xr,u+w'","Bash":"find ~\/dir_data -type d -exec chmod a+xr,u+w {} \\;"}
{"English":"Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively","Bash":"grep -rl \"needle text\" my_folder | tr '\\n' '\\0' | xargs -r -0 file | grep -e ':[^:]*text[^:]*$' | grep -v -e 'executable'"}
{"English":"find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory","Bash":"find \/media\/New\\ Volume\/bhajans -maxdepth 1 -type d | xargs -0 mkdir -p"}
{"English":"print lines from last match of ^Statistics until end of file","Bash":"tac INPUTFILE | sed '\/^Statistics |\/q' | tac"}
{"English":"Read and execute file 'lib\/B' that located in the same directory as the current script, will fail if currently running script is not in PATH.","Bash":"source \"$( dirname \"$( which \"$0\" )\" )\/lib\/B\""}
{"English":"List files and directories recursively","Bash":"find . -print | xargs ls -gilds"}
{"English":"Find all files\/directories named 'FindCommandExamples.txt' under '\/root' directory tree","Bash":"find \/root -name FindCommandExamples.txt"}
{"English":"Print the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"","Bash":"ping google.com | awk '{ sent=NR-1; received+=\/^.*(time=.+ ms).*$\/; loss=0; } { if (sent>0) loss=100-((received\/sent)*100) } { printf \"sent:%d received:%d loss:%d%%\\n\", sent, received, loss }'"}
{"English":"Find all directories named 'local' in entire file system","Bash":"find \/ -name local -type d"}
{"English":"display list of all the files in the current folder which are empty.","Bash":"find . -size 0 -ls"}
{"English":"List all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"","Bash":"find . -name FOLDER1 -prune -o -name filename -print"}
{"English":"Print last 10 commands in history with the first 7 characters removed","Bash":"history 10 | cut -c 8-"}
{"English":"Silently read a line into variable \"passwd\" with prompt \"Enter your password: \"","Bash":"read -s -p \"Enter your password: \" passwd"}
{"English":"Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in \".log\"","Bash":"sudo find \/ -xdev -type f -size +100000 -name \"*.log\" -exec gzip -v {} \\;"}
{"English":"Sort file.txt ignoring the last 10 characters of each line.","Bash":"sort file.txt | rev | uniq -f 10 | rev"}
{"English":"Print file system disk space usage and grand total for the root file system with sizes in powers of 1000","Bash":"df -H --total \/"}
{"English":"Remove all \"CVS\" directories from the current directory tree, ignoring the case","Bash":"find . -iname CVS -type d | xargs rm -rf"}
{"English":"Find all regular files in the current directory tree and count them","Bash":"find -type f | wc -l"}
{"English":"Find all fglrx-libglx* files under and below debian\/fglrx\/","Bash":"find debian\/fglrx\/ -name 'fglrx-libglx*'"}
{"English":"Find all .gz archives in the current directory tree and check if they are valid","Bash":"find . -name '*.gz' | xargs gunzip -vt"}
{"English":"Convert all characters in \"$a\" to lower case and save to variable \"b\"","Bash":"b=`echo \"$a\" | sed 's\/.\/\\L&\/g'`"}
{"English":"List all files under current directory matching the regex '.*\\.\\(c\\|h\\|cpp\\)'","Bash":"find . -type f -regex '.*\\.\\(c\\|h\\|cpp\\)' -exec ls {} \\;"}
{"English":"Run sed command \"s#\\(export\\ PATH=\\\"\\)\\(.*\\)#\\1\/home\/$(whoami)\/bin:~\/\\.local\/bin:\\2#\" on \"~\/.zshrc\" where \"$(whoami)\" is replaced with the current user name","Bash":"sed -i \"s#\\(export\\ PATH=\\\"\\)\\(.*\\)#\\1\/home\/$(whoami)\/bin:~\/\\.local\/bin:\\2#\" ~\/.zshrc"}
{"English":"List all files under and below the directory given as variable $ARCH1","Bash":"find $ARCH1 -ls"}
{"English":"remove all subdirectories named \"CVS\" under current dir","Bash":"find . -type d -name CVS -exec rm -r {} \\;"}
{"English":"Creates temporary file with file name formatted like \/tmp\/gnuplot_cmd_$(basename \"${0}\").XXXXXX.gnuplot and saves path to it in a variable 'gnuplotscript'.","Bash":"gnuplotscript=$(mktemp \/tmp\/gnuplot_cmd_$(basename \"${0}\").XXXXXX.gnuplot)"}
{"English":"Find files whose name starts with \"MyFile\", ignoring the case","Bash":"find . -iname 'MyFile*'"}
{"English":"Find disk usage of all files inside the directory","Bash":"du -a"}
{"English":"Find 10 largest files in the current directory and its subdirectories","Bash":"du -hsx * | sort -rh | head -10"}
{"English":"Find all filenames ending with .c in the \/usr directory tree","Bash":"find \/usr -name \"*.c\""}
{"English":"Compress from standard input with gzip","Bash":"gzip"}
{"English":"search the pattern ^PyErr in all the \".c\" files in the folder Lib\/","Bash":"find Lib\/ -name '*.c' -print0 | xargs -0 grep ^PyErr"}
{"English":"Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time","Bash":"find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}
{"English":"Search the current directory tree for directories","Bash":"find $PWD -type d"}
{"English":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","Bash":"find . -name \\*.c -exec grep wait_event_interruptible {} +"}
{"English":"force create hard link between $GIT_DIR\/..\/apresentacao\/apresentacao.pdf and $GIT_DIR\/..\/capa\/apresentacao.pdf","Bash":"ln -f $GIT_DIR\/..\/apresentacao\/apresentacao.pdf $GIT_DIR\/..\/capa\/apresentacao.pdf"}
{"English":"Just find directories and skip file names","Bash":"find  \/ -type d -name \"apt\" -ls"}
{"English":"Recursively copy directory \"\/path\/to\/data\/myappdata\" to \"user@host:\/remote\/path\/to\/data\/newdirname\"","Bash":"rsync -rvv --recursive \/path\/to\/data\/myappdata user@host:\/remote\/path\/to\/data\/newdirname"}
{"English":"Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.","Bash":"find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \\;"}
{"English":"create directory log into home directory","Bash":"mkdir ~\/log"}
{"English":"Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"1\" [1]=\"2\")","Bash":"false | true"}
{"English":"Recursively removes $TMPDIR folder, prompting user on each deletion.","Bash":"rm -r $TMPDIR"}
{"English":"Finds all folders that contain 'ssh' file and have 'bin' in path.","Bash":"find \/ -name ssh|grep bin|xargs dirname"}
{"English":"Search for files\/directories which are writable by somebody (their owner, or their group, or anybody else)","Bash":"find . -perm \/222"}
{"English":"List all files in \/home\/bozo\/projects directory tree that were modified within the last day","Bash":"find \/home\/bozo\/projects -mtime -1"}
{"English":"Find all .gz archives in the current directory tree","Bash":"find . -name '*.gz'"}
{"English":"Print the last 10 lines of \"great-big-file.log\"","Bash":"tail great-big-file.log"}
{"English":"Search the current directory tree for regular files whose names end in \"log\"","Bash":"find `pwd` -name \"*log\" -type f"}
{"English":"find files in \/tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled","Bash":"find \/tmp -name core -type f -print0 | xargs -0 \/bin\/rm -f"}
{"English":"Print the user name of the current user","Bash":"echo `whoami`"}
{"English":"Lists the pids of all processes that have process '1782' as their parent.","Bash":"pstree -p 1782 | sed 's\/-\/\\n\/g' | sed -n -e 's\/.*(\\([0-9]\\+\\)).*\/\\1\/p'"}
{"English":"display all text files in the folder \/user\/directory which have been modified in today","Bash":"find \/user\/directory\/* -name \"*txt\" -mtime 0 -type f"}
{"English":"Search the \/home\/www directory tree for regular files","Bash":"find \/home\/www -type f"}
{"English":"Write \"Some console and log file message\" to standard output and \"\/dev\/fd\/3\"","Bash":"echo \"Some console and log file message\" | tee \/dev\/fd\/3"}
{"English":"display all normal\/regular files in a folder","Bash":"find teste1 -type f"}
{"English":"list regular files under the current directory ending in .mbox putting a null between each file found","Bash":"find . -type f -wholename \\*.mbox -print0"}
{"English":"List all files\/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names excluding the files that contain 'generated' or 'deploy' in their paths","Bash":"find . -regextype posix-egrep -regex '.+\\.(c|cpp|h)$' -print0 | grep -vzZ generated | grep -vzZ deploy | xargs -0 ls -1Ld"}
{"English":"List all regular files in and below the home directory that have been modified in the last 90 minutes","Bash":"find ~ -type f -mmin -90 | xargs ls -l"}
{"English":"Count the number of times that a single \"-----------\\n\" separated record contains both \"A=2\" and \"dummy=2\" and the number of records that do not have \"dummy=2\" in compressed file \"file.gz\"","Bash":"zcat file.gz | awk -v RS=\"-----------\\n\" '\/A=2[ ,\\n]\/ && \/dummy=2[ ,\\n]\/{count++} !\/dummy=2[ ,\\n]\/{other++} END{print \"Final counter value=\",count, \"; other=\", other}'"}
{"English":"Insert the current host name on line 15 of \"test.html\"","Bash":"sed -i \"15i `hostname`\" test.html"}
{"English":"display all the files in the current folder which contains form feed (^L) and does not contain NULL","Bash":"find . | xargs grep -PL \"\\x00\" | xargs grep -Pl \"\\x0c\""}
{"English":"Find all files in the \/myfiles directory tree following symbolic links","Bash":"find -L \/myfiles"}
{"English":"display all the details of empty files in current folder","Bash":"find . -size 0 -printf '%M %n %u %g %s %Tb\\n \\b%Td %Tk:%TM %p\\n'"}
{"English":"Find all files whose names end with \"~\" in the \/home\/peter directory tree, following symlinks, and delete them","Bash":"find -L \/home\/peter -name *~ -exec rm '{}' +"}
{"English":"Prints long listing of content in the current folder with C-style escapes for nongraphic characters","Bash":"ls -lb"}
{"English":"Search for file \"file\" between level 2 and 3 of the directory tree","Bash":"find -mindepth 2 -maxdepth 3 -name file"}
{"English":"display a list of all the normal\/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set","Bash":"find \/ -path \/proc -prune -o -type f -perm +6000 -ls"}
{"English":"Delete all files in the \/myDir directory tree that were last modfied more than 7 days ago","Bash":"find \/myDir -mindepth 1 -mtime +7 -delete"}
{"English":"Count the number of non localhost users","Bash":"who | grep -v localhost | wc -l"}
{"English":"find all the files in the file system which have been changed in the last 24 hours.","Bash":"find \/ -ctime -1"}
{"English":"Unzip \"file.gz\" to stdout","Bash":"zcat file.gz"}
{"English":"Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths","Bash":"find \"$1\" -path \"*\/.*\" -prune -o \\( -type f -print0 \\)"}
{"English":"Search file \/etc\/logs\/Server.log for lines containing \"Error\"","Bash":"find \/etc\/logs\/Server.log -exec grep Error {} \\; -print"}
{"English":"Print 'echo 'hello, world'","Bash":"echo 'hello, world' | cat"}
{"English":"find all the configuration files in the file system","Bash":"find \/ -name \"*.conf\""}
{"English":"Creates temporary file and saves path to it in 'fif2' variable.","Bash":"fif2=$(mktemp -u)"}
{"English":"List all cron jobs where the minute part is either * or a number from 0 to 14.","Bash":"crontab -l | awk '$1 == \"*\" || $1 ~ \/^[0-9]+$\/ && $1 < 15 {print}'"}
{"English":"find all the files that have been modified exactly 24 hours ago","Bash":"find . -type f -mtime 1"}
{"English":"Print the current date followed by ' doing stuff'","Bash":"echo $(date) doing stuff"}
{"English":"create directory destdir","Bash":"mkdir destdir"}
{"English":"search for all the files in the current folder which start with \"my\"","Bash":"find . -name 'my*'"}
{"English":"Output the base name of first argument to script or function, that is the part following the last slash.","Bash":"echo $(basename \"$1\")"}
{"English":"Search the current directory tree for files executable by at least someone","Bash":"find . -type f -perm +111 -print"}
{"English":"Copy all files in current directory that do not match *\/not-from-here\/* in their paths to \/dest","Bash":"find . -type f -not -path '*\/not-from-here\/*' -exec cp '{}' '\/dest\/{}' \\;"}
{"English":"Print 3 newline separated \"y\"s","Bash":"yes | head -3"}
{"English":"Compare files in \"\/tmp\/dir1\" and \"\/tmp\/dir2\", treating absent files as empty and all files as text","Bash":"diff -Nar \/tmp\/dir1 \/tmp\/dir2\/"}
{"English":"Search the home directory tree for .tar.gz files newer than file \"filename\"","Bash":"find ~\/ -name *.tar.gz -newer filename"}
{"English":"remove all core files in the file system","Bash":"find \/ -name \"*.core\" -print -exec rm {} \\;"}
{"English":"Merge 10 already sorted files and display the result, pausing at each page of output.","Bash":"sort -m a b c d e f g h i j | more"}
{"English":"Find all *.rb files\/directories under current directory","Bash":"find . -name '*.rb'"}
{"English":"Find all files under $root_dir","Bash":"find $root_dir -type f"}
{"English":"Abort the shell or script on the first failed command","Bash":"set -e"}
{"English":"Find '.git' directories in directory tree \/path\/to\/files and print the pathnames of their parents","Bash":"find \/path\/to\/files -type d -name '.git' -exec dirname {} +"}
{"English":"Print common files of directory \"one\" and \"two\"","Bash":"comm -12  <(ls one) <(ls two)"}
{"English":"Prints week day of a 31 day in a current month.","Bash":"cal | awk -v date=31 -v FIELDWIDTHS=\"3 3 3 3 3 3 3 3\" 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}'"}
{"English":"Join data in file1 containing one number per line with data in file2 containing a number and other information per line, keeping the same order as it is found in file1.","Bash":"join -1 2 -2 1 -a1 <(cat -n file1.txt | sort -k2,2) <(sort file2.txt) | sort -k2 | cut --complement -d\" \" -f2"}
{"English":"Archive \"\/path\/to\/sfolder\" to \"name@remote.server:\/path\/to\/remote\/dfolder\" preserving hard links and compressing the data during transmission","Bash":"rsync -aHvz \/path\/to\/sfolder name@remote.server:\/path\/to\/remote\/dfolder"}
{"English":"Recursively copies \/mnt\/usr\/lib to the '\/usr\/' directory, creating symbolic links on each file instead of real copying them.","Bash":"cp -rs \/mnt\/usr\/lib \/usr\/"}
{"English":"Print nothing because 'MYVAR' string doesn`t match with '\/[^\/]+:' pattern","Bash":"echo MYVAR | grep -oE '\/[^\/]+:' | cut -c2- | rev | cut -c2- | rev"}
{"English":"Remove all directories called \"test\" from the \/path\/to\/dir directory tree","Bash":"find \/path\/to\/dir -name \"test\" -type d -exec rm -rf {} \\;"}
{"English":"Find all PHP files under current directory","Bash":"find . -type f -name *.php"}
{"English":"Save the directory of the full path to the current script in variable \"dir\"","Bash":"dir=$(dirname $(readlink -m $BASH_SOURCE))"}
{"English":"Print only unique lines of 'file_name' file","Bash":"cat -n file_name | sort -uk2 | sort -nk1 | cut -f2-"}
{"English":"In the current shell, interpret 'incl.sh' which is in the directory pointed by variable DIR","Bash":"source \"$DIR\/incl.sh\""}
{"English":"Change permissions to 644 for all regular files in and below the current directory","Bash":"find . -type f -print | sed -e 's\/^\/\"\/' -e 's\/$\/\"\/' | xargs chmod 644"}
{"English":"Create a full path symbolic link \"$newlink\" from a relative path symbolic link \"$origlink\"","Bash":"ln -s $(readlink -f $origlink) $newlink"}
{"English":"find all the php\/javascript files in current folder using regular expressions","Bash":"find . -regex '.+\\.\\(php|js\\)'"}
{"English":"Report file systems inodes usage.","Bash":"df -i"}
{"English":"Report all files in \/mydir1 and \/mydir2 larger than 2000 blocks and accessed in over 30 days","Bash":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print"}
{"English":"Rename \"www_new\" to \"www\" even if \"www\" directory exists","Bash":"mv -T www_new www"}
{"English":"List all files from the current directory tree that were modified less than 60 minutes ago, omitting \".\"","Bash":"find . -mindepth 1 -mmin -60 | xargs -r ls -ld"}
{"English":"Print a list of all regular files residing in the current directory","Bash":"find . -maxdepth 1 -type f -print0"}
{"English":"Force create a symbolic link named \"id_rsa\" to \"$keyname\"","Bash":"ln -sf $keyname     id_rsa"}
{"English":"extract \"phantomjs-1.9.0-linux-x86_64.tar.bz2\"","Bash":"sudo tar xvf phantomjs-1.9.0-linux-x86_64.tar.bz2"}
{"English":"Do not mark variables and function which are modified or created for export to the environment of subsequent commands","Bash":"set +a"}
{"English":"Find all regular files in the current directory tree that have been modified within the last 10 minutes","Bash":"find . \u2013type f -mmin -10"}
{"English":"display all files in the current folder which do not match the regular expression","Bash":"find . -not -regex \".*test.*\""}
{"English":"Print unique list of who is logged in and the time of login formatted in columns","Bash":"who -su | sort | uniq | column"}
{"English":"search for a word in all the normal\/regular files in the current folder","Bash":"find . -type f | xargs grep \"text\""}
{"English":"find the file \"myfile.txt\" in the folder \/home\/user\/myusername\/","Bash":"find \/home\/user\/myusername\/ -name myfile.txt -print"}
{"English":"Print A record for domain 'domain.' from 'ns1.newnameserver' nameserver","Bash":"dig @ns1.newnameserver domain. a"}
{"English":"Print absolute path of \"PATH\"","Bash":"readlink -f PATH"}
{"English":"Find all your jsp's, map them to your localhost webserver, and invoke a wget (fetch) on them","Bash":"find -name \\*.jsp | sed 's\/^\/http:\\\/\\\/127.0.0.1\/server\/g' | xargs -n 1 wget"}
{"English":"display all the files in the file system which belong to the user \"wnj\" or which are modified after the file \"ttt\"","Bash":"find \/ \\( -newer ttt -or -user wnj \\) -print"}
{"English":"Print all filenames under \/proc and below","Bash":"find \/proc -exec ls '{}' \\;"}
{"English":"display all the C, CPP, Header files in the kat folder","Bash":"find kat -type f \\( -name \"*.c\" -o -name \"*.cpp\" -o -name \"*.h\" \\)"}
{"English":"display the count of all the normal\/ regular files in the current directory","Bash":"find . -type f |wc -l"}
{"English":"find all the regular\/normal files in the current direcoty which have not been accessed in the last 30 days.","Bash":"find . -type f -atime +30 -print"}
{"English":"find all files in current folder which are bigger than 1MB","Bash":"find .\/ -size +1000k"}
{"English":"Make a new directory \"new-dir\" in every directory in the current directory tree","Bash":"find . -type d | xargs -I \"{x}\" mkdir \"{x}\"\/new-dir"}
{"English":"Find all files under $YOUR_DIR","Bash":"find $YOUR_DIR -type f"}
{"English":"Find files\/directories under current directory that matches 'projects\/insanewebproject' in their paths","Bash":"find -ipath 'projects\/insanewebproject'"}
{"English":"Gets IP address of first listed network interface in system.","Bash":"ifconfig | grep -E \"([0-9]{1,3}\\.){3}[0-9]{1,3}\" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d:"}
{"English":"Find regular files under and below \/path that match pattern \"???-???_[a-zA-Z]*_[0-9]*_*.???\"","Bash":"find \/path -type f -name \"???-???_[a-zA-Z]*_[0-9]*_*.???\""}
{"English":"Search the specified group for the given \"filename","Bash":"find \/ -group users -iname \"filename\""}
{"English":"Finds string beginning with 'IFS' in a 'set' output.","Bash":"set | grep ^IFS="}
{"English":"get the root access","Bash":"sudo su -"}
{"English":"recursively change owner of the directory \/tmp to the current user","Bash":"sudo chown -R $USER ~\/tmp"}
{"English":"Search the \/Path directory tree for files matching pattern \"file_name*\" and containing \"bar\" in their pathnames","Bash":"find \/Path -name \"file_name*\" | grep \"bar\""}
{"English":"Save the first two letters of the system host name to variable \"DC\"","Bash":"DC=`hostname | cut -b1,2`"}
{"English":"search for the word foo in all the js files in the current folder","Bash":"find . -name \"*.js\" -exec grep -iH foo {} \\;"}
{"English":"Create a symolic link in \"\/usr\/local\/\" to \"\/Applications\/Sublime\\ Text.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"ln -s \/Applications\/Sublime\\ Text.app\/Contents\/SharedSupport\/bin\/subl \/usr\/local\/"}
{"English":"Remove \"_dbg\" from all file or directory names under the current directory","Bash":"rename _dbg.txt .txt **\/*dbg*"}
{"English":"Remove all files whose names start with spam-","Bash":"find . -name 'spam-*' | xargs rm"}
{"English":"find all regular\/normal files which have execute permission in current folder and copy them to another folder","Bash":"cp `find -perm -111 -type f` \/usr\/local\/bin"}
{"English":"Find all directories named postgis-2.0.0 under \/ directory","Bash":"sudo find \/ -type d -name \"postgis-2.0.0\""}
{"English":"display the amount of disk space used by all the log files in the folder \/usr\/local\/apache\/logs\/","Bash":"find \/usr\/local\/apache\/logs\/ -type f -name \"*_log\"|xargs du -csh"}
{"English":"Find with combine multiple search criterias , in this command serach  files that begin with abc in there name and dont have .py extension .","Bash":"find . -type f -name 'abc*' ! -name '*.py'"}
{"English":"Find files owned by nonexistent groups","Bash":"find \/ -nogroup -print"}
{"English":"Show the files or directories in the current directory whose names are not \"MyCProgram.c\"","Bash":"find -maxdepth 1 -not -iname \"MyCProgram.c\""}
{"English":"Search for 'mystring' in all *.txt files under current directory","Bash":"find . -name '*.txt' | xargs egrep mystring"}
{"English":"Show ls's detailed output for all files named \"something\"","Bash":"find . -name something -exec ls -l {} \\;"}
{"English":"Overwrites file 'filename' with random content 35 times, finally writes it with zeros, truncates and deletes.","Bash":"shred -uzn 35 filename"}
{"English":"Find all .sh files in or below the current directory and move them to folder ~\/back.scripts","Bash":"find . -name \"*.sh\" -print0 | xargs -0 -I {} mv {} ~\/back.scripts"}
{"English":"find all the regular files in the current folder which start with a \"some text\"","Bash":"find . -type f -name '*some text*'"}
{"English":"Calculate and show md5 sums for every files under current directory tree","Bash":"find . | xargs md5sum"}
{"English":"Find files\/directories modified within the last day under \/etc","Bash":"find \/etc -type f -ctime -1"}
{"English":"delete all the normal\/regular files in the current folder","Bash":"find . -type f -print -delete"}
{"English":"Remove all *.mp3 files in tmp directory but not in it's subdirectories","Bash":"find tmp -maxdepth 1 -name *.mp3 -print0 | xargs    -0 rm"}
{"English":"Gets MAC address of p2p0 network interface.","Bash":"ifconfig p2p0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}
{"English":"Extract path and query part from URL","Bash":"echo \"$url\" | cut -d'\/' -f4-"}
{"English":"find all the text files in the current folder starting with \"somefiles-\"  and prepend the first line","Bash":"find . -name \"somefiles-*-.txt\" -type f -exec sed -i 'iText that gets prepended (dont remove the i)' -- '{}' \\;"}
{"English":"display all the directories in the folder \/path\/to\/dest except tmp directory","Bash":"find \/path\/to\/dest -type d \\( ! -name tmp \\) -print"}
{"English":"Count the number of lines in all \".txt\" files","Bash":"cat *.txt | wc -l"}
{"English":"Force create a symbolic link named \"currentDir\" to \"newDir\" without dereferencing \"currentDir\"","Bash":"ln -sfn newDir currentDir"}
{"English":"Find all SUID set files under current directory and show a few lines of output from the beginning","Bash":"find . -perm \/u=s | head"}
{"English":"create directory aaa\/bbb","Bash":"mkdir aaa\/bbb"}
{"English":"display all the files in the folder \"\/home\/mywebsite\" which have been changed in the last 7*24 horus","Bash":"find \/home\/mywebsite -type f -ctime -7"}
{"English":"Find all files matching pattern '.#*' in the current directory tree","Bash":"find -iname '.#*'"}
{"English":"Remove files modified at least five days ago in directory trees \/path\/to\/files*","Bash":"find \/path\/to\/files* -mtime +5 -exec rm {} \\;"}
{"English":"Print lines in \"file1\" that exist in \"file2\"","Bash":"join -t \" \" -j 1 <(sort file1) <(sort file2)"}
{"English":"List all zero-length files","Bash":"find . -empty -exec ls {} \\;"}
{"English":"Remove blank lines and replace \" \" with \"\/\" in \"struct.txt\" as input to make directories with parents as needed","Bash":"sed '\/^$\/d;s\/ \/\\\/\/g' struct.txt | xargs mkdir -p"}
{"English":"Set permissions to 700 for every subdirectory of the current directory","Bash":"find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700"}
{"English":"Remove all *.txt files in the home directory tree with confirmation","Bash":"find $HOME\/. -name *.txt -ok rm {} \\;"}
{"English":"Read a line from standard input and save response in variable \"VARNAME\"","Bash":"read VARNAME"}
{"English":"Find all image.pdf files under .\/polkadots","Bash":"find .\/polkadots -type f -name \"image.pdf\""}
{"English":"Set 644 permission to all regular files under current directory","Bash":"find . -type f -exec chmod 644 {} \\;"}
{"English":"copy all the mp3 files from current folder to another folder","Bash":"find . -name '*.mp3' -exec cp -a {} \/path\/to\/copy\/stuff\/to \\;"}
{"English":"Remove the line matching \"pattern to match\" in \".\/infile\" and print to standard output","Bash":"sed '\/pattern to match\/d' .\/infile"}
{"English":"List all files and directories in long list format with a time style of \"long-iso\" and sort from oldest modifed to newest modified","Bash":"ls -l --time-style=long-iso | sort -k6"}
{"English":"create symbolic links in directory \"\/your\/dest\/dir\/\" to all files located in \"\/your\/source\/dir\/\" and have filename extension \"txt.mrg\"","Bash":"find \/your\/source\/dir\/ -iname '*.txt.mrg' -exec ln -s '{}' \/your\/dest\/dir\/ \\;"}
{"English":"Search for files with \"demo\" in their names and \"sitesearch\" in their path names","Bash":"find . -iname '*demo*' | grep -i sitesearch"}
{"English":"Remount root filesystem \"\/\"","Bash":"mount -oremount \/"}
{"English":"display all symbolic links in current folder","Bash":"find . -lname \"*\""}
{"English":"Execute awk script \"script.awk\" on \"File2\" and \"File1\" and format output as a table","Bash":"awk -f script.awk File2 File1 | rev | column -t | rev"}
{"English":"Find all files in your home directory and below that are smaller than 100M.","Bash":"find ~ -size -100M"}
{"English":"Search the current directory tree for executable files and searchable directories","Bash":"find -executable"}
{"English":"search for a word in all the files in the current directory and display the list of matched files.","Bash":"find . -type f -exec grep -l 'needle' {} \\;"}
{"English":"display the base name(name without extension) of all the \".NEF\" files in the current folder","Bash":"find . -name \"*.NEF\" -exec basename \\{\\} .NEF \\;"}
{"English":"Find links to any file that happens to be named `foo.txt'","Bash":"find . -lname \\*foo.txt"}
{"English":"Remove all *.mp3 files in tmp directory but not in it's subdirectories","Bash":"find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    rm"}
{"English":"remove all the core files from \/usr folder which have not been accessed in the last 7*24 hours","Bash":"find \/usr -name core -atime +7 -exec rm \"{}\" \\;"}
{"English":"Show the list of files modified more than 31 days ago","Bash":"find \/ -mtime +31 -print"}
{"English":"Find regular non-hidden files containing `some text' in their names with hidden directories optimization","Bash":"find . -type d -path '*\/\\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print"}
{"English":"find files which full path name like '*\/*config' at current directory and print","Bash":"find .  -path '*\/*config'"}
{"English":"Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.","Bash":"find foo -type f ! -name '*Music*' -exec cp {} bar \\;"}
{"English":"Search the current directory tree for files containing \"string\" in their path names","Bash":"find | egrep string"}
{"English":"Search for files\/directories which are writable by either their owner or their group","Bash":"find . -perm \/220"}
{"English":"Check if \"~\/mnt\/sdc1\" is mounted","Bash":"mount | grep -q ~\/mnt\/sdc1"}
{"English":"Find all *fink* files\/directories in entire file system","Bash":"find \/ \\( -type f -or -type d \\) -name \\*fink\\* -print"}
{"English":"execute command \"who\" when key \"\\eW\" is pressed","Bash":"bind -x '\"\\eW\":\"who\"'"}
{"English":"Find only number of hard link & name of files from long list","Bash":"find -type f -iname \"*.txt\" -exec ls -lrt {} \\;|awk -F' ' '{print $1 $2  $9}'"}
{"English":"Find all files\/directories named 'document' in the entire filesystem","Bash":"find \/ -name document -print"}
{"English":"Archive \"\/source\" and all files under \"folder\/\" to \"\/dstfolder\/\" on host \"remoteserver\" as user \"user\" without copying files that already exist","Bash":"rsync -avz --ignore-existing \/source folder\/* user@remoteserver:\/dstfolder\/"}
{"English":"Find all *.swp files\/directories under current directory","Bash":"find . -name \"*.swp\""}
{"English":"Find files\/directories with exactly read,write and execute permission for all (owner, group and others) under \/path","Bash":"find \/path -perm ugo+rwx"}
{"English":"Get the current shell's executable name from the output of 'ps'.","Bash":"ps | grep `echo $$` | awk '{ print $4 }'"}
{"English":"Find all files\/directories under $1 which have at least read permission for their owner and set read permission for group for these files\/directories","Bash":"find \"$1\" -perm -u+r -print0 | xargs chmod g+r"}
{"English":"Set the 'xtrace' shell variable","Bash":"set -x"}
{"English":"Find all sample*_1.txt files\/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them","Bash":"find . -name \"sample*_1.txt\" | sed -n 's\/_1\\..*$\/\/;h;s\/$\/_out\/p;g;s\/$\/_1.txt\/p;g;s\/$\/_2.txt\/p' | xargs -L 3 echo program"}
{"English":"Find all directories named $1 under $HOME directory tree and remove them","Bash":"find $HOME -type d -name $1 -exec echo {} ';'  -exec rm -rf {} ';'"}
{"English":"Print the IP address of your SSH session","Bash":"who am i|awk '{ print $5}'"}
{"English":"Send SIGTERM signal to first process sent to background by the current shell.","Bash":"kill %1"}
{"English":"Remove all *.log files from the current directory tree","Bash":"find -name '*.log' -delete"}
{"English":"Find all file.ext files\/directories under \/home\/kibab directory and print . for each of them","Bash":"find \/home\/kibab -name file.ext -exec echo . ';'"}
{"English":"Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir","Bash":"find . -inum 211028 -exec mv {} newname.dir \\;"}
{"English":"create directory foo","Bash":"mkdir -p foo"}
{"English":"Prints current directory name","Bash":"pwd | awk -F\/ '{print $NF}'"}
{"English":"Find all directories and for each of them, print an mv command to move it to \/new\/location","Bash":"find . -type d   -execdir echo \/bin\/mv {} \/new\/location \\;"}
{"English":"find all the files in the file system which belong to the groep \"users\" and with the name \"dateiname\"","Bash":"find \/ -group users -iname \"Dateiname\""}
{"English":"Format space separated fields in \"filename\" as a table","Bash":"column -t -s' ' filename"}
{"English":"Remove all .gz files in the current directory tree","Bash":"find . -name '*.gz' -type f -printf '\"%p\"\\n' | xargs rm -f"}
{"English":"Find all regular files in \/usr\/bin modified less than within the last 10 days","Bash":"find \/usr\/bin -type f -mtime -10"}
{"English":"Split \"$FILENAME\" into files with at most 20 lines each with a prefix \"xyz\"","Bash":"split -l 20 $FILENAME xyz"}
{"English":"Find all files newer than httpd.conf under and below the current directory","Bash":"find . -newer httpd.conf"}
{"English":"Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names","Bash":"find \/ -name '<name_pattern>' -type d | sort | uniq"}
{"English":"Find all regular files on the system whose size is greater than 20000k and print their names and sizes","Bash":"find \/ -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}
{"English":"Enables shell option 'nocaseglob'.","Bash":"shopt -s nocaseglob"}
{"English":"Find and remove all .txt regular files under the current directory and below","Bash":"find . -type f -name \"*.txt\" -exec rm -f {} \\;"}
{"English":"Print all filenames under \/proc and below","Bash":"find \/proc -print0 | xargs -0"}
{"English":"Removes all empty folders under current folder.","Bash":"find . -type d -empty -exec rmdir \"{}\" \\;"}
{"English":"when using vi-insert keymap bind command \"\\C-v{}\\ei\" to key \"{\"","Bash":"bind -m vi-insert '\"{\" \"\\C-v{}\\ei\"'"}
{"English":"Find files in the current directory tree whose size is greater than 24000 bytes","Bash":"find . -size +24000c"}
{"English":"Print mount point of the file system containing $filename.","Bash":"df \"$filename\" | awk 'NR==1 {next} {print $6; exit}'"}
{"English":"Search for all jpg images on the system and archive them","Bash":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}
{"English":"Find all *shp* directories under current directory and move '*' (literal) file\/directory inside those directories to shp_all","Bash":"find . -name '*shp*'   -execdir mv '{}\/*' shp_all ';'"}
{"English":"Find all fglrx-libGL* files under and below debian\/fglrx\/","Bash":"find debian\/fglrx\/ -name 'fglrx-libGL*'"}
{"English":"Make directories in \"\/TARGET_FOLDER_ROOT\/\" for each \".mov\" file in the current directory tree","Bash":"find . -type f -iname \\*.mov -printf '%h\\n' | sort | uniq | xargs -n 1 -d '\\n' -I '{}' mkdir -vp \"\/TARGET_FOLDER_ROOT\/{}\""}
{"English":"Kill all processes matching the string \"myProcessName\"","Bash":"ps -ef | grep myProcessName | grep -v grep | awk '{print $2}' | xargs kill -9"}
{"English":"change the ownership of all directories in the current folder","Bash":"find . -type d -exec chown username {} \\;"}
{"English":"Add a cron job to existing list, without removing existing ones, ro tun \"scripty.sh\" at 2:01 am, 3rd day of april (4th month), if that day happens to be a friday (5th day of the week starting with sunday=0).","Bash":"cat <(crontab -l) <(echo \"1 2 3 4 5 scripty.sh\") | crontab -"}
{"English":"Gets string with IP4 address of en0 network interface.","Bash":"ifconfig en0 | grep inet | grep -v inet6"}
{"English":"Recursively change the owner of all files in \"upload_directory\" to \"nobody\"","Bash":"chown -R nobody upload_directory"}
{"English":"Limit each line in \"your_file\" to 80 characters and view via \"more\"","Bash":"fold -80 your_file | more"}
{"English":"Recursively change ownership of \"~\/.npm\" to the current user","Bash":"sudo chown -R $(whoami) ~\/.npm"}
{"English":"display the count of total number of empty files in the current folder","Bash":"find . -type f -empty | wc -l"}
{"English":"Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=","Bash":"find . -type f -exec echo chmod u=rw,g=r,o= '{}' \\;"}
{"English":"force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name","Bash":"find . -name \"*.c\" -print0 | xargs -0 rm -rf"}
{"English":"Set the host name to \"myServersHostname\"","Bash":"hostname myServersHostname"}
{"English":"List all files in a current folder, separating names with comma","Bash":"ls -1 | tr '\\n' ','"}
{"English":"Show all values (without the names) of variables whose name or value contains \"VARIABLE_NAME\"","Bash":"myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');"}
{"English":"Find all .sh files in the current directory tree and remove them","Bash":"find . -name \"*.sh\" -exec rm -rf '{}' \\"}
{"English":"display a long list of all the files that are bigger than 10KB in current folder","Bash":"find . -size +10k -exec ls -l {} \\;"}
{"English":"Display the contents of \"file\" formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line.","Bash":"column -t file | uniq -w12 -c"}
{"English":"Shows state of 'extglob' shell option.","Bash":"shopt -o extglob"}
{"English":"Create a symbolic link in target directory \"~\/newlinks\" to \"$source\"","Bash":"ln -s \"$source\" -t ~\/newlinks"}
{"English":"Print the last space separated word from \"Your string here\"","Bash":"echo \"Your string here\"| tr ' ' '\\n' | tail -n1"}
{"English":"Find files\/directories named 'photo.jpg' in the entire filesystem","Bash":"find \/ -name photo.jpg"}
{"English":"Search all *.c files from the current directory tree for \"hogehoge\"","Bash":"find . -name \\*.c -print | xargs grep hogehoge"}
{"English":"Find all files under current directory that are larger than 10KB in size","Bash":"find . -type f -size +10k"}
{"English":"Find all files\/directories under current directory with 'FooBar' in their paths and copy them to ~\/foo\/bar","Bash":"find .|grep \"FooBar\"|xargs -I{} cp \"{}\" ~\/foo\/bar"}
{"English":"Find strings with 'Features' in \/var\/run\/dmesg.boot' file","Bash":"cat \/var\/run\/dmesg.boot | grep Features"}
{"English":"Find recursively all Python files in the current directory and search them for the word \u2018import\u2019","Bash":"find . -name '*.py' | xargs grep 'import'"}
{"English":"Update timestamps of all files in entire filesystem which are not newer than \/tmp\/timestamp","Bash":"find \/ ! -newer \/tmp\/timestamp -exec touch {} \\;"}
{"English":"Find files with inode number 199053","Bash":"find \/ -inum 199053"}
{"English":"Disable exiting the shell on error","Bash":"set +e"}
{"English":"Search for files specifying the minimum depth of the search","Bash":"find -mindepth num -name query"}
{"English":"Save the line number matching \"}]\" in lines starting with \"item_1\" to \"item_2\" in \"itemlist.json\" to variable \"line_to_be_replaced\"","Bash":"line_to_be_replaced=`cat itemlist.json | nl |  sed -n '\/\"item_1\"\/,\/\"item_2\"\/p' | grep -in \"}]\" | awk '{print $2}'`"}
{"English":"change owner and group of the file \"\/path\/to\/yourapp\" to root","Bash":"chown -v root:root \/path\/to\/yourapp"}
{"English":"Remove all files with '.js' extension from the 'js' directory tree","Bash":"find .\/js\/ -type f -name \"*.js\" | xargs rm -f"}
{"English":"Print the first line of \"seq 1 10000\"","Bash":"seq 1 10000 | head -1"}
{"English":"reverse input with comma deliminators","Bash":"echo \"a,b,c\" | tr '\\n' ',' | tac -s \",\" | sed 's\/,$\/\\n\/'"}
{"English":"Find all files under and below \/dir that were modified less than 60 minutes ago","Bash":"find \/dir -mmin -60"}
{"English":"sort each file in the bills directory, leaving the output in that file name with .sorted appended","Bash":"find bills -type f | xargs -I XX sort -o XX.sorted XX"}
{"English":"Search the current directory recursively for regular files last modified less than 2 days ago","Bash":"find . type -f -mtime -2"}
{"English":"tar all files in the current folder and ask for user confirmation before creating the tar ball","Bash":"find . -ok tar rvf backup {} \\;"}
{"English":"Read standard input until a null character is found and save the result in variable \"line\"","Bash":"read -d '' line"}
{"English":"Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest\/' folder.","Bash":"find . -maxdepth 1 -name '*Music*' -prune -o -print0 | xargs -0 -i cp {} dest\/"}
{"English":"Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.","Bash":"grep -e TEXT *.log | cut -d' ' --complement -s -f1"}
{"English":"find all directory list which have empty list in \/tmp directory .","Bash":"find \/tmp -type d -empty"}
{"English":"Print mount point of the file system containing $path.","Bash":"df -P \"\/tmp\" | awk 'BEGIN {FS=\"[ ]*[0-9]+%?[ ]+\"}; NR==2 {print $NF}'"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","Bash":"find -mtime 0 -not \\( -name '*.swp' -o -path '.\/es*' -o -path '.\/en*' \\)"}
{"English":"Copy file linked to by \"bar.pdf\" to \"bar.pdf\"","Bash":"cp --remove-destination `readlink bar.pdf` bar.pdf"}
{"English":"Save the latest modification time (in format \"%T@ %t\" of any file under \".\/$dir\" to variable \"timestamp\"","Bash":"timestamp=$(find .\/$dir -type f -printf \"%T@ %t\\\\n\" | sort -nr -k 1,2 | head -n 1)"}
{"English":"Remove \"\\r\" at the end of each line in \"infile\" and display the result as printable characters or backslash escapes","Bash":"cat infile | sed 's\/\\r$\/\/' | od -c"}
{"English":"display all the file in the folder \/home\/david\/ which start with the word \"index\" ( case insensitive search)","Bash":"find \/home\/david -iname 'index*'"}
{"English":"replace \"exp_to_find_for_replacement\" with \"exp_to_replace\" for all the files in the current folder","Bash":"find -name \u2018*exp_to_find_in_folders*\u2019 -exec rename \u201cs\/exp_to_find_for_replacement\/exp_to_replace\/\u201d {} \\;"}
{"English":"Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.","Bash":"fgrep --include='STATUS.txt' -rl 'OPEN' | xargs -L 1 dirname"}
{"English":"Remove directories in \/media\/1Tb\/videos modified more than 7 days ago","Bash":"find \/media\/1Tb\/videos -maxdepth 1 -type d -mtime +7 -exec rm -rf {} \\;"}
{"English":"Delete all files with ' .o' extension in the entire filesystem","Bash":"find project \/ src \/ -name \"* .o\" -exec rm -f {} \\;"}
{"English":"Find files\/directories not changed in two weeks under \/dev\/shm","Bash":"find \/dev\/shm \/tmp -type f -ctime +14"}
{"English":"Finds the folder where temporary files would be written to, and save path to it in a 'TMPDIR' variable.","Bash":"TMPDIR=`dirname $(mktemp -u -t tmp.XXXXXXXXXX)`"}
{"English":"Find files modified in the last 5 minutes starting from the current directory","Bash":"find . -mmin -5"}
{"English":"Find all *.* directories under \/home\/feeds\/data directory","Bash":"find \/home\/feeds\/data -type d \\( -name 'def\/incoming' -o -name '456\/incoming' -o -name arkona \\) -prune -o -name '*.*' -print"}
{"English":"Search for files which are writable by somebody","Bash":"find . -perm \/222"}
{"English":"Counts lines in each *.php file.","Bash":"wc -l $(find . -name \"*.php\")"}
{"English":"Change directory to the basename of \"$1\" with \".tar.gz\" removed","Bash":"cd $(basename $1 .tar.gz)"}
{"English":"Search the files from the current directory tree for text \"documentclass\"","Bash":"find . -type f -print0 | xargs -0 grep -H 'documentclass'"}
{"English":"Copy permissions from \"version2\/somefile\" to \"version1\/somefile\"","Bash":"chmod --reference version2\/somefile version1\/somefile"}
{"English":"search for all the regular\/normal files in the current folder which start with \"my\"","Bash":"find . -name 'my*' -type f"}
{"English":"Find all directories under current directory tree that match the case insensitive regex '^\\.\/course\\([0-9]\\.\\)*[0-9]$' in their paths","Bash":"find . -type d -iregex '^\\.\/course\\([0-9]\\.\\)*[0-9]$'"}
{"English":"Remount subtree \"\/outside\" to \"\/inside\" as a bind","Bash":"mount \/outside \/inside -o bind"}
{"English":"Locate all `readme.txt' files under the home directory","Bash":"find ~ -name readme.txt"}
{"English":"Find files\/directories named 'articles.jpg' under current directory tree and change their permission to 644","Bash":"find . -name \"articles.jpg\" -exec chmod 644 {} \\;"}
{"English":"Remove all files and directories called \"test\" from the current directory tree","Bash":"find . -name test -exec rm {} \\;"}
{"English":"change the word \"GHBAG\" to \"stream-agg\" in all the file names in current folder which have the word \"-GHBAG-\" in their name","Bash":"find . -name '*-GHBAG-*' -exec rename 's\/GHBAG\/stream-agg\/' {} +"}
{"English":"List the unique file extensions of all files under the current directory","Bash":"find . -type f | grep -o -E '\\.[^\\.]+$' | sort -u"}
{"English":"Displays the count of of each unique line read from standard input","Bash":"sort | uniq -c"}
{"English":"Print the base name of the current working directory","Bash":"basename \"`pwd`\""}
{"English":"split all files in directory \"posns \" into pieces per 10000 lines","Bash":"find posns -type f -exec split -l 10000 {} \\;"}
{"English":"Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }' on compressed files \"input1.vcf.gz\" and \"input2.vcf.gz\"","Bash":"gzip -dc input1.vcf.gz input2.vcf.gz | awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }'"}
{"English":"Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result","Bash":"join -o 1.2,1.3,2.4,2.5,1.4 <(cat -n file1) <(cat -n file2)"}
{"English":"Change the permission to 755 for all directories under current directory","Bash":"find . -type d | xargs chmod -v 755"}
{"English":"Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace","Bash":"find .\/music -name \"*.mp3\" -print0 | xargs -0 ls"}
{"English":"Compress all \".txt\" files in all sub directories with gzip","Bash":"gzip *\/*.txt"}
{"English":"Find files\/directories writable by group and others under the \/path directory","Bash":"find \/path -perm -go+w"}
{"English":"List the directory paths of all file.ext files under present working directory","Bash":"find . -name \"file.ext\" -execdir pwd ';'"}
{"English":"Change every reference to the colour red to green in all CSS files","Bash":"find . -name \"*.css\" -exec sed -i -r 's\/#(FF0000|F00)\\b\/#0F0\/' {} \\;"}
{"English":"Find files which were changed in the past 1 hour","Bash":"find . -cmin -60"}
{"English":"Find all files, folders, symlinks, etc in the current directory recursively","Bash":"find ."}
{"English":"Print the contents of \"${SPOOL_FILE}\" file to the console and append to \"${LOG_FILE}\" file","Bash":"cat ${SPOOL_FILE}                   | tee -a ${LOG_FILE}"}
{"English":"display all the files in the current folder which have been modified between two dates","Bash":"find . -newermt \u201cSep 1 2006\u201d -and \\! -newermt \u201cSep 10 2006\u201d"}
{"English":"display all the regular\/normal files in a folder","Bash":"find $FILES_PATH -type f"}
{"English":"Print unique lines in \"file1\" compared to \"file2\" in the order they appear","Bash":"comm -23 <(sort file1) <(sort file2)|grep -f - file1"}
{"English":"Find all files\/directories in all paths expanded by the glob pattern *","Bash":"find *"}
{"English":"display the count of all normal\/regular files in current directory","Bash":"find . -type f | wc -l"}
{"English":"Print all the file\/directory paths under current directory","Bash":"find | xargs"}
{"English":"Delete all files in the \/myDir directory tree that were last modfied 7 days ago","Bash":"find \/myDir -mindepth 1 -mtime 7 -delete"}
{"English":"Make directory \"dir\" and do not cause an error if it exists","Bash":"mkdir -p dir"}
{"English":"Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\\n'","Bash":"read -rsp $'Press escape to continue...\\n' -d $'\\e'"}
{"English":"Find all *.dbf files\/directories in entire file system and print their sorted and unique parent directory paths","Bash":"find \/ -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq"}
{"English":"Prints list of user 'myuser' groups in a format: 'groups: [comma-separated groups list]'.","Bash":"echo \"groups: [ $(groups myuser | sed -e 's\/.\\+\\s\\+:\\s\\+\\(.\\+\\)\/\\1\/g' -e 's\/\\(\\s\\+\\)\/, \/g') ]\""}
{"English":"Find files\/directories in entire file system that had their meta information changed more than 3 days ago","Bash":"find \/ -ctime +3"}
{"English":"find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with \"_ocr.pdf\"","Bash":"find \/somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0"}
{"English":"display list of all the regular\/normal files in the home folder which are bigger than 512 kb","Bash":"find \/home\/ -type f -size +512k -exec ls -lh {} \\;"}
{"English":"Delete empty lines from standard input","Bash":"sed -n \"s\/^$\/\/;t;p;\""}
{"English":"find all files that names are filename and open in nano text editor","Bash":"find \/ -name filename -exec  nano '{}' \\;"}
{"English":"Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes \"UTF\"","Bash":"file *\/*.php | grep UTF"}
{"English":"find all files in the file system with the permissions 777 and having the word \"filename\" in their name.","Bash":"find \/ -perm 777 -iname \"filename\""}
{"English":"find the file with the name \"file\" in the entire file system","Bash":"find \/ -name file"}
{"English":"Print which files differ in \"dir1\" and \"dir2\" recursively","Bash":"diff -qr dir1\/ dir2\/"}
{"English":"Prints process tree of a process having id $mypid, with command options and process id number.","Bash":"pstree -aAp $(ps -ejH | awk -v v1=$mypid '$1==v1 {print $3}')"}
{"English":"Find an inode and remove","Bash":"find . -inum 968746 -exec rm -i {} \\;"}
{"English":"Search the \/path directory tree for files missing g+w or o+w bits","Bash":"find \/path ! -perm -022"}
{"English":"Removes the last 2 lines from a file","Bash":"head -n -2 myfile.txt"}
{"English":"Recursively delete all files\/folders named '.svn' in a current folder.","Bash":"find . -name .svn -delete"}
{"English":"find all the undo files in the current folder and display the toal lines, words, characters","Bash":"find .\/ -name *.undo | xargs wc"}
{"English":"Search the current directory tree for files last accessed more than 10 days ago","Bash":"find . -atime +10"}
{"English":"Search the current directory recursively for regular files last accessed more than 2 days ago","Bash":"find . type -f -atime +2"}
{"English":"Gets MAC address of eth0 network interface.","Bash":"ifconfig eth0 | awk '\/HWaddr\/ {print $5}'"}
{"English":"split content of the files *.txt beginning with 1001st line into pieces per 1000 lines","Bash":"cat *.txt | tail -n +1001 | split --lines=1000"}
{"English":"Execute \"ls -l\" every 2 seconds","Bash":"watch 'ls -l'"}
{"English":"get the root access","Bash":"sudo su"}
{"English":"Use \"$BYTES\" amount of RAM for \"$SECONDS\" seconds with no output","Bash":"cat <(yes | tr \\\\n x | head -c $BYTES) <(sleep $SECONDS) | grep n"}
{"English":"Change directory to \"\/lib\/modules\/\" of the current kernel release","Bash":"cd \/lib\/modules\/$(uname -r)\/"}
{"English":"Make a new directory \"new-dir\" in every directory in the current working directory non-recursively","Bash":"find . -maxdepth 1 -type d | xargs -I \"{x}\" mkdir \"{x}\"\/new-dir"}
{"English":"Print the first 32 hexadecimal characters from \"\/dev\/urandom\"","Bash":"cat \/dev\/urandom | tr -cd 'a-f0-9' | head -c 32"}
{"English":"display a long listing of all fles in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 -ls"}
{"English":"display all the normal\/regular files in the directory FOLDER1","Bash":"find FOLDER1 -type f -print0"}
{"English":"Find files and directories modified in last 24 hours","Bash":"find . -mtime 1"}
{"English":"Delete all files that were modified more than 60 days ago under '\/path-to-directory' tree","Bash":"find \/path-to-directory -mtime +60 -exec rm -f {} \\;"}
{"English":"Change directory to \"$dir1\" and resolve any symlinks in the resulting path","Bash":"cd -P \"$dir1\""}
{"English":"Search directories \/res\/values-en-rUS and \/res\/xml for XML files","Bash":"find \/res\/values-en-rUS \/res\/xml -iname '*.xml'"}
{"English":"display a long listing of all the regular\/normal files in the current folder","Bash":"find . -type f -ls"}
{"English":"Find all the files which are modified more than 50 days back and less than 100 days","Bash":"find \/ -mtime +50 \u2013mtime -100"}
{"English":"Overwirte file '\/path\/to\/your\/file' with zeroes and remove, showing progress while execution.","Bash":"shred -v -n 0 -z -u \/path\/to\/your\/file #overwriting with zeroes and remove the file"}
{"English":"Creates temporary file and saves path to it in 'content_dir1' variable.","Bash":"content_dir1=$(mktemp)"}
{"English":"find all the files ending with .mp3 or .jpg","Bash":"find . \\( -name '*.mp3' -o -name '*.jpg' \\) -print"}
{"English":"Save the absolute path of the directory of the current script to variable \"DIR\"","Bash":"DIR=$(dirname \"$(readlink -f \\\"$0\\\")\")"}
{"English":"Remove all .mpg files in the \/home\/luser directory tree","Bash":"find \/home\/luser -type f -name '*.mpg' | xargs rm -f"}
{"English":"display the long listing detials of all the files in the folder junk which is in home folder.","Bash":"find ~\/junk   -name \"*\" -exec ls -l {} \\;"}
{"English":"Recursively removes all files like any-cased '*.pyc' in a current folder.","Bash":"find . -iname '*.pyc' -print0 | xargs -0 --no-run-if-empty  rm"}
{"English":"Remove all tmp\/*.mp3 files","Bash":"find tmp -maxdepth 1 -name *.mp3 -print0 | xargs -0 rm"}
{"English":"create directory tata","Bash":"mkdir tata"}
{"English":"Print appended data in \"\/var\/log\/some.log\" that match \"foo\" and \"bar\"","Bash":"tail -f \/var\/log\/some.log | grep --line-buffered foo | grep bar"}
{"English":"Print which files differ between \"dir1\/\" and \"dir2\/\"","Bash":"diff --brief -r dir1\/ dir2\/"}
{"English":"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"","Bash":"find . -iname .svn -print0 | xargs -0 rm -rf"}
{"English":"Remove everything in a current folder prompting user on each action.","Bash":"rm -ri *"}
{"English":"Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'","Bash":"MOD_DATE1=$(date -d \"$MOD_DATE\" +%s)"}
{"English":"Find all directories whose status were changed $FTIME days ago","Bash":"find . -type d -ctime $FTIME"}
{"English":"Find all files\/directories named '\u0438\u043c\u044f_\u0444\u0430\u0439\u043b\u0430' in the entire filesystem","Bash":"find \/ -name \"\u0438\u043c\u044f_\u0444\u0430\u0439\u043b\u0430\""}
{"English":"Find and show all files in the current directory tree that are exactly 2000 kB","Bash":"find . -size 2000k"}
{"English":"See what files are executable by the file's owner and group","Bash":"find -type f -perm -110"}
{"English":"Create an empty file in each directory named \"mydir\" under current directory.","Bash":"find . -type d -name \"mydir\" -exec touch '{}\/abc.txt' \\;"}
{"English":"Print file type of the command \"c++\"","Bash":"file `which c++`"}
{"English":"Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.","Bash":"find \/ -user olduser  -type f  -exec chown newuser {} \\"}
{"English":"change the permissions of all regular\/normal files in the current directory, print0 is used for handling files with newlines in their file name","Bash":"find . -type f -print0 | xargs -0 chmod 664"}
{"English":"find all the files which end with \".deb\" and display their base name (strip the extension)","Bash":"find . -name '*.deb' | xargs -n1 basename"}
{"English":"Find the top 5 small files","Bash":"find . -type f -exec ls -s {} \\; | sort -n  | head -5"}
{"English":"Removes all top-level empty folders within the current folder.","Bash":"ls | xargs rmdir"}
{"English":"Prints all Saturday days of a current month.","Bash":"cal -h | cut -c19-20"}
{"English":"Find all files\/directories with '.err' extension under '\/home\/username' directory tree","Bash":"find \/home\/username\/ -name \"*.err\""}
{"English":"Print the contents of \"foo.txt\" starting with line 2","Bash":"tail -n +2 foo.txt"}
{"English":"Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only","Bash":"find . -name \"*.txt\" -printf \"%T+ %p\\n\" | sort | tail -1"}
{"English":"search for all the files in the folder \/home\/user1 which end with \".bin\"","Bash":"find \/home\/user1 -name \"*.bin\""}
{"English":"Get the actual find exectuable path","Bash":"which find"}
{"English":"Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.","Bash":"wc -l **\/*.php"}
{"English":"Find all files accessed on the 29th of September, 2008, starting from the current directory","Bash":"find . -type f -newerat 2008-09-29 ! -newerat 2008-09-30"}
{"English":"Find all *.* files not within .git directory and run $SED_CMD -i \"s\/$1\/$2\/g\" on each of them","Bash":"find . -type f -name \"*.*\" -not -path \"*\/.git\/*\" -print0 | xargs -0 $SED_CMD -i \"s\/$1\/$2\/g\""}
{"English":"Change the permission of all regular files under current directory tree to 644","Bash":"find . -type f -exec chmod 644 {} \\;"}
{"English":"Number each non-blank line of standard input","Bash":"nl"}
{"English":"Find files starting with the word \"file\" in the current directory tree","Bash":"find . -name \"file*\""}
{"English":"Set timestamp of B to the timestamp in stat format specified by variable \"old_time\"","Bash":"touch -d\"$(date --date=\"@$old_time\")\" B"}
{"English":"Search the home directory tree for all .txt files","Bash":"find ~\/ -name '*.txt'"}
{"English":"Search the entire file system for any file that is writable by other.","Bash":"find \/ \u2013 perm -0002"}
{"English":"Search the current directory recursively for text files containing at least one character","Bash":"find -type f -exec grep -Iq . {} \\; -and -print"}
{"English":"Find files and directories modified in last 7 days","Bash":"find . -mtime -7"}
{"English":"Print out ln commands for each file in \/home\/folder1\/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names","Bash":"find \/home\/folder1\/*.txt -type f | awk -F '.txt' '{printf \"ln -s %s %s_CUSTOM_TEXT.txt\\n\", $0, $1}'"}
{"English":"Find all .core files on the system starting from \/ and delete them","Bash":"find \/ -name \"*.core\" -print -exec rm {} \\;"}
{"English":"find all files in the current folder which have not been changed in the last 48 hours","Bash":"find .\/ -daystart -ctime +2"}
{"English":"List all files under current directory that are greater than 10MB in size","Bash":"find . -size +10M -exec ls -ld {} \\;"}
{"English":"Find all files that are set user ID to root","Bash":"find . -user 0 -perm -4000 -print"}
{"English":"Split \"input.txt\" into files of at most 10 bytes each with prefix \"\/tmp\/split-file\"","Bash":"split -b 10 input.txt \/tmp\/split-file"}
{"English":"Find all files owned by group `group2'","Bash":"find \/ -group group2"}
{"English":"Print second section of space-separated data coming from stdin.","Bash":"cut -d ' ' -f 2"}
{"English":"Print only group names from \/etc\/group.","Bash":"cut -d: -f1 \/etc\/group"}
{"English":"Serach  in root directory all files which  have more than 2 links.","Bash":"find \/ -links +2 -print"}
{"English":"search for the directory \"uploads\" in current folder and change the permission of the folder and all the files to 755","Bash":"find . -type d -name 'uploads' -print0 | xargs -0 chmod -R 755"}
{"English":"Counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder.","Bash":"grep -v '^\\s*$' *.py | wc"}
{"English":"Locate symlinks in directory trees lpi104-6 and research\/lpi104-6","Bash":"find lpi104-6 research\/lpi104-6 -type l"}
{"English":"display all files in the current folder","Bash":"find . -print"}
{"English":"all .jpg or .png images modified in the past week","Bash":"find . -mtime -7 \\( '*.jpg' -o -name '*.png' \\)"}
{"English":"find all the configuration files in \/etc folder along with the last access & modification time","Bash":"find \/etc -name \"*.conf\" -printf \"%f %a, %t\\n\""}
{"English":"Search directory tree $DIR for *.txt files","Bash":"find $DIR -name \"*.txt\" -print"}
{"English":"Find '*prefs copy' files under \/mnt\/zip and delete them with confirmation prompt ensuring white space safety","Bash":"find \/mnt\/zip -name \"*prefs copy\" -print0 | xargs    -0 -p \/bin\/rm"}
{"English":"Display hostname.","Bash":"uname -n"}
{"English":"Find all the files\/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26","Bash":"find .\/ -newermt 2014-08-25 ! -newermt 2014-08-26 -print"}
{"English":"Move all files listed in $i file to dir.$count directory","Bash":"cat $i | xargs mv -t dir.$count"}
{"English":"Numerically sort file \"table\" by the fourth character of the second field, ignoring leading spaces","Bash":"sort -b -n -k2.4 table"}
{"English":"Find files that were modified 7 days ago and archive them","Bash":"find . -type f -mtime 7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}
{"English":"Search all regular files in the current directory tree for \"example\"","Bash":"find -type f -print0 | xargs -r0 grep -F 'example'"}
{"English":"find all js files under the build direcotry except build\/external and build\/log directory.","Bash":"find build -not \\( -path build\/external -prune \\) -not \\( -path build\/blog -prune \\) -name \\*.js"}
{"English":"Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers","Bash":"find . -name '*.axvw' -print0 | xargs -0 grep -n 'some string'"}
{"English":"Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.","Bash":"which -a rename | xargs readlink -f | xargs file"}
{"English":"List files in the current directory and below that are exactly 1234 bytes in size","Bash":"find . -size 1234c"}
{"English":"Find all files with space in their names under current directory","Bash":"find . -type f -name '* *'"}
{"English":"Count the number of regular files in the current directory that contain a vowel in their names","Bash":"find . -maxdepth 1 -type f -iname '*[aeiouy]*' -printf \".\\n\" | wc -l"}
{"English":"Find all *.c files on the system and feed the output to wc","Bash":"find \/ -name *.c | wc"}
{"English":"Convert \"abc\" to a string of hexadecimal bytes","Bash":"echo abc | od -A n -v -t x1 | tr -d ' \\n'"}
{"English":"find all the files in the folder \"\/usr\/app\/etl\/01\/OTH\/log\/tra\" which have been modified  in the last 240 hours  excluding hidden files and those with the name \"\/usr\/app\/etl\/01\/CLE\/par\/files_to_skip.par\"","Bash":"find \/usr\/app\/etl\/01\/OTH\/log\/tra -type f ! -name \".*\" -mtime -10 | egrep -vf \/usr\/app\/etl\/01\/CLE\/par\/files_to_skip.par"}
{"English":"change the group to \"new_group\" and permissions to 770 for all the files in the current folder","Bash":"find . -name \"*\" \\( -exec chgrp -v new_group {} \\; -o -exec chmod -v 770 {} \\; \\)"}
{"English":"Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.","Bash":"basedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\\\,\/,g')\")"}
{"English":"Search the directory tree given as variable $root_dir for regular files","Bash":"find $root_dir -type f"}
{"English":"Search the current directory tree for the files with extension \"trc\" and remove them if they are more than three days old","Bash":"find . -name \"*.trc\" -ctime +3 -exec rm -f {} \\;"}
{"English":"Print joined strings from 'file', using space symbol as separator.","Bash":"cat file | xargs"}
{"English":"List all files in \/home\/bozo\/projects directory tree that were modified within the last day.","Bash":"find \/home\/bozo\/projects -mtime -1"}
{"English":"Make directories \"mnt\" and \"point\"","Bash":"mkdir mnt point"}
{"English":"Use ANSI escape codes to make \"World\" bold from input \"Hello World!\"","Bash":"echo 'Hello World!' | sed $'s\/World\/\\e[1m&\\e[0m\/'"}
{"English":"Display the content of YourFile.txt, waiting for user input at each page.","Bash":"more YourFile.txt"}
{"English":"display all the directories in the current folder which are atleast one level deep","Bash":"find . -mindepth 1 -type d -print0"}
{"English":"List the directory paths of all file.ext files under present working directory","Bash":"find `pwd` -name file.ext |xargs -l1 dirname"}
{"English":"display all the files in the current folder which do not belong to any group","Bash":"find . -nogroup"}
{"English":"Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree","Bash":"find teste2 -type f -iname \"$srchfor\"|wc -l"}
{"English":"Search for 'some string' in all *js files under current directory and show the matched lines with line numbers","Bash":"find . -name '*js' -exec grep -n 'some string' {} \\;"}
{"English":"find all the html files in the current folder and rename them to .var files","Bash":"find -name '*.html' -print0 | xargs -0 rename 's\/\\.html$\/.var\/'"}
{"English":"search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB","Bash":"find ~\/tmp -type f -mtime 0 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total\/1024}'"}
{"English":"Finds strings like \"texthere\" recursively in all files of a current folder regarding all symlinks.","Bash":"grep -R \"texthere\" *"}
{"English":"Print current shell using process ID","Bash":"ps  -ef | grep $$ | grep -v grep"}
{"English":"Exclude directory from find . command","Bash":"find . -path .\/misc -prune -o -name '*.txt' -print"}
{"English":"search for the word \"slrn\" in all the files in the current folder","Bash":"find .\/ -exec grep -q 'slrn' '{}' \\; -print"}
{"English":"Count the number of the regular files residing under and below .\/randfiles\/","Bash":"find .\/randfiles\/ -type f | wc -l"}
{"English":"Find files whose pathnames contain \"string\" and print these pathnames replacing 'search string' with 'new string'","Bash":"find . |xargs grep search string | sed 's\/search string\/new string\/g'"}
{"English":"Display permissions, user, group, and full path for each file in the current directory tree","Bash":"tree -p -u -g -f"}
{"English":"delete all the files in the current folder which do not belong to any user","Bash":"find . -nouser | xargs rm"}
{"English":"Find all files\/directories starting with 'readme' (case insensitive) under '\/usr\/share\/doc' directory tree","Bash":"find \/usr\/share\/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'"}
{"English":"change owner and group of the file \"file\" to user \"user\" and group \"group\"","Bash":"chown user:group file ..."}
{"English":"Print \"$line\" in hexadecimal 2-byte units","Bash":"echo -n $line | od -x"}
{"English":"Count the number of times that a single \"-----------\\n\" separated record contains both \"A=2\" and \"dummy=2\" in compressed file \"file.gz\"","Bash":"zcat file.gz | awk -v RS=\"-----------\\n\" '\/A=2[ ,\\n]\/ && \/dummy=2[ ,\\n]\/{count++} END{print \"Final counter value=\",count}'"}
{"English":"Numerically sort each line in file \"out\" and print the result to console","Bash":"sort -n out"}
{"English":"Search the regular files from directory tree 'directory_name' for \"word\" and print the names of the matched files","Bash":"find directory_name -type f -print0 | xargs -0 grep -li word"}
{"English":"Find & Write Changes to a File and Print the Changes Using sed s\/\/gpw","Bash":"find . -type f -name \"*.txt\" -exec sed -n 's\/Linux\/Linux-Unix\/gpw output' thegeekstuff.txt"}
{"English":"Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size","Bash":"find \/ \\( -name '*.txt' -o -name '*.doc' -o -size +5M \\)"}
{"English":"get a PID of a process with name 'test.sh &'","Bash":"jobs -l | grep 'test.sh &' | grep -v grep | awk '{print $2}'"}
{"English":"List all leaf directories (directories which don't contain any sub-directory) under current directory","Bash":"find . -type d -links 2"}
{"English":"find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has","Bash":"find .  \\( ! -path \".\/output\/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach"}
{"English":"display all the regular files in the current folder which dont not have the permission 777","Bash":"find . -type f ! -perm 777"}
{"English":"display the list of all the text files present in the current directory excluding the search in certain paths.","Bash":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\" -ls"}
{"English":"search for all the files in the current directory which have been modified in the last 24 hours.","Bash":"find . -mtime -1"}
{"English":"Find all *fink* files\/directories under current directory","Bash":"find . -name \"*fink*\" -print"}
{"English":"Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION}","Bash":"find ${INPUT_LOCATION}\/ -name \"*.pdf.marker\" | xargs -I file mv file $(basename file .marker) ${OUTPUT_LOCATION}\/."}
{"English":"Change all file permissions to 664 and all directory permissions to 775 in directory tree \"htdocs\"","Bash":"find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +"}
{"English":"Find files modified in last 7 days","Bash":"find . -mtime -7 -type f"}
{"English":"Find and remove zero bytes files from user's directories .","Bash":"find \/usr\/* -size 0c -exec rm {} \\;"}
{"English":"search in the current directory for any file named Chapter1.txt","Bash":"find . -name Chapter1 -type f"}
{"English":"Delete all filename* files under \/dir directory","Bash":"find \/dir -name \"filename*\" -type f -print | xargs rm"}
{"English":"Change the owner and group of \"uid_demo\" to \"root\"","Bash":"sudo chown root:root uid_demo"}
{"English":"Prints process tree with command line arguments of a process having id $PID.","Bash":"pstree -a \"$PID\""}
{"English":"Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days","Bash":"find \"$DIR_TO_CLEAN\" -type f -mtime +$DAYS_TO_SAVE -print0 | awk -v RS='\\0' -v ORS='\\0' '{ print } END { print NR }' | xargs -0 rm"}
{"English":"find all text files in the current directory","Bash":"find . -name \"*.txt\" -print"}
{"English":"Find all 'test' directories in the current directory tree and remove them","Bash":"find . -type d -name 'test' -exec rm -rf {} \\;"}
{"English":"Print the list of files and directories of the current directory","Bash":"find . ! -name . -prune"}
{"English":"Change the owner of all files in the directory tree \"dir_to_start\" excluding file \"file_to_exclude\" to \"owner\"","Bash":"find dir_to_start -not -name \"file_to_exclude\"  -print0 | xargs -0 chown owner"}
{"English":"Find text files modified less than 5 days ago","Bash":"find . \u2013name \"*.txt\" \u2013mtime 5"}
{"English":"Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree","Bash":"find . -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Remove all files and directories called \"test\" from the current directory tree","Bash":"find . -name test -exec rm -R \"{}\" \\;"}
{"English":"Find files that are 0 bytes in size in the current directory tree and remove them","Bash":"find . -size 0 -exec rm {} \\;"}
{"English":"Interpret all lines containing an equal sign in myfile (usually, grab all variables from myfile into current shell)","Bash":"grep \"=\" myfile | source \/dev\/stdin"}
{"English":"Find all *.java files under current directory and archive them to myfile.tar","Bash":"find . -type f -name \"*.java\" | xargs tar rvf myfile.tar"}
{"English":"Create a new RSA key for ssh with no passphrase, store it in ~\/.ssh\/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen.","Bash":"echo -e  'y\\n'|ssh-keygen -q -t rsa -N \"\" -f ~\/.ssh\/id_rsa"}
{"English":"Change directory to the parent of the real path of the current script","Bash":"cd $(dirname $(readlink -f $0))"}
{"English":"search for text files in the current folder which do not have write access to others","Bash":"find . -type f \\( -iname \"*.txt\" -not -perm -o=w \\)"}
{"English":"list all CSS files (and directories ending with \u201c.css\u201d) under the current directory","Bash":"find . -name \"*.css\""}
{"English":"Remove all .txt files from the \/full\/path\/dir directory tree","Bash":"find \/full\/path\/dir -name '*.txt' -exec \/bin\/rm {} \\;"}
{"English":"show all directories in the current folder excluding those that are present in the sub directories of media, images and backups","Bash":"find . -type d \\( -name media -o -name images -o -name backups \\) -prune -o -print"}
{"English":"Sets shell option 'extglob'.","Bash":"shopt -s extglob"}
{"English":"Remove all *.bak files under current directory","Bash":"find . -type f -name \\*.bak -print0 | xargs -0 rm -v"}
{"English":"Find all files in  \/mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible","Bash":"find \/mydir -type f -exec sed -i 's\/<string1>\/<string2>\/g' {} +"}
{"English":"Find files newer than main.css in ~\/src","Bash":"find ~\/src -newer main.css"}
{"English":"find files in the current directory and sub-directories, that changed within last hour","Bash":"find . -cmin -60"}
{"English":"Save 'foo' into variable 'bar' in ksh","Bash":"echo foo | read bar"}
{"English":"Get the sizes (and total size) of all files under dir1 directory","Bash":"find dir1 ! -type d |xargs wc -c"}
{"English":"Give all directories in the \/path\/to\/base\/dir tree read and execute privileges","Bash":"find \/path\/to\/base\/dir -type d -exec chmod 755 {} +"}
{"English":"Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.","Bash":"grep -insr \"pattern\" *"}
{"English":"Find files accessed at 23:59","Bash":"find . -atime -1 -print"}
{"English":"Create 1000 files each file having a number from 1 to 1000 named \"file000\" to \"file999\"","Bash":"seq 1 1000 | split -l 1 -a 3 -d - file"}
{"English":"Find *.conf files\/directories only upto 1 level down under \/etc directory and show a few lines of output from the end","Bash":"find \/etc -maxdepth 1 -name \"*.conf\" | tail"}
{"English":"find all the files in the entire file system which have been modified in the last 120 hours","Bash":"find \/ -mtime -5 -print"}
{"English":"Create intermediate directories as required and directory  \/my\/other\/path\/here","Bash":"mkdir -p \/my\/other\/path\/here"}
{"English":"display a long listing of all the files in the current folder which are bigger than 10KB","Bash":"find . -size +10k -exec ls -lh {} \\+"}
{"English":"Display the contents of \"sample_0001.gz\" with \"lk=1&\" removed","Bash":"zcat sample_0001.gz | sed -e 's\/lk=1&\/\/g'"}
{"English":"Find all *.jpg files and copy them to \/","Bash":"find \/ -type f -name *.jpg  -exec cp {} . \\;"}
{"English":"Returns 0 if user $1 belongs to group $2.","Bash":"groups $1 | grep -q \"\\b$2\\b\""}
{"English":"Print all files and directories in the `.' directory tree skipping SCCS directories","Bash":"find . -name SCCS -prune -o -print"}
{"English":"Find all files that were last accessed less than7 days ago under \/home","Bash":"find \/home -mtime -7"}
{"English":"Find all .c and .h files in the current directory tree and search them for \"expr\"","Bash":"find -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"find all directories with the name root in the entire file system.","Bash":"find \/ -type d -name root"}
{"English":"display a long listing of all the files in the \/var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names","Bash":"find \/var -size +10000k -print0 | xargs -0 ls -lSh"}
{"English":"Display file.txt with lines numbered, and page interactively through the result.","Bash":"less -N file.txt"}
{"English":"find files under the current directory called \"foo\" or \"bar\"","Bash":"find . \\( -name \"foo\" -o -name \"bar\" \\)"}
{"English":"Find all .gz archives in the \/path\/to\/dir directory tree","Bash":"find \/path\/to\/dir -name \"*.gz\" -type f"}
{"English":"Find all files in ~\/clang+llvm-3.3\/bin\/ and print 'basename \/file\/path' for each file","Bash":"find ~\/clang+llvm-3.3\/bin\/ -type f -exec echo basename {} \\;"}
{"English":"Check that the master SSH control socket \"my-ctrl-socket\" to \"jm@sampledomain.com\" is running","Bash":"ssh -S my-ctrl-socket -O check jm@sampledomain.com"}
{"English":"Find all files\/directories in entire file system for which owner has read\/write\/execute permissions, or the group has at least execute permission, or others have at least execute permission","Bash":"find \/ -perm \/711"}
{"English":"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories","Bash":"find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}
{"English":"Find *log files\/directories within a maximum of 3 levels of directories","Bash":"find \/ -maxdepth 3  -name \"*log\""}
{"English":"display all files in current folder with NULL separating each file","Bash":"find . -print0"}
{"English":"Find all files\/directories under current directory tree wihout descending into '.\/src\/emacs' directory","Bash":"find . -path '.\/src\/emacs' -prune -o -print"}
{"English":"Remove all *.txt files under the given directory modified more than 5 minutes ago","Bash":"find \/home\/u20806\/public_html -maxdepth 1 -mmin +5 -type f -name \"*.txt\" -delete"}
{"English":"Print the list of files in the home directory tree whose names begin with \"Foto\"","Bash":"find ~ -name 'Foto*'"}
{"English":"Remove all libGLE* files from the current directory tree","Bash":"find . -name libGLE* | xargs rm -f"}
{"English":"Recursively print all files and directories in the current directory tree including hidden files","Bash":"tree -a ."}
{"English":"Search only for directories","Bash":"find -type d"}
{"English":"Search the home directory tree for files last modified less than 2 days ago or newer than file \"filename\"","Bash":"find ~\/ -mtime -2 -o newer filename"}
{"English":"Measure the disk space taken up by all *.txt files in directory trees folder1 and folder2","Bash":"find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1"}
{"English":"find all the text files in the current folder","Bash":"find . -name \"*.txt\" -print"}
{"English":"Unzip \"daily_backup.sql.gz\" and search for lines matching \"'x'|\/x\/\"","Bash":"zcat daily_backup.sql.gz| grep -E \"'x'|\/x\/\""}
{"English":"Set the system date to Sat May 11 06:00:00 IDT 2013","Bash":"sudo date --set=\"Sat May 11 06:00:00 IDT 2013\""}
{"English":"Find grub.conf files in entire file system","Bash":"find \/ -name grub.conf"}
{"English":"Find all the files under \/etc directory which are larger than 100k","Bash":"find \/etc -size +100k"}
{"English":"recursively change owner and group of the directory  \/vol\/html and all files into it to user ec2-user and group apache","Bash":"sudo chown -R ec2-user:apache \/vol\/html"}
{"English":"count lines of C or C++ or Obj-C or Java code under the current directory","Bash":"find . \\( -name \"*.c\" -or -name \"*.cpp\" -or -name \"*.h\" -or -name \"*.m\" -or -name '*.java' \\) -print0 | xargs -0 wc"}
{"English":"find StringBuffer in all *.java files","Bash":"find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}
{"English":"Recursively search through directory \"test\" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.","Bash":"find ~\/test -type d -exec basename {} \\;"}
{"English":"Find all files\/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem","Bash":"find \/ -user root -name FindCommandExamples.txt"}
{"English":"Find all files under $dir","Bash":"find \"$dir\" -type f"}
{"English":"Set the 'verbose' shell option causing bash to print shell input lines as they are read","Bash":"set -v"}
{"English":"Find all files under \/home\/username\/public_html\/sites\/default\/files and set their permission to 660","Bash":"find \/home\/username\/public_html\/sites\/default\/files -type f -exec chmod 660 {} +"}
{"English":"Find all index.* files\/directories under current directory","Bash":"find -name 'index.*'"}
{"English":"Find all empty directories in minimum 2 levels down the root directory","Bash":"find root -mindepth 2 -type d -empty"}
{"English":"find all the log files in the file system","Bash":"find \/ -name \"*.log\""}
{"English":"Find all files with the name \"MyProgram.c\" in the current directory and all of it's sub-directories.","Bash":"find -name \"MyCProgram.c\""}
{"English":"Find *.html files in the current directory tree that were last modified more than 7 days ago","Bash":"find . -mtime +7 -name \"*.html\" -print"}
{"English":"Find \"file.xml\" under the current directory and change directory to its parent","Bash":"cd `find . -name file.xml -exec dirname {} \\;`"}
{"English":"Find files\/directories that does not have write permssion for group or others","Bash":"find \/path ! -perm -022"}
{"English":"Find all files starting from the current directory which are owned by the user tommye","Bash":"find . -user tommye"}
{"English":"Find all empty directories recursively starting from the current one and delete them","Bash":"find . -type d -empty -delete"}
{"English":"Copy file 'src' to 'dest', except if 'dest' already exists.","Bash":"cp -n src dest"}
{"English":"Find all directories under \/var\/www directory and set their permission to 755","Bash":"sudo find \/var\/www -type d -print0 | xargs -0 chmod 755"}
{"English":"Print every two lines in \"file\" on a single line separated by a space","Bash":"cat file | paste -d\\ - - -"}
{"English":"Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '\/new_directory'","Bash":"find \/ -iname \"*.what_to_find\" -type f -exec mv {} \/new_directory \\;"}
{"English":"Compress all files under current directory tree with gzip","Bash":"find . -type f -print0 | xargs -0r gzip"}
{"English":"Join lines in file \"aa\" with lines in file \"bb\" if the lines share a common first word and sort the result numerically","Bash":"join <(sort aa) <(sort bb) | sort -k1,1n"}
{"English":"search for a word in all the fies in the current folder","Bash":"find . -type f -exec grep some_string {} \\;"}
{"English":"Print files created\/modified in the last day","Bash":"find \/directory -newermt $(date +%Y-%m-%d -d '1 day ago') -type f -print"}
{"English":"Make directories \"3\/foo\", \"3\/bar\", and \"3\/baz\"","Bash":"mkdir 3\/foo 3\/bar 3\/baz"}
{"English":"Replace \"-\" with \"0\" in columns 4 and 5 of file \"test.in\" and format as a table","Bash":"awk '{gsub(\/-\/,\"0\",$4);gsub(\/-\/,\"0\",$5)}1' test.in | column -t"}
{"English":"Pipe content of 'somedata.txt' file to the input of command \"$outfile\"","Bash":"cat somedata.txt | \"$outfile\""}
{"English":"List all regular files under current directory (not white space sage)","Bash":"find . -type f -print | xargs -n 1"}
{"English":"Search  all files & directoy from root directory which  are greater then 100M and delete them .","Bash":"find \/  -size +100M -exec rm -rf {} \\;"}
{"English":"Counts lines in each *.php file.","Bash":"wc -l `tree -if --noreport | grep -e'\\.php$'`"}
{"English":"find all the files that have been modified in the last 1 day","Bash":"find . -type f -daystart -mtime -1"}
{"English":"Saves byte size of $myvar variable value in the 'var2' variable.","Bash":"var2=$(echo $myvar | wc -c)"}
{"English":"Count the number of regular files with 755 permission under current directory tree","Bash":"find . -type f -perm 755 | wc -l"}
{"English":"Changes group ownership of 'myprog' to 'groupb'.","Bash":"chgrp groupb myprog"}
{"English":"find files in current folder using name patterns and sort the display the file names in the sorted order","Bash":"find . -name \"S1A*1S*SAFE\" | awk -F\/ '{print $NF\"\/\"$0}' | sort -t_ -k 5,5 | cut -d\/ -f 2-"}
{"English":"Search the current directory tree for .VER files","Bash":"find . -name \"*.VER\""}
{"English":"ssh into localhost on port 10022","Bash":"ssh -p 10022 localhost"}
{"English":"Wrap each line in \"yourfile\" to fit in 79 characters and right pad any lines shorter with spaces","Bash":"fold -w79 yourfile | sed -e :a -e 's\/^.\\{0,78\\}$\/& \/;ta'"}
{"English":"Unzip \"file.gz\" to standard output and execute in bash with arguments \"-n wordpress\"","Bash":"gzip -d --stdout file.gz | bash -s -- \"-n wordpress localhost\""}
{"English":"Find all files in the current directory tree whose names begin with '-'","Bash":"find . -name '[-]*'"}
{"English":"find all the directories in the file system which have read, write and execute to all the users","Bash":"find \/ \\( -type d -a -perm -777 \\) -print"}
{"English":"Print a count of duplicate lines in \"filename\" sorted by most frequent","Bash":"sort filename | uniq -c | sort -nr"}
{"English":"display all regular files in current folder which have spaces in their name","Bash":"find -type f -name \"* *\""}
{"English":"Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning","Bash":"find \/ -mtime +50 -mtime -100 | head"}
{"English":"display all the files in the folder \/home which do not belong to the group test","Bash":"find \/home -not -group test"}
{"English":"Get domain name from dig reverse lookup.","Bash":"$dig -x 8.8.8.8 | grep  PTR | grep -o google.*"}
{"English":"Show all previously typed shell commands, waiting for user interaction after each page of output.","Bash":"history | more"}
{"English":"Search the current directory tree for *bash* files printing them on a single line","Bash":"find . -name \"*bash*\" | xargs"}
{"English":"List .conf files residing in the \/etc\/nginx\/ directory tree","Bash":"find \/etc\/nginx -name '*.conf' -exec echo {} ;"}
{"English":"Displays process tree of a process with id 'PID', showing parent process and processes id.","Bash":"pstree -p -s PID"}
{"English":"For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first.","Bash":"join -o 1.1,1.2,1.3,1.4 -t, file1.csv file2.txt"}
{"English":"Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree","Bash":"find -name file -exec echo 'This should print the filename twice if an implicit -print is applied: ' {} +"}
{"English":"Remove \"\\n\" from \"test1\\ntest2\\ntest3\" and search for \"test1.*test3\"","Bash":"echo -e \"test1\\ntest2\\ntest3\" |tr -d '\\n' |grep \"test1.*test3\""}
{"English":"find all the files in current directory of size greater than 10MB and less than 20 MB.","Bash":"find . -size +10M -size -20M"}
{"English":"change the group of all regular\/normal files in the current directory","Bash":"find . -type f -exec chgrp usergroup {} \\;"}
{"English":"Make a POST request to \"http:\/\/dweet.io\/dweet\/for\/cycy42\" with data \"PiIP\" set to the IP address of the system","Bash":"wget --post-data=\"PiIP=$(hostname -I)\" http:\/\/dweet.io\/dweet\/for\/cycy42"}
{"English":"Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables","Bash":"od -cvAnone -w1 | sort -b | uniq -c | sort -rn | head -n 20"}
{"English":"Display the last slash-separated part of each filename path in file.txt","Bash":"rev file.txt | cut -d\/ -f1 | rev"}
{"English":"Perform a case insensitive search for *filename* files\/directories under current directory tree","Bash":"find . -iname \"*filename*\""}
{"English":"Set trace prompt to print seconds, nnoseconds, script name, and line number","Bash":"PS4='+$(date \"+%s:%N\") %N:%i> '"}
{"English":"Enables shell option 'direxpand'.","Bash":"shopt -s direxpand"}
{"English":"Find all the files\/directories under '\/var\/adm' directory tree that have not been modified in the last 3 days","Bash":"find \/var\/adm -mtime +3 -print"}
{"English":"Find all regular files matching the name pattern '*.?htm*' under '\/srv\/www' and '\/var\/html' directory tree","Bash":"find \/srv\/www \/var\/html -name \"*.?htm*\" -type f"}
{"English":"List all files in the current directory tree including those that may contain spaces in their names","Bash":"find . -print0 | xargs -0 -l -i echo \"{}\";"}
{"English":"Locate files that reside in the \/u\/bill directory tree and were last accessed between 2 and 6 minutes ago","Bash":"find \/u\/bill -amin +2 -amin -6"}
{"English":"Combine every two lines of standard input","Bash":"paste -d \"\" - -"}
{"English":"Count files accessed more than a month ago","Bash":"find . -atime +30 -exec ls \\; | wc -l"}
{"English":"display all directories in current folder excluding those that are present in .git folder","Bash":"find . -iregex '.*\/.git\/.*' -prune -o -type d -name 'CVS'"}
{"English":"Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago","Bash":"find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}
{"English":"create directory public_html into home directory","Bash":"mkdir ~\/public_html"}
{"English":"find all the symbolic links in the current folder","Bash":"find \/etc -type l -print"}
{"English":"print top 10 largest files and directories","Bash":"du -a . | sort -nr | head"}
{"English":"List all directories in current directory, works even if they have weird names or names starting with a dash.","Bash":"find -maxdepth 1 -type d | awk -F\".\/\" '{print $2}'"}
{"English":"Search the \/myfiles directory tree for files last accessed more than 30 days ago","Bash":"find \/myfiles -atime +30"}
{"English":"Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under .\/cms\/djangoapps\/contentstore\/management\/commands\/tests directory","Bash":"find .\/cms\/djangoapps\/contentstore\/management\/commands\/tests -iname *.css | xargs sed -i s\/[Ee][Dd][Xx]\/gurukul\/g"}
{"English":"Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case","Bash":"find . -iregex \".*packet.*\""}
{"English":"Search all files called \"abc\" that reside in the current directory tree for string \"xyz\"","Bash":"find . -name abc | xargs grep xyz"}
{"English":"find all the files in the filesystem which do not belong to any group","Bash":"find \/ -nogroup -print"}
{"English":"Find all files whose names begin with 'Makefile' in the \/usr\/ports directory tree and count how many of them contain 'QMAKESPEC'","Bash":"find \/usr\/ports\/ -name Makefile\\* -exec grep -l QMAKESPEC '{}' '+' | wc -l"}
{"English":"Copy directory hierarchy \"dir\" and all its .txt files to \"dir_txt\"","Bash":"find dir\/ -name '*.txt' | xargs cp -a --target-directory=dir_txt\/ --parents"}
{"English":"Reformat date \"Sat Aug 09 13:37:14 2014 +1100\" according to format string \"%a %b %d %H:%M:%S %Y %z\"","Bash":"date -j -f \"%a %b %d %H:%M:%S %Y %z\" \"Sat Aug 09 13:37:14 2014 +1100\""}
{"English":"Remount \"\/mnt\/mountpoint\" as read only","Bash":"mount \/mnt\/mountpoint -oremount,ro"}
{"English":"Print content of \/etc\/passwd and \/etc\/group files","Bash":"cat \/etc\/passwd \/etc\/group"}
{"English":"Find all files larger than 20000k and print their names and sizes","Bash":"find \/ -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}
{"English":"Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor","Bash":"find . | grep -E -v '\\.png$|\\.class$' | vim -"}
{"English":"Find all files\/directories that belong to the group 'accts' under '\/apps' directory tree","Bash":"find \/apps -group accts -print"}
{"English":"Delete files in the DIR directory tree whose names begin with \"2015\" and contain \"album\" or \"picture\"","Bash":"find DIR \\( -name 2015\\* -a \\( -name \\*album\\* -o -name \\*picture\\* \\) \\) -delete"}
{"English":"Copy \"\/path\/to\/source\" to '\/path\/to\/dest' in remote \"username@computer\"","Bash":"rsync -r \/path\/to\/source username@computer:\/path\/to\/dest"}
{"English":"find all the xml files in current folder and which are present in the pattern list file \"\/tmp\/a\"","Bash":"find . -name \"*.xml\" -exec grep -HFf \/tmp\/a {} \\;"}
{"English":"Convert Unix `cal` output to latex table code.","Bash":"cal -h 02 2012| cut -c4-17 | sed -r 's\/(..)\\s\/\\0\\t\\&\/g' | sed 's\/$\/\\t\\\\\\\\\/' | head -n-1 | tail -n +2"}
{"English":"Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files","Bash":"find . -name '*.py' | tee output.txt | xargs grep 'something'"}
{"English":"Print amount of space available on the file system containing path to the current working directory in megabytes.","Bash":"df . -B MB | tail -1 | awk {'print $4'} | cut -d'%' -f1"}
{"English":"Delete all *txt files under current directory","Bash":"find . -name \"*txt\" -type f -print | xargs rm"}
{"English":"Find all symbolic links under the current folder and below","Bash":"find \u2013L \u2013xtype l"}
{"English":"Find all files under the current directory that are not the same file as \"\/home\/nez\/file.txt\"","Bash":"find . -maxdepth 1 -not -samefile \/home\/nez\/file.txt"}
{"English":"Replace spaces in file names with underscores for all files in the current directory tree","Bash":"find -name \"* *\" -type f | rename 's\/ \/_\/g'"}
{"English":"SSH into \"hostname\" on port 22 as user \"myName\"","Bash":"ssh -p 22 myName@hostname"}
{"English":"Search the current directory recursively for regular files modified 2 days ago","Bash":"find . type -f -mtime 2"}
{"English":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\\n'","Bash":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%TY %p\\n'"}
{"English":"Print a count of each unique line in \"ip_addresses\"","Bash":"sort ip_addresses | uniq -c"}
{"English":"create directory saxon_docs","Bash":"mkdir saxon_docs"}
{"English":"Find regular files named \"regex\" under and below \/dir\/to\/search\/","Bash":"find \/dir\/to\/search\/ -type f -name 'regex' -print"}
{"English":"Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago","Bash":"find \/home\/u20806\/public_html -name \"robots.txt\" -o -maxdepth 1 -mmin +5 -type f -name \"*.txt\" -delete"}
{"English":"create directory dirname with permissions 777","Bash":"mkdir -m 777 dirname"}
{"English":"Print the \/proc directory tree, ignoring the PID-process things","Bash":"find \/proc -type d | egrep -v '\/proc\/[0-9]*($|\/)' | less"}
{"English":"List only the non-hidden empty files only in the current directory.","Bash":"find . -maxdepth 1 -empty -not -name \".*\""}
{"English":"find all files in the folder \/path\/to\/dir which have been modified between two dates","Bash":"find \/path\/to\/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls"}
{"English":"find all the directories in the entire file system whose size is greater than 50KB","Bash":"find \/ -type d -size +50k"}
{"English":"Recursively removes all files in a 'path' folder but 'EXPR' files.","Bash":"find [path] -type f -not -name 'EXPR' | xargs rm"}
{"English":"Find all symbolic links under '\/some\/directory' driectory tree","Bash":"find \/some\/directory -type l -print"}
{"English":"search for a file \"file\" in current folder and display all instances of this file","Bash":"find -name file -print"}
{"English":"Delete files containing whitespaces","Bash":"find . -name \"* *\" -exec rm -f {} \\;"}
{"English":"search for the word \"nameserver\" in all the configuration files of the \/etc folder","Bash":"find \/etc\/ -type f -name \"*.conf\" -print0 | xargs -I {} -0 grep \"nameserver\" \"{}\""}
{"English":"display all directories in the current folder","Bash":"find -type d"}
{"English":"Delete all files under $INTRANETDESTINATION\/weekly directory tree that were modified more than 32 days ago","Bash":"find $INTRANETDESTINATION\/weekly -mtime +32 -exec rm {} \\;"}
{"English":"Display bash function definition of \"foobar\"","Bash":"set | grep -A999 '^foobar ()' | grep -m1 -B999 '^}'"}
{"English":"Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents","Bash":"find . -not -name '*.png' -o -type f -print | xargs grep -icl \"foo=\""}
{"English":"Add a date time stamp to every line of output in \"ping google.com\"","Bash":"ping google.com | xargs -L 1 -I '{}' date '+%c: {}'"}
{"English":"search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+"}
{"English":"remove all the pdf files in the current folder and do not delete those in the sub folders","Bash":"find . -name \"*.pdf\" -maxdepth 1 -print0 | xargs -0 rm"}
{"English":"Print the time of last boot","Bash":"who -b"}
{"English":"Remove files matching pattern '*-*x*.*' from the current directory tree","Bash":"find  -name '*-*x*.*' | xargs rm -f"}
{"English":"find all the files in the current folder which belong to the user root.","Bash":"find . -user root -perm -4000 -print"}
{"English":"Read a single character from standard input into variable \"ans\"","Bash":"read -n1 ans"}
{"English":"Creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in 'my_temp' variable.","Bash":"$ my_temp_dir=$(mktemp -d --tmpdir=$temp_dir -t $template)"}
{"English":"Find files under '\/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names","Bash":"find \/travelphotos -type f -size +200k -not -iname \"*2015*\""}
{"English":"Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.","Bash":"dig +trace +additional dragon-architect.com | awk 'NR==3' RS=\"\\n\\n\""}
{"English":"Find all files named \"test2\" in the current directory tree","Bash":"find -name test2"}
{"English":"Print the names of the subdirectories of \/usr\/local\/svn\/repos\/ prepending \"\/usr\/local\/backup\" to them","Bash":"find \/usr\/local\/svn\/repos\/ -maxdepth 1 -mindepth 1 -type d -exec echo \/usr\/local\/backup{} \\;"}
{"English":"Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"\/usr\/lib\/python2.6\/site-packages\/\"","Bash":"chown amzadm.root -R \/usr\/lib\/python2.6\/site-packages\/"}
{"English":"Check if $path_in_question is mount point of filesystem","Bash":"df $path_in_question | grep \" $path_in_question$\""}
{"English":"Find directories owned by user news with permissions 775","Bash":"find \/ -user news -type d -perm 775 -print"}
{"English":"Find all files under current directory and replace the match of the regex '^.*\/S' with 'S' in every line of the output","Bash":"find . -type f -print | sed 's|^.*\/S|S|'"}
{"English":"Find all *company* files\/directories under \/root\/of\/where\/files\/are directory","Bash":"find \/root\/of\/where\/files\/are -name *company*"}
{"English":"find all the ogg files in the current directory which have the word \"monfichier\" in their name","Bash":"find -name *monfichier*.ogg"}
{"English":"find all files in etc which have been changed in the last 25 hours","Bash":"find \/etc -ctime -1"}
{"English":"Copy \"src\/prog.js\" and \"images\/icon.jpg\" to \"\/tmp\/package\/\" keeping relative path names","Bash":"rsync -Rv src\/prog.js images\/icon.jpg \/tmp\/package\/"}
{"English":"split $SOURCE_FILE\" into pieces per 100 lines","Bash":"split -l 100 \"$SOURCE_FILE\""}
{"English":"Find all files\/directories in directories\/files taken from the glob pattern '\/tmp\/test\/*' recursively that have not been modified from the start of the day","Bash":"find \/tmp\/test\/* -daystart -mtime +0"}
{"English":"Display the output of \"ls\" for an 80 character wide display","Bash":"ls | column -c 80"}
{"English":"Print the mount point of the last mounted drive","Bash":"mount | tail -1 | sed -e \"s\/^[^\/]*\\(.*\\) type .*$\/\\1\/g\""}
{"English":"Display a list of files with sizes in decreasing order of size of all the regular files under '\/your\/dir' directory tree that are bigger than 5 MB in size","Bash":"find \/your\/dir -type f -size +5M -print0 | xargs -0 ls -1Ssh"}
{"English":"Print a unique list of characters from standard input showing backslash escapes for non-displayables","Bash":"od -cvAnone -w1 | sort -bu"}
{"English":"Find all *.py files under current directory","Bash":"find . -type f -name \"*.py\""}
{"English":"Print content of all files found regarding seach options '[whatever]'","Bash":"find [whatever] -exec cat {} +"}
{"English":"Print which files differ in \"dir1\" and \"dir2\" recursively","Bash":"diff -qr dir1 dir2"}
{"English":"Find PHP files containing 2 or more classes","Bash":"find . -type f -name \"*.php\" -exec grep --with-filename -c \"^class \" {} \\; | grep \":[2-99]\" | sort -t \":\" -k 2 -n -r"}
{"English":"Output \"stuff\", removing \"\/foo\/bar\/\" from the specified path.","Bash":"basename \/foo\/bar\/stuff"}
{"English":"Find how many directories are in a path (counts current directory)","Bash":"find . -type d -exec basename {} \\; | wc -l"}
{"English":"Find the directories whose pathnames contain \"New Parts\" at level 3 of the current directory tree and create symlinks to them in \/cygdrive\/c\/Views","Bash":"find -mindepth 3 -maxdepth 3 -type d | grep \"New Parts\" | tr '\\012' '\\000' | xargs -0 ln -s -t \/cygdrive\/c\/Views"}
{"English":"Find files named 'fileName.txt' under '\/path\/to\/folder' directory tree ignoring 'ignored_directory'","Bash":"find \/path\/to\/folder -name fileName.txt -not -path \"*\/ignored_directory\/*\""}
{"English":"Append \".txt\" to all filenames in the current directory tree","Bash":"find -type f | xargs -I {} mv {} {}.txt"}
{"English":"Print current UTC date in ISO format with precision to seconds","Bash":"date -u -Iseconds"}
{"English":"search for text files in the current folder which do not have write access to others","Bash":"find . -type f \\( -iname \"*.txt\" ! -perm -o=w \\)"}
{"English":"Print a colon-separated list of all directories from the ~\/code directory tree, except hidden ones and those below them","Bash":"find ~\/code -name '.*' -prune -o -type d -printf ':%p'"}
{"English":"Remove file with inode number 31246","Bash":"find . -inum 31246 -exec rm [] ';'"}
{"English":"Print a sorted list of the extensions of the regular files from the current directory tree","Bash":"find . -type f -name \"*.*\" | awk -F. '{print $NF}' | sort -u"}
{"English":"Move all files in \"\/path\/subfolder\" to \"\/path\" without clobbering any destination files","Bash":"find \/path\/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} \/path \\;"}
{"English":"Print epoch seconds for given time string \"Oct 21 1973\"","Bash":"date -d \"Oct 21 1973\" +%s"}
{"English":"Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under .\/cms\/djangoapps\/contentstore\/views directory","Bash":"find .\/cms\/djangoapps\/contentstore\/views -iname *.css | xargs sed -i s\/[Ee][Dd][Xx]\/gurukul\/g"}
{"English":"Find all files in the \/home\/myuser directory recursively that are older than 7 days","Bash":"find \/home\/myuser -mtime +7 -print"}
{"English":"Recursively changes group ownership of everything in '\/home\/secondacc\/public_html\/community\/' to 'fancyhomepage'.","Bash":"chgrp -R fancyhomepage \/home\/secondacc\/public_html\/community\/"}
{"English":"Find all files under current directory and print them appending a null character at the end of each file paths","Bash":"find . -type f -print0"}
{"English":"Getting a detailed list of files\/dirs","Bash":"find  \/ -name \"apt\" -ls"}
{"English":"Find all files\/directories with '.js' extension under current directory tree without descending into  and ignoring '.\/directory' completely","Bash":"find . -not \\( -path .\/directory -prune \\) -name \\*.js"}
{"English":"Replace all newlines from standard input except the last with spaces","Bash":"sed -e ':a' -e 'N' -e '$!ba' -e 's\/\\n\/ \/g'"}
{"English":"Compress all files in the \"$FILE\" directory tree that were last modified 30 days ago","Bash":"find $FILE -type f -mtime 30 -exec gzip {} \\;"}
{"English":"Count the number of differing lines in \"file1\" and \"file2\"","Bash":"diff file1 file2 | grep ^[\\>\\<] | wc -l"}
{"English":"Print numbers from 1 to 10 with 2 values per line","Bash":"seq 10 | awk 'NR%2{printf(\"%s \", $0); next}1'"}
{"English":"search for \"message.txt\" in the folder .cache\/bower and display its contents","Bash":"find .cache\/bower\/ -name \"message.txt\" | xargs cat"}
{"English":"Checks compressed file integrity.","Bash":"bzip2 -t file.bz2"}
{"English":"find all the files that were modified yesterday in the current directory.","Bash":"find . -daystart -ctime 0 -type f"}
{"English":"locate large files (> 100 MB) in \/home\/ for 'cleaning'","Bash":"find \/home -type f -size +100M -print0 |xargs -0 rm"}
{"English":"Find empty files in the test directory","Bash":"find test -empty"}
{"English":"Go to previous working directory.","Bash":"cd -"}
{"English":"Find files in the current directory and below that are less than 500 kB in size","Bash":"find . -size -500k -print"}
{"English":"force remove all the regular\/normal files which begin with sess in the temp folder","Bash":"find \/tmp -type f -name sess* -exec rm -f {} \\;"}
{"English":"Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under \/var\/spool\/postfix\/","Bash":"find \/var\/spool\/postfix\/{deferred,active,maildrop,incoming}\/ -type f"}
{"English":"Search for 'specific string' in all files matching the name pattern '\u201c*.[txt|TXT]\u201d' under current directory tree","Bash":"find . -name \u201c*.[txt|TXT]\u201d -print | xargs grep \u201cspecific string\u201d"}
{"English":"Print numbers from 1 to 30 with equalized 0 padding","Bash":"seq -w 30"}
{"English":"find all CSS files that do something with your HTML ID #content","Bash":"find . -name \"*.css\" -exec grep -l \"#content\" {} \\;"}
{"English":"Prints process tree with command line arguments and process id numbers.","Bash":"pstree -apl"}
{"English":"get all files in a current directory modified in the last 7 days","Bash":"find . -mtime -7 -print0 | xargs -0 tar -cjf \/foo\/archive.tar.bz2"}
{"English":"Find all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\""}
{"English":"Prints year-month-date format for given time","Bash":"date -d \"yesterday 13:00\" '+%Y-%m-%d'"}
{"English":"Make directory \"\/path\/to\/destination\"","Bash":"mkdir \/path\/to\/destination"}
{"English":"Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files","Bash":"find . -print | xargs grep -l -i \"PATTERN\""}
{"English":"Remove Mac OS X Desktop Services Store files","Bash":"find . -name \".DS_Store\" -exec rm {} \\;"}
{"English":"long list the detials of all the shell scripts in current directory","Bash":"find . -name \"*.sh\" -exec ls -ld {} \\;"}
{"English":"Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444","Bash":"find . \\( -name 1.txt -o -name 2.txt -o -name 3.txt \\) -print|xargs chmod 444"}
{"English":"Find all directories in the current directory tree","Bash":"find -type d"}
{"English":"make directory \"\/etc\/cron.15sec\"","Bash":"mkdir \/etc\/cron.15sec"}
{"English":"Find all *.xml files under current directory","Bash":"find -name *.xml"}
{"English":"Delete all files with '.old' extension under current directory tree","Bash":"find . -name \u201c*.old\u201d -exec rm {} \\;"}
{"English":"display the count of total number of text files in the folder \/home\/you which have been modified in the last 60*24 hours","Bash":"find \/home\/you -iname \"*.txt\" -mtime -60 | wc -l"}
{"English":"Gets string with MAC address of eth0 network interface.","Bash":"ifconfig eth0 | grep HWaddr"}
{"English":"Rename the *.so files in the current directory tree prepending their names with \"lib\"","Bash":"find . -name \"*.so\" -printf \"mv '%h\/%f' '%h\/lib%f'\\n\" | bash"}
{"English":"Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.","Bash":"cat ip_addresses | sort | uniq -c | sort -nr | awk '{print $2 \" \" $1}'"}
{"English":"Disable wildcard expansion and name globbing","Bash":"set -f"}
{"English":"Find all the files which were modified 50 days ago","Bash":"find \/ -mtime 50"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in \/var\/log","Bash":"find \/var\/log\/ -iname anaconda.*"}
{"English":"Mount \"device_name\" on \"mount_point\"","Bash":"sudo mount device_name mount_point"}
{"English":"Read a line from standard input and save each word in the bash array variable \"first\"","Bash":"read -a first"}
{"English":"Search the current directory tree for regular files that can be read by noone","Bash":"find -type f ! -perm -444"}
{"English":"search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad)","Bash":"find . -type f -name \"*.sh\" -exec grep -il landoflinux {} \\;"}
{"English":"Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers","Bash":"find . \\( -name \"*.php\" -o -name \"*.html\" \\) -print0 | xargs -0 grep -Hin \"joomla\""}
{"English":"Measure the disk space taken up by all *.txt files in directory tree \/home\/d","Bash":"find \/home\/d -type f -name \"*.txt\" -printf \"%s\\n\" | awk '{s+=$0}END{print \"total: \"s\" bytes\"}'"}
{"English":"View line 500 to line 1000 in gzipped file \"bigfile.z\"","Bash":"zcat bigfile.z | sed -ne '500,1000 p'"}
{"English":"Create a symbolic link named \"temp\" to \"newtarget\"","Bash":"ln -s newtarget temp"}
{"English":"Search for 'stuff' in all *,txt files under current directory","Bash":"find . -name \"*.txt\" -print0 | xargs -0 egrep 'stuff'"}
{"English":"Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file","Bash":"find . -name '*.py' -exec grep -n -f search_terms.txt '{}' \\;"}
{"English":"find all the text files in the current folder and do not  search in the sub directories","Bash":"find -maxdepth 1 -iname \"*.txt\""}
{"English":"Remove all files under $DIR that were accessed more than 5 days ago","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"List all broken symlinks excluding cyclic links under current directory","Bash":"find . -type l -printf \"%Y %p\\n\" | grep -w '^N'"}
{"English":"Find all symlinks in the \/myfiles directory tree","Bash":"find \/myfiles -type l"}
{"English":"get the count of all the files that have been accessed in the last 30 days","Bash":"find . -atime +30 -exec ls \\; | wc -l"}
{"English":"Find all files that have either a .php or a .js extension","Bash":"find -regextype posix-egrep -regex '.*(php|js)$'"}
{"English":"Find all directories under foldername directory and set their permission to 755","Bash":"sudo find foldername -type d -exec chmod 755 {} \";\""}
{"English":"find all the files in the current directory which have the inode number 31246 and remove them.","Bash":"find . -inum 31246 -exec rm [] ';'"}
{"English":"Read a line from standard input with prompt \"Enter your choice: \", arrow keys enabled, and \"yes\" as the default input, and save the response to variable \"choice\"","Bash":"read -e -i \"yes\" -p \"Enter your choice: \" choice"}
{"English":"Finds all user session in system, and shows sorted user names with number of sessions of each user.","Bash":"w | sed '1,2d' | cut -f1 -d' ' | sort | uniq -c"}
{"English":"Display the number of regular files under current directory tree","Bash":"find . -type f -print0 | tr -dc '\\0' | wc -c"}
{"English":"search for swap files (.swp files) in temp folder and remove them","Bash":"find \/tmp -name '*.swp' -exec rm {} \\;"}
{"English":"Copy all files in \"\/var\/spool\/mail\" to \"\/home\/username\/mail\" preserving the directory hierarchy and modification times","Bash":"find \/var\/spool\/mail -type f | cpio -pvdmB \/home\/username\/mail"}
{"English":"Change directory to the alphabetically last path under the current directory","Bash":"cd \"$(find . -print0 | sort -z | tr '\\0' '\\n' | tail -1)\""}
{"English":"Recursively compress every file in the current directory tree and keep the original file","Bash":"gzip -kr ."}
{"English":"Remount \"\/dev\/sda7\" partition as executable","Bash":"sudo mount -o remount -o exec \/dev\/sda7"}
{"English":"Prints information about active network interfaces in system.","Bash":"echo \"$(ifconfig)\""}
{"English":"Create archive \"backup1.tar\" of all subdirectories of the current directory","Bash":"find . -mindepth 1 -maxdepth 1 -type d | awk 'BEGIN {FS=\".\/\"}; {print $2}' | xargs -d '\\n' tar czf backup1.tar"}
{"English":"Find files recursively with extension \"ext\"","Bash":"find . -name \"*.ext\""}
{"English":"Get domain name of $ip and save it to the variable 'reverse'","Bash":"reverse=$(dig -x $ip +short)"}
{"English":"Print every 3 characters of standard input as a line","Bash":"fold -w3"}
{"English":"Create a table from '111 22 3\\n4 555 66\\n' with columns separated by a single space","Bash":"echo -en '111 22 3\\n4 555 66\\n' | column -t | sed 's\/ \\([0-9]\\)\/\\1\/g'"}
{"English":"Prints current directory name","Bash":"pwd | sed 's#.*\/##'"}
{"English":"Find all files\/directories under current directory and print them","Bash":"find . -print0 | xargs -I{} -0 echo {}"}
{"English":"Split \"\/usr\/bin\/firefox\" into 1000 files of about equal size","Bash":"split -n 1000 \/usr\/bin\/firefox"}
{"English":"Delete all directories under '.cache\/chromium\/Default\/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size","Bash":"find .cache\/chromium\/Default\/Cache\/ -mindepth 1 -type d -size +100M -delete"}
{"English":"find all the text files which are present in the current directory excludinghidden files.","Bash":"find . -type f \\( -iname \"*.txt\" ! -iname \".*\" \\)"}
{"English":"Find all $2 files in $1 path and search for the regex expanded by $3 in those files","Bash":"find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;"}
{"English":"Find all regular files starting from level 3 of directory tree ~\/container and move them to the current directory's parent","Bash":"find ~\/container  -mindepth 3 -type f -exec mv {} .. \\;"}
{"English":"Make directory \"saxon_docs\"","Bash":"mkdir saxon_docs"}
{"English":"display all the files in the current folder along with the modification time and display file names of the last 10 modified files","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \""}
{"English":"Find all files under the current directory whose pathnames do not end with \"Video\", ignoring the case","Bash":"find . -maxdepth 1 -not -iwholename '*Video'"}
{"English":"Find all files with 644 permission and change the permission to 664","Bash":"find . -type f -perm 644 -exec chmod 664 {} \\;"}
{"English":"Find all the files\/directories in the entire filesystem that do not belong to user 'wnj' and are not newer than the file\/directory 'ttt' by modification time","Bash":"find \/ \\! \\( -newer ttt -user wnj \\) -print"}
{"English":"Move all files matching patterns \"*.old\", \".old\", \".*.old\" from the current directory to directory \"..\/old\/\"","Bash":"find . ! -name . -prune -name '*.old' -exec mv {} ..\/old\/ \\;"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring paths .\/es* and .\/en*","Bash":"find . -mtime 0 | grep -v '^\\.\/en' | grep -v '^\\.\/es'"}
{"English":"Print a welcome message with the current user's user name","Bash":"echo \"Welcome $(whoami)!\""}
{"English":"Gets IP address of first listed active network interface in system.","Bash":"ifconfig  | grep 'inet addr:' | grep -v '127.0.0.1' | awk -F: '{print $2}' | awk '{print $1}' | head -1"}
{"English":"Remove all .tmp files in and below \/tmp","Bash":"find \/tmp -name \"*.tmp\" -print0 | xargs -0 rm"}
{"English":"Check if current system is running in 64-bit addressing.","Bash":"uname -m | grep '64'"}
{"English":"Rename recursively all files in the current directory tree that are called \"article.xml\" to \"001_article.xml\"","Bash":"find . -name \"article.xml\" -exec rename 's\/article\/001_article\/;' '{}' \\;"}
{"English":"Find file size in bytes","Bash":"du -b FILE"}
{"English":"find all regular\/normal files in the current folder","Bash":"find -type f"}
{"English":"Recursively finds all bzip2 compressed files in a current folder and decompresses them.","Bash":"find .\/ -iname \"*.bz2\" -exec bzip2 -d {} \\;"}
{"English":"sort based on size and display top ten largest normal\/regular files in the current folder","Bash":"find . -type f -exec ls -s {} \\; | sort -n -r | head -10"}
{"English":"search for all non empty regular\/normal files in the current folder and empty them ie., delete the content not the file","Bash":"find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp \/dev\/null {}"}
{"English":"Append \"<br\/>\" to the end of each line in \"1\\n2\\n3\"","Bash":"echo -e \"1\\n2\\n3\" | sed 's\/.*$\/&<br\\\/>\/'"}
{"English":"Find and remove multiple files such as *.mp3 or *.txt under current directory","Bash":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}
{"English":"Sort a file 'file' preserving only unique lines and change the file in-place","Bash":"sort -u -o file !#$"}
{"English":"find  files which full path name is foo\/bar under foo directory and print","Bash":"find foo -path foo\/bar -print"}
{"English":"List all files in entire file system owned by the user wnj and are newer than the file ttt","Bash":"find \/ -newer ttt -user wnj -print"}
{"English":"Dump the character output of \"echo 'hi'\"","Bash":"echo 'hi' | od -c"}
{"English":"Remove the .jpg files from the current directory whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"","Bash":"find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\" -exec rm -rf {} \\;"}
{"English":"List all files under current directory with white space safety in their paths","Bash":"find . -type f -print0 | xargs -0 ls"}
{"English":"Find the \"erl\" executable in $PATH and read the \"RELEASES\" file to extract the erlang release number","Bash":"awk -F, 'NR==1 {gsub(\/\"\/,\"\",$3);print $3}' \"$(dirname $(readlink -f $(which erl)))\/..\/releases\/RELEASES\""}
{"English":"search for the word \"put\" in all the files in the current folder which have the word \"bills\" in their name and display the matched line along with the filename.","Bash":"find . -name '*bills*' -exec grep -H \"put\" {} \\;"}
{"English":"Find all \"G*.html\" files modified more than 7 days ago in the current directory tree","Bash":"find . -mtime +7 -name \"G*.html\""}
{"English":"Delete all filename* files under \/dir directory","Bash":"find \/dir -name \"filename*\" -type f -exec rm {} \\;"}
{"English":"Find all *.java files under current directory","Bash":"find . -name \"*.java\""}
{"English":"Get a list of all hidden files from the current directory tree","Bash":"find . -type f -name '.*'"}
{"English":"Remove the \"123_\" prefix from all filenames of .txt files in current directory.","Bash":"find -name \"123*.txt\" -exec rename 's\/^123_\/\/' {} \";\""}
{"English":"Count all the lines of all files with names ending with 'php' in current directory recursively","Bash":"find -name '*php' | xargs cat | wc -l"}
{"English":"Create master SSH control socket \"my-ctrl-socket\" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via \"jm@sampledomani.com\"","Bash":"ssh -M -S my-ctrl-socket -fnNT -L 50000:localhost:3306 jm@sampledomain.com"}
{"English":"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word \"file\"","Bash":"find . \\( -type d -name aa -prune \\) -o \\( -type f -name 'file*' -print \\)"}
{"English":"Search the current directory recursively for MOV files","Bash":"find . -iname *.mov"}
{"English":"Find files\/directories named 'sar' under directory trees whose path starts with '\/u' or '\/b' or '\/s' or '\/o'","Bash":"find `ls -d \/[ubso]*` -name sar"}
{"English":"Copy \".\/export\" recursively to \"\/path\/to\/webroot\" preserving permissions","Bash":"rsync -pr .\/export \/path\/to\/webroot"}
{"English":"search for the file \"process.txt\" in the current directory","Bash":"find . -name \"process.txt\""}
{"English":"Look for *.jpg files","Bash":"find . -name \u201c*.jpg\u201d"}
{"English":"Find all files\/directories under current directory with a Depth-First search","Bash":"find dir -depth"}
{"English":"Print the calendar for February 1956","Bash":"cal 02 1956"}
{"English":"Change all directories under \".\/storage\/\" to owner \"apache\" and group \"laravel\"","Bash":"sudo find .\/storage\/ -type d -exec chown apache:laravel {} \\;"}
{"English":"search for the word foo in all the js files in the current folder","Bash":"grep -iH foo `find . -name \"*.js\"`"}
{"English":"Find files\/directories under '\/usr' directory tree that are newer than \/tmp\/stamp$$ by modification time","Bash":"find \/usr -newer \/tmp\/stamp$$"}
{"English":"Search the files from directory tree \"dirname\" for string \"foo\"","Bash":"find dirname  -print0 | xargs -0 grep foo"}
{"English":"Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.","Bash":"echo 'someletters_12345_moreleters.ext' | cut -d'_' -f 2"}
{"English":"change group of the file myfile to group friends","Bash":"chown :friends myfile"}
{"English":"Count the number of lines in \"myfile.txt\"","Bash":"cat myfile.txt | wc -l"}
{"English":"Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories","Bash":"find . -name \"*.png\" -prune -o -name \"*.gif\" -prune -o -name \"*.svn\" -prune -o -print0 | xargs -0 -I FILES grep -IR \"foo=\" FILES"}
{"English":"Print content of all files found regarding seach options '[whatever]'","Bash":"find [whatever] -print0 | xargs -0 cat"}
{"English":"Displays status of currently active network interfaces.","Bash":"ifconfig"}
{"English":"Search the current directory recursively for .m4a files","Bash":"find . -type f -iname *.m4a -print"}
{"English":"Replace each new line in \"INPUT.txt\" with \":\"","Bash":"paste -sd: INPUT.txt"}
{"English":"Add \"Line of text here\" on top of each *.py files under current directory","Bash":"find . -name \\*.py | xargs sed -i '1a Line of text here'"}
{"English":"Find files and directories in the \/tmp\/ tree that contain spaces in their names and replace those spaces with underscores","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename 's\/ \/_\/g' \"{}\" \\;"}
{"English":"find all the files in the file system which have read permission to the user and display the ten files","Bash":"find \/ -perm \/u=r | head"}
{"English":"Enables shell option 'cdable_vars'.","Bash":"shopt -s cdable_vars"}
{"English":"find all empty files in \/tmp directory .","Bash":"find \/tmp -type f -empty"}
{"English":"Compress \"my_large_file\" with gzip and split the result into files of size 1024 MiB with prefix \"myfile_split.gz_\"","Bash":"gzip -c my_large_file | split -b 1024MiB - myfile_split.gz_"}
{"English":"Print all user names and terminals of users who are logged in","Bash":"who | cut -d \" \" -f1,2"}
{"English":"display all the files in the current folder which have the word \"bills\" in their name","Bash":"find . -name '*bills*' -print"}
{"English":"Search the \/home\/test directory tree for directories and files called '.ssh'","Bash":"find \/home\/test -name '.ssh'"}
{"English":"find all files in the file system which have not been accessed in the last 2 days","Bash":"find \/ -atime +2"}
{"English":"Search for 'organic' in all files with '.html' extension under ~\/html directory","Bash":"find ~\/html\/ -name '*.html' -exec grep organic '{}' ';'"}
{"English":"Add line numbers to each non-blank line in \"file\" starting with number 1000001","Bash":"nl -v1000001 file"}
{"English":"Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter","Bash":"find . -name \"*.$1\" -exec rm {} \\;"}
{"English":"Print a line of 10 '#' characters","Bash":"seq  -f \"#\" -s '' 10"}
{"English":"Creates temporary folder, and saves current folder path   joined with created temporary folder path in 'tdir' variable.","Bash":"tdir=\"$(pwd)\/$(mktemp -d)\""}
{"English":"Search the current directory tree for regular files named `doc.txt' and print \"found\" for each of them","Bash":"find .\/ -type f -name doc.txt -printf \"found\\n\""}
{"English":"Find all files\/directories in entire file system with 644 permission","Bash":"find \/ -perm 644"}
{"English":"List current user's crontab.","Bash":"crontab -l"}
{"English":"Copies defined file to the target folder without overwriting existing files.","Bash":"cp -n"}
{"English":"Give all directories in the \/path\/to\/base\/dir tree read and execute privileges","Bash":"find \/path\/to\/base\/dir -type d -print0 | xargs -0 chmod 755"}
{"English":"Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in","Bash":"find `pwd` -name file.ext |xargs -l1 dirname"}
{"English":"Execute all commands in \"commands-to-execute-remotely.sh\" on server \"blah_server\"","Bash":"cat commands-to-execute-remotely.sh | ssh blah_server"}
{"English":"Look for \"filename\" in the current directory and below","Bash":"find -name filename"}
{"English":"Find all files under and below the current working directory with the word California in the file","Bash":"find . -type f -exec grep California {} \\; -print"}
{"English":"find all files and directories under the current directory and display the inode of each one, using printf","Bash":"find . -printf \"%i \\n\""}
{"English":"Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.","Bash":"find -iname example.com | grep -v beta"}
{"English":"Move all files and directories in the current directory to \"$TARGET\" excluding files matching \"$EXCLUDE\"","Bash":"ls -1 | grep -v ^$EXCLUDE | xargs -I{} mv {} $TARGET"}
{"English":"Find all files in the current directory tree except .html, ignoring .svn directories","Bash":"find . \\( -type d -name '.svn' -o -type f -name '*.html' \\) -prune -o -print0"}
{"English":"Print out every command that is executed in the script","Bash":"set -x"}
{"English":"Locate all *.txt files in the current directory tree","Bash":"find . -name \"*.txt\""}
{"English":"List all defined bash functions","Bash":"set | egrep '^[^[:space:]]+ [(][)][[:space:]]*$' | sed -r -e 's\/ [(][)][[:space:]]*$\/\/'"}
{"English":"display all text files in a folder","Bash":"find $target -type f -iname \"*.txt\""}
{"English":"Set the executable bit for all users on all regular files from directories arch\/x86\/usr\/sbin, arch\/x86\/usr\/X11R6\/bin, usr\/sbin\/","Bash":"find arch\/x86\/usr\/sbin arch\/x86\/usr\/X11R6\/bin usr\/sbin\/ -type f | xargs chmod a+x"}
{"English":"Find the \"param1\" string in regular files under and below \/var","Bash":"find \/var  -type f -exec grep \"param1\" {} \\; -print"}
{"English":"find all the files in the current directory which have been modified after a file","Bash":"find . -newer file"}
{"English":"find all the files in the folder \/work which belong to the user \"olivier\"","Bash":"find \/work -user olivier -print"}
{"English":"Print file type of the executable file of command \"file\"","Bash":"which file | file -f -"}
{"English":"Find all *fink* files\/directories in entire file system","Bash":"find \/ -name \"*fink*\" -print"}
{"English":"Find and remove multiple files such as *.mp3 or *.txt under current directory","Bash":"find . -type f -name \"*.txt\" -exec rm -f {} \\;"}
{"English":"Print and recursively remove the alphabetically last directory in the current directory","Bash":"find -mindepth 1 -maxdepth 1 -type d | cut -c 3- | sort -k1n | tail -n 1 | xargs -r echo rm -r"}
{"English":"Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.","Bash":"find \/ -fstype ext3 -name zsh -ls"}
{"English":"Find all strings matching pattern \"^${KEY}${DELIMITER}\" in $FILE file and print rest of string after $DELIMITER","Bash":"cat \"$FILE\" | grep \"^${KEY}${DELIMITER}\" | cut -f2- -d\"$DELIMITER\""}
{"English":"find all the links in the current folder which are broken","Bash":"find \/target -type l -xtype l"}
{"English":"search for all the files in the folder \/home which have sticky bit set and have the permissions 553","Bash":"find \/home -perm 1553"}
{"English":"Find all the files in the current directory recursively whose permissions are not 777","Bash":"find . -type f ! -perm 777 | head"}
{"English":"Find all * * regular files under current directory","Bash":"find .  -type f -name \"* *\""}
{"English":"Find all files name passwd in the root directory and all its sub-directories.","Bash":"find \/ -name passwd"}
{"English":"Print the list of regular files from the current directory tree that were modified less than 2 days ago","Bash":"find . -type f -mtime -2 -exec echo {} +"}
{"English":"Search everywhere for hidden file `.profile'","Bash":"find \/ -name .profile"}
{"English":"Recursively copies 'include\/gtest' to '\/usr\/include', preserving all attributes, and copying symlinks as symlinks, without following in source files.","Bash":"sudo cp -a include\/gtest \/usr\/include"}
{"English":"Log into \"ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com\" using identity file \"~\/path\/mykeypair.pem\"","Bash":"ssh -i ~\/path\/mykeypair.pem ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com"}
{"English":"create archive \"backup.tar.gz\" from \/path\/to\/catalog","Bash":"tar czfP backup.tar.gz \/path\/to\/catalog"}
{"English":"find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago.","Bash":"find . -mmin -720 -mmin +60 -type f -name \"t*\" -exec ls -l '{}' \\;"}
{"English":"find files having the extension \"bam\" in current directory","Bash":"find . -name \"*.bam\""}
{"English":"Find the passwd file under root and two levels down","Bash":"find \/ -maxdepth 3 -name passwd"}
{"English":"Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days","Bash":"find $HOME -iname '*.ogg' -atime +30"}
{"English":"Set the bash prompt to \"username@hostname\"","Bash":"PS1=\"`whoami`@`hostname | sed 's\/\\..*\/\/'`\""}
{"English":"Search the \/usr\/ directory tree for files newer than file \/tmp\/stamp","Bash":"find \/usr -newer \/tmp\/stamp"}
{"English":"Find all files\/directories with space in their names under  \/tmp\/ directory and rename them by replacing all spaces with _","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename 's\/ \/_\/g' \"{}\" \\;"}
{"English":"find all files in current folder which are exactly 300MB","Bash":"find . -size 300M"}
{"English":"Find all files\/directories that are newer than 'ttt' by modification time or owned by the user 'wnj' in the entire filesystem","Bash":"find \/ \\( -newer ttt -or -user wnj\t\\) -print"}
{"English":"find all the text files in  the current folder and do not search in somedir, bin directories","Bash":"find . \\( -name somedir -prune \\) , \\( -name bin -prune \\) -o \\( -name \"*.txt\" -print \\)"}
{"English":"Find all files in the current directory tree whose pathnames match pattern \".\/sr*sc\"","Bash":"find . -path \".\/sr*sc\""}
{"English":"Create a symbolic link relative to link location named \"$dest_dir\/$orig_name\" to \"$orig_dest\"","Bash":"ln -r -s \"$orig_dest\" \"$dest_dir\/$orig_name\""}
{"English":"find foo, Foo, FOo, FOO, etc.","Bash":"find . -iname foo"}
{"English":"delete all the core files in the folder \/prog which are bigger than 1KB","Bash":"find \/prog -type f -size +1000 -print -name core -exec rm {} \\;"}
{"English":"Find all files whose names end with \"~\" in the \/home\/peter directory tree, following symlinks, and delete them","Bash":"find -L \/home\/peter -name *~ -print0 |xargs -0 -r rm"}
{"English":"find all the files in the current folder which are readable","Bash":"find . -readable"}
{"English":"Prints sizes of all top-level folders in a current folder with human-readable format and descending order.","Bash":"du -h --max-depth=1 . | sort -n -r"}
{"English":"Finds all logged in users.","Bash":"w | awk '{print $1}'"}
{"English":"Find recursively all regular files in the current directory whose names contain \".\"","Bash":"find . -type f -a -name '*.*'"}
{"English":"Search for files bigger than 10M","Bash":"find ~ -size +10M"}
{"English":"Print out the contents of all *.txt files in the home directory","Bash":"find ~\/ -name '*.txt' -exec cat {} ;"}
{"English":"Recursively change the owner to \"user\" and group to \"www-data\" of \"yourprojectfoldername\"","Bash":"chown -R user:www-data yourprojectfoldername"}
{"English":"Search directory tree $DIR for *.txt files","Bash":"find $DIR -name \"*.txt\""}
{"English":"search files in current folder using name patterns","Bash":"find . -name \"$pattern\""}
{"English":"find all the files in the current directory and sub-directories whose status was changed after \/etc\/fstab was modified","Bash":"find -cnewer \/etc\/fstab"}
{"English":"Show the explanation of find's debugging options","Bash":"find -D help"}
{"English":"list *.pdf files under the \/home\/user\/Desktop directory.","Bash":"find \/home\/user\/Desktop -name '*.pdf'"}
{"English":"Display current system's kernel name, kernel release and version, and machine architecture","Bash":"uname -srvm"}
{"English":"Recursively removes all files like '.DS_Store' from current folder.","Bash":"rm `find .\/ -name '.DS_Store'` -rf"}
{"English":"search all the files in the current folder using regex","Bash":"find . -regex \".*\/my.*p.$\""}
{"English":"Search \/some\/directory for files that are owned by the user \"joebob\"","Bash":"find \/some\/directory -user joebob -print"}
{"English":"Extract and print hostname and protocol part from URL like \"http:\/\/www.suepearson.co.uk\/product\/174\/71\/3816\/\".","Bash":"echo \"http:\/\/www.suepearson.co.uk\/product\/174\/71\/3816\/\" | cut -d'\/' -f1-3"}
{"English":"Represent the current time as seconds since epoch and save it to variable 'TODAY'","Bash":"TODAY=$(date  -d \"$(date +%F)\" +%s)"}
{"English":"Search for regular file foo ignoring case","Bash":"find . -iname foo -type f"}
{"English":"Display 12345 backwards","Bash":"echo 12345 | rev"}
{"English":"split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix","Bash":"cat file1 file2 ... file40000 | split -n r\/1445 -d - outputprefix"}
{"English":"Mount \"\/path\/to\/device\" on \"\/path\/to\/mount\/location\" as a vfat filesystem and a loop back device","Bash":"mount \/path\/to\/device \/path\/to\/mount\/location -o loop -t vfat"}
{"English":"Overwrite a file 'my-existing-file' with random data to hide its content","Bash":"shred my-existing-file"}
{"English":"Find and delete all files with a used disk size of 0","Bash":"rm `du * | awk '$1 == \"0\" {print $2}'`"}
{"English":"Look for \"testfile.txt\" in the \"\/\" directory and 1 level below","Bash":"find \/ -maxdepth 2 -name testfile.txt"}
{"English":"Delete all 'restore.php' files in \/var\/www and 3 levels below","Bash":"find \/var\/www -maxdepth 4 -name 'restore.php' -exec rm -r {} \\;"}
{"English":"Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media","Bash":"find \/ -path \/media -prune -o -size +200000 -print"}
{"English":"search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file \"files.secure\".","Bash":"find \/ \\( -perm 2000 -o -perm 4000 \\) -print | diff - files.secure"}
{"English":"Move all files\/directories under current directory to ~\/play","Bash":"find . | xargs -I'{}' mv '{}' ~\/play\/"}
{"English":"Find all files that belongs to user root under \/ directory and show a few lines of output from the beginning","Bash":"find \/ -user root | head"}
{"English":"Find & calculate total number of caractor  in all .txt file from current directory","Bash":"find .  -type f  -name '*.txt' -exec wc -c {} \\; | awk '{total += $1} END{print total}'"}
{"English":"Print the real path of \"$F\" where each symbolic link component must exist","Bash":"echo \"$(dirname $(readlink -e $F))\/$(basename $F)\""}
{"English":"search for the file in the entire file system which has the words \"filename\" in its name","Bash":"find \/ -name \u201d*filename*\u201d"}
{"English":"Search \/var\/log for logs larger than 10 megabytes","Bash":"find \/var\/log -size +10M -ls"}
{"English":"Extract 8 bytes as an unsigned integer that is \"$o\" offset into \"$pkg\"","Bash":"set `od -j $o -N 8 -t u1 $pkg`"}
{"English":"find all the text files in the current folder and display the results pagewise","Bash":"find . -name \"*.txt\" -print | less"}
{"English":"Find all files in maximum 2 levels down the current directory","Bash":"find . -maxdepth 2  -type f"}
{"English":"display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits","Bash":"find . -regextype sed -regex '.*myfile[0-9]\\{1,2\\}'"}
{"English":"Recursively removes all files like \"(__pycache__|\\.pyc|\\.pyo$)\" in a current folder.","Bash":"find . | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf"}
{"English":"Delete all files\/directories older than 48 hours in \/path\/to\/files* paths","Bash":"find \/path\/to\/files* -mtime +2 -delete"}
{"English":"Merge colon-separated information from file1 and file2 where first field of both files matches","Bash":"join -t: <(sort file1) <(sort file2)"}
{"English":"Pushes current folder to the directory stack.","Bash":"pushd ."}
{"English":"Synchronize \"\/path\/to\/dir_b\" with files in \"\/path\/to\/dir_a\/\" if the files are newer","Bash":"rsync -rtuv \/path\/to\/dir_a\/* \/path\/to\/dir_b"}
{"English":"delete all the broken symbolic links from the folder \/usr\/ports\/packages","Bash":"find -L \/usr\/ports\/packages -type l -exec rm -- {} +"}
{"English":"List each unique character in \"file\" prefixed by number of occurrences and sorted from most frequent to least frequent","Bash":"grep -o . filename | sort | uniq -c | sort -nr"}
{"English":"delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command","Bash":"find \/tmp\/ -type f -mtime +1 -exec rm {} +"}
{"English":"Find a single file called tecmint.txt and remove it","Bash":"find . -type f -name \"tecmint.txt\" -exec rm -f {} \\;"}
{"English":"Print short TXT record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8","Bash":"dig TXT +short o-o.myaddr.l.google.com @8.8.8.8"}
{"English":"find all the png files in current folder which are present in the pattern list file \"search.txt\"","Bash":"find . -name '*.png' | grep -f <(sed s\/^\/[0-9]_[0-9]_[0-9]_\/ search.txt)"}
{"English":"display all scala files in the directory \"src\/main\"","Bash":"find . -type f -regex \".*src\/main.*\\.scala$\""}
{"English":"Count the toal number of lines in all .py files in current directory tree","Bash":"find . -name *.py -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}
{"English":"Non-recursively finds all '*.pdf' files in a current folder and removes them.","Bash":"find -maxdepth 1 -name '*.pdf' -exec rm \"{}\" \\;"}
{"English":"Recursively copy directories \"A\" and \"D\" to directory \"\/path\/to\/target\/directory\" on host \"anotherhost\", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).","Bash":"scp -r A D anotherhost:\/path\/to\/target\/directory"}
{"English":"Delete line 2 in numbered file \"file\" and renumber","Bash":"grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '"}
{"English":"List files in the current directory","Bash":"find . \\( ! -name . -prune \\)"}
{"English":"Remove all *~ files under current directory with confirmation prompt","Bash":"find . -name '*~' -ok rm {} \\;"}
{"English":"find all the files in the current folder which have been accessed in the last 24 hours","Bash":"find . -type f -atime 1"}
{"English":"Search all the regular files from the current directory tree for \"search string\"","Bash":"find . -type f -print -exec grep --color=auto --no-messages -nH \"search string\" \"{}\" \\;"}
{"English":"List all *.txt files\/directories under current directory ensuring white space safety","Bash":"find . -name '*.txt' -print0|xargs -0 -n 1 echo"}
{"English":"display all the files and directories with the name \"CVS\"  from \/usr\/src folder that are at least seven levels deep and do not descend onto the folders","Bash":"find \/usr\/src -name CVS -prune -o -depth +6 -print"}
{"English":"Prints total number of lines of all *.php files in a current folder and subfolders.","Bash":"cat `find . -name \"*.php\"` | wc -l"}
{"English":"Find all 'test' directories in the current directory tree and remove them","Bash":"find . -name test -type d -print0|xargs -0 rm -r --"}
{"English":"find all files in the file system whose size is bigger than 3GB","Bash":"find \/ -size +3G"}
{"English":"Print the compressed size, uncompressed size, compression ratio, and uncompressed filename of \"file.zip\"","Bash":"gunzip -l file.zip"}
{"English":"Recursively change the owner of all files in \"\/home\/test\" to \"test\"","Bash":"sudo chown -R test \/home\/test"}
{"English":"change the permissions of mp3 files in the folder \/var\/ftp\/mp3 to 644","Bash":"find \/var\/ftp\/mp3 -name '*.mp3' -type f -exec chmod 644 {} \\;"}
{"English":"Recursively copy directory \"\/path\/to\/data\/myappdata\" to \"user@host:\/remote\/path\/to\/data\/myappdata\"","Bash":"rsync -rvv \/path\/to\/data\/myappdata user@host:\/remote\/path\/to\/data\/myappdata"}
{"English":"Mount the directory \"\/etc\" on \"\/tmp\/sarnold\/mount_point\/\"","Bash":"mount -obind \/etc \/tmp\/sarnold\/mount_point\/"}
{"English":"Print the $N'th line from file by replacing commas (',') with newlines","Bash":"head -$N file | tail -1 | tr ',' '\\n'"}
{"English":"Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'","Bash":"FOO_NO_WHITESPACE=\"$(echo -e \"${FOO}\" | tr -d '[[:space:]]')\""}
{"English":"Find all the files which are modified 50 days back","Bash":"find \/ -mtime 50"}
{"English":"Prints long listing of directories \".\/my dir\" and \".\/anotherdir\" sorted from oldest to newest, with appended indicators.","Bash":"$ ls -Fltr \".\/my dir\" \".\/anotherdir\""}
{"English":"find all files in the file system having the name \"filename\"","Bash":"find \/ -iname \"filename\""}
{"English":"Save absolute path of the script filename in variable \"SCRIPT\"","Bash":"SCRIPT=\"$(readlink --canonicalize-existing \"$0\")\""}
{"English":"display all the regular files in current folder that belong to the user \"tom\"","Bash":"find . -type f -user tom"}
{"English":"display all the files in the current directory and do not search in the sub directories","Bash":"find . -maxdepth 0 -print"}
{"English":"Find files\/directories with exactly read,write and execute permission for all (owner, group and others) under \/path","Bash":"find \/path -perm 777"}
{"English":"change the group of all the files in the folder \/u\/netinst\/ to staff","Bash":"find \/u\/netinst -print | xargs chgrp staff"}
{"English":"Execute 'echo -e \"\\033[31mHello World\\033[0m\"' every without color support 2 seconds","Bash":"watch 'echo -e \"\\033[31mHello World\\033[0m\"'"}
{"English":"Counts lines in file $file and prints number only.","Bash":"wc -l $file | awk '{print $1}';"}
{"English":"Print summary of new\/missing files, and which files differ between folder1 and folder2, excluding those matching pattern \"node_modules\".","Bash":"diff -rqyl folder1 folder2 --exclude=node_modules"}
{"English":"Find all test.txt files\/directories under current directory","Bash":"find . -name test.txt"}
{"English":"search  in root  ( \/ ) directory downwards all files which have less than 2 links.","Bash":"find \/ -links -2 -print"}
{"English":"Find regular files in the current directory tree that have executable bits set for the user and group but not for the other","Bash":"find -L . -type f -perm -u=x,g=x  \\! -perm -o=x"}
{"English":"Add \"prefix_\" to every non-blank line in \"a.txt\"","Bash":"nl -s \"prefix_\" a.txt | cut -c7-"}
{"English":"Find all .java files  under current directory","Bash":"find . -print | grep '\\.java'"}
{"English":"Find all Subscription.java files\/directories under current directory and enter into the parent directory of the first one found","Bash":"cd $(find . -name Subscription.java | xargs dirname)"}
{"English":"Find all *.mp4 files under directory named 'working' and show the first one found","Bash":"find working -type f -name \"*.mp4\" | head -1"}
{"English":"Find all files that belongs to group 'root' under \/ directory and show a few lines of output from the beginning","Bash":"find \/ -group root | head"}
{"English":"Archive directory specified by variable \"i\" to \"\/iscsi\" preserving relative paths.","Bash":"rsync -avR $i \/iscsi;"}
{"English":"display all the files in the folder \"\/Users\/Me\/Desktop\" which belong to the user \"popo\" and which have the permission 777","Bash":"find \/Users\/Me\/Desktop -user popo -perm 777"}
{"English":"Find all files\/directories not with the name 'query_to_avoid' under current directory","Bash":"find -not -name \"query_to_avoid\""}
{"English":"Find the \"param1\" string in regular files under and below \/var","Bash":"find \/var -type f  | xargs grep \"param1\""}
{"English":"delete all the log files in the current folder","Bash":"find .\/ -name '*.log' | xargs rm"}
{"English":"Delete all the files found in the current directory tree whose names begin with \"heapdump\"","Bash":"find . -name heapdump*|xargs rm"}
{"English":"Print type of the file system containing path $dir.","Bash":"df -T $dir | tail -1 | awk '{print $2;}'"}
{"English":"List regular files in current directory with read, write and execute permission for all users and also show the permissions","Bash":"find . -type f  -perm 777 -exec ls -l {} \\;"}
{"English":"Copies 'src' to 'dest' preserving overwriting the existing files.","Bash":"cp -n src dest"}
{"English":"display all files in the folder \/usr\/src excluding those ending with \",v\"","Bash":"find \/usr\/src ! \\( -name '*,v' -o -name '.*,v' \\) '{}' \\; -print"}
{"English":"Find all directories under \/home\/username\/tmp and set their permission to 770","Bash":"find \/home\/username\/tmp -type d -exec chmod 770 {} +"}
{"English":"Search all files in the current directory tree, except GIT files, for \"string-to-search\"","Bash":"find . -name .git -prune -o -print | xargs grep \"string-to-search\""}
{"English":"Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'","Bash":"md5=`md5sum ${my_iso_file} | cut -b-32`"}
{"English":"Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.","Bash":"find $homeDirData -type d -mmin +10 -print0 | xargs -0 rmdir"}
{"English":"Find all directories containing 'linux' in their names under '\/root' directory tree","Bash":"find  \/root -type d -iname \"*linux*\""}
{"English":"Count the number of lines in all files in the xargstest\/ directory tree that match pattern 'file??'","Bash":"find xargstest\/ -name 'file??' | sort | xargs wc -l"}
{"English":"Recursively removes all files named '.svn' in a current folder, and prints messages on each action.","Bash":"find . -name .svn -exec rm -v {} \\;"}
{"English":"Find all regular files in minimum 1 level down the $dir directory","Bash":"find \"$dir\" -mindepth 1 -type f"}
{"English":"Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","Bash":"find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox\/Messages' ';' -exec sh -c 'mv {}.mbox\/*.emlx {}.mbox\/Messages' ';'"}
{"English":"find all the regular\/normal files in all the directories in the \/some\/dir and delete them","Bash":"find \/some\/dir -type d -exec find {} -type f -delete \\;"}
{"English":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" | xargs -r ls -lrt | awk '{print $9}'"}
{"English":"Print the last 10 commands in history","Bash":"history | tail -n 10"}
{"English":"Counts total number of only lines with alphanumeric symbols in all *.php files in a current folder and subfolders.","Bash":"find . -name '*.php' | xargs cat | awk '\/[a-zA-Z0-9]\/ {i++} END{print i}'"}
{"English":"Display the sizes and filepaths of all files\/directories sorted in ascending order of size","Bash":"du -a --max-depth=1 | sort -n"}
{"English":"Find regular files with permissions less than 111","Bash":"find -perm -111 -type f"}
{"English":"Enables shell option 'histappend'.","Bash":"shopt -s histappend"}
{"English":"Find only permission field & file name from long listing with find command .","Bash":"find -type f -iname \"*.txt\" -exec ls -lrt {} \\;|awk -F' ' '{print $1  $9}'"}
{"English":"find md5sum of string 'hi'","Bash":"echo -n hi | md5"}
{"English":"Display the last space-separated field of each line in file.txt","Bash":"rev file.txt | cut -d ' ' -f1 | rev"}
{"English":"Find all files under current directory and set their permission to 775","Bash":"find -type f | xargs chmod 775"}
{"English":"show the disk use of all the regular\/normal files in the current folder which are bigger than 50MB","Bash":"find . -type f -size +50000k | xargs du -sh"}
{"English":"Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2","Bash":"find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2"}
{"English":"Locate files not owned by any user or group","Bash":"find \/ -path \/proc -prune -o -nouser -o -nogroup"}
{"English":"Find all directories under \/var\/www\/some\/subset and set their SGID bit","Bash":"sudo find \/var\/www\/some\/subset -type d -print0 | xargs -0 chmod g+s"}
{"English":"Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names","Bash":"find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +"}
{"English":"Finds strings with text \"searched-string\" recursively in all files of current folder.","Bash":"grep -r \"searched-string\" ."}
{"English":"Pair side-by-side content of the 'file' and its side-mirrored content","Bash":"paste -d ' ' file <(rev file)"}
{"English":"Search the current directory tree for files whose name is \".note\", case insensitive","Bash":"find . -iname '.note'"}
{"English":"Rename \"blah1\" to \"blah1-new\"","Bash":"mv blah1 blah1-new"}
{"English":"Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip","Bash":"find . -maxdepth 1 -type f ! -name '*.gz' -exec gzip \"{}\" \\;"}
{"English":"List all files\/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to \/tmp\/files.txt","Bash":"find . -type f -fprintf \/tmp\/files.txt \"%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\\n\""}
{"English":"Search the \/path directory tree for files having permissions 777","Bash":"find \/path -perm ugo+rwx"}
{"English":"List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest","Bash":"du -a --max-depth=1 | sort -n"}
{"English":"Compose filepath as folder path where file $f is located, and lowercase filename of $f file, and save it in 'g' variable","Bash":"g=`dirname \"$f\"`\/`basename \"$f\" | tr '[A-Z]' '[a-z]'`"}
{"English":"Find the passwd file under the root directory and two levels down","Bash":"find \/ -maxdepth 3 -name passwd"}
{"English":"display all files in the entire file system excluding those that are in the transfer directory","Bash":"find \/ -name \/transfer -prune -o -print"}
{"English":"Search the \/path directory tree for files lacking the group writable bit","Bash":"find \/path ! -perm \/g+w"}
{"English":"Create a symbolic link in the current directory for each .jpg file under \"dir\"","Bash":"ln -s \"$(find dir -name '*.jpg')\" ."}
{"English":"Find all the files which are accessed in last 1 hour in entire file system","Bash":"find \/ -amin -60"}
{"English":"find all the mp3 files in the home folder which have been modified today","Bash":"find ~ -type f -mtime 0 -iname '*.mp3'"}
{"English":"find all files in the current folder that are not modified in the last 10 minutes","Bash":"find . -mmin +10 -print"}
{"English":"Move all lines starting with \"Ca\" to the beginning of the file","Bash":"nl -n rz ca | awk -vOFS=\"\\t\" '\/Ca\/{$1=\"#\"$2} {$1=$1}1' | sort -k1,1 | cut -f2-"}
{"English":"Send SIGTERM (signal 15) signal to all process whose username is \"username\" and whose command is \"your_command\".","Bash":"ps -o uid,pid,cmd|awk '{if($1==\"username\" && $3==\"your_command\") print $2}'|xargs kill -15"}
{"English":"Remove with prompting all files that have not been accessed in over 100 days","Bash":"find \/mydir -atime +100 -ok rm {} \\;"}
{"English":"Search all files in the current directory tree whose names end in \"1\" for string \"1\"","Bash":"find . -name \"*1\" -exec grep \"1\" {} +"}
{"English":"Run an awk program on every TXT file found in the current directory tree","Bash":"find . -name \"*.txt\" -print -exec awk '{if($9!=\"\"&&n<11){print;n++}}' {} \\;"}
{"English":"Find \".c\" and \".h\" files in the current directory tree and print line numbers and lines containing \"#include\"","Bash":"tree -if | grep \\\\.[ch]\\\\b | xargs -n 1 grep -nH \"#include\""}
{"English":"Find all .rb and .yml files in the \/some\/path directory tree and replace \"some_phrase\" with \"replacement_phrase\" in them","Bash":"find \/some\/path -name \"*rb\" -o -name \"*yml\" | xargs grep -sl \"some_phrase\" | xargs sed -i -e 's\/some_phrase\/replacement_phrase\/g'"}
{"English":"List all environment variables (name and value) whose name starts with GOROOT","Bash":"env | grep '^GOROOT'"}
{"English":"Find all directories under \/path\/to\/base\/dir and change their permission to 755","Bash":"find \/path\/to\/base\/dir -type d -exec chmod 755 {} +"}
{"English":"Count the number of files in the \/usr\/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'","Bash":"find \/usr\/ports\/ -name pkg-plist\\* -exec grep dirrmtry '{}' '+' | wc -l"}
{"English":"Saves location of file $1 in 'dir' variable.","Bash":"dir=$(dirname -- \"$1\")"}
{"English":"search in the current folder for all the regular\/normal file with the name \"test\"","Bash":"find . -type f -name test"}
{"English":"Print a list of regular files from directory tree sort_test\/ sorted with LC_COLLATE=C","Bash":"find sort_test\/ -type f | env -i LC_COLLATE=C sort"}
{"English":"Append \"& Bytes\" to the end of every line in \"$TEMPFILE\" and format the result as a table","Bash":"sed 's\/.*\/& Bytes\/' \"$TEMPFILE\" | column -t"}
{"English":"Replace spaces with underscores in the names of all files and directories in the \"\/tmp\" directory tree","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename \" \" \"_\" \"{}\" \";\""}
{"English":"Make directories for each unique file path in \"file1\"","Bash":"cat file1 |xargs -I {} dirname \"{}\"| sort -u | xargs -I{} mkdir -p \"{}\""}
{"English":"Recursively changes group ownership of everything in 'files' to 'apache_user'.","Bash":"chgrp -R apache_user files"}
{"English":"display all the \".c\" files which have been modified in the last 10 minutes","Bash":"find \/home\/david -amin -10 -name '*.c'"}
{"English":"Add variable TESTVAR with value \"bbb\" to a temporary environment, and search for TESTVAR in all variables and their values in the resulting environment.","Bash":"TESTVAR=bbb env | fgrep TESTVAR"}
{"English":"Add executable permission to \"rr.sh\"","Bash":"chmod +x rr.sh"}
{"English":"Merge each line of standard input into a single comma separated line","Bash":"paste -s -d\",\""}
{"English":"Split \"your_file\" into files with at most 9 lines each","Bash":"split -l9 your_file"}
{"English":"Filters only directories from long file listing of the current directory","Bash":"ls -l --color=always \"$@\" | grep --color=never '^d'"}
{"English":"Find all *.plist files\/directories under current directory","Bash":"find -name \\*.plist"}
{"English":"Executes 'sleep 10' in a subshell created by a pipeline of built-in function 'true'.","Bash":"true | sleep 10"}
{"English":"Find all files\/directories under current directory tree that contain 'pattern' in their names","Bash":"find -name \"*pattern*\""}
{"English":"Find all files under \/home\/username\/public_html\/sites\/all\/modules and set their permission to 640","Bash":"find \/home\/username\/public_html\/sites\/all\/modules -type f -exec chmod 640 {} +"}
{"English":"Find files that are orphaned","Bash":"find -nouser"}
{"English":"Mark variables and function which are modified or created for export to the environment of subsequent commands","Bash":"set -a"}
{"English":"Sort file pointed by variable $filename, removing duplicate entries but ignoring the last N characters of each line.","Bash":"rev $filename | sort | uniq -f=N | rev"}
{"English":"Unzip all \".gz\" files in the current directory tree excluding files containing \"dvportgroups\", \"nsanity\", \"vcsupport\", \"viclient\", and \"vsantraces\"","Bash":"find . -name '*.gz' ! -name '*dvportgroups*' ! -name '*nsanity*' ! -name '*vcsupport*' ! -name '*viclient*' ! -name 'vsantraces*' -exec gunzip -vf {} \\;"}
{"English":"Compare \"current.log\" and \"previous.log\" line by line and print lines containing regex pattern \">\\|<\"","Bash":"diff current.log previous.log | grep \">\\|<\" #comparring users lists"}
{"English":"Prints process tree of the current process with parent processes.","Bash":"pstree -s $$"}
{"English":"Rename all \"thumbs\" directories to \"thumb\" in the current directory and 1 level below","Bash":"find . -maxdepth 2 -type d | sed 'p;s\/thumbs\/thumb\/' | xargs -n2 mv"}
{"English":"Changes group ownership of \/sys\/class\/gpio\/export and \/sys\/class\/gpio\/unexport to 'gpio'.","Bash":"sudo chgrp gpio \/sys\/class\/gpio\/export \/sys\/class\/gpio\/unexport"}
{"English":"Find all directories matching the regex '.texturedata' in their names under '\/path\/to\/look\/in\/' directory tree","Bash":"find \/path\/to\/look\/in\/ -type d | grep .texturedata"}
{"English":"Modify interval to 0.1 seconds for the watch command","Bash":"watch -n 0.1"}
{"English":"search for a word in all c files in the current folder","Bash":"find . -name '*.c' | xargs grep 'stdlib.h'"}
{"English":"Compress from standard input and print the byte count preceded with 'gzip.'","Bash":"echo gzip. $( gzip | wc -c )"}
{"English":"find files in home directory that accessed more than 100 days ago","Bash":"find ~ -atime 100"}
{"English":"Find all files\/directories named 'top' (case insensitive) in the entire filesystem","Bash":"find \/ -iname top"}
{"English":"find files in \/dir\/path\/look\/up directory that names are dir-name-here","Bash":"find \/dir\/path\/look\/up -name \"dir-name-here\" -print"}
{"English":"Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.","Bash":"find . -perm 664"}
{"English":"Update the history file in the current session","Bash":"history -w"}
{"English":"Delete all files\/directories named 'sample' (case insensitive) under '\/home\/user\/Series\/' directory tree as super user","Bash":"sudo find \/home\/user\/Series\/ -iname sample -print0 | sudo xargs -0 rm -r"}
{"English":"Find all files on the system that are world writeable","Bash":"find \/ -perm -0002"}
{"English":"Search the current directory tree for symbolic links to files matching pattern '*test*'","Bash":"find . -lname '*test*'"}
{"English":"Find the \"*.foo\" files in the current directory tree that are not under \".snapshot\" directories","Bash":"find . -name .snapshot -prune -o -name '*.foo' -print"}
{"English":"find all the html files that are acces in the last 24 hours in the current folder","Bash":"find . -mtime 1 -name \"*.html\" -print"}
{"English":"display all non empty directories in current folder","Bash":"find . \\! -empty -type d"}
{"English":"find all the files in the home folder that are modified day before yesterday","Bash":"find $HOME -mtime -2 -mtime +1"}
{"English":"Create a symbolic link in the current directory for each file .dbf under the directories matching \"\/home\/michael\/foxpro\/mount\/A[1FV]\/[12][0-9][0-9][0-9]\"","Bash":"find \/home\/michael\/foxpro\/mount\/A[1FV]\/[12][0-9][0-9][0-9] -name '*.dbf' -type f -exec ln -s {} \\;"}
{"English":"Print all lines of \"seq 10\" except the last 3","Bash":"seq 10 | tac | sed '1,3d' | tac"}
{"English":"Find all files\/directories with '.log' extension that belong to the group 'adm' under '\/var\/log' directory tree","Bash":"find \/var\/log -group adm -name \"*.log\""}
{"English":"Find and delete the file with inode number 1316256","Bash":"find .\/ -inum 1316256 -delete"}
{"English":"Search for all files not newer than file \/tmp\/t","Bash":"find \/ -not -newer \/tmp\/t"}
{"English":"Save system information appended with the current date in 'filename' variable","Bash":"filename=\"$(uname -a)$(date)\""}
{"English":"Archive \"src\" to \"dst\" updating files existing in \"dst\"","Bash":"rsync -a -v src dst"}
{"English":"find all the files ending with \"clj\" in the current folder and search for a pattern","Bash":"find . -name '*.clj' -exec grep -r resources {} \\;"}
{"English":"Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '\/home\/www' directory tree","Bash":"find \/home\/www -type f -print0 | xargs -0 sed -i 's\/subdomainA.example.com\/subdomainB.example.com\/g'"}
{"English":"Find all *fstab* files under and below \/etc","Bash":"find \/etc -name *fstab*"}
{"English":"Read a line from standard input into variable \"PASSWORD\"","Bash":"read PASSWORD"}
{"English":"Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.","Bash":"source <(wget -q -O - \"http:\/\/www.modulesgarden.com\/manage\/dl.php?type=d&id=676\")"}
{"English":"Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name","Bash":"find . -type f ! \\( -name \"*gz\" -o -name \"*tmp\" -o -name \"*xftp\" \\) -exec gzip -n '{}' \\;"}
{"English":"Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name","Bash":"find . -type d | sed -e 's\/\\.\\\/\/\/g' | awk '{print $1, $1}' | xargs chgrp"}
{"English":"find regular files which modification time is  7 days ago","Bash":"find . -mtime -7 -type f"}
{"English":"remove all the files in the folder \"myfiiles\" which have not been accessed in the last 30*24 hours","Bash":"find \/myfiles -atime +30 -exec rm {} ;"}
{"English":"Find all directories in \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* that are older than 90 days and print only unique paths","Bash":"find \/var\/www\/html\/zip\/data -type d -mtime +90 | uniq"}
{"English":"Remove the last file extension from standard input","Bash":"sed 's\/^\/.\/' | rev | cut -d. -f2- | rev | cut -c2-"}
{"English":"change the owner of all the regular\/normal files which belong to the root user to \"tom\" in the current folder","Bash":"find .-type f -user root -exec chown tom {} \\;"}
{"English":"Gets MAC address of en0 network interface.","Bash":"ifconfig en0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}
{"English":"display a long listing of all files in the entire file system which are bigger than 1MB","Bash":"find \/ -size +1000k -exec ls -l {} \\; -print"}
{"English":"List the directory contents of the current working directory","Bash":"echo $(ls $(pwd))"}
{"English":"Find all files and directories on the system whose name is `filedir'","Bash":"find \/ -name filedir"}
{"English":"Search for 'invalidTemplateName' in all regular files in directories\/files taken from the glob pattern '.\/online_admin\/*\/UTF-8\/*' and show the matched lines with the filenames","Bash":"find .\/online_admin\/*\/UTF-8\/* -type f -exec grep -H \"invalidTemplateName\" {} \\;"}
{"English":"Recursively change the group of all files in \"\/var\/lib\/php\/session\" to \"lighttpd\"","Bash":"chown -R :lighttpd \/var\/lib\/php\/session"}
{"English":"Save the first three octets of the host name's IP address to variable \"subnet\"","Bash":"subnet=$(hostname -i | cut -d. -f1,2,3)"}
{"English":"Find recursively all files changed within the last 5 minutes starting from directory b","Bash":"find b -cmin -5"}
{"English":"Write out the entire directory hierarchy from the current directory","Bash":"find . -print"}
{"English":"Search for \"pattern\" in \"file\" and separate each line with '\" \"'","Bash":"cat file | grep pattern | paste -sd'~' | sed -e 's\/~\/\" \"\/g'"}
{"English":"find all files in current folder using name patterns","Bash":"find . -iregex \".*packet.*\""}
{"English":"Delete all files\/directories in minimum 2 levels down the root directory","Bash":"find root -mindepth 2 -delete"}
{"English":"Make directory \"\/etc\/cron.15sec\"","Bash":"mkdir \/etc\/cron.15sec"}
{"English":"find all html or cgi files in current folder","Bash":"find .\/ -type f -iregex \".*\\.html$\" -or -iregex \".*\\.cgi$\""}
{"English":"Archive \"\/var\/www\/test\/\" to \"\/var\/www\/test\" on host \"231.210.24.48\" as user \"ubuntu\" via ssh using identity file \"\/home\/test\/pkey_new.pem\"","Bash":"rsync -rave \"ssh -i \/home\/test\/pkey_new.pem\" \/var\/www\/test\/ ubuntu@231.210.24.48:\/var\/www\/test"}
{"English":"Search the path given as the $absolute_dir_path variable for regular files","Bash":"find \"$absolute_dir_path\" -type f -print0"}
{"English":"File 'mydatafile' has a number on each line, display the sum of these numbers rounded to lowest integer.","Bash":"awk '{s+=$1} END {printf \"%.0f\", s}' mydatafile"}
{"English":"Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.","Bash":"cd -P xyz"}
{"English":"Create a symbolic link in the current directory for each file under the directories matching \"..\/[12][0-9][0-9]\"","Bash":"find ..\/[12][0-9][0-9][0-9] -type f -exec ln -s {} \\;"}
{"English":"Delete all regular files with inode number 314167125 under current directory tree","Bash":"find . -type f -inum 314167125 -delete"}
{"English":"Save only the digits in \"$filename\" to variable \"number\"","Bash":"number=$(echo $filename | tr -cd '[[:digit:]]')"}
{"English":"Shows only process trees rooted at processes of this user.","Bash":"pstree user"}
{"English":"List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to '.\/'","Bash":"find ${CURR_DIR} -type f \\( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \\) -printf \".\/%P\\n\""}
{"English":"Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output.","Bash":"ping -c 5 -q 12.34.56.78 | tail -n 2"}
{"English":"Search \/usr\/bin for regular files that were last accessed more than 100 days ago","Bash":"find \/usr\/bin -type f -atime +100"}
{"English":"Search for 'example' in all regular files under current directory tree","Bash":"find . -type f -print | xargs grep \"example\""}
{"English":"find all files that were modified between 90 to 100 days ago in home directory and delete then .","Bash":"find \/home -type f -mtime +90 -mtime -100  -exec rm  {} \\;"}
{"English":"Executes 'cd \/' in a subshell created by a pipeline of built-in function 'true'.","Bash":"true | cd \/"}
{"English":"Copies file 'file.dat' to each top-level directory in the current directory.","Bash":"ls | xargs -n 1 cp -i file.dat"}
{"English":"find all the directories in the home folder do not search in sub directories","Bash":"find \/home -maxdepth 1 -type d"}
{"English":"List the files in the \/etc directory tree containing text \"old1.old2.co.com\"","Bash":"find \/etc -type f -print | xargs grep -il old1\\.old2\\.co\\.com"}
{"English":"Disables shell option 'compat31'.","Bash":"shopt -u compat31"}
{"English":"Find all the files that are not named \"MyCProgram.c\" in the current directory only and without regards to case.","Bash":"find -maxdepth 1 -not -iname \"MyCProgram.c\""}
{"English":"Counts lines in file 'filename' ignoring empty lines and lines with spaces only.","Bash":"cat 'filename' | grep '[^ ]' | wc -l"}
{"English":"View history using \"vim\"","Bash":"history | vim -"}
{"English":"delete all instances of the file \"bad\" if its size is 0 bytes","Bash":"find . -name bad -empty -delete"}
{"English":"Print a single line of numbers from \"001\" to \"010\"","Bash":"yes | head -n 10 | awk '{printf( \"%03d \", NR )}'"}
{"English":"print all filenames of files under current dir containing 'foo', case-insensitive","Bash":"find . -type f -exec grep -il 'foo' {} \\;"}
{"English":"Make directory \"tata\"","Bash":"mkdir tata"}
{"English":"Find all files\/directories in level 2 down the current directory","Bash":"find -mindepth 2 -maxdepth 2"}
{"English":"delete all the empty in the current folder and all its sub directories","Bash":"find . -depth -type d -empty -exec rmdir {} \\;"}
{"English":"Find files in the \/home\/user directory tree changed exactly 10 minutes ago","Bash":"find \/home\/user\/ -cmin 10 -print"}
{"English":"Saves list of currently logged in users in 'userlist' variable.","Bash":"userlist=$(w|awk 'BEGIN{ORS=\",\"}NR>2{print $1}'|sed 's\/,$\/\/' )"}
{"English":"Search the home directory tree for files modified less than a day ago","Bash":"find $HOME -mtime -1"}
{"English":"display list of all the files in the \/tmp folder","Bash":"find \/tmp\/ -exec ls \"{}\" +"}
{"English":"Recursively and forcibly removes $TMP folder with all content.","Bash":"rm -fR \"${TMP}\/\";"}
{"English":"Perform case insensitive search for *.gif files\/directories under downloads directory","Bash":"find downloads  -iname \"*.gif\""}
{"English":"Pops the top directory of dirs stack and changes to it.","Bash":"popd"}
{"English":"Print common characters in variable \"$a\" and \"$b\"","Bash":"comm -12 <(echo $a|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}') <(echo $b|awk -F\"\\0\" '{for (i=1; i<=NF; i++) print $i}')|tr -d '\\n'"}
{"English":"Copy all files that match 'FooBar' in their paths under current directory tree to the '~\/foo\/bar' directory","Bash":"find . | grep \"FooBar\" | tr \\\\n \\\\0 | xargs -0 -I{} cp \"{}\" ~\/foo\/bar"}
{"English":"find all the files in the current folder which are writable","Bash":"find . -writable"}
{"English":"find all the files from root folder which have nogroup or noname and dispaly their details.","Bash":"find \/ \\( -nogroup -o -noname \\) -ls"}
{"English":"Find recursively all Emacs backup files in the current directory and remove them","Bash":"find . -name '*~' | xargs rm"}
{"English":"find all files in the current directory which are bigger than 4MB","Bash":"find . -size +4096k -print"}
{"English":"List recursively all files and directories in \/var\/www and pass the result to the `more' pager","Bash":"find \/var\/www | more"}
{"English":"Print the first line of each file under the home directory","Bash":"find $HOME\/. -name *.txt -exec head -n 1 -v {} \\;"}
{"English":"display all directories in the entire file system","Bash":"find \/ -type d -print"}
{"English":"Delete all files under root whose status were changed more than 30 minutes ago","Bash":"find root -type -f -cmin +30 -delete"}
{"English":"find all files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime -1 -print"}
{"English":"Find all $tofind* files\/directories under $parentdir","Bash":"find $parentdir -name $tofind*"}
{"English":"find all text files in current folder and display all files that have the alphabet a in their name","Bash":"find . -name \".txt\" | grep a"}
{"English":"List in detail the regular files from the \/somelocation\/log_output directory tree that were last changed more than 40 days ago","Bash":"find \/somelocation\/log_output -type f -ctime +40 -exec ls -l {} \\;"}
{"English":"delete all the regular files in the temp folder which have not been modified in the last 24 hours","Bash":"find \/tmp\/ -type f -mtime +1 -delete"}
{"English":"Calculate the md5 sum of all files in \"\/your\/dir\" including content and filenames","Bash":"grep -ar -e . \/your\/dir | md5sum | cut -c-32"}
{"English":"Print all files\/directories with their sizes under $WHATEVER directory tree","Bash":"find $WHATEVER -printf \"%s %p\\n\""}
{"English":"Find all file.ext files\/directories under current directory with \"FooBar\" in their paths and copy them into the current directory","Bash":"find . -name \"file.ext\"| grep \"FooBar\" | xargs -i cp -p \"{}\" ."}
{"English":"Find all *.txt and *.json files in current directory","Bash":"find . -type f \\( -name \"*.txt\" -o -name \"*.json\" \\)"}
{"English":"Execute \"date\" every second","Bash":"watch -n 1 date"}
{"English":"Split \"file\" into 10 files of about equal size without splitting lines","Bash":"split -n l\/10 file"}
{"English":"Search \"file1\" for lines matching regex patterns listed in \"file2\" and list the unique results (sorted alphabetically)","Bash":"grep -f file2 file1 | sort | uniq"}
{"English":"Sort \"file1.txt\" and output the result to \"file1.txt\"","Bash":"sort -o file1.txt file1.txt"}
{"English":"Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'","Bash":"echo $MOUNT_OPTS | tr , \\\\\\n | grep '^acl$' -q"}
{"English":"Copy file header.shtml to directories dir1, dir2, dir3, and dir4","Bash":"find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}
{"English":"Find all the .mp3 files in the music folder recursively and pass them to the ls command","Bash":"find .\/music -name \"*.mp3\" -print0 | xargs -0 ls"}
{"English":"search for the regular\/normal file 'myfile' in the folder \/root excluding those that are present in the \"work\" directory","Bash":"find \/root\/ -name 'work' -prune -o -name myfile -type f -print"}
{"English":"Find all *.foo files under current directory and print their contents","Bash":"find . -name '*.foo' -exec cat {} \\;"}
{"English":"Set variable GZIP to the full path of command \"gzip\"","Bash":"GZIP=\"$(which gzip)\""}
{"English":"Find all *.java files under current directory containing the string 'String'","Bash":"find . -name \"*.java\" -exec grep \"String\" {} \\+"}
{"English":"Removes all top-level *.pdf files in a current folder.","Bash":"rm -f *.pdf"}
{"English":"Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones","Bash":"comm abc def"}
{"English":"List the last modified file under \"$DIR\"","Bash":"find $DIR -type f -printf \"%T@ %p\\n\" | sort -n | cut -d' ' -f 2 | tail -n 1"}
{"English":"Find all empty files in \/tmp","Bash":"find \/tmp -type f -empty"}
{"English":"Ping the broadcast address \"10.10.0.255\"","Bash":"ping -b 10.10.0.255"}
{"English":"Find the largest files in a particular location","Bash":"find \/home\/tecmint\/Downloads\/ -type f -exec du -Sh {} + | sort -rh | head -n 5"}
{"English":"Print unique lines of sorted file \"A.txt\" compared to sorted file \"B.txt\"","Bash":"comm -23 <(sort -u A.txt) <(sort B.txt)"}
{"English":"Remove gitlab.site.org from root's known hosts file.","Bash":"ssh-keygen -f \"\/root\/.ssh\/known_hosts\" -R gitlab.site.org"}
{"English":"Print the current date in '%H:%M:%S' format followed by the string ': done waiting. both jobs terminated on their own or via timeout; resuming script'","Bash":"echo \"$(date +%H:%M:%S): done waiting. both jobs terminated on their own or via timeout; resuming script\""}
{"English":"Search the current directory tree for directories","Bash":"find \"$PWD\" -type d"}
{"English":"Remove each unique item listed on standard input and do nothing if empty","Bash":"sort | uniq -u | xargs -r rm"}
{"English":"Print the line number of each matching \"<phrase>\" in \"<filename>\"","Bash":"nl -b a \"<filename>\" | grep \"<phrase>\" | awk '{ print $1 }'"}
{"English":"display all the files in the current folder which have been modified in the last 5*24 hours","Bash":"find . -mtime -5"}
{"English":"remote copy all text files from one location to another","Bash":"find .  -name '*.txt' -exec rsync -R {} path\/to\/dext \\;"}
{"English":"Find all directories by the name `httpdocs' on the system","Bash":"find \/ -type d -name httpdocs"}
{"English":"display all the files in the current folder which have been modified in the last 2 days","Bash":"find . -mtime -2"}
{"English":"find all the directories in the current folder","Bash":"find -type d"}
{"English":"find all the directories in the current folder which have been modified in 24 hours and move them to the folder  \/path\/to\/target-dir","Bash":"find . -type d -mtime 0 -exec mv {} \/path\/to\/target-dir \\;"}
{"English":"List all files under the current working directory last modified less than a day ago","Bash":"find `pwd` -mtime -1 -type f -print"}
{"English":"Search \/dev\/shm and \/tmp for regular files not changed in two weeks","Bash":"find \/dev\/shm \/tmp -type f -ctime +14"}
{"English":"Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names","Bash":"find . -mindepth 1 -name '.*' -prune -o \\( -type d -print \\)"}
{"English":"Find all regular .mp3 files larger than 10M and delete them","Bash":"find \/ -type f -name *.mp3 -size +10M -exec rm {} \\;"}
{"English":"find all the symbolic links in the current folder and check the file type and display the output of those files which are broken","Bash":"find .\/ -type l -exec file {} \\; |grep broken"}
{"English":"Find all files under \/mnt\/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter","Bash":"find \/mnt\/naspath -name .snapshot -prune -o \\( -type f -mtime 0 -print0 \\)"}
{"English":"Find all files in the file system with the SUID bit","Bash":"find \/ -perm -u+s -print"}
{"English":"Lists content of the current folder.","Bash":"$ ls"}
{"English":"Delete interactively all the files\/directories with inode number 782263 under current directory tree","Bash":"find . -inum 782263 -exec rm -i {} \\;"}
{"English":"display all the regular\/normal files in the \/root folder which are bigger than 500MB","Bash":"find \/root -type f -size +500M -printf \"The %p file is greater than 500MB\\n\""}
{"English":"Print characters in variable \"$a\" that exist in variable \"$b\"","Bash":"echo \"$(comm -12 <(echo \"$a\" | fold -w1 | sort | uniq) <(echo \"$b\" | fold -w1 | sort | uniq) | tr -d '\\n')\""}
{"English":"Save the md5 sum hash of \"$my_iso_file\" to variable \"md5\"","Bash":"md5=$(md5sum \"$my_iso_file\" | cut -d ' ' -f 1)"}
{"English":"Find and remove multiple files such as *.mp3 or *.txt","Bash":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}
{"English":"Find all files under directory tree \/path\/to\/dir whose permissions are not 644","Bash":"find \/path\/to\/dir ! -perm 0644"}
{"English":"Print a colon-separated list of all directories from the ~\/code directory tree, except hidden ones and those below them","Bash":"find ~\/code -name '.*' -prune -o -type f -a -perm \/u+x -printf ':%h\\n' | sort | uniq | tr -d '\\n'"}
{"English":"Dump \"\/dev\/ttySomething\" in both hex and text","Bash":"od -t x1 -t a \/dev\/ttySomething"}
{"English":"Find all *.gz files\/directories under asia and emea directory","Bash":"find asia emea -name \\*.gz"}
{"English":"find all the files that have not been modified in the last 2 days","Bash":"find -mtime +2"}
{"English":"Verbosely compresses all files on second and third depth level keeping original files in place.","Bash":"bzip2 -kv *\/*"}
{"English":"Perform a default Plesk configuration","Bash":"find \/var\/www\/vhosts\/*\/httpdocs -type f -iwholename \u201c*\/wp-includes\/version.php\u201d -exec grep -H \u201c\\$wp_version =\u201d {} \\;"}
{"English":"Print the output of history without line numbers","Bash":"history | cut -d' ' -f4- | sed 's\/^ \\(.*$\\)\/\\1\/g'"}
{"English":"Print \"*Checking Partition Permission* Hostname=$(hostname) LastChecked=\" followed by the current date","Bash":"echo -n *Checking Partition Permission* Hostname=$(hostname) LastChecked=$(date)"}
{"English":"Print the last mounted drive","Bash":"mount | tail -1 | sed 's\/ on .* ([^)]*)$\/\/'"}
{"English":"create a hard link as directory named \"new_hard_link\" to the directory \"existing_dir\" as root","Bash":"sudo  ln  -d  existing_dir  new_hard_link"}
{"English":"find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end","Bash":"find . -wholename \\*.mbox | awk '{new=$0; gsub(\"\\.mbox$\", \"\", new) ; system(\"mv \\\"\" $0 \"\\\" \\\"\" new \"\\\"\") }'"}
{"English":"Find all files\/directories under current directory with null character as the delimiter and then replace the null characters with :","Bash":"find -print0 | tr \"\\0\" \":\""}
{"English":"Find *.o files with permissions 664 in the current directory tree","Bash":"find . -name *.o -perm 664 -print"}
{"English":"Find all 'test' directories in the current directory tree","Bash":"find -type d -a -name test"}
{"English":"count the total number of lines that are present in all the normal\/regular files","Bash":"find . -type f -exec wc -l {} \\; | awk '{total += $1} END{print total}'"}
{"English":"Remove all regular files with extensions php, css, ini, txt from directory tree \/old\/WordPress\/","Bash":"find \/old\/WordPress\/ -type f -regex \".*\\.\\(php\\|css\\|ini\\|txt\\)\" -exec rm {} \\;"}
{"English":"display all instances of \"foo.cpp\" file in the current folder which are not in the sub directory tree \".svn\"","Bash":"find . -name 'foo.cpp' '!' -path '.svn'"}
{"English":"change the permission of all the normal\/regular files from 777 to 755 in the folder \"\/home\/user\/demo\"","Bash":"find \/home\/user\/demo -type f -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"Show find's version","Bash":"find --version"}
{"English":"display all shell scripts in current folder","Bash":"find . -name \"*.sh\""}
{"English":"List all directories in maximum 1 level down the current directory","Bash":"find . -type d -maxdepth 1 -exec ls -dlrt {} \\;"}
{"English":"display all the files in the home folder which end with \".xbm\"","Bash":"find ~ -name '*.xbm'"}
{"English":"Enables shell option 'lithist'.","Bash":"shopt -s lithist"}
{"English":"Add variable 'v' with value '5' to a temporary environment, list this environment using 'less' to interactively view it.","Bash":"v=5 env|less"}
{"English":"Find all files\/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths","Bash":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'"}
{"English":"Force create a symbolic link as a file named \"\/usr\/lib\/jvm\/default-java\" to \"$default_java_dir\" with verbose output","Bash":"sudo ln -sTfv \"$default_java_dir\" \"\/usr\/lib\/jvm\/default-java\""}
{"English":"Counts lines in each of *.php files in a current folder and subfolders and prints total count.","Bash":"find . -name '*.php' | awk '{gsub(\" \",\"\\\\ \", $0);print $0}' |xargs wc -l"}
{"English":"Print source of the file system containing current working directory.","Bash":"df . | tail -1 | awk '{print $1}'"}
{"English":"Remove all files in and below the current directory whose names begin with \"not\"","Bash":"find . -name not\\* | xargs -d '\\n' rm"}
{"English":"Search directory \/path\/to\/check\/ for regular files","Bash":"find \/path\/to\/check\/* -maxdepth 0 -type f"}
{"English":"Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20","Bash":"fold -b -w 20 | cut --output-delimiter $'\\t' -b 1-3,4-10,11-20"}
{"English":"Find directories in \/proc and show only those that doesn't match the regex '\/proc\/[0-9]*($|\/)'","Bash":"find \/proc -type d | egrep -v '\/proc\/[0-9]*($|\/)' | less"}
{"English":"Opens new tmux session.","Bash":"tmux"}
{"English":"display all the files in the current folder and traverse from the sub directories","Bash":"find . -type d -depth"}
{"English":"Prints day of first Tuesday in a month.","Bash":"cal | awk 'NR>2 && NF>4 {printf \"%02d\\n\",$(NF-4);exit}'"}
{"English":"Recursively list all files and directories in \"coreutils-8.9\" with \"DIR: \" prepending directory names","Bash":"tree -F coreutils-8.9 | sed -r 's|\u2500\u2500 (.*)\/$|\u2500\u2500 DIR: \\1|'"}
{"English":"Find all files named \"file.ext\" within the current folder and print the path where each one is located","Bash":"find `pwd` -name \"file.ext\" -exec dirname {} \\;"}
{"English":"Find regular files which have 644 permission","Bash":"find . -perm 644 -type f -exec ls -l {} \\;"}
{"English":"Print the content of file","Bash":"sed 's\/\\n\/\/' file"}
{"English":"update the permission of all the files in the folder \/u\/netinst to 500","Bash":"find \/u\/netinst -print | xargs chmod 500"}
{"English":"List all files in entire file system that belong to the user wnj or modified later than the ttt file","Bash":"find \/ \\( -newer ttt -or -user wnj \\) -print"}
{"English":"Search for line number 111 in file \"active_record.rb\"","Bash":"nl -ba  -nln  active_record.rb  | grep '^111 '"}
{"English":"display the count of total number of non empty files in the current folder","Bash":"find . -type f -not -empty | wc -l"}
{"English":"Find all regular files named postgis-2.0.0 under current directory","Bash":"find . -type f -name \"postgis-2.0.0\""}
{"English":"display all the files in the current folder","Bash":"find .\/"}
{"English":"Print extended file information for regular files found under the home directory whose names start with my","Bash":"find . -name 'my*' -type f -ls"}
{"English":"display a long listing of all images with the name \"articles\" in the current folder ( print0 is used to preserve file names with new line in their name )","Bash":"find . -iname \"Articles.jpg\" -print0 | xargs -0 ls -l"}
{"English":"search all the files in the current folder using regex excluding those that are present in the folder test","Bash":"find . -name test -prune -o -regex \".*\/my.*p.$\""}
{"English":"search for the directory \"mysql\" in the entire file system","Bash":"find \/ -name mysql -type d"}
{"English":"Count number of occurences of \"123\" in the string \"123 123 123\" (ie. 3)","Bash":"echo \"123 123 123\" | grep -o 123 | wc -l"}
{"English":"Find writable regular files omitting those that contain sites\/default\/files in their names","Bash":"find . -type f -writable | grep -v sites\/default\/files"}
{"English":"Search the CSS files found in the current directory tree for string \"foo\"","Bash":"find . -name \\*.css -print0 | xargs -0 grep -nH foo"}
{"English":"find all the html files in the current folder and delete a line","Bash":"find .\/ -type f -name '*.html' | xargs sed -i '1,\/sblmtitle\/d'"}
{"English":"list all javascipts file which whole name does not contain \"directory\"","Bash":"find . -name '*.js' -and -not -path directory"}
{"English":"rename all the text files  in the current folder to html files","Bash":"find -name \"*.txt\" -exec mv {} `basename {} .htm`.html \\;"}
{"English":"Find all the files in the current directory recursively whose permissions are 777","Bash":"find . -type f -perm 0777 -print"}
{"English":"Count the number of characters in the list of regular files from the current directory tree","Bash":"find . -type f | xargs | wc -c"}
{"English":"display all the files in the current directory excluding the paths \"targert\", \"tools\", \"git\"","Bash":"find . \\( ! -path \"*target*\" -a ! -path \"*tools*\" -a ! -path \"*.git*\" -print \\)"}
{"English":"Page through the contents of 'file', but excess from lines that don't fit within the screen\/window width is cut.","Bash":"less -S file"}
{"English":"Save full path of command \"tr\" to variable \"TR\"","Bash":"TR=`which tr`"}
{"English":"Search the current directory tree for symlinks pointing at other symlinks","Bash":"find . -type l -xtype l"}
{"English":"Find all directories named essbase under \/fss\/fin","Bash":"find \/fss\/fin -type d -name  \"essbase\" -print"}
{"English":"Find all 777 permission regular files and use chmod command to set permissions to 644","Bash":"find \/ -type f -perm 0777 -print -exec chmod 644 {} \\;"}
{"English":"Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted.","Bash":"join -t, in1 in2"}
{"English":"Finds all php processes running in system.","Bash":"pstree | grep php"}
{"English":"List all files\/directories in entire file system","Bash":"find \/ -print"}
{"English":"Remove all regular files from the current directory tree whose names do not end with \"ignore1\" or \"ignore2\"","Bash":"find . -type f -not -name '*ignore1' -o -not -name '*ignore2' | xargs rm"}
{"English":"Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files","Bash":"find . -type d -path '*\/\\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print"}
{"English":"Print the absolute path of third-level files under the current directory tree and number the output","Bash":"ls -d -1 $PWD\/**\/*\/* | nl"}
{"English":"Find all files\/directories under current directory with the null character as the delimiter","Bash":"find -print0"}
{"English":"Find all the files which are accessed 50 days back","Bash":"find \/ -atime 50"}
{"English":"List all mounted filesystems","Bash":"mount"}
{"English":"Save hexadecimal bytes 7 and 8 in binary file \"file.moi\" to variable \"year\"","Bash":"year=$(od -t x2 --skip-bytes=6 --read-bytes=2 file.moi | head -1 | awk '{print $2}')"}
{"English":"Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts","Bash":"wc `find . -name '*.[h|c|cpp|php|cc]'`"}
{"English":"Set permissions for directories in `foldername' and its subdirectories to 755","Bash":"find foldername -type d -exec chmod 755 {} \";\""}
{"English":"Check whether \"$path_in_question\" is a mount point","Bash":"df $path_in_question | grep \" $path_in_question$\""}
{"English":"Copy directory hierarchy from the current working directory to \"\/path\/to\/backup\/\"","Bash":"find . -type d -exec mkdir -p -- \/path\/to\/backup\/{} \\;"}
{"English":"Merge already sorted files \"*.txt\" and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix \"output\"","Bash":"sort -m *.txt | split -d -l 1000000 - output"}
{"English":"Prints long listing of a last modified file in a current folder.","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's\/.*\/\"&\"\/' | xargs ls -l"}
{"English":"Extract any line in \"f1\" or \"f2\" which does not appear in the other","Bash":"comm -3 <(sort -un f1) <(sort -un f2)"}
{"English":"Recursively change the owner and group of \"subdir3\" to \"user3\"","Bash":"chown user3:user3 -R subdir3"}
{"English":"create directories bravo_dir and alpha_dir","Bash":"mkdir bravo_dir alpha_dir"}
{"English":"Print the top 10 commands with their use count","Bash":"history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}
{"English":"Find all files\/directories under current directory","Bash":"find -print"}
{"English":"Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.","Bash":"find ~\/dir_data -type f  -exec chmod a-x,u+w {} \\;"}
{"English":"Executes 'true'. then makes 'xargs' fail executing 'false' and return 123 exit code.","Bash":"true | xargs false"}
{"English":"replaces the last occurrence of 'a' with 'c' in file","Bash":"tac file | awk '\/a\/ && !seen {sub(\/a\/, \"c\"); seen=1} 1' | tac"}
{"English":"Copy all files with '.png' (case insensitive) extension under '\/home\/mine' directory tree to '\/home\/mine\/pngcoppies\/' directory with new names constructed by prepending 'copy' in their names","Bash":"find  \/home\/mine -iname \"*.png\" -printf \"%P\\n \" | xargs  -I % -n1 cp %  \/home\/mine\/pngcoppies\/copy%"}
{"English":"Display the differences between \"file1.cf\" and \"file2.cf\" side-by-side with a width of 150 characters","Bash":"diff -y -W 150 file1.cf file2.cf"}
{"English":"Lists file descriptors of a current process.","Bash":"ls -l \/proc\/self\/fd\/"}
{"English":"Search all files in the current directory tree that are named \"whatever\" for \"you_search_for_it\"","Bash":"find -name whatever -exec grep --with-filename you_search_for_it {} \\;"}
{"English":"change owner and group of the file script.sh to user root","Bash":"chown root:root script.sh"}
{"English":"find all the files in current directory of size smaller than 10KB.","Bash":"find . -size -10k"}
{"English":"Change owner and group of \"script.sh\" to \"root\"","Bash":"chown root:root script.sh"}
{"English":"Print a count of duplicate lines in \"filename\"","Bash":"sort filename | uniq -c"}
{"English":"Find all directories under ${1:-.} directory without descending into any sub-directories","Bash":"find ${1:-.} -mindepth 1 -maxdepth 1 -type d"}
{"English":"Print continuous characters '\/' and '\\' randomly from \/dev\/urandom","Bash":"grep -ao \"[\/\\\\]\" \/dev\/urandom|tr -d \\\\n"}
{"English":"Read a line from standard input into variable \"response\" without backslash escapes using the prompt \"About to delete all items from history that match \\\"$param\\\". Are you sure? [y\/N] \"","Bash":"read -r -p \"About to delete all items from history that match \\\"$param\\\". Are you sure? [y\/N] \" response"}
{"English":"Calculate the md5sum of the executable file of command \"cc\"","Bash":"md5sum $(which cc)"}
{"English":"Locate all *.csv regular files under the current directory tree","Bash":"find . -type f -name \"*.csv\""}
{"English":"Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory","Bash":"find ~\/Journalism  -name '*.txt' -print0 | xargs -0 wc -w | awk '$1 < 2000 {v += $1; c++} END {print v\/c}'"}
{"English":"list files in \/usr modified after February 1 of the current year","Bash":"find \/usr -newermt \"Feb 1\""}
{"English":"Go to \/tmp directory.","Bash":"cd \/tmp"}
{"English":"Compress a file named '{}' in the current directory","Bash":"gzip \"{}\""}
{"English":"search for the directory \"mysql\" in the \/etc folder","Bash":"find \/etc -name mysql -type d"}
{"English":"find all text files in the current folder","Bash":"find -name \"*.txt\""}
{"English":"Search for all files that end in \".conf\"","Bash":"find \/ -type f -name \"*.conf\""}
{"English":"Find all *.txt files\/directories under current directory discarding 'Permission denied' errors","Bash":"find . -name \"*.txt\" -print | grep -v 'Permission denied'"}
{"English":"Prints a process tree for each process of user 'username'.","Bash":"ps -aux | grep ^username | awk '{print $2}' | xargs pstree"}
{"English":"display all the files in the current folder which have been modified in one hour ago","Bash":"find .  -newermt \"1 hour ago\""}
{"English":"display the list of all the normal files excluding hidden files which have been accessed in the last 500 days","Bash":"find . -type f -not -name \u2018.*\u2019 -mtime +500 -exec ls {} \\;"}
{"English":"Remove all non-hidden files in the current directory tree","Bash":"find -name \"*\" | xargs rm -f"}
{"English":"Remove everything within parentheses and substitute all non digit characters with a space from \"1\/2 [3] (27\/03\/2012 19:32:54) word word word word 4\/5\" and format the output as a table","Bash":"echo '1\/2 [3] (27\/03\/2012 19:32:54) word word word word 4\/5' | sed -e 's\/(.*)\/\/' -e 's\/[^0-9]\/ \/g' | column -t"}
{"English":"Find files\/directories named 'somename.txt' under current directory tree","Bash":"find .\/ -name \"somename.txt\""}
{"English":"Create directories \"\/tmp\/x\/y\/z\/\" on remote host before copying \"$source\" to \"user@remote:\/tmp\/x\/y\/z\/\"","Bash":"rsync -a --rsync-path=\"mkdir -p \/tmp\/x\/y\/z\/ && rsync\" $source user@remote:\/tmp\/x\/y\/z\/"}
{"English":"Find all empty regular files in the current directory and below","Bash":"find . -type f -empty"}
{"English":"Decompress \"file2.txt\" and \"file1.txt\" and print lines in \"file1.txt\" that match the 5th tab separated field in \"file2.txt\"","Bash":"awk -F'\\t' 'NR==FNR{a[$5];next} $5 in a' <(zcat file2.txt) <(zcat file1.txt)"}
{"English":"List all files in maximum 2 levels down the current directory","Bash":"find . -maxdepth 2  -type f -print0 | xargs -0 -n1 ls -l"}
{"English":"Extract the contents of \"Input.txt.gz\", list the unique first comma separated field prefixed by the number of occurrences","Bash":"zcat Input.txt.gz | cut -d , -f 1 | sort | uniq -c"}
{"English":"Display the host's ECDSA fingerprint using the md5 hasing algorithm.","Bash":"ssh-keygen -l -E md5 -f \/etc\/ssh\/ssh_host_ecdsa_key.pub"}
{"English":"Finds all files having text \"texthere\" recursively in a current folder, and precedes found string with string number in file and file name.","Bash":"find -type f -exec grep -Hn \"texthere\" {} +"}
{"English":"Search for \"#define\" in all files in the current directory, excluding backup files *~, *.orig, *.bak","Bash":"find . -maxdepth 1 ! -regex '.*~$' ! -regex '.*\\.orig$' \\     ! -regex '.*\\.bak$' -exec grep --color \"#define\" {} +"}
{"English":"Find all regular files under current directory tree without descending into '.\/dir1' (except '.\/dir1\/subdir1*' pattern) and '.\/dir2' directories","Bash":"find . \\( -path '.\/dir1\/*' -and -not -path '.\/dir1\/subdir1*' -or -path '.\/dir2' \\) -prune -or -type f -print"}
{"English":"Search \/tmp\/ for files smaller than 100 bytes","Bash":"find \/tmp -size -100c"}
{"English":"Set the group to \"username\" for all files with GID=1000 in the current directory tree","Bash":"find -gid 1000 -exec chown -h :username {} \\;"}
{"English":"Find all files starting from the current directory which are larger than 100MB","Bash":"find . -size +100M"}
{"English":"Find all directories under \/path whose names are 33 characters long","Bash":"find \/path -type d -printf \"%f\\n\" | awk 'length==33'"}
{"English":"List all regular files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -type f -mmin -60 | xargs -r ls -l"}
{"English":"find all files that are readable and writable by their owner","Bash":"find . -perm -600 -print"}
{"English":"Delete all empty files in the current directory tree","Bash":"find . -type f -empty -delete"}
{"English":"Find all files\/directories under current directory and print only 2nd field from output delimited by '\/'","Bash":"find . | awk -F\"\/\" '{ print $2 }'"}
{"English":"Search  all directory from \/usr downwards for files whose inode number is 1234 and print them .","Bash":"find \/usr -inum 1234 -print"}
{"English":"Find empty regular files in \/dir and its subdirectories","Bash":"find \/dir -type f -size 0 -print"}
{"English":"Search the current directory recursively for regular files last changed less than 2 days ago","Bash":"find . type -f -ctime -2"}
{"English":"Find all files and directories that do not match the pattern given as the $controlchars variable","Bash":"find . ! -name \"$controlchars\""}
{"English":"Move all 10*jpg files under \/path to 2010*jpg files under the same directory","Bash":"find \/path -type f -name \"10*jpg\" | sed 's\/.*\/mv &\/' | sed 's\/mv \\(.*\\\/\\)\\(.[^\/]*\\)\/& \\120\\2\/' | sh"}
{"English":"Find all directories under path_to_dir directory","Bash":"find path_to_dir -type d"}
{"English":"Find files on the system accessed during the last 24 hours but not within the last hour","Bash":"find \/ -atime -1 -amin +60"}
{"English":"Change directory to the directory containing the executable file of command \"oracle\"","Bash":"cd $(which oracle | xargs dirname)"}
{"English":"Print the home directory of \"$username\"","Bash":"finger $username | awk '\/^Directory\/ {print $2}'"}
{"English":"Find files\/directories under current directory that matches '.\/projects\/insanewebproject' in their paths and show the first one","Bash":"find -ipath '.\/projects\/insanewebproject'| head -n1"}
{"English":"find \".flac\" files in current folder using regular expressions","Bash":"find .\/ -regex \".\/cmn-.\\.flac\""}
{"English":"Find all hidden files starting from the directory given as variable $FOLDER","Bash":"find $FOLDER -name \".*\""}
{"English":"Split \"$1\" into files of at most \"$2\" or default 10000 using a numeric suffix of length 6 and suffix \"${tdir}\/x\"","Bash":"split -l ${2:-10000} -d -a 6 \"$1\" \"${tdir}\/x\""}
{"English":"find all the files that are not modified in the last 7 days","Bash":"find -daystart -mtime +7"}
{"English":"Change all cron jobs running \"anm.sh\" to be run every 10 minutes instead of 5 minutes.","Bash":"crontab -l | sed '\/anm\\.sh\/s,^\\*\/5,*\/10,' | crontab -"}
{"English":"find all the \".jpg\" files in current folder and display their count","Bash":"find .\/ -name '*.jpg' -type f | wc -l"}
{"English":"Prints path to folder that contains file \"\/path\/to\/vm.vmwarevm\/vm.vmx\".","Bash":"echo \/path\/to\/vm.vmwarevm\/vm.vmx | xargs dirname"}
{"English":"Find files\/directories under current directory and print them","Bash":"find . -print0 | xargs    -0 echo"}
{"English":"Set variable \"architecture\" to machine architecture, ie. x86_64","Bash":"architecture=\"$(uname -m)\""}
{"English":"Remove all regular files from the current directory tree that were modified a day ago","Bash":"find . -type f -mtime 1 -exec rm {} +"}
{"English":"Send one ping request to host whose name or IP address is specified by variable \"remote_machine\".","Bash":"ping -c 1 $remote_machine"}
{"English":"List all regular files residing in the current directory tree and containing string \"\/bin\/ksh\"","Bash":"find . -type f -print | xargs grep -li 'bin\/ksh'"}
{"English":"Find all *.xml.bz2 files under current directory","Bash":"find . | grep \".xml.bz2$\""}
{"English":"Recursively finds string 'class foo' in all *.c files from current folder.","Bash":"grep \"class foo\" **\/*.c"}
{"English":"Change the owner to \"root\" and group to \"specialusers\" of \"dir1\"","Bash":"chown root:specialusers dir1"}
{"English":"Remove all .txt files in and below the current directory","Bash":"find . -name \"*.txt\" -print0 | xargs -0 rm"}
{"English":"Find all files\/directories under '\/home\/exampleuser\/' directory tree whose names end with 'conf' and were modified exactly 3 days ago","Bash":"find \/home\/exampleuser\/ -name \"*conf\" -mtime 3"}
{"English":"Print the path names of all .png files in the \/home\/kibab directory tree","Bash":"find \/home\/kibab -name '*.png' -exec echo '{}' ';'"}
{"English":"Sort standard input in alphabetical order","Bash":"sort"}
{"English":"Unzip and untar \"4.56_release.tar.gz\" to standard output","Bash":"gunzip -c 4.56_release.tar.gz | tar xvf -"}
{"English":"Display infinite scroll of random ASCII art","Bash":"yes 'printf \\\\u$[2571+RANDOM%2]'|bash"}
{"English":"Search for the extended regex expanded by\"$MONTH\\\/$YEAR.*GET.*ad=$ADVERTISER HTTP\\\/1\" in the decompressed contents of the \/var\/log\/apache2\/access*.gz files that are newer than .\/tmpoldfile and older than .\/tmpnewfile","Bash":"find \/var\/log\/apache2\/access*.gz -type f -newer .\/tmpoldfile ! -newer .\/tmpnewfile \\ | xargs zcat | grep -E \"$MONTH\\\/$YEAR.*GET.*ad=$ADVERTISER HTTP\\\/1\" -c"}
{"English":"Numerically sort each line in file \"bb\" and output the result to console from greatest value to least value","Bash":"sort -nr bb"}
{"English":"Find all files called \"file1.txt\" that reside under and below \/home\/wsuNID\/","Bash":"find \/home\/wsuNID\/ -name file1.txt"}
{"English":"find all javascript files under the current folder","Bash":"find . -name '*.js'"}
{"English":"Print a list of unique users who are logged in","Bash":"who | cut -d' ' -f1 | sort | uniq"}
{"English":"Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time","Bash":"find . -type f -printf \"%C@ %p\\n\" | sort -r | head -n 10"}
{"English":"Remove everything in the current directory except files matching regular expression \"exclude these\"","Bash":"find . -maxdepth 1 | grep -v \"exclude these\" | xargs rm -r"}
{"English":"change the extension of all the \".abc\" files in the folder \"\/the\/path\" to \".edefg\" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found","Bash":"find \/the\/path -type f -name '*.abc' -execdir rename 's\/\\.\\\/(.+)\\.abc$\/version1_$1.abc\/' {} \\;"}
{"English":"Search all files in the current directory tree for \"SearchString\", ignoring .html files and skipping .svn directories","Bash":"find . \\( -name '*.svn*' -prune  -o ! -name '*.html' \\) | xargs -d '\\n' grep -Hd skip 'SearchString'"}
{"English":"Delete all files in the \/TBD directory that were modified more than 1 day ago","Bash":"find \/TBD\/* -mtime +1 -exec rm -rf {} \\;"}
{"English":"Find string \"STRING\" in files residing in the current directory tree, case insensitive","Bash":"find . -type f -print | xargs grep -ni \"STRING\""}
{"English":"using exec in find command to dispaly the searched files","Bash":"find . ... -exec cat {} \\; -exec echo \\;"}
{"English":"Print the list of all subdirectories of the current directory","Bash":"find . -maxdepth 1 -mindepth 1 -type d"}
{"English":"Find all directories in level 1 down the $queue directory","Bash":"echo \"$queue\" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 -type d"}
{"English":"Change the permission to 0755 for all directories under current directory","Bash":"find . -type d -exec chmod 0755 {} \\;"}
{"English":"display a long listing of the files in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 |xargs ls -l"}
{"English":"Find all files in the current directory tree named 'FILES.EXT'","Bash":"find . -name \"FILES.EXT\""}
{"English":"Search the home directory for files whose names begin with \"test\"","Bash":"find ~ -name \"test*\" -print"}
{"English":"Find all directories in the \/data1\/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago","Bash":"find \/data1\/realtime -mmin -60 -mmin +5 -type d"}
{"English":"Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.","Bash":"find ~\/ -mtime -2 -o -newer filename"}
{"English":"Print the list of the current directory's subdirectories","Bash":"find . -maxdepth 1 -mindepth 1 -type d -printf '%f\\n'"}
{"English":"list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.","Bash":"find $HOME -type f -atime +30 -size 100k"}
{"English":"Print the current working directory with resolved symbolic links","Bash":"pwd -P"}
{"English":"Copy *.txt files from the dir\/ directory tree along with their parent directories","Bash":"find dir\/ -name '*.txt' | xargs cp -a --target-directory=dir_txt\/ --parents"}
{"English":"Find all *.cgi (case insensitive) files\/directories under current directory and change their permission to 755","Bash":"find . -iname '*.cgi' | xargs chmod 755"}
{"English":"List all files\/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names","Bash":"find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\" -print0 | xargs -0 -n 1 ls"}
{"English":"Find all files in entire file system which are larger than 20000KB and show file name\/path followed by its size","Bash":"find \/ -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}
{"English":"create a symbolic link in current directory named \"my_db\" to file \"\/media\/public\/xampp\/mysql\/data\/my_db\"","Bash":"ln \/media\/public\/xampp\/mysql\/data\/my_db -s"}
{"English":"Find all files\/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names","Bash":"find \"$STORAGEFOLDER\" -name .todo  -exec dirname {} \\;"}
{"English":"Locate all files named 'restore.php' in the current directory and 3 levels below","Bash":"find . -maxdepth 4 -name 'restore.php'"}
{"English":"Find all files\/directories under current directory following symlinks if needed","Bash":"find -L"}
{"English":"Find all files in the home directory with open permissions","Bash":"find ~ -perm 777"}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -execdir \/bin\/rm {} \\+"}
{"English":"display all normal\/regular files in current folder","Bash":"find . -type f -print0"}
{"English":"change cgi files to mode 755 under htdocs or cgi-bin directories","Bash":"find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}
{"English":"Go into the first directory whose name contains 1670","Bash":"cd `ls -d *\/ | grep 1670`"}
{"English":"Print the names and sizes of regular files residing in the \"tmp\" directory tree","Bash":"find tmp -type f -printf \"%s %p\\n\" | awk '{sub(\/^[^ ]+\/,sprintf(\"f %10d\",$1))}1'"}
{"English":"Print file information of the executable file of command \"gcc\"","Bash":"ls `which gcc` -al"}
{"English":"Read a line from standard input with a timeout of 0.1 seconds and prompt \"This will be sent to stderr\"","Bash":"read -t 0.1 -p \"This will be sent to stderr\""}
{"English":"Write output of \"ls -lR \/\" to standard output and append to \"output.file\"","Bash":"ls -lR \/ | tee -a output.file"}
{"English":"Create a symbolic link named \"${DESTINATION}${file}\" to \"${TARGET}${file}\"","Bash":"ln -s  \"${TARGET}${file}\"  \"${DESTINATION}${file}\""}
{"English":"Prints week day of a 31 day in a current month.","Bash":"cal | awk 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}' FIELDWIDTHS=\"3 3 3 3 3 3 3 3\" date=31"}
{"English":"Find all files named 'text.txt' under current directory tree and display their contents","Bash":"find . -name 'text.txt' -print -exec cat {} \\;"}
{"English":"Recursively finds strings with\"text string to search\u201d in any file within the 'directory-path', following symlinks, and prints found strings with file names.","Bash":"grep -r -H \"text string to search\u201d directory-path"}
{"English":"Archive \"\/local\/path\/some_file\" to \"\/some\/path\" on host \"server.com\" authenticating as user \"usr\", compress data during transmission, show progress details.","Bash":"rsync -avz --progress local\/path\/some_file usr@server.com:\"\/some\/path\/\""}
{"English":"Dump \"FILENAME\" as 2 byte wide hexadecimal numbers","Bash":"od -tx2 FILENAME"}
{"English":"Prints week day of a 31 day in a current month.","Bash":"cal | awk -v date=31 'NR == 2 { split($0, header) } NR > 2 { for (i = 1; i <= NF; ++i) if ($i == date) { print header[NR == 3 ? i + 7 - NF : i]; exit } }'"}
{"English":"Locate all files in the current directory and below that do not have \"testfileasdf\" in their names","Bash":"find -not -name \"*testfileasdf*\""}
{"English":"Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files","Bash":"find \/home\/www -name \"*.java\" -type f -print0 | xargs -0 sed -i 's\/subdomainA\\.example\\.com\/subdomainB.example.com\/g'"}
{"English":"Find all files\/directories under current directory and print their paths","Bash":"find . -exec echo {} \\;"}
{"English":"Create a symbolic link named \"~\/bin\/subl\" to \"\/Applications\/Sublime Text.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"ln -s \"\/Applications\/Sublime Text.app\/Contents\/SharedSupport\/bin\/subl\" ~\/bin\/subl"}
{"English":"List the full path of each directory under the current working directory","Bash":"tree -dfi \"$(pwd)\""}
{"English":"display all files in the directory \"dir\" which have been accessed in the last 60 minutes","Bash":"find \/dir -amin -60"}
{"English":"Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names","Bash":"find -name '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' -type f"}
{"English":"Print IP addresses of the host name","Bash":"hostname -I"}
{"English":"Find out all *.sh owned by user vivek","Bash":"find \/ -user vivek -name \"*.sh\""}
{"English":"Rename file extension '.andnav' (case insensitive) to '.tile' for all files\/directories under current directory tree","Bash":"find . -name \"*.andnav\" -exec rename -v 's\/\\.andnav$\/\\.tile\/i' {} \\;"}
{"English":"Find all *.ogg and *.mp3 (case insensitive) files\/directories under your home directory","Bash":"find $HOME -iname '*.ogg' -o -iname '*.mp3'"}
{"English":"Look for all files whose names match pattern 'my*'","Bash":"find \/ -name 'my*'"}
{"English":"Find all regular files in the current directory tree ignoring directory .\/source\/script","Bash":"find . -path .\/source\/script -prune -o -type f -print;"}
{"English":"find all files in the folder \"myfiles\" which have not been accessed in the last 30*24 hours","Bash":"find \/myfiles -atime +30"}
{"English":"Find all regular files whose names contain \"@\" in directory tree ~\/$folder","Bash":"find ~\/$folder -name \"*@*\" -type f"}
{"English":"Set the setgid bit on all directories in the repository \"\/git\/our_repos\"","Bash":"find \/git\/our_repos -type d -exec chmod g+s {} +"}
{"English":"Sets shell options 'extglob' and 'nullglob'.","Bash":"shopt -s nullglob extglob"}
{"English":"find the file \"foo.txt\" in the current folder and assign the output to a variable","Bash":"OUTPUT=`find . -name foo.txt`"}
{"English":"Find all regular files in the entire filesystem that belong to the group 'users'","Bash":"find \/  -type f -group users"}
{"English":"Find all files\/directories under current directory","Bash":"find | xargs"}
{"English":"Remove all files named `junk' and `dummy'","Bash":"find . \\( -name junk -o -name dummy \\) -exec rm '{}' \\;"}
{"English":"Print the average time of 4 ping requests to \"www.stackoverflow.com\"","Bash":"ping -c 4 www.stackoverflow.com | tail -1| awk '{print $4}' | cut -d '\/' -f 2"}
{"English":"Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.","Bash":"find . -name tests -prune -o -type f -name '*.php' | xargs wc -l"}
{"English":"change the ownership of all regular\/normal files in the current directory","Bash":"find . -type f -exec chown username {} \\;"}
{"English":"Find all files under \/path\/to\/Dir and set their permission to 644","Bash":"sudo find \/path\/to\/Dir -type f -print0 | xargs -0 sudo chmod 644"}
{"English":"Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\\s from each line of the output","Bash":"find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | sed -r 's\/[0-9]+\\s\/\/g'"}
{"English":"Prints a random number between 1 and 10","Bash":"grep -m1 -ao '[0-9]' \/dev\/urandom | sed s\/0\/10\/ | head -n1"}
{"English":"delete all the trace files (\".trc\") which have not been been accessed in the last 30*24 hours","Bash":"find \/dirpath \\( -name \\*.trc -a -mtime +30 \\) -exec rm {} \\;"}
{"English":"Find all files\/directories under test directory","Bash":"find test"}
{"English":"Find all leaf directories that include only one occurrence of \"modules\"","Bash":"find -regex '.*\/modules\\(\/.*\\|$\\)' \\! -regex '.*\/modules\/.*\/modules\\(\/.*\\|$\\)' -type d -links 2"}
{"English":"Force create a symbolic link named \"$pdir\" to \"$pluginpath\" with verbose output","Bash":"sudo ln --symbolic --verbose --force \"$pluginpath\" \"$pdir\""}
{"English":"display all the files in the folder a","Bash":"find a"}
{"English":"Print the list of files in the current directory tree skipping SVN files","Bash":"find . -name .svn -a -type d -prune -o -print"}
{"English":"Print a list of regular files from directory tree sort_test\/ sorted with LC_COLLATE=en_US.utf8","Bash":"find sort_test\/ -type f | env -i LC_COLLATE=en_US.utf8 sort"}
{"English":"Show the last 10 .conf files found by `find' in the \/etc directory and 1 level below","Bash":"find \/etc -maxdepth 2 -name \"*.conf\" | tail"}
{"English":"Write output of \"ls -lR \/\" to standard output and to \"output.file\"","Bash":"ls -lR \/ | tee output.file"}
{"English":"Rename \"file.txt\" in directories \"v_1\", \"v_2\", and \"v_3\" each to \"v_1.txt\", \"v_2.txt\", and \"v_3.txt\" respectively and print the conversion","Bash":"rename -v 's#\/file##' v_{1,2,3}\/file.txt"}
{"English":"Read a line from an interactive shell's standard input into variable \"message\" without backslash escapes and prompt $'Please Enter a Message:\\n'","Bash":"read -rep $'Please Enter a Message:\\n' message"}
{"English":"Make 999 folders one inside another where first 998 of them is named as \"folderX\" where X goes from 1 to 998 and the last folder named as \"folder9991000\"","Bash":"mkdir -p folder$( seq -s \"\/folder\" 999 )1000"}
{"English":"Search the regular files of the current directory tree for string \"whatever\"","Bash":"find . -type f | xargs grep whatever"}
{"English":"find all the php files in current folder using regular expressions","Bash":"find . -regex '.+\\.php'"}
{"English":"Print 7 spaces in a row","Bash":"yes ' ' | head -7 | tr -d '\\n'"}
{"English":"Determine if \/full\/path exists on a mounted file system.","Bash":"df \/full\/path | grep -q \/full\/path"}
{"English":"create a symbolic link in current directory named \"environments\" to file \"..\/config\/environments\"","Bash":"ln -s \"..\/config\/environments\""}
{"English":"Find all files in your home directory and below that are larger than 100M.","Bash":"find ~ -size +100M"}
{"English":"Find all files in \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* that are older than 90 days and print their parent directory paths","Bash":"find \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* -type f -mtime +90  | sed 's|\/[^\/]*$||'"}
{"English":"Find files\/directories writable by group and others under the \/path directory","Bash":"find \/path -perm -g+w,o+w"}
{"English":"Search directory \/tmp\/foo for files containing \"\/tmp\/foo\/bar\" in their full names","Bash":"find \/tmp\/foo -path \/tmp\/foo\/bar -print"}
{"English":"Find all files\/directories with '.txt' extension that are less than 100 KB in size under '\/home' directory tree","Bash":"find \/home -name \"*.txt\" -size -100k"}
{"English":"Remove files erroneously named `-F'","Bash":"find . -name \"-F\" -exec rm {} \\;"}
{"English":"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.","Bash":"find . -exec file {} \\;"}
{"English":"Find all *.* files under current directory","Bash":"find . -type f -a -name '*.*'"}
{"English":"Calculate the md5 checksum of the current directory structure and save it in variable SUM","Bash":"SUM=$(tree | md5sum)"}
{"English":"Show file type information for files in \/usr\/bin","Bash":"find \/usr\/bin | xargs file"}
{"English":"Find all empty files in the current directory and delete them","Bash":"find . -type f -maxdepth 1 -empty -print0 | xargs -0 \/bin\/rm"}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}'"}
{"English":"Print all files in the current directory tree as a comma separated list","Bash":"find . -type f | paste -d, -s"}
{"English":"Set the environment variable \"DISPLAY\" to the system host name followed by \":0 skype\"","Bash":"env DISPLAY=`hostname`:0 skype"}
{"English":"Search \/etc for files modified within the last 10 minutes","Bash":"find \/etc -type f -mmin -10"}
{"English":"display all the files in the entire file system","Bash":"find \/ -name \"*\" \u2014 print"}
{"English":"Kill all processes which were executed in background by the current shell.","Bash":"jobs -p | xargs kill -9"}
{"English":"force delete all the files in the current folder expect xml files","Bash":"find . | grep -v xml | xargs rm -rf {}"}
{"English":"Find all 664 permission files\/drectories under current directory tree","Bash":"find . -perm -664"}
{"English":"Print timestamp as HH:MM:SS","Bash":"date +\"%T\""}
{"English":"find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.","Bash":"find $1 \\( -name \"*$2\" -o -name \".*$2\" \\) -print"}
{"English":"find all the html files in the current folder and replace the end of each line with a pattern","Bash":"find .\/ -type f -name '*.html' | xargs sed -i '$s\/$\/<\\\/description>\/'"}
{"English":"Go to first directory specified in PATH which contains the command 'oracle'","Bash":"cd $(dirname $(which ls))"}
{"English":"find files in the \/usr\/src directory with pattern` *.c  that larger than 100 Kilobytes","Bash":"find \/usr\/src -name '*.c' -size +100k -print"}
{"English":"List all files\/folders in current directory by separating them with spaces","Bash":"ls | tr  \"\\n\" \" \""}
{"English":"Print the names of all regular files in the current directory tree","Bash":"find . -type f -exec echo {} \\;"}
{"English":"Create a symbolic link to \"$file\" named \"\/tmp\/allfiles\"","Bash":"ln $file \/tmp\/allfiles"}
{"English":"Find all files with name ending with .txt and display only the filenames without full paths","Bash":"find .\/ -name \"*.txt\" | rev | cut -d '\/' -f1 | rev"}
{"English":"Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"","Bash":"find . ! \\( -name \"*.exe\" -o -name \"*.dll\" \\)"}
{"English":"find httpd.conf file in \/etc directory","Bash":"find \/etc -name \"httpd.conf\""}
{"English":"Print a space separated list of numbers from 1 to 10 with no trailing new line","Bash":"seq 10 | xargs echo -n"}
{"English":"List all *.txt files\/directories under \/etc","Bash":"find \/etc -name \"*.txt\" | xargs ls -l"}
{"English":"List all files in the current directory tree that were last modified in March 2007","Bash":"find ! -newermt \"apr 01 2007\" -newermt \"mar 01 2007\" -ls"}
{"English":"Print a count of each unique line from standard input","Bash":"sort | uniq -c"}
{"English":"Print standard input to standard output line by line, discarding any adjascent duplicate lines.","Bash":"uniq"}
{"English":"Append all regular files modified in the last 24 hours to the \"$archive.tar\" tar archive","Bash":"find . -mtime -1 -type f -exec tar rvf \"$archive.tar\" '{}' \\;"}
{"English":"Receive input and print it to terminal","Bash":"cat"}
{"English":"Remount \"\/dev\/shm\" with a maximum size of \"40G\"","Bash":"mount -o remount,size=40G \/dev\/shm"}
{"English":"Find all directories under current directory and change their permission to 755","Bash":"find . -type d -exec chmod 755 {} \\;"}
{"English":"Set variable 'path' to name of current directory (without the containing directories).","Bash":"path=$(basename $(pwd))"}
{"English":"Change the permissions of all regular files whose names end with .mp3 in the directory tree \/var\/ftp\/mp3","Bash":"find \/var\/ftp\/mp3 -name '*.mp3' -type f -exec chmod 644 {} \\;"}
{"English":"Lists all files in a current folder, separating names with comma.","Bash":"ls | xargs -I {} echo {}, | xargs echo"}
{"English":"find all files in the home folder which are modified in the last 2 days.","Bash":"find ~ -type f -mtime -2"}
{"English":"Search the entire file hierarchy for files ending with '~' and print all matches except for those with '\/media' in their pathnames.","Bash":"find \/ -name \"*~\" | grep -v \"\/media\""}
{"English":"Find all .txt files of user Tecmint under \/home directory","Bash":"find \/home -user tecmint -iname \"*.txt\""}
{"English":"Search the current directory for files whose names start with \"messages.\" ignoring SVN files","Bash":"find \\( -name 'messages.*' ! -path \"*\/.svn\/*\" \\) -exec grep -Iw uint {} +"}
{"English":"Send one ping request to host whose name or IP address is specified by variable \"ip\", using network interface eth9.","Bash":"ping ${ip} -I eth9 -c 1"}
{"English":"find all normal\/regular files in current folder and display the total lines in them","Bash":"find . -type f -print0 | xargs -0 wc -l"}
{"English":"display all files in a folder","Bash":"find \"\/proc\/$pid\/fd\""}
{"English":"Make all directories in the current directory tree accessible to anybody","Bash":"find . -type d -print0 | xargs -0 chmod go+rx"}
{"English":"Grab a gzipped text file from the web and display its decompressed content, interactively paging through the output.","Bash":"curl -s 'http:\/\/archive.ubuntu.com\/ubuntu\/pool\/universe\/s\/splint\/splint_3.1.2.dfsg1-2.diff.gz' | gunzip -dc | less"}
{"English":"Compress files excluding *.Z files","Bash":"find . \\! -name \"*.Z\" -exec compress -f {} \\;"}
{"English":"Search for the wp-config.php file in \/var\/www and one level below","Bash":"find \/var\/www\/ -name wp-config.php -maxdepth 2"}
{"English":"Search every directory except the subdirectory excluded_path for a regular file 'myfile'","Bash":"find \/ -path excluded_path -prune -o -type f -name myfile -print"}
{"English":"Set variable \"fname\" to the basename of path specified in variable \"f\", that is remove everything up to the last slash if present.","Bash":"fname=`basename $f`"}
{"English":"Rename \"svnlog.py\" to \"svnlog\"","Bash":"mv svnlog.py svnlog"}
{"English":"Search the current directory tree for files containing \"needle\" in their names","Bash":"find . -iname \"*needle*\""}
{"English":"Find recursively all files in \/path that end in \"txt\" and copy them to \/tmp\/","Bash":"find \/path -type f -name \"*txt\" -printf \"cp '%p' '\/tmp\/test_%f'\\n\" | bash"}
{"English":"Create intermediate directories \"tmp\" as required and directories real_dir1 and real_dir2","Bash":"mkdir -p tmp\/real_dir1 tmp\/real_dir2"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda* in \/var\/log","Bash":"find \/var\/log\/ -iname anaconda*"}
{"English":"Split \"file.txt\" into files of at most 1 MiB in size with a numeric suffix and prefix \"file\"","Bash":"split -b 1M -d  file.txt file"}
{"English":"Find *.js UTF-8 files with BOM and correct them","Bash":"find . -iname *.js -type f -exec sed 's\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;"}
{"English":"Prints all NS servers of domain google.com.","Bash":"dig google.com ns | awk 'p{print $5}\/^;; ANSWER SECTION:$\/{p=1}\/^$\/{p=0}'"}
{"English":"List all files 2 levels deep in the current directory tree","Bash":"tree -L 2 -fi"}
{"English":"Run checksums recursively from the current directory, and give back the filenames of all identical checksum results","Bash":"find .\/ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's\/^[0-9a-f]*\\ *\/\/;'"}
{"English":"Find all the files whose name is tecmint.txt and contains both capital and small letters in \/home directory","Bash":"find \/home -iname tecmint.txt"}
{"English":"Find all files\/directories with '.js' extension under current directory tree without descending into '.\/directory'","Bash":"find . -path .\/directory -prune -o -name '*.js' -print"}
{"English":"find md5sums of files named \"file*.txt\"","Bash":"md5sum file*.txt"}
{"English":"display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.","Bash":"find . -perm 777  -mtime 0 -print"}
{"English":"Prints process tree, showing only strings with 'MDSImporte', and chopping output after ${WIDTH} characters.","Bash":"pstree | grep MDSImporte | cut -c 1-${WIDTH}"}
{"English":"Prints process tree of a current process with parents processes and id numbers.","Bash":"pstree --show-parents -p $$ | head -n 1 | sed 's\/\\(.*\\)+.*\/\\1\/' | less"}
{"English":"Delete all lines matching \"pattern\" in \"filename\"","Bash":"sed -i '\/pattern\/d' filename"}
{"English":"extract \"filename.tar.xz\" with verbose output","Bash":"$ tar xvfJ filename.tar.xz"}
{"English":"find all directories with the name test in a directory","Bash":"find \/home\/john -type d -name test -print"}
{"English":"Search the current directory recursively for files containing \"needle text\"","Bash":"find . -type f -print0 | xargs -0 grep -IZl . | xargs -0 grep \"needle text\""}
{"English":"find all the regular\/normal files in the folder \"myfiles\" which have the permission 647.","Bash":"find \/myfiles -type f -perm -647"}
{"English":"search for the word \"foo\" in all the regular\/normal files with the name \"file-pattern\" in the directory \"\/path\/to\/dir\"","Bash":"find \/path\/to\/dir\/ -type f -name \"file-pattern\" -print0 | xargs -I {} -0 grep -l \"foo\" \"{}\""}
{"English":"Print mount point of the file system containing $path.","Bash":"df \"$path\" | tail -1 | awk '{ print $6 }'"}
{"English":"List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest","Bash":"du -smc * | sort -n"}
{"English":"Takes path list from '.exportfiles.text' file, cuts off first two path segments and last one.","Bash":"cut -d \/ -f 4- .exportfiles.text | xargs -n 1 dirname"}
{"English":"Removes all empty folders under path '\/thepath', printing info message on each operation.","Bash":"find \/thepath -type d -empty -print0 | xargs -0 rmdir -v"}
{"English":"Show directory sizes in KB and sort to give the largest at the end","Bash":"find . -type d -exec du -sk {} \\; |  sort -n -k 1"}
{"English":"Append the date and command ran to \"\/tmp\/trace\" after every command","Bash":"PROMPT_COMMAND='echo \"$(date +\"%Y\/%m\/%d (%H:%M)\") $(history 1 |cut -c 7-)\" >> \/tmp\/trace'"}
{"English":"Sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place","Bash":"sort inputfile | uniq | sort -o inputfile"}
{"English":"Print URL \"http:\/\/www.blabla.bla\/forum-detail\/?ft=72260&fid=34&&pgr=\" followed by a number ranging from 1 to 786","Bash":"yes 'http:\/\/www.blabla.bla\/forum-detail\/?ft=72260&fid=34&&pgr=' | nl -ba | sed 786q | grep . | awk '{print $2$1}'"}
{"English":"Print only the line \"foo\/\/\/\" given two empty directories foo and bar","Bash":"find foo\/\/\/ bar\/\/\/ -name foo -o -name 'bar?*'"}
{"English":"Search the \/path directory recursively for TXT files","Bash":"find \/path -type f -iname \"*.txt\""}
{"English":"Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses","Bash":"echo $(seq 254) | xargs -P255 -I% -d\" \" ping -W 1 -c 1 192.168.0.% | grep -E \"[0-1].*?:\""}
{"English":"Delete empty directories","Bash":"find . -type d -empty -delete"}
{"English":"Find recursively regular files in the current directory tree","Bash":"find -type f -print0"}
{"English":"prints absolute file paths for files in current directory","Bash":"find `pwd` -maxdepth 1"}
{"English":"Change permssions of *.cgi files under directories htdocs and cgi-bin to 755","Bash":"find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}
{"English":"Find command will display top 10 Big files from current directory .","Bash":"find . -type f -exec ls -s {} \\; |sort -n -r |head"}
{"English":"Print lines containing string TEXT from all log files in the current directory.","Bash":"grep -e TEXT *.log | cut -d':' --complement -s -f1"}
{"English":"Archive all directories in \/path\/to\/directory\/* (only command line arguments, no sub-directories) to files with .tar.gz extension","Bash":"find \/path\/to\/directory\/* -maxdepth 0 -type d -printf \"%P\\n\" -exec sudo tar -zcpvf {}.tar.gz {} \\;"}
{"English":"Find all directories under current directory and change their permission to 644","Bash":"find -type d -print0|xargs -0 chmod 644"}
{"English":"search in the current folder for the files that begin with \"myletter\"","Bash":"find . -name 'myletter*' -print"}
{"English":"Remove all characters except \";\" and digits from standard input","Bash":"tr -cd \";0-9\""}
{"English":"Find all directories under current directory and set their permission to 775","Bash":"find -type d | xargs chmod 775"}
{"English":"Prints long listing of directory $var sorted from oldest to newest, with appended indicators.","Bash":"$ ls -Fltr $var"}
{"English":"bind key \"\\x61\" to insert itself","Bash":"bind $'\"\\x61\"':self-insert"}
{"English":"find all the files in current folder which end with a speicifc regular expression and display their count","Bash":"find .\/ -type f -regex \".*\\.[JPGjpg]$\" | wc -l"}
{"English":"List all files\/directories under \/data1\/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago","Bash":"find \/data1\/Marcel -size +1024 \\( -mtime +365 -o -atime +365 \\) -ls"}
{"English":"Display file.txt with lines numbered, and page interactively through the result.","Bash":"cat -n file.txt | less"}
{"English":"Saves value '1' in the $PIPESTATUS variable and returns 0.","Bash":"false | tee \/dev\/null"}
{"English":"Make directory \"\/var\/svn\"","Bash":"sudo mkdir \/var\/svn"}
{"English":"Print each line in \"file1\" and file2\" separated by a space","Bash":"paste -d'\u00a4' file1 file2 | sed 's,\u00a4, ,g'"}
{"English":"create directory \/tmp\/foo","Bash":"mkdir \/tmp\/foo"}
{"English":"Find all files\/directories excluding paths that match '.git' or '.gitignore'","Bash":"find -print0 | grep -vEzZ '(\\.git|\\.gitignore\/)'"}
{"English":"move all files in the current folder another folder and do not move the files in the sub folder","Bash":"find . -name \"*\" -maxdepth 1 -exec mv -t \/home\/foo2\/bulk2 {} +"}
{"English":"Format file \"list-of-entries.txt\" as new-line separated columns","Bash":"column -t -s $'\\n' list-of-entries.txt"}
{"English":"List all files in the \/var directory tree whose size is greater than 10 megabytes","Bash":"find \/var\/ -size +10M -ls"}
{"English":"Print a count of files and directories in the current directory tree","Bash":"tree | tail -1"}
{"English":"find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )","Bash":"find .\/ -daystart -mtime -3"}
{"English":"find all the files ending with \"clj\" in the current folder and search for a pattern","Bash":"find . -name *.clj | xargs grep -r resources"}
{"English":"find all the files in the current folder which are bigger than 1MB","Bash":"find . \u2014 size +1000k -print"}
{"English":"Calculate the md5 sum of \"yourstring\"","Bash":"echo -n \"yourstring\" |md5sum"}
{"English":"Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size","Bash":"find $HOME -iname '*.ogg' -type f -size -100M"}
{"English":"find files in the current directory and sub-directories, that were accessed within last hour","Bash":"find -amin -60"}
{"English":"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","Bash":"find $1 -name \"$2\" -exec grep -Hn \"$3\" {} \\;"}
{"English":"check the type of files in the folder \/usr\/bin","Bash":"find \/usr\/bin | xargs file"}
{"English":"Exclude directory from find . command","Bash":"find .\/ -path .\/beta\/* -prune -o -iname example.com -print"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find . -name *.txt -print"}
{"English":"Merge content of decompressed files \"$part0\", \"$part1\", and so on","Bash":"sort -m <(zcat $part0 | sort) <(zcat $part1 | sort) ..."}
{"English":"Lists all files in a current folder, separating names with comma.","Bash":"ls -1 | paste -sd \",\" -"}
{"English":"Find all files named 'aaa.txt' under current directory tree and display their contents","Bash":"cat `find . -name aaa.txt`"}
{"English":"Archive \"\/path\/to\/copy\" to \"\/path\/to\/local\/storage\" on host \"host.remoted.from\" as user \"user\" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","Bash":"rsync -chavzP --stats \/path\/to\/copy user@host.remoted.from:\/path\/to\/local\/storage"}
{"English":"Reverse the space separated words in \"35 53 102 342\"","Bash":"echo 35 53 102 342|tr ' ' '\\n'|tac|tr '\\n' ' '"}
{"English":"Find files in the current directory tree which are larger than 5 MB in size","Bash":"find . -size +5000k -type f"}
{"English":"find all files in home folder which have been modified exactly 1 day before","Bash":"find ~ -mtime 1 -daystart"}
{"English":"Check if the $somedir directory is empty","Bash":"find \"$somedir\" -maxdepth 0 -empty -exec echo {} is empty. \\;"}
{"English":"Find writable regular files in the current directory","Bash":"find -type f -maxdepth 1 -writable"}
{"English":"Force create a symbolc link named \"\/usr\/local\/bin\/fpt\" to \"\/usr\/local\/bin\/findpdftext\"","Bash":"sudo ln -s -f \"\/usr\/local\/bin\/findpdftext\" \"\/usr\/local\/bin\/fpt\""}
{"English":"Report file systems disk usage in kilobytes.","Bash":"df -k"}
{"English":"create directory \/etc\/cron.minute","Bash":"mkdir \/etc\/cron.minute"}
{"English":"Search for files \"file1\" or \"file9\"","Bash":"find . -name file1 -or -name file9"}
{"English":"Find all files under var\/ directory and change their permission to 600","Bash":"find var\/ -type f -exec chmod 600 {} \\;"}
{"English":"Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '\/myprojects' directory tree and modify them in-place","Bash":"find \/myprojects -type f -name *.cpp -print0 | xargs -0 sed -i 's\/previousword\/newword\/g'"}
{"English":"Find all files in the current directory tree whose pathnames match pattern '*\/1\/lang\/en.css'","Bash":"find . -path \u2018*\/1\/lang\/en.css\u2019 -print"}
{"English":"Delete all files named \"filename\" in the current directory tree, except the one with path .\/path\/to\/filename","Bash":"find . -name \"filename\" -and -not -path \".\/path\/to\/filename\" -delete"}
{"English":"search for all regular\/normal files in current folder and display all the files which contain 16 lines","Bash":"find . -type f -print0 | xargs -0 grep -cH '' | awk -F: '$2==16'"}
{"English":"Exit the shell immediately if an error is encountered, treat references to unset variables as errors, disable overwriting existing files, and use the first non-zero exit code of a set of piped commands as the exit code of the full set of commands","Bash":"set -o errexit -o nounset -o noclobber -o pipefail"}
{"English":"Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output","Bash":"find . -type f -ctime -3 | tail -n 5"}
{"English":"remove all the \".core\" files in the file system","Bash":"find \/ -name \"*.core\" -print -exec rm {} \\;"}
{"English":"Recursively list all files on smbfs mounts","Bash":"mount -v | grep smbfs | awk '{print $3}' | xargs ls -lsR"}
{"English":"find all the files that have been modified in exactly 7*24 hours ago","Bash":"find . -mtime 7"}
{"English":"Display the first 10 lines of the byte hex dump with no file offset data for \"\/bin\/ls\"","Bash":"od -t x1 -An \/bin\/ls | head"}
{"English":"Search for all the directories in directories taken from the glob pattern '\/path\/to\/folders\/*' and add the extension \".mbox\" to all and create directories named 'Messages' inside them","Bash":"find \/path\/to\/folders\/* -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox\/Messages \\;"}
{"English":"Find all files\/directories which have been modified from the start of the day in directories\/files taken from the glob pattern '\/tmp\/test\/*'","Bash":"find \/tmp\/test\/* -daystart -mtime -0"}
{"English":"Print the current directory name without full path","Bash":"echo \"$PWD\" | sed 's!.*\/!!'"}
{"English":"Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.","Bash":"sudo find . -xdev -type f | cut -d \"\/\" -f 2 | sort | uniq -c | sort -n"}
{"English":"find all the \".sh\" files in the current folder ( case insensitive search)","Bash":"find -iname *.SH"}
{"English":"Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories","Bash":"find $d -type d -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Delete all files\/directories under current directory tree excluding '.gitignore' files\/directories and files\/directories matching the patterns '.git' or '.git\/*' in their paths","Bash":"find . ! -name '.gitignore' ! -path '.git' ! -path '.git\/*' -exec rm -rf {} \\;"}
{"English":"Expands `whoami` as current user name, and adds resulted path to the directory stack.","Bash":"pushd \/home\/`whoami`\/Pictures"}
{"English":"Print the input \"hello world\" to the console followed by a swap of the first two awk fields","Bash":"echo hello world | tee \/dev\/tty | awk '{print $2, $1}'"}
{"English":"Search through the \/usr directory for all files that begin with the letters Chapter, followed by anything else.","Bash":"find \/usr -name \"Chapter*\" -type f"}
{"English":"find all the files in the current folder that end with the word bar","Bash":"find -name *bar"}
{"English":"Find *.java files in the current directory with GNU find and replace foo with bar in those files","Bash":"find . -name \"*.java\" -exec sed -i s\/foo\/bar\/g \\;"}
{"English":"List all regular files in the current directory tree modified within the last 24 hours","Bash":"find . -mtime 0 -type f -ls"}
{"English":"print all lines after the last match of 'string match'","Bash":"tac infile | sed '\/string match\/,$d' | tac"}
{"English":"Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.","Bash":"find . -atime +7 -size +20480 -print"}
{"English":"Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell.","Bash":"pushd $(dirname $0)"}
{"English":"List all cron jobs which contain \"word\".","Bash":"crontab -l | egrep \"word\""}
{"English":"find all files in current folder and display the total lines in them","Bash":"find . | xargs wc -l"}
{"English":"Count the number of directories in the current directory and below","Bash":"find . -type f -exec basename {} \\; | wc -l"}
{"English":"Find all files\/directories named 'photo?.jpg' under current directory tree","Bash":"find . -name photo\\?.jpg"}
{"English":"Save the last modified time of file 'file_name' to variable 'STAMP'","Bash":"STAMP=`date -r file_name`"}
{"English":"Remove trailing whitespaces in .txt files from the current directory tree","Bash":"find . -type f -name '*.txt' -exec sed --in-place 's\/[[:space:]]\\+$\/\/' {} \\+"}
{"English":"remove all the files in the present directory which have space in their name.","Bash":"find . -name \"* *\" -exec rm -f {} \\;"}
{"English":"Print \"Total generated: \" followed by the number of unique lines in \"$generated_ports\"","Bash":"echo \"Total generated: $(echo \"$generated_ports\" | sort | uniq | wc -l).\""}
{"English":"List all regular files in the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 -type f -exec ls -l {} +"}
{"English":"Archive \"blanktest\/\" to \"test\/\" deleting any files in the destination not found in the source","Bash":"rsync -a --delete blanktest\/ test\/"}
{"English":"Decompress and sort \"$part0\" and \"$part1\" of files in different processes","Bash":"sort -m <(zcat $part0 | sort) <(zcat $part1 | sort)"}
{"English":"Recursively finds all files and prints all strings with 'text-to-find-here' from that files.","Bash":"find \/ -type f | xargs grep 'text-to-find-here'"}
{"English":"List files in the current directory tree which have permissions rwx for user and rw for group and others","Bash":"find . -perm 766 -exec ls -l {} \\;"}
{"English":"Remove all CVS directories from the current directory tree","Bash":"find . -name 'CVS' -type d -exec rm -rf {} \\;"}
{"English":"Show manual for the find command","Bash":"man find"}
{"English":"Find and remove multiple *.txt files","Bash":"find . -type f -name \"*.txt\" -exec rm -f {} \\;"}
{"English":"Find all files\/directories under current directory","Bash":"find .\/"}
{"English":"Find all the files which are greater than 50MB but less than 100MB in size","Bash":"find \/ -size +50M -size -100M"}
{"English":"Replace all URLs in \"MyHTMLFile.html\" with \"$pub_url\" and create a backup with suffix \".bak\"","Bash":"sed -i.bak \"s#https.*\\.com#$pub_url#g\" MyHTMLFile.html"}
{"English":"Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable","Bash":"read -u 4 -N $char -r -s line"}
{"English":"Remove trailing whitespaces in TXT files from the current directory tree","Bash":"find . -iname '*.txt' -type f -exec sed -i '' 's\/[[:space:]]\\{1,\\}$\/\/' {} \\+"}
{"English":"Rename \"file0001.txt\" to \"1.txt\"","Bash":"mv file0001.txt 1.txt"}
{"English":"Print a colon-separated list of all directories from the $root directory tree","Bash":"find $root -type d | tr '\\n' ':'"}
{"English":"Prints last modified file in a current folder.","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}
{"English":"Clean up all zombie processes by instantly killing their parent process with SIGKILL signal.","Bash":"kill -9 $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"}
{"English":"change owner of the file destination_dir to user \"user:","Bash":"chown user destination_dir"}
{"English":"Make directories and parent directories as needed of \"$1\" with \"\\r\" removed","Bash":"mkdir -p $(echo -e $1 |sed $'s\/\\r\/\/')"}
{"English":"Print unique lines of sorted file \"a\" and \"b\" and remove leading tabs","Bash":"comm -3 a b | sed 's\/^\\t\/\/'"}
{"English":"Find all directories named \"0\" in the current directory tree and create a single tar archive of their RS* subdirectories","Bash":"find . -type d -name \"0\" -execdir tar -cvf ~\/home\/directoryForTransfer\/filename.tar RS* \\;"}
{"English":"Find all files that belongs to user Tecmint under \/home directory","Bash":"find \/home -user tecmint"}
{"English":"Find all files starting from the current directory that contain '.java' in their pathnames","Bash":"find . -print | grep '\\.java'"}
{"English":"Print a sorted list of the extensions of the regular files from the current directory tree","Bash":"find . -type f | grep -o -E '\\.[^\\.]+$' | sort -u"}
{"English":"Perform a dry run to recursively copy \"test\/a\" to \"test\/dest\" excluding \"test\/a\/b\/c\/d\"","Bash":"rsync -nvraL test\/a test\/dest --exclude=a\/b\/c\/d"}
{"English":"Change all cron jobs running \"anm.sh\" to be run every 10 minutes instead of 5 minutes.","Bash":"crontab -l | sed '\/anm\\.sh\/s#\\\/5#\\\/10#' | crontab -"}
{"English":"find all the files within your home folder accessed more than 100 days ago","Bash":"find ~ -atime 100"}
{"English":"List directories in the current working directory and remove the trailing \"\/\"","Bash":"ls -d *\/|sed 's|[\/]||g'"}
{"English":"recursively finds all files newer than a date","Bash":"find . -type f -newermt \"$(date '+%Y-%m-%d %H:%M:%S' -d @1494500000)\""}
{"English":"Copies all files like \"*FooBar*\" under the current directory to the '~\/foo\/bar' directory.","Bash":"find . -name '*FoooBar*' | sed 's\/.*\/\"&\"\/' | xargs cp ~\/foo\/bar"}
{"English":"Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page.","Bash":"tail -1000 file-with-line-too-long.txt | more"}
{"English":"Create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named 'folder9991000' inside the last 'folder998' directory","Bash":"mkdir -p folder$( seq -s \"\/folder\" 999 )1000"}
{"English":"Count the number of users logged in minus one","Bash":"who | sed 1d | wc -l"}
{"English":"Find all the files without permission 777 under current directory and show a few lines of output from the beginning","Bash":"find . -type f ! -perm 777 | head"}
{"English":"Print a single line of numbers from \"001\" to \"100\"","Bash":"yes | head -n 100 | awk '{printf( \"%03d \", NR )}'"}
{"English":"Find all OGG files in the home directory larger than 20 megabytes","Bash":"find $HOME -iname '*.ogg' -size +20M"}
{"English":"display all the regular\/normal files ending with \".mod\" in a folder","Bash":"find \"$dir\" -name \"*.mod\" -type f -print0"}
{"English":"Update timestamps of all files (not directories) under current directory.","Bash":"find . -exec touch {} \\;"}
{"English":"find all the files that have been modified exactly 1 day ago","Bash":"find -mtime 1"}
{"English":"Find all the SUID files in the current directory tree","Bash":"find . -perm \/u=s"}
{"English":"Find all directories under \/fss\/fin","Bash":"find \/fss\/fin -type d"}
{"English":"Find all files that were not accessed in the past 100 days","Bash":"find \/home -atime +100"}
{"English":"Print variable \"$opt\" with double quotes deleted","Bash":"echo \"$opt\" | tr -d '\"'"}
{"English":"Sort file \"a.csv\" by the first comma separated value of each line and print only unique entries","Bash":"tac a.csv | sort -u -t, -r -k1,1 |tac"}
{"English":"Read a line from standard input in an interactive shell into variable \"input\" with prompt \"Do that? [Y,n]\" and suggestion \"Y\"","Bash":"read -e -p \"Do that? [Y,n]\" -i Y input"}
{"English":"find all the files in the folder .\/machbook and change the owner of them to the user with id \"184\"","Bash":"find .\/machbook -exec chown 184 {} \\;"}
{"English":"Go to directory pointed by last element of array \"dirs\" in bash version 4.2","Bash":"cd \"${dirs[-1]}\""}
{"English":"Find all files whose names end with \"~\" in the \/home\/peter directory tree, following symlinks, and delete them","Bash":"find -L \/home\/peter -name *~ -exec rm '{}' \\;"}
{"English":"Print the list of the current directory's subdirectories","Bash":"find . -type d -maxdepth 1"}
{"English":"Find symbolic links in directory \/etc and below","Bash":"find \/etc -type l"}
{"English":"Search for ERROR in all btree*.c files under current directory","Bash":"grep ERROR $(find . -type f -name 'btree*.c')"}
{"English":"Search the current directory tree for regular files modified within the past 24 hours whose names do not end with \".DS_Store\"","Bash":"find . -mtime -1 ! -name '.DS_Store' -type f -printf '%f\\n'"}
{"English":"Execute `echo' for each file found","Bash":"find . | xargs -n 1 echo"}
{"English":"Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory","Bash":"md5sum *.java | grep 0bee89b07a248e27c83fc3d5951213c1"}
{"English":"Print file size and user name with color support for each file in the current directory tree","Bash":"tree -Csu"}
{"English":"Find all regular files in the current directory tree whose names end with \".DS_Store\" and delete them","Bash":"find . -type f -name '*.DS_Store' -ls -delete"}
{"English":"Print name of the block device containing the file system containing $path.","Bash":"df -P \"$path\" | awk 'BEGIN {FS=\"[ ]*[0-9]+%?[ ]+\"}; NR==2 {print $1}'"}
{"English":"Delete all files under and below the current directory","Bash":"find -mindepth 1 -delete"}
{"English":"List all files\/directories under current directory by replacing all spaces with commas (,)","Bash":"find . -ls | tr -s ' ' ,"}
{"English":"List and sort all leaf directories (directories which don't contain any sub-directory) under current directory","Bash":"find . -type d | sort | awk '$0 !~ last \"\/\" {print last} {last=$0} END {print last}'"}
{"English":"change the extension of all the \".abc\" files in the folder \"\/the\/path\" to \".edefg\" and do not change in the sub directories","Bash":"find \/the\/path -depth -name \"*.abc\" -exec rename 's\/\\.abc$\/.edefg\/' {} +"}
{"English":"Change owner to \"root\" and group to \"www-data\" of \"\/foobar\/test_file\"","Bash":"sudo chown root:www-data \/foobar\/test_file"}
{"English":"Set the exit code($?) to '0'.","Bash":"true"}
{"English":"Split \"file.txt\" excluding the first line into files with at most 20 lines each and a prefix \"split_\"","Bash":"tail -n +2 file.txt | split -l 20 - split_"}
{"English":"find al the tmp directories in the current directory and create a dump of it","Bash":"find . -type d -name tmp -prune -o -print | cpio -dump \/backup"}
{"English":"delete all the files ending with \"~\" in current folder","Bash":"find . -name \"*~\" -print | xargs rm"}
{"English":"Find all or single file called tecmint.txt under the \/ directory of owner root","Bash":"find \/ -user root -name tecmint.txt"}
{"English":"Print the last 10 commands in history","Bash":"history | tail"}
{"English":"Find all empty files starting from the current directory and delete them","Bash":"find . -type f -empty -print0 | xargs -0 \/bin\/rm"}
{"English":"Count the number of lines in each .java file in the current directory tree","Bash":"find . -name \"*.java\" -exec wc -l {} \\;"}
{"English":"Continuously send \"y\" as input to \"cat\" which outputs to \"more\"","Bash":"yes | cat | more"}
{"English":"Insert \"insert\" every 3 lines for the output of \"seq 1 10\"","Bash":"seq 1 10 | sed $': loop; n; n; a insert\\nn; b loop'"}
{"English":"find all sqlite files in the current directory.","Bash":"find .\/ -name \"*.sqlite\""}
{"English":"Enables shell option 'autocd'.","Bash":"shopt -s autocd"}
{"English":"Remove all files with names like \"vmware-*.log\" from the current directory tree","Bash":"find . -name vmware-*.log | xargs rm"}
{"English":"Print the names and sizes of all regular files from the current directory tree","Bash":"find . -type f -printf \"%f %s\\n\""}
{"English":"Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in","Bash":"find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}
{"English":"Print the input \"hello world\" followed by a swap of the first two awk fields","Bash":"echo hello world | tee  >(awk '{print $2, $1}')"}
{"English":"List all files in the current directory tree that were last modified yesterday or later","Bash":"find -newermt yesterday -ls"}
{"English":"Change to the directory pointed by variable TAG","Bash":"cd \"$TAG\""}
{"English":"display all the regular\/normal files in the folder \"\/home\/user\/demo\" which have the permission 777.","Bash":"find \/home\/user\/demo -type f -perm 777 -print"}
{"English":"display long listing of all regular\/normal files whose size is less than 50 bytes.","Bash":"find \/usr\/bin -type f -size -50c -exec ls -l '{}' ';'"}
{"English":"Find all directories under \/path\/to\/base\/cache, \/path\/to\/base\/tmp, \/path\/to\/base\/logs  and change their permission to 755","Bash":"find \/path\/to\/base\/cache \/path\/to\/base\/tmp \/path\/to\/base\/logs -type d -exec chmod 755 {} +"}
{"English":"Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals","Bash":"find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s\/[[:space:]]*$\/\/\""}
{"English":"List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest","Bash":"du -h --max-depth=0 * | sort -hr"}
{"English":"Locate all *.mov files in the current directory tree","Bash":"find . -name '*.mov'"}
{"English":"search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder","Bash":"find .\/ -type f -exec sed -i '' 's#NEEDLE#REPLACEMENT#' *.php {} \\;"}
{"English":"Follow symbolic links for the full path of \"lshw\"","Bash":"readlink -f $(which lshw)"}
{"English":"Split \"file.txt\" into files of at most 20 lines each with a prefix \"new\"","Bash":"split -l 20 file.txt new"}
{"English":"Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory","Bash":"find {} -name 'upvoter-*' -type f -or \\( -type l \\) -maxdepth 1 -perm +111"}
{"English":"Delete all empty directories in minimum 1 level down the directory 'directory'","Bash":"find directory -mindepth 1 -type d -empty -delete"}
{"English":"find file end with  '.txt' in current directory.","Bash":"find . -name \"*.txt\""}
{"English":"find files in \/tmp directory that named are core and deletes them","Bash":"find \/tmp -name core -type f -print | xargs \/bin\/rm -f"}
{"English":"Display a named character dump of \"test.sh\"","Bash":"od -a test.sh"}
{"English":"Copy \"\/Users\/username\/path\/on\/machine\/\" to \"username@server.ip.address.here:\/home\/username\/path\/on\/server\/\" and convert encoding from UTF-8-MAC to UTF-8","Bash":"rsync --iconv=UTF-8-MAC,UTF-8 \/Users\/username\/path\/on\/machine\/ 'username@server.ip.address.here:\/home\/username\/path\/on\/server\/'"}
{"English":"Counts lines in each *.php file.","Bash":"wc -l `find . -name \"*.php\"`"}
{"English":"Recursively removes all empty folders under current folder.","Bash":"find . -depth -type d -empty -exec rmdir {} \\;"}
{"English":"List the current directory recursively ignoring .\/src\/emacs\/ and all its contents","Bash":"find . -path .\/src\/emacs -prune -o -print"}
{"English":"display all the text files in the home folder ( case insensitive search )","Bash":"find \/home -iname \"*.txt\""}
{"English":"display all the files in current folder which are bigger than 10KB","Bash":"find . -size +10k"}
{"English":"display all files in the current folder","Bash":"find ."}
{"English":"Search the files from the current directory tree for \"foo\"","Bash":"find . -exec grep foo {} \\;"}
{"English":"Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character, ignoring path names containing \"test\"","Bash":"find . -regex \".*\/my.*p.$\" -a -not -regex \".*test.*\""}
{"English":"create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~)","Bash":"find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\) | cpio -pmd0 \/dest-dir"}
{"English":"change the ownership of all regular\/normal files in the current directory","Bash":"find . -type f | xargs chown username"}
{"English":"find all the configuration or text files in current directory","Bash":"find . -type f \\( -name \"*.conf\" -or -name \"*.txt\" \\) -print"}
{"English":"Print list of disk and mountpoint of disks matching \"\/dev\/sd*\"","Bash":"mount | awk '\/\\\/dev\\\/sd\/ {print NR, $1, $3}'"}
{"English":"Read a single character from standard input with prompt \"Are you sure? \"","Bash":"read -p \"Are you sure? \" -n 1 -r"}
{"English":"find all the files ending with \".coffee\" in the current folder and search for the first occurence of the word \"re\" in each line","Bash":"find . -name '*.coffee' -exec awk '\/re\/ {print;exit}' {} \\;"}
{"English":"Print the icmp sequence number and ping time of each request to \"127.0.0.1\"","Bash":"ping -c 2 -n 127.0.0.1 | awk -F'[ =]' -v OFS='\\t' 'NR>1 { print $6, $10 }'"}
{"English":"Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.","Bash":"find . -name \"FILE-TO-FIND\" -exec rm -rf {} +"}
{"English":"Count the number of files\/directories with '.php' extension under current directory tree and change the permissions to 755","Bash":"find . -name \"*.php\" -exec chmod 755 {} \\; -exec \/bin\/echo {} \\; | wc -l"}
{"English":"Find all files\/directories in level 1 down the $queue directory with all positional parameters appended with the find command","Bash":"echo \"$queue\" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*"}
{"English":"Print a sorted list of *.so files in the bla directory tree","Bash":"find bla -name *.so -print0 | sort -rz"}
{"English":"Delete all HTML files under tree ~\/mydir","Bash":"find ~\/mydir -iname '*.htm' -exec rm {} \\;"}
{"English":"Look in \/home\/dm and below for files with 'uniform' in their names","Bash":"find \/home\/dm -name \"*uniform*\""}
{"English":"Archive \"\/home\/path\" to \"path\" on host \"server\" showing progress and statistics and remove files in the destination not found in the source","Bash":"rsync -a --stats --progress --delete \/home\/path server:path"}
{"English":"Look for *log files in directories at least three levels down the directory tree","Bash":"find \/ -mindepth 3  -name \"*log\""}
{"English":"Search the *.code files from the current directory tree for string 'pattern'","Bash":"find . -name '*.code' -print0 | xargs -0 grep -H 'pattern'"}
{"English":"Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\\*\\.html' in their paths and show the matched lines along with the filenames","Bash":"find . -regex filename-regex.\\*\\.html -exec grep -H string-to-find {} \\;"}
{"English":"Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names","Bash":"find . -type f -name \"*.java\" -exec grep -il 'foo' {} \\;"}
{"English":"Search \/root\/directory\/to\/search recursively for the files matching pattern 'filename.*'","Bash":"find \/root\/directory\/to\/search -name 'filename.*'"}
{"English":"List all *.jar files\/directories under \/usr, \/home and \/tmp directory","Bash":"find \/usr \/home  \/tmp -name \"*.jar\""}
{"English":"Print the first line of \"filename\" as a hex dump of characters","Bash":"head -n 1 filename | od -c"}
{"English":"Change permission to 000 of all directories named '.texturedata' under '\/path\/to\/look\/in\/' directory tree","Bash":"find \/path\/to\/look\/in\/ -type d -name '.texturedata' -prune -print0 | xargs -0 chmod 000"}
{"English":"Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak","Bash":"find . -type f -name INPUT.txt -print0 | xargs -0 -I {}  sed -i.bak '\/^#\/d' {}"}
{"English":"Saves location of file $1 in 'dir_context' variable.","Bash":"dir_context=$(dirname -- \"$1\")"}
{"English":"Find all files named 'foo' under your home directory and list them with confirmation prompt","Bash":"find ~ -type f -name 'foo*' -ok ls -l '{}' ';'"}
{"English":"Compare the contents of gzip-ompressed files \"file1\" and \"file2\"","Bash":"diff <(zcat file1.gz) <(zcat file2.gz)"}
{"English":"Print the characters in $b that match with any character in $a without printing any whitespace in-between","Bash":"echo \"$b\" | grep --only-matching \"[$a]\" | xargs | tr --delete ' '"}
{"English":"Print IP addresses of the host name","Bash":"hostname -I | cut -d' ' -f1"}
{"English":"find all files having certain word in its name in the current folder","Bash":"find . -name \"*bsd*\" -print"}
{"English":"Search history for \"part_of_the_command_i_still_remember_here\"","Bash":"history | grep 'part_of_the_command_i_still_remember_here'"}
{"English":"For each .def file under the current directory, create an empty .def.out file with current timestamp.","Bash":"find . -name '*.def' | sed 's\/\\(.*\\)\/\\1.out\/' | xargs touch"}
{"English":"Find all *.txt file and replace old word to new word with sed command","Bash":"find  . -type f -name \"*.txt\" -exec sed 's\/TZ\/MALAWI\/g' {} \\;"}
{"English":"Find blabla* files under current directory","Bash":"find . -depth -name \"blabla*\" -type f | xargs rm -f"}
{"English":"Find all files\/directories in entire file system that are owned by \"shadow\" group","Bash":"find \/ -group shadow"}
{"English":"List directories under current directory","Bash":"find . -type d"}
{"English":"Append the contents of \".cwdhist\" file to the current in-memory history list","Bash":"history -r .cwdhist"}
{"English":"Display a long listing of all regular files that are less than 50 bytes in size under '\/usr\/bin' directory tree","Bash":"find \/usr\/bin -type f -size -50c -exec ls -l '{}' ';'"}
{"English":"Adjust the timestamp of 'filename' by subtracting 2 hours from it.","Bash":"touch -d \"$(date -r filename) - 2 hours\" filename"}
{"English":"Delete all files\/directories named 'FILE-TO-FIND' under current directory tree","Bash":"find . -name \"FILE-TO-FIND\" -exec rm -rf {} \\;"}
{"English":"Archive \"\/my\/dir\" on host \"server\" as user \"user\" to the current local directory excluding files ending in \".svn\"","Bash":"rsync -av --exclude '*.svn' user@server:\/my\/dir ."}
{"English":"Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command","Bash":"cat <(fgrep -i -v \"$command\" <(crontab -u test -l)) <(echo \"$job\") | crontab -u test -"}
{"English":"Find all files\/directories under '\/home\/user\/' directory tree whose status was changed exactly 10 minitues ago","Bash":"find \/home\/user\/ -cmin 10 -print"}
{"English":"Recursively change the owner to \"${JBOSS_USER}\" of \"$JBOSS_LOG_DIR\"","Bash":"chown -R ${JBOSS_USER}: $JBOSS_LOG_DIR"}
{"English":"Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries","Bash":"find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4"}
{"English":"List all file paths under the current directory with case insensitive name \".note\" in reverse alphabetic order","Bash":"find . -iname '.note' | sort -r"}
{"English":"change the permission of all the regular\/normal files in the current folder from 777 to 755","Bash":"find . -type f -perm 777 -exec chmod 755 {} \\;"}
{"English":"Filters only directories from long file listing of the current directory","Bash":"ls -l --color=always \"$@\" | egrep --color=never '^d|^[[:digit:]]+ d'"}
{"English":"find  case-insensitive StringBuffer in all *.java files","Bash":"find . -type f -name \"*.java\" -exec grep -il string {} \\;"}
{"English":"Make directory \"~\/log\"","Bash":"mkdir ~\/log"}
{"English":"Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries","Bash":"find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | cut -d ' ' -f 2"}
{"English":"Print file name without extension assuming there is only one dot in the file name.","Bash":"echo \"$FILE\" | cut -d'.' -f1"}
{"English":"Change directory to the download directory specified in the current user's user-dirs.dirs file","Bash":"cd \"$(grep DOWNLOAD $HOME\/.config\/user-dirs.dirs | cut -f 2 -d \"=\" | tr \"\\\"\" \"\\n\" | tr -d \"\\n\")\""}
{"English":"Download \"http:\/\/archive.ubuntu.com\/ubuntu\/pool\/universe\/s\/splint\/splint_3.1.2.dfsg1-2.diff.gz\", unzip it, and view the output in \"less\"","Bash":"curl -s 'http:\/\/archive.ubuntu.com\/ubuntu\/pool\/universe\/s\/splint\/splint_3.1.2.dfsg1-2.diff.gz' | gunzip -dc | less"}
{"English":"Add read and execute permission to every directory under the current directory","Bash":"find . -type d -exec chmod +rx {} \\;"}
{"English":"Find all the files in the current directory with \u201clinkin park\u201d in their names","Bash":"find . -maxdepth 1 -iname \"*linkin park*\""}
{"English":"Create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable 'tmpfile'","Bash":"tmpfile=$(mktemp $(dirname \"$file1\")\/XXXXXX)"}
{"English":"find all the files in the current folder (handles files which contain newlines or only spaces in their names)","Bash":"find . -print0 | xargs -0 -l -i echo \"{}\";"}
{"English":"Find all files under \/path and calculate their md5sum","Bash":"find \/path -type f -print0 | xargs -0 md5sum"}
{"English":"Find all *1234.56789* files\/directories under current directory","Bash":"find . -name '*1234.56789*'"}
{"English":"Remove all *.swp files\/directories under current directory","Bash":"find . -name \"*.swp\"-exec rm -rf {} \\;"}
{"English":"Copy all .txt files from the dir\/ directory tree along with their parent directories hierarchy","Bash":"find dir\/ -name '*.txt' | xargs cp -a --target-directory=dir_txt\/ --parents"}
{"English":"List the current directory recursively ignoring the \"dir1\" subdirectory","Bash":"find . -path .\/dir1\\*  -prune -o -print"}
{"English":"change the owner of all the files in the current directory","Bash":"find . -exec chown myuser:a-common-group-name {} +"}
{"English":"Find all the files\/directories in '\/path\/to\/files' directory tree which have not been modified in the last 2 hours","Bash":"find \"\/path\/to\/files\" -mmin +120"}
{"English":"Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory","Bash":"find . -name \"$1\" -type f -print0 | xargs -0 grep -i \"$2\""}
{"English":"Make directories and parents as needed for each file path in \"a.txt\" excluding the basename for each path","Bash":"cat a.txt | grep \/ | sed 's|\/[^\/]*$||' | sort -u | xargs -d $'\\n' mkdir -p"}
{"English":"Find all regular files in the current directory and its subdirectories.","Bash":"find . -type f"}
{"English":"Find *.c and *.h files under the current directory tree skipping hidden directories and files","Bash":"find . \\( -path '*\/.*' -prune -o ! -name '.*' \\) -a -name '*.[ch]'"}
{"English":"change the permissions of all the regular files in the folder root_dir to 444","Bash":"find root_dir -type f -exec chmod 444 {} \\;"}
{"English":"Recursively set all permissions under \"\/whatever\/your\/directory\/is\" to 755","Bash":"sudo chmod 755 -R \/whatever\/your\/directory\/is"}
{"English":"Append \"foo\" and \"bar\" column in file \"file\" with values dependent on the current table contents","Bash":"awk 'NR==1 {print $0, \"foo\", \"bar\"; next} {print $0, ($2==\"x\"?\"-\":\"x\"), ($4==\"x\"?\"-\":\"x\")}' file | column -t"}
{"English":"Prefix all files and folders in the current directory with \"PRE_\"","Bash":"ls | xargs -I {} mv {} PRE_{}"}
{"English":"List the regular files of the current directory tree that contain string \"texthere\"","Bash":"find -type f -exec grep -l \"texthere\" {} +"}
{"English":"display all the java script files in the current folder","Bash":"find . -name \"*.js\""}
{"English":"Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.","Bash":"kill -0 1"}
{"English":"Change the owner of all files in the current directory tree excluding those who match \".\/var\/foo*\" to \"www-data\"","Bash":"find . -not -iwholename '.\/var\/foo*' -exec chown www-data '{}' \\;"}
{"English":"Find all empty files in home directory","Bash":"find ~ -empty"}
{"English":"Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning","Bash":"find \/ -cmin -60 | head"}
{"English":"find all the files in the entire file system that have been accessed exactly  50 days ago","Bash":"find \/ -atime 50"}
{"English":"List all files bigger than 10000 blocks","Bash":"find . -type f -size +10000 -exec ls -al {} \\;"}
{"English":"Calculate md5 sum of empty string","Bash":"echo -n | md5sum"}
{"English":"Move \"caniwrite\" without clobbering into \"\/usr\/local\/bin\"","Bash":"mv -nv caniwrite \/usr\/local\/bin"}
{"English":"Find all files\/directories under current directory that match the case insensitive regex .\/\\(EA\\|FS\\)_.*","Bash":"find . -iregex '.\/\\(EA\\|FS\\)_.*'"}
{"English":"find all the files in current folder ending with \"ini\" and search for a word in all these files","Bash":"find . -name *.ini -exec grep -w PROJECT_A {} \\; -print | grep ini"}
{"English":"Prints full path to files in a current folder.","Bash":"ls -d $PWD\/*"}
{"English":"Report file system containing path to \/dir\/inner_dir\/ disk usage human-readable.","Bash":"df -h \/dir\/inner_dir\/"}
{"English":"Return the files that are newer than file `myfile'","Bash":"find \/ -newer myfile"}
{"English":"Find all files\/directories under directory '.cache\/chromium\/Default\/Cache\/' which are bigger than 100MB and which are atleast 1 level deep and delete them","Bash":"find .cache\/chromium\/Default\/Cache\/ -mindepth 1 -size +100M -delete"}
{"English":"Split \"\/tmp\/files\" into files of at most 1000 lines each","Bash":"split \/tmp\/files"}
{"English":"Set 644 permission to all regular files under current directory","Bash":"find . -type f -print0 | xargs -0 chmod 644"}
{"English":"ERROR - will overwrite the executable if it's not a symlink.","Bash":"sudo ln -sf \/usr\/local\/ssl\/bin\/openssl `which openssl`"}
{"English":"change owner and group of the current directory and all files into it to user and group andrew","Bash":"chown -R andrewr:andrewr *"}
{"English":"Find all regular files in the \"aaa\" directory","Bash":"find aaa\/ -maxdepth 1 -type f"}
{"English":"Find all *.php (case insensitive) and *.js files (case insensitive) under \/home\/jul\/here excluding  \/home\/jul\/here\/exclude\/* paths","Bash":"find \/home\/jul\/here -type f \\( -iname \"*.php\" -o -iname \"*.js\" \\) ! -path \"\/home\/jul\/here\/exclude\/*\""}
{"English":"List all files\/directories with spaces in their names under ~\/Library directory","Bash":"find ~\/Library -name '* *' -exec ls {} \\;"}
{"English":"Counts lines in file $file ignoring '\/\/' commented lines, lines with spaces only and empty lines.","Bash":"cat $file | sed '\/\\\/\\\/\/d' | sed '\/^\\s*$\/d' | wc -l"}
{"English":"Find all the files which were accessed 50 days ago","Bash":"find \/ -atime 50"}
{"English":"delete all the php files in the folder \/var\/www","Bash":"find \/var\/www\/*.php -type f -exec rm {} \\;"}
{"English":"Searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased 'png' pattern.","Bash":"apropos postscript | grep -i png"}
{"English":"Count the number of open files for PID \"$PYTHONPID\" every 2 seconds","Bash":"watch \"ls \/proc\/$PYTHONPID\/fd | wc -l\""}
{"English":"Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments","Bash":"find . -type f -iname '*'\"${1:-}\"'*' -exec ${2:-file} {} \\;"}
{"English":"search all files in the current folder which match the regular expression","Bash":"find . -regex \".*\/my.*p.$\" -a -not -regex \".*test.*\""}
{"English":"Make directories to \"\/tmp\/boostinst\" as needed and print a message for each created directory","Bash":"mkdir -pv \/tmp\/boostinst"}
{"English":"display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder","Bash":"find . -xdev -printf \u2018%s %p\\n\u2019 |sort -nr|head -20"}
{"English":"Search for files only that end with .php and look for the string $test inside those files","Bash":"find . -name \\*.php -type f -print0 | xargs -0 grep -Hn '$test'"}
{"English":"search for version in system.info files.","Bash":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/modules\/system\/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}
{"English":"remove all the core files in the temp file after user confirmation","Bash":"find \/tmp -name core -type f -print0 | xargs -0 \/bin\/rm -i"}
{"English":"Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '","Bash":"find . -exec echo ' List of files & Direcoty'   {} \\;"}
{"English":"Print the path composed of the current working directory and the directory containing \"$0\"","Bash":"echo `pwd`\/`dirname $0`"}
{"English":"search for all the regular\/normal files with the name \"access.log\" in the folder \/var\/www which are bigger than 100MB","Bash":"find \/var\/www -type f -name \u00abaccess.log*\u00bb -size +100M"}
{"English":"find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old","Bash":"find . -mtime +30 -a -mtime -7 -print0"}
{"English":"Find all 777 permission directories and use chmod command to set permissions to 755","Bash":"find . -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"Prints help on 'cp' utility.","Bash":"cp --help"}
{"English":"Recursively change the owner group of \"\/var\/www\" of to \"www-data\"","Bash":"sudo chown -R www-data:www-data \/var\/www"}
{"English":"Print a list of case insensitive duplicate filenames in the current directory","Bash":"ls | sort -f | uniq -i -d"}
{"English":"display a long listing of all the files in the current directory","Bash":"find . -name  * -exec ls -a {} \\;"}
{"English":"Print the physical current working directory","Bash":"echo \"`pwd -P`\""}
{"English":"change group of the file \/var\/lib\/php\/session  to group lighttpd","Bash":"chown -R :lighttpd \/var\/lib\/php\/session"}
{"English":"find all the regular\/normal files in the current folder","Bash":"find -type f"}
{"English":"display all the html files in the current folder that have been modified in the last 7*24 hours","Bash":"find . -mtime -7 -name \"*.html\" -print"}
{"English":"Recursively change all permissions under \"theDirectory\/\" to 777(read,write,execute for all users)","Bash":"sudo chmod -R 777 theDirectory\/"}
{"English":"Find all files named 'Makefile' in the \/usr\/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE.*CPAN'","Bash":"find \/usr\/ports\/ -name Makefile -exec grep '^MASTER_SITE.*CPAN' '{}' '+' | wc -l"}
{"English":"Find all files named \"MyCProgam.c\" (ignoring the case) and calculate each file's md5sum.","Bash":"find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}
{"English":"Create a symbolic link to file \"\/usr\/bin\/perl\" named with escaped characters \"\/usr\/local\/bin\/perl\\r\\n\"","Bash":"sudo ln -s \/usr\/bin\/perl \/usr\/local\/bin\/perl`echo -e '\\r'`"}
{"English":"display all the header files  and cpp files in the current folder","Bash":"find \\( -name '*.cpp' -o -name '*.h' \\) -print"}
{"English":"List all files under the current working directory with name \".htaccess\"","Bash":"find `pwd` -name .htaccess"}
{"English":"Compare *.csv files in the current directory tree with their analogs stored in \/some\/other\/path\/","Bash":"find . -name \"*.csv\" -exec diff {} \/some\/other\/path\/{} \";\" -print"}
{"English":"Search the current directory tree for files and directories with permissions 775","Bash":"find .  -perm 775 -print"}
{"English":"Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s\/[[:space:]]*$\/\/\""}
{"English":"List all files in the \/var directory tree whose size is greater than 10 megabytes","Bash":"find \/var\/ -size +10M -exec ls -lh {} \\;"}
{"English":"Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com","Bash":"dig TXT +short o-o.myaddr.l.google.com @ns1.google.com"}
{"English":"search all the files in the current folder and assign them to a variable","Bash":"files=`find .`"}
{"English":"show all the files in the current folder which has the word \"ITM\"","Bash":"find . -name \u2018*ITM*\u2019"}
{"English":"find all the files that have been modified in the last 1 day ago","Bash":"find -mtime -1"}
{"English":"Display an infinite number of lines consisting of \"y\", until the user presses the Q key.","Bash":"yes | more"}
{"English":"search for a word in all the files in the entire filesystem and display the matched fline along with the file name","Bash":"find \/ -type f -exec grep -Hi 'the brown dog' {} +"}
{"English":"Find all regular files starting from level 3 of directory tree ~\/container and move them to the current directory","Bash":"find ~\/container  -mindepth 3 -type f -exec mv {} . \\;"}
{"English":"Recursively compresses all files within $2 folder.","Bash":"find $2 -type f -exec bzip2 {} \\;"}
{"English":"Find files matching `.ssh*' and append their anmes to file `ssh-stuff'","Bash":"find \/ -name .ssh* -print | tee -a ssh-stuff"}
{"English":"search for php files  in current directory and search for a word in all these files","Bash":"find -name '*.php' -exec grep -iq \"fincken\" {} \\; -exec grep -iq \"TODO\" {} \\; -print"}
{"English":"Finds recursively and following symlinks from root folder all files that contain \"text-to-find-here\" and prints files names.","Bash":"grep -Ril \"text-to-find-here\" \/"}
{"English":"find all the files in the folder \"myfiles\" which have been modified exactly 48 hours back.","Bash":"find \/myfiles -mtime 2"}
{"English":"Find which ruby files under current directory contain the string 'jump'","Bash":"find . -name '*.rb' -exec grep -H jump {} \\;"}
{"English":"Save the number of matching executables for \"$cmd\" in $PATH to variable \"candidates\"","Bash":"candidates=$(which -a $cmd | wc -l)"}
{"English":"Find all files\/directories under current directory tree that belong to the user 'tom'","Bash":"find .\/ -user tom"}
{"English":"searches through the root filesystem (\"\/\") for the file named Chapter1.","Bash":"find \/ -name Chapter1 -type f -print"}
{"English":"Print all filenames under \/proc and below","Bash":"find \/proc | xargs"}
{"English":"Compare *.csv files in the current directory tree with their analogs stored in \/some\/other\/path\/ prompting before running `diff'","Bash":"find . -okdir diff {} \/some\/other\/path\/{} \";\""}
{"English":"Get the total size of all files under dir1 directory","Bash":"find dir1 ! -type d -printf \"%s\\n\" | awk '{sum += $1} END{printf \"%f\\n\", sum}'"}
{"English":"Searches through the \/usr\/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).","Bash":"find \/usr\/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}
{"English":"find all the files that have been modified in the last 24 hours","Bash":"find . -type f -mtime -1"}
{"English":"Archive \"fileToCopy\" to \"\/some\/nonExisting\/dirToCopyTO\" on host \"ssh.myhost.net\" via ssh","Bash":"rsync -ave ssh fileToCopy ssh.myhost.net:\/some\/nonExisting\/dirToCopyTO"}
{"English":"Remove all files that were older than 3 days","Bash":"find . -type f -mtime +3 \u2013exec rm \u2013f {} \\;"}
{"English":"Find all *.page (case insensitive) files\/directories under current directory and run ~\/t.sh for each of them with the file path as argument, then sort the output","Bash":"find . -iname *.page -exec ~\/t.sh {} \\; | sort"}
{"English":"Search the current directory tree for all files matching either pattern \"*.rb\" or pattern \"*.py\"","Bash":"find . -name \"*.rb\" -or -name \"*.py\""}
{"English":"Find SUID files","Bash":"find \/ -perm +u=s"}
{"English":"Find all symbolic links containg 'vim' in their names under '\/usr\/bin' directory tree","Bash":"find \/usr\/bin -name '*vim*' -type l"}
{"English":"Print file system disk space usage","Bash":"df"}
{"English":"ERROR - need to add -a or -r for recursive copy","Bash":"rsync --exclude='B\/' --exclude='C\/' . anotherhost:\/path\/to\/target\/directory"}
{"English":"Prints path to folder that contains file \"\/path\/to\/vm.vmwarevm\/vm.vmx\".","Bash":"dirname \"\/path\/to\/vm.vmwarevm\/vm.vmx\""}
{"English":"Search the directories that match pattern '\/path\/to\/directory\/folder{?,[1-4]?,50}' for .txt files","Bash":"find \/path\/to\/directory\/folder{?,[1-4]?,50} -name '*.txt'"}
{"English":"Recursively change ownership of \"\/usr\/local\/lib\" to the current user","Bash":"sudo chown -R `whoami` \/usr\/local\/lib"}
{"English":"Extract protocol part from URL.","Bash":"echo \"$url\" | cut -d':' -f1"}
{"English":"find  js file which name is not  'glob-for-excluded-dir'  under current directory.","Bash":"find . -name '*.js' -\\! -name 'glob-for-excluded-dir' -prune"}
{"English":"Change all files in the current directory tree to owner \"xx\"","Bash":"find . \\( \\! -user xx -exec chown -- xx '{}' + -false \\)"}
{"English":"Read a single character from standard input into variable \"runCommand\" with the prompt \"Pick a letter to run a command [A, B, or C for more info] \"","Bash":"read -n1 -p \"Pick a letter to run a command [A, B, or C for more info] \" runCommand"}
{"English":"Grab \"variable = value\" pairs from a windows style .ini file into the current shell.","Bash":"source <(grep = file.ini | sed 's\/ *= *\/=\/g')"}
{"English":"Find all regular files that reside in the current directory tree and were last modified 1 day ago","Bash":"find . -type f -mtime 0"}
{"English":"Print a hex dump of \"$DIREC\" as characters","Bash":"echo \"$DIREC\" | od -c"}
{"English":"create a soft link of the files in the folder \/media\/movies which have been modified in the last 30 days","Bash":"find \/media\/Movies -type f -mtime -30 -exec ln -s {} \/media\/Movies\/New\/ \\;"}
{"English":"Exit the shell immediately if an error is encountered","Bash":"set -e"}
{"English":"List all leaf directories (directories which don't contain any sub-directory) under current directory","Bash":"find -depth -type d |sed 'h; :b; $b; N; \/^\\(.*\\)\\\/.*\\n\\1$\/ { g; bb }; $ {x; b}; P; D'"}
{"English":"display all the users in the current folder that belong to the group \"sunk\"","Bash":"find . -type f -group sunk"}
{"English":"Calculate the md5 sum of all files in \"\/your\/dir\" including content and filenames and following symbolic links","Bash":"grep -aR -e . \/your\/dir | md5sum | cut -c-32"}
{"English":"List unique MD5 digests of all files in the current directory ending in .txt","Bash":"md5sum *.txt | cut -d ' ' -f 1 | sort -u"}
{"English":"find all files in the current folder that are modified exactly 2 minutes ago","Bash":"find -mmin 2 -print"}
{"English":"Find all files under foldername directory and set their permission to 644","Bash":"sudo find foldername -type f -exec chmod 644 {} \";\""}
{"English":"Read a line from standard input into variable \"message\" with escaped prompt \"Please Enter a Message: \\n\\b\"","Bash":"read -p \"$(echo -e 'Please Enter a Message: \\n\\b')\" message"}
{"English":"search for the directory \"config\" in the current folder and change directory to it","Bash":"cd `find . -name \"config\"`"}
{"English":"Remove all .txt files from the \/full\/path\/dir directory tree","Bash":"find \/full\/path\/dir -name '*.txt' -print0 | xargs -0 rm"}
{"English":"List all files with name \"someFile\" and their modification time under the current directory sorted by oldest modified to newest modified","Bash":"find . -name \"someFile\" -printf \"%p:%T@\\n\" | sort -t : -k2"}
{"English":"Find smallest file in the current directory with find commad","Bash":"find . -type f -printf \"%s\\t%p\\n\" | sort -n |head -1"}
{"English":"display a long listing of all the java files in the current folder in sorted order","Bash":"find . -type f -name '*.java' -ls | sort -k +7 -r"}
{"English":"Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago","Bash":"find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print"}
{"English":"Display human-readable file type description of ascii.txt","Bash":"file ascii.txt"}
{"English":"Print the contents of \"file\" in reverse order","Bash":"nl file | sort -nr | cut -b8-"}
{"English":"Append the current date in '%Y%m%d_%H%M' format with the basename of $0 and save it to variable 'LOGNAME'","Bash":"LOGNAME=\"`basename \"$0\"`_`date \"+%Y%m%d_%H%M\"`\""}
{"English":"Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.","Bash":"find . -mindepth 1 -maxdepth 1 -type d| grep \\\/a |xargs -n 1 cp -i index.html"}
{"English":"Display differences between \/tmp\/test1 and \/tmp\/test2.","Bash":"diff \/tmp\/test1  \/tmp\/test2"}
{"English":"Get second line from text contained in variable $data.","Bash":"echo \"$data\" | cut -f2 -d$'\\n'"}
{"English":"Find the most recently changed files in a subtree","Bash":"find . -type f -printf '%TY-%Tm-%Td %TT   %p\\n' | sort"}
{"English":"find all the files under '\/usr\/local' directory tree which have been modified exactly 24 hours ago","Bash":"find \/usr\/local -mtime 1"}
{"English":"Find broken symlinks","Bash":"find .\/ -follow -lname \"*\""}
{"English":"Join lines in file \"aa\" with lines in file \"bb\" if the lines share a common first word","Bash":"join <(sort aa) <(sort bb)"}
{"English":"search for a word in all the php files in the current folder and display the count of all matching lines.","Bash":"find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test' | wc -l"}
{"English":"Get domain name with 'google' from dig reverse lookup.","Bash":"dig -x 8.8.8.8| awk '\/PTR[[:space:]]\/ && \/google\/ {print $NF}'"}
{"English":"display all the files in the current folder which have been modified in the last 14*24 hours","Bash":"find . -mtime -14 -print"}
{"English":"show all the files in the entire file system which are bigger than 1.1GB","Bash":"find \/ -size +1.1G"}
{"English":"Print the file names along with their sizes under current directory tree","Bash":"find . -type f -printf \"%f %s\\n\""}
{"English":"find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1","Bash":"find . -name \\? -mtime -1"}
{"English":"Create intermediate directoriy path2 as required and directories a..z","Bash":"mkdir -p path2\/{a..z}"}
{"English":"display all files in current folder using regular expression","Bash":"find -regex \"$rx\""}
{"English":"Calculate the md5 sum of the tar archive of \"dir\"","Bash":"tar c dir | md5sum"}
{"English":"search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.","Bash":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}
{"English":"Gets IP addresses of all network interfaces.","Bash":"ifconfig | grep -E \"([0-9]{1,3}\\.){3}[0-9]{1,3}\" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d:"}
{"English":"Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"","Bash":"find . -name \"*bills*\" -print0 | xargs -0 grep put"}
{"English":"Find all symlinks under \/myfiles directory","Bash":"find \/myfiles -type l"}
{"English":"Find all files\/directories named 'my.txt' in the entire filesystem","Bash":"find \/ -name \"my.txt\""}
{"English":"find all the files in the entire file system that were modified in the last 10 minutes","Bash":"find \/ -mmin -10"}
{"English":"Sort file \"file\" by line","Bash":"sort file -o !#^"}
{"English":"find all .pm, .pl files in \/users\/tom and search for multiple pattern in same files and display the matched file names","Bash":"find \/users\/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'"}
{"English":"sort based on size and display top ten small normal\/regular files in the current folder","Bash":"find . -type f -exec ls -s {} \\; | sort -n | head -10"}
{"English":"Run perl -V (displays informations about perl's setup) in an empty environment.","Bash":"env -i perl -V"}
{"English":"Print only common strings in sorted content of files 'file1' and 'file2'","Bash":"comm -1 -2 <(sort file1) <(sort file2)"}
{"English":"Read a line from standard input with prompt \"Continue (y\/n)?\" and save response in variable \"CONT\"","Bash":"read -p \"Continue (y\/n)?\" CONT"}
{"English":"find all the files in the entire file system which belong to the user \"roger\"","Bash":"find \/ -user roger -print"}
{"English":"Find all regular files in the current directory and search them for \"example\"","Bash":"find -maxdepth 1 -type f | xargs grep -F 'example'"}
{"English":"Find all files\/directories under current directory that were accessed less than 1 day ago","Bash":"find . -atime -1 -print"}
{"English":"find all executable files","Bash":"find \/ -executable"}
{"English":"list the regular files in your home directory that were modified yesterday","Bash":"find ~\/ -daystart -type f -mtime 1"}
{"English":"display all the text files in the temp folder","Bash":"find \/tmp -name *.txt"}
{"English":"Search \/public\/html\/cosi for files whose name is \"wiki.phtml\"","Bash":"find \/public\/html\/cosi -name \"wiki.phtml\""}
{"English":"display all normal\/regular files in current directory","Bash":"find . -type f -print0"}
{"English":"remove all the regular\/normal files in the temp folder and do not delete in the sub folders","Bash":"find \/tmp -maxdepth 1 -type f -delete"}
{"English":"Unzip \"file.gz\", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent","Bash":"zcat file.gz | cut -f1 -d, | sort | uniq -c | sort -n"}
{"English":"Find all files\/directories under \/var\/www\/some\/subset and change their owner and group to www-data","Bash":"sudo find \/var\/www\/some\/subset -print0 | xargs -0 chown www-data:www-data"}
{"English":"return every file that does not have bar somewhere in its full pathname","Bash":"find . ! -path '*bar*' -print"}
{"English":"Immediately exit the shell if a command fails","Bash":"set -e"}
{"English":"Read a single character from standard input into variable \"doit\" with prompt \"Do that? [y,n]\"","Bash":"read -n1 -p \"Do that? [y,n]\" doit"}
{"English":"Search only for regular files","Bash":"find -type f"}
{"English":"Change directory to \"\/path\/to\/pdf\"","Bash":"cd  \/path\/to\/pdf"}
{"English":"Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.","Bash":"find .\/ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's\/^[0-9a-f]*\\ *\/\/;'"}
{"English":"split file data.csv into pieces per 100 lines","Bash":"split -l 100 date.csv"}
{"English":"Rename \"blah2\" to \"blah2-new\"","Bash":"mv blah2 blah2-new"}
{"English":"Find all files\/directories named 'Desktop' under current directory","Bash":"find .\/ -name Desktop"}
{"English":"display all the configuration files in the current folder which are in the current tree structure","Bash":"find .  -path '*\/*config'"}
{"English":"Display operating system type, ie. GNU\/Linux","Bash":"uname -o"}
{"English":"Clear the in-memory history","Bash":"history -c"}
{"English":"Search the directory tree given as variable $dir for regular files","Bash":"find $dir -type f"}
{"English":"display all text files in the folder \/tmp\/1 excluding those which do not have spaces in their names","Bash":"find \/tmp\/1 -iname '*.txt' -not -iname '[0-9A-Za-z]*.txt'"}
{"English":"Find all directories under present working directory","Bash":"find $PWD -type d"}
{"English":"display list of all the regular\/normal files in the home folder which are exactly 6579 bytes","Bash":"find \/home\/ -type f -size 6579c -exec ls {} \\;"}
{"English":"Search for \"YOURSTRING\" in all files under current directory","Bash":"grep YOURSTRING `find .`"}
{"English":"create and list filenames in the archive","Bash":"tar cf - $PWD|tar tvf -|awk '{print $6}'|grep -v \"\/$\""}
{"English":"Print lines 2960 to 2966 from the output of \"history\"","Bash":"history | sed -n '2960,2966p'"}
{"English":"Display a long listing of all files\/directories named 'file' under current directory tree","Bash":"find -name file -ls"}
{"English":"Change owner to \"root\" and group to \"dockerroot\" of \"\/var\/run\/docker.sock\"","Bash":"sudo chown root:dockerroot \/var\/run\/docker.sock"}
{"English":"Checks that 'monit' user is in 'www-data' group.","Bash":"groups monit |grep www-data"}
{"English":"Finds string with text \"string to be searched\" in any cased files like \"*.cs\" recursively in a current folder.","Bash":"find .\/ -type f -iname \"*.cs\" -print0 | xargs -0 grep \"content pattern\""}
{"English":"find all the php files in current folder and search for multiple patterns in these files and display the file names","Bash":"find -name '*.php' -exec grep -in \"fincken\" {} + | grep TODO | cut -d: -f1 | uniq"}
{"English":"Force delete all the regular\/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )","Bash":"find . -maxdepth 1 -type f -print0 | xargs rm -f"}
{"English":"Recursively change owner of all files in \"folder\" to \"user_name\"","Bash":"chown -R user_name folder"}
{"English":"Counts lines of \/etc\/fstab file.","Bash":"cat \/etc\/fstab | wc -l"}
{"English":"Execute \"ls -l\" every 2 seconds and highlight the differences in runs","Bash":"watch -d ls -l"}
{"English":"Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days","Bash":"find \"$DIR_TO_CLEAN\" -mtime +$DAYS_TO_SAVE | wc -l"}
{"English":"Display differences between \/destination\/dir\/1 and \/destination\/dir\/2 excluding files that match any pattern in file \"exclude.pats\".","Bash":"diff \/destination\/dir\/1 \/destination\/dir\/2 -r -X exclude.pats"}
{"English":"Find all files under current directory and set their permission to 775","Bash":"find . -type f -exec chmod 775 {} +"}
{"English":"force remove all the text files that have not been modified in the last 89 days","Bash":"find .  -name \"*.txt\" -type f -daystart -mtime +89 | xargs rm -f"}
{"English":"Prints strings with MAC address configuration of each network interface in system.","Bash":"ifconfig | grep HW"}
{"English":"Print the list of the current directory's subdirectories","Bash":"find -maxdepth 1 -type d"}
{"English":"Raise an error for using uninitialized variables","Bash":"set -u"}
{"English":"Print the largest 20 files under current directory","Bash":"find . -type f -printf '%s %p\\n' | sort -rn | head -20"}
{"English":"Find all the files recursively in directories or files taken from the glob pattern \/tmp\/test\/* that have been modified today","Bash":"find \/tmp\/test\/* -mtime -0"}
{"English":"Find all links to path\/to\/file","Bash":"find -L -samefile path\/to\/file"}
{"English":"Ping all hosts in file \"ips\" twice","Bash":"cat ips | xargs -i% ping -c 2 %"}
{"English":"Change the owner of \"process\" to \"root\"","Bash":"sudo chown root process"}
{"English":"Sets shell option 'nullglob'.","Bash":"shopt -s nullglob"}
{"English":"Replace \"string1\" with \"string2\" in all regular files in the current directory tree","Bash":"find .\/ -type f -exec sed -i 's\/string1\/string2\/g' {} \\;"}
{"English":"Pipe 3 newlines to sshe-keygen, answering prompts automatically.","Bash":"echo -e \"\\n\\n\\n\" | ssh-keygen -t rsa"}
{"English":"display all the files in the current folder excluding those that are present in the folder \"secret\"","Bash":"find . \\( -name 'secret' -a -prune \\) -o -print"}
{"English":"Find all directories under ~\/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :","Bash":"find ~\/code -type d | sed '\/\\\/\\\\.\/d' | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"Subtract each column in File2 from matching column in File1, output the result in a similarly formatted table","Bash":"awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1 | rev | column -t | rev"}
{"English":"Locate all files in the current directory and below that have \"testfile\" in their names","Bash":"find -name \"*testfile*\""}
{"English":"Find all the files in file system which are modified in last 1 hour","Bash":"find \/ -mmin -60"}
{"English":"display all the header files  and cpp files in the current folder","Bash":"find . -regex '.*\\.\\(cpp\\|h\\)'"}
{"English":"Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.","Bash":"source <( sed 's\/:\\(.*\\)\/=\"\\1\"\/' msgs.config )"}
{"English":"Forward all connections to client localhost 3309 via the SSH tunnel to \"mysql_access_server\" and then connect to host \"sqlmaster.example.com\" on port 3306","Bash":"ssh -f mysql_access_server -L 3309:sqlmaster.example.com:3306 -N"}
{"English":"Search for utility \"foo\" in PATH, display its file type description.","Bash":"file $(which foo)"}
{"English":"Display the host's ECDSA fingerprint using the sha256 hasing algorithm.","Bash":"ssh-keygen -l -f \/etc\/ssh\/ssh_host_ecdsa_key.pub"}
{"English":"Find all the Sticky Bit set files in entire file system whose permission are 551","Bash":"find \/ -perm 0551"}
{"English":"Find all the files in file system which are accessed in last 1 hour","Bash":"find \/ -amin -60"}
{"English":"Sort all files\/directories under current directory according to modification time and print only the recent 7 of them","Bash":"find -mindepth 1 -printf \"%T@ %P\\n\" | sort -n -r | cut -d' ' -f 2- | tail -n +7"}
{"English":"Find all files\/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files\/directories","Bash":"find \"$1\" -perm -u+x -print0 | xargs chmod g+x"}
{"English":"search for a word in all the files with the extension \"ch\" in the current folder","Bash":"find -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Search for \"foo\" in every file in the current directory and number the output","Bash":"grep foo * | nl"}
{"English":"find all gif files in the file system","Bash":"find \/ -name \"*gif\" -print"}
{"English":"Find all the Sticky Bit files whose permission are 551","Bash":"find \/ -perm 0551"}
{"English":"Find all regular files under and below \/home\/user\/demo\/","Bash":"find \/home\/user\/demo -type f -print"}
{"English":"Search the \/usr\/bin directory tree for regular files accessed more than 100 days ago","Bash":"find \/usr\/bin -type f -atime +100"}
{"English":"prints a line 19 lines from the line containing PATTERN","Bash":"tac | sed -n '\/PATTERN\/,+19{h;d};x;\/^$\/!{p;s\/.*\/\/};x' | tac"}
{"English":"List files larger than 10MB under \/var\/log \/tmp that haven't changed in a month","Bash":"find \/tmp \/var\/tmp -size +30M -mtime 31 -print0 | xargs -0 ls -l"}
{"English":"Look for SUID files and directories","Bash":"find \/ -perm +4000"}
{"English":"Find all files\/directories under 'A' directory tree excluding the paths containing the directory 'a'","Bash":"find A \\! -path \"A\/a\/*\""}
{"English":"display all the files in current folder which start with \"file2015-0\"","Bash":"find . -name \"file2015-0*\""}
{"English":"Display the last 3 characters of variable foo.","Bash":"echo $foo | rev | cut -c1-3 | rev"}
{"English":"Search the current directory and all of its sub-directories for the file 'file1'.","Bash":"find . -name file1 -print"}
{"English":"Enables shell options 'nullglob' and 'dotglob'.","Bash":"shopt -s nullglob dotglob"}
{"English":"perform a case insensitive search","Bash":"find  \/ -type d -iname \"apt\" -ls"}
{"English":"Save the user name of the current user to variable \"whoami\"","Bash":"whoami=$(whoami)"}
{"English":"Extract files from archive 'archive.tar'","Bash":"cat archive.tar | tar x"}
{"English":"search a url in all regular\/normal files in a folder.","Bash":"find .\/ -type f -exec grep https:\/\/www.ksknet.net {} \\;"}
{"English":"List all IP addresses assigned to current hostname, pausing for user interaction after each page.","Bash":"more \/etc\/hosts | grep '[[:space:]]*'`hostname`'[[:space:]]*' | awk '{print $1}'"}
{"English":"Answer \"y\" to any prompts in the interactive recursive removal of \"dir1\", \"dir2\", and \"dir3\"","Bash":"yes y | rm -ir dir1 dir2 dir3"}
{"English":"Search for 'birthday' (case insensitive) in all regular files under ~\/Documents directory tree and show only the filenames","Bash":"find ~\/Documents -type f -print0 | xargs -0 grep -il birthday"}
{"English":"display files ending with \".ext\" in current folder which are present in the file \"foo\"","Bash":"find . -type f -name \\*.ext | xargs grep foo"}
{"English":"Search the current directory tree for regular files omitting directory `omit-directory'","Bash":"find . \\( -name omit-directory -prune \\) -o \\( -type f -print \\)"}
{"English":"Find all CSS files","Bash":"find . -name \"*.css\""}
{"English":"Print the files in the current directory as a list of comma separated values","Bash":"ls | sed '$!s\/$\/,\/' | tr -d '\\n'"}
{"English":"exclude vendor and app\/cache dir, and search name which suffixed with php","Bash":"find . -name *.php -or -path \".\/vendor\" -prune -or -path \".\/app\/cache\" -prune"}
{"English":"Recursively removes all files and folders named '.svn' in a current folder.","Bash":"find . -name .svn | xargs rm -fr"}
{"English":"Find all regular files in the current directory tree that are not readable by anyone","Bash":"find . -type f ! -perm -444"}
{"English":"Find all *foo files\/directories under current directory (error prone)","Bash":"find . name *foo"}
{"English":"Find files\/directories in entire file system that were modified a day ago","Bash":"find \/ -mtime 1"}
{"English":"display all the home folder which end with the extension \"sxw\" and which have been accessed in the last 3*24 hours and which belong to the user bruno","Bash":"find \/home -type f -name \"*.sxw\" -atime -3 -user bruno"}
{"English":"Replace all commas with tab characters in 'filename.csv' and page interactively through the result.","Bash":"sed \"s\/,\/\\t\/g\" filename.csv | less"}
{"English":"display all regular\/normal files in current folder","Bash":"find . -type f"}
{"English":"Move all *.mp4 files from directory \/foo\/bar and its subdirectories to \/some\/path","Bash":"find \/foo\/bar -name '*.mp4' -exec mv -t \/some\/path {} +"}
{"English":"List all files\/directories under current directory with 'FooBar' in their names ensuring white space safety","Bash":"find . -name 'FooBar' -print0 | xargs -0"}
{"English":"Counts lines in each *.php file sorted by file path.","Bash":"find . -name '*.php' -type f | sort | xargs wc -l"}
{"English":"Search all files in the current directory tree whose names end in \"1\" for string \"1\"","Bash":"find . -name \"*1\" -print0 |xargs -0 grep \"1\""}
{"English":"find all the files in the current folder which have execute permission","Bash":"find . -executable"}
{"English":"Print the file sizes along with their paths for all *.txt (case insensitive) files\/directories under current directory tree","Bash":"find . -name \"*.txt\" -print0 |xargs -0 du -ch"}
{"English":"Find all *.jpg files under current directory and print only unique names","Bash":"find . -name \\*.jpg -exec basename {} \\; | uniq -u"}
{"English":"Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.","Bash":"cp \"${FILE}\" \"COLLECT\/$(mktemp job_XXXXXXXXX)\""}
{"English":"Search for hidden files non-recursively","Bash":"find . -name '.?*' -prune"}
{"English":"Print information of the root mount point","Bash":"mount -v | grep \" on \/ \""}
{"English":"Find files in entire file system that are writable by group or other","Bash":"find \/ -perm \/g=w,o=w"}
{"English":"Print the contents of \"numbers.txt\"","Bash":"cat numbers.txt"}
{"English":"Find files in the current directory tree whose names are of the form \"cxx_data.txt\" where xx is a number from 30 to 70","Bash":"find . -regextype posix-egrep -regex '.\\*c([3-6][0-9]|70).\\*'"}
{"English":"Recursively change the owner and group of all files in the current directory to \"apache\"","Bash":"ls | xargs chown -R apache:apache"}
{"English":"Search the \/media\/shared directory recursively for MP3 and OGG files","Bash":"find \/media\/shared \\( -iname \"*.mp3\" -o -iname \"*.ogg\" \\)"}
{"English":"Forcibly removes files  '\/tmp\/stored_exception', '\/tmp\/stored_exception_line', '\/tmp\/stored_exception_source'","Bash":"rm -f \/tmp\/stored_exception \/tmp\/stored_exception_line \/tmp\/stored_exception_source"}
{"English":"Compare each .xml file under the current directory with a file of the same name in \"\/destination\/dir\/2\"","Bash":"find . -name *.xml -exec diff {} \/destination\/dir\/2\/{} \\;"}
{"English":"search for all the files in current folder which start with \"file2015-0\" and move them to frst 400 fiiles  to another folder","Bash":"find . -name \"file2015-0*\" | head -400 | xargs -I filename mv  filename"}
{"English":"Print the list of files and directories of the \/etc directory","Bash":"find \/etc\/. ! -name \/etc\/."}
{"English":"Change permissions to 777 for all directories in the current directory tree","Bash":"find . -type d -exec chmod 777 {} \\;"}
{"English":"Find all *-* files under current directory","Bash":"find . -type f -name '*-*'"}
{"English":"Find all files\/directories that start with 'readme' (case insensitive) in their names under '\/usr\/share\/doc' directory tree","Bash":"find \/usr\/share\/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'"}
{"English":"Recursively search current directory for all files with name ending with \".t1\", change this to .t2","Bash":"find . -name \"*.t1\" -exec rename 's\/\\.t1$\/.t2\/' '{}' \\;"}
{"English":"Print numbers from 1 to 30 with 0 padding to a width of 2","Bash":"seq -f \"%02g\" 30"}
{"English":"Check if directory $some_dir is empty","Bash":"find \"`echo \"$some_dir\"`\" -maxdepth 0 -empty"}
{"English":"change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.","Bash":"find . \\( -type f -exec sudo chmod 664 \"{}\" \\; \\) , \\( -type d -exec sudo chmod 775 \"{}\" \\; \\)"}
{"English":"Find all the files whose name is FindCommandExamples.txt in the current working directory","Bash":"find \/root -name FindCommandExamples.txt"}
{"English":"Create new crontab set including $job and only jobs from current crontab that don`t contain $command","Bash":"cat <(fgrep -i -v \"$command\" <(crontab -l)) <(echo \"$job\") | crontab -"}
{"English":"Compare column 3 with column 2 of the next line in \"file\" and format output as a table","Bash":"awk 'NR==1 { print; next } { print $0, ($1 == a && $2 == b) ? \"equal\" : \"not_equal\"; a = $1; b = $3 }' file | column -t"}
{"English":"Set variable \"b\" to the first word of \"a\" converted to uppercase.","Bash":"b=`echo \"$a\" | awk '{ print toupper($1) }'`"}
{"English":"Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2","Bash":"find Folder1 \\( ! -name 'Image*-70x70*' -a ! -name 'Image*-100x100*' \\) | xargs -i% cp -p % Folder2"}
{"English":"Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH","Bash":"find \"$SEARCH_PATH\" -name 'pattern' | rev | cut -d'\/' -f3- | rev"}
{"English":"Split \"domains.xml\" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of \"domains_\"","Bash":"split -a 4 -d -l 50000 domains.xml domains_"}
{"English":"display all the html files in the folder \/var\/www","Bash":"find \/var\/www -type f -name \"*.html\""}
{"English":"search for the word \"mysql\" in all the files in the current containing the word \"notes\" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names","Bash":"find . -iname \"*notes*\" -print0 | xargs -I{} -0 grep -i mysql \"{}\""}
{"English":"Remove all files last modified more than 10 days ago from the current directory tree","Bash":"find . -mtime +10 | xargs rm"}
{"English":"Recursively lists all files in a current folder in long format, sorting by modification time.","Bash":"ls -ldt $(find .)"}
{"English":"Change permissions to 644 for all directories under and below \/path\/to\/someDirectory\/","Bash":"find \/path\/to\/someDirectory -type d -print0 | xargs -0 sudo chmod 755"}
{"English":"Recursively change the owner of all files in \"\/usr\/local\/lib\/node_modules\" to the current user","Bash":"sudo chown -R $USER \/usr\/local\/lib\/node_modules"}
{"English":"display all the files in the current folder which have are bigger than 1KB","Bash":"find . -size +1024 -print"}
{"English":"Find all files\/directories that contain 'target' (case insensitive) in their names under current directory no-recursively","Bash":"find -maxdepth 1 -iname \"*target*\""}
{"English":"Rename \"file001abc.txt\" to \"abc1.txt\"","Bash":"mv file001abc.txt abc1.txt"}
{"English":"Compress regular files in the current directory tree that were last modified more than 7 days ago","Bash":"find . -type f  -mtime +7 | tee compressedP.list | xargs compress"}
{"English":"Send each byte in \"\/home\/cscape\/Desktop\/table.sql\" to awk","Bash":"fold -1 \/home\/cscape\/Desktop\/table.sql  | awk '{print $0}'"}
{"English":"find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.","Bash":"find $HOME -type f -atime +30 -size 100k"}
{"English":"Change directory to the download directory specified in the current user's user-dirs.dirs file","Bash":"cd \"$(grep DOWNLOAD $HOME\/.config\/user-dirs.dirs | cut -f 2 -d \"=\" | tr \"\\\"\" \"\\n\")\""}
{"English":"display all text files in current folder","Bash":"find . -name \".txt\""}
{"English":"Find recursively all Python files in the current directory tree and count the number of lines in them","Bash":"find . -name '*.py' | xargs wc -l"}
{"English":"Counts all non-blank lines in the $i file.","Bash":"sed '\/^\\s*$\/d' $i | wc -l ## skip blank lines"}
{"English":"Request that the master ssh connection \"officefirewall\" exits","Bash":"ssh -O exit officefirewall"}
{"English":"Create a tar archive with all *.java files under the current directory","Bash":"find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"}
{"English":"Search for files that are at least 1.1GB","Bash":"find \/ -size +1.1G"}
{"English":"Recursively change ownership of \"\/usr\/local\/lib\/node_modules\" to the current user","Bash":"sudo chown -R `whoami` \/usr\/local\/lib\/node_modules"}
{"English":"Recursively prints all folders in a current folder that contain files like \"*.class\".","Bash":"find . -name \"*.class\" -print0 | xargs -0 -n1 dirname | sort --unique"}
{"English":"Remove duplicate phrases and keep the original order of lines in \"$infile\"","Bash":"nl -w 8 \"$infile\" | sort -k2 -u | sort -n | cut -f2"}
{"English":"Find files in the current directory tree that have one link","Bash":"find . -links 1"}
{"English":"Make directory \"\/cpuset\"","Bash":"mkdir \/cpuset"}
{"English":"Silently read exactly 1 character ignoring any delimiters  into variable \"SELECT\"","Bash":"read -s -N 1 SELECT"}
{"English":"Print revesed second from the end dot-bounded field in $i value","Bash":"j=`echo $i | rev | cut -d \".\" -f2`;"}
{"English":"extract 'archive.tar.gz' to \/destination","Bash":"gzip -dc archive.tar.gz | tar -xf - -C \/destination"}
{"English":"Dry run making directories in \"\/TARGET_FOLDER_ROOT\/\" for each \".mov\" file in the current directory tree","Bash":"find . -type f -iname \\*.mov -printf '%h\\n' | sort | uniq | xargs -n 1 -d '\\n' -I '{}' echo mkdir -vp \"\/TARGET_FOLDER_ROOT\/{}\""}
{"English":"Find all 777 permission files\/directories under current directory tree","Bash":"find -perm 777"}
{"English":"Find all directories under \/home\/me\/target_dir_1","Bash":"find \/home\/me\/target_dir_1 -type d"}
{"English":"Find all files under current directory and change their permission to 600","Bash":"find . -type f -exec chmod 600 {} \\;"}
{"English":"Search for \"pattern\" in \"file\" and join each line by a space","Bash":"cat file | grep pattern | paste -sd' '"}
{"English":"find the most recently changed files under current directory","Bash":"find . -type f -printf '%TY-%Tm-%Td %TT   %p\\n' | sort"}
{"English":"Make all the bugzilla subdirectories permission 775","Bash":"find bugzilla -type d -exec chmod 775 {} \\;"}
{"English":"List all files in the current directory tree that were modified 60 minutes ago","Bash":"find . -mmin 60 -print0 | xargs -0r ls -l"}
{"English":"Create a ssh tunnel on local port 2222 through \"bridge.example.com\" to \"remote.example.com\" port 22 without executing any commands and run in the background","Bash":"ssh -N -L 2222:remote.example.com:22 bridge.example.com&"}
{"English":"List all environment variables whose name contains 'ipo', showing only the names of the variables and not their values.","Bash":"env | grep ipo | awk 'BEGIN {FS=\"=\"} ; { print $1 } '"}
{"English":"recursively change owner and group of the directory and all files into it to user \"user\" and group \"www-data\"","Bash":"chown -R user:www-data yourprojectfoldername"}
{"English":"Execute command \"$cmd_str\" on host \"$SERVER\" as user \"$USER\"","Bash":"ssh \"$USER@$SERVER\" \"$cmd_str\""}
{"English":"Set the 'xtrace' shell option","Bash":"set -x"}
{"English":"Append the contents of \"file.txt\" to the current in-memory history list","Bash":"history -r file.txt"}
{"English":"Remove all files from the current directory tree whose names do not end with \".tex\" or \".bib\"","Bash":"find . | egrep -v \"\\.tex|\\.bib\" | xargs rm"}
{"English":"Find all files\/directories under whatever and ... directory and copy them to \/var\/tmp","Bash":"find whatever ... | xargs -d \"\\n\" cp -t \/var\/tmp"}
{"English":"Get the path of running Apache","Bash":"ps -ef | grep apache"}
{"English":"Make directories to \"$TARGET_PATH\" as needed without causing an error if it exists","Bash":"mkdir -p \"$TARGET_PATH\""}
{"English":"Find all *.cpp files in the current directory tree that contain \"sub\" in their names","Bash":"find . -name \"*sub*.cpp\""}
{"English":"Move all *.data files\/directories in $S directory to $S\/data\/ directory","Bash":"find \"${S}\" -name '*.data' -exec mv '{}' \"${S}\/data\/\" \\;"}
{"English":"Make directory \"certs\"","Bash":"mkdir certs\/"}
{"English":"Recursively removes all files like '*.pyc' in a current folder.","Bash":"find . -name \"*.pyc\"|xargs rm -rf"}
{"English":"Delete all lines matching \"pattern to match\" in \".\/infile\" and make a backup with suffix \".bak\"","Bash":"sed -i.bak '\/pattern to match\/d' .\/infile"}
{"English":"display the filename and size of all the files in the file system which are bigger than 20MB","Bash":"find \/ -type f -size +20000k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}
{"English":"Find out all hard links in the \/home directory to file1","Bash":"find \/home -xdev -samefile file1"}
{"English":"Recursively changes group ownership of the $PATH_TO_OUTPUT_FOLDER directory to $GROUP group.","Bash":"chgrp -R $GROUP $PATH_TO_OUTPUT_FOLDER"}
{"English":"Filters only directories from long file listing of the current directory.","Bash":"ls -l | grep \"^d\""}
{"English":"Recursively copy all files matching \"*.sh\" in \"$from\" to \"root@$host:\/home\/tmp\/\" compressing data during transmission","Bash":"rsync -zvr --exclude=\"*\" --include=\"*.sh\" --include=\"*\/\" \"$from\" root@$host:\/home\/tmp\/"}
{"English":"find all the files in the home folder which have been modified today","Bash":"find ~ -type f -mtime 0"}
{"English":"Find all files\/directories not with the name 'query_to_avoid' under current directory","Bash":"find \\! -name \"query_to_avoid\""}
{"English":"Search the current directory tree for *cache, *xml, and *html files","Bash":"find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}
{"English":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","Bash":"find . -name \\*.c -exec grep wait_event_interruptible {} \/dev\/null \\;"}
{"English":"find all the files in current directory of size greater than 2GB.","Bash":"find . -size +2G"}
{"English":"List the unique tab delimited field number \"$FIELD\" in all files, prefix with the number of occurrences, sort from most frequent to least frequent","Bash":"cut -f $FIELD * | sort| uniq -c |sort -nr"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in \/var\/log directory and create an archive (file.tar) of the last file found","Bash":"find \/var\/log\/ -iname anaconda.* -exec tar -cvf file.tar {} \\;"}
{"English":"Check that the master ssh connection \"officefirewall\" is running","Bash":"ssh -O check officefirewall"}
{"English":"display a long list of all the jpg files in the home folder","Bash":"find ~ -iname '*.jpg' -exec ls {} \\;"}
{"English":"Find all regular files under current directory non-recursively that have execute permission set for all (user, group and other)","Bash":"find . -maxdepth 1 -type f -perm -uga=x"}
{"English":"Split \"$INFILE\" into files of at most \"$SPLITLIMT\" with a numeric suffix and a prefix \"x_\"","Bash":"split -d -l $SPLITLIMT $INFILE x_"}
{"English":"Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.","Bash":"echo \"$COMMANDS\"$'\\n'\"$ALIASES\" | sort -u"}
{"English":"find all the file which name (name can contains space) end with c or h and content contain 'thing'","Bash":"find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}
{"English":"Find all the regular files under directory 'dir1' that are at least N levels deep","Bash":"find dir1 -mindepth N -type f"}
{"English":"Find all files\/directories under current directory tree that are newer than backup.tar.gz by modification time","Bash":"find . -newer  backup.tar.gz"}
{"English":"Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout","Bash":"bzip2 file | tee -a logfile"}
{"English":"Dump the character output of 'echo `echo \"Ho ho ho\"`'","Bash":"echo `echo \"Ho ho ho\"` | od -c"}
{"English":"Find all files on the system whose names are 'autoload.php'","Bash":"find \/ -name autoload.php"}
{"English":"search all undo files(ending with .undo) in the current folder and calculate the total size of them","Bash":"find -name '*.undo' -exec wc -c {} + | tail -n 1 | cut -d' ' -f 1"}
{"English":"Print all logins formatted as \"The user USER is on TTY\" where USER is the user name and TTY is the login terminal","Bash":"who | awk '{print \"The user \" $1 \" is on \" $2}'"}
{"English":"Find all .js files in the current directory tree that do not contain a whitespace","Bash":"find . -type f -name '*.js' \\( -exec grep -q '[[:space:]]' {} \\; -o -print \\)"}
{"English":"Reports count of processors in system.","Bash":"grep '^core id' \/proc\/cpuinfo |sort -u|wc -l"}
{"English":"Counts lines in each of *.php files in current folder with subfolders and prints total count as well.","Bash":"find . -name '*.php' | xargs wc -l | sort -r"}
{"English":"Stores system load average number in the 'proc_load_average' variable.","Bash":"proc_load_average=$(w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.')"}
{"English":"Search the src\/ directory recursively for .c and .h files","Bash":"find src\/ -name '*.[ch]'"}
{"English":"Show a long listing of files not modified in over 20 days or not accessed in over 40 days","Bash":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}
{"English":"Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory","Bash":"find %s -iname *.css | xargs sed -i s\/[Ff][Oo][Oo]\/bar\/g"}
{"English":"Removes all empty folders that ends with any-cased '*.bak' under '\/Users\/' path.","Bash":"find \/Users -type d -iname '*.bak' -print0 | xargs -0 rmdir"}
{"English":"Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.","Bash":"kill -9 18581 18582 18583"}
{"English":"Delete all files named 'sample' (case insensitive) under '\/home\/user\/Series' directory tree with superuser privilege","Bash":"sudo find \/home\/user\/Series\/ -iname sample -exec rm {} \\;"}
{"English":"Prints groups list that current user belongs to.","Bash":"groups                                        \/\/take a look at the groups and see"}
{"English":"Print your\/dir if it's empty","Bash":"find your\/dir -prune -empty"}
{"English":"Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in \".log\"","Bash":"sudo find \/ -xdev -type f -size +100000 -name \"*.log\" -exec gzip {} \\; -exec echo {} \\;"}
{"English":"Find a size of only the target directory in MB format","Bash":"du -s --block-size=M \/path\/to\/your\/directory\/"}
{"English":"display a long listing of all the empty files in the entire file system which are empty","Bash":"find \/ -type f -size 0 -exec ls -l {} \\;"}
{"English":"displays all files in the current directory","Bash":"find ."}
{"English":"Find all files\/directories under _CACHE_* directories","Bash":"find _CACHE_*"}
{"English":"search in all the regular\/normal files of the current folder for the word \"word\" and display the matched file name","Bash":"find . -type f -exec grep -l \"word\" {} +"}
{"English":"Save $line line in history","Bash":"history -s \"$line\""}
{"English":"Delete all files in the current directory.","Bash":"find . -exec \/bin\/rm {} \\;"}
{"English":"List the z* links in the \/usr\/bin directory with inode information and the file to which it points to","Bash":"find \/usr\/bin -type  l  -name \"z*\" -ls"}
{"English":"Remove the files or directories 'bin\/node', 'bin\/node-waf', 'include\/node', 'lib\/node', 'lib\/pkgconfig\/nodejs.pc' and 'share\/man\/man1\/node' with superuser privilege","Bash":"sudo rm -rf bin\/node bin\/node-waf include\/node lib\/node lib\/pkgconfig\/nodejs.pc share\/man\/man1\/node"}
{"English":"Read one character from standard input into variable \"REPLY\"","Bash":"read -n 1 -r"}
{"English":"Output the last slash-separated component of specified path, in this case \"data_report_PD_import_script_ABF1_6\"","Bash":"basename \/EBF\/DirectiveFiles\/data_report_PD_import_script_ABF1_6"}
{"English":"Find regular files under \/ that contain \"stringtofind\" and clear out their contents","Bash":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '\/.\/d' {} \\;"}
{"English":"Read the history file and append the contents to the history list","Bash":"history -r"}
{"English":"Find all files under \/home\/feeds\/data without descending into *def\/incoming* and *456\/incoming* paths","Bash":"find \/home\/feeds\/data -type f -not -path \"*def\/incoming*\" -not -path \"*456\/incoming*\""}
{"English":"Print true directory name of the current directory","Bash":"readlink `pwd`"}
{"English":"set a crontab to create or update the timestamp of \"washere2\" in the current directory every 30 minutes.","Bash":"echo \"30 * * * * touch $(pwd)\/washere2\" | crontab"}
{"English":"Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05","Bash":"find . -type f -name \"*\" -newermt 2013-12-04 ! -newermt 2013-12-05 | xargs -I {} tar -czvf files.tar.gz {}"}
{"English":"Find the .groovy files outside the \".\/target\" directory path","Bash":"find .  -name \"*.groovy\" -not -path \".\/target\/*\" -print"}
{"English":"find all regular\/normal files in the current folder that have been modified in the last 120 hours","Bash":"find -mtime -5 -type f -print"}
{"English":"Print the empty files\/directories among empty1, empty2 and not_empty","Bash":"find empty1 empty2 not_empty -prune -empty"}
{"English":"create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)","Bash":"find . -name '*.log' -mtime +3 -print0 | xargs -0 -P 4 bzip2"}
{"English":"Copy the standard output of a \"bash\" session to \"\/var\/log\/bash.out.log\"","Bash":"bash | tee \/var\/log\/bash.out.log"}
{"English":"Print either \"one\" or \"two\" randomly three times","Bash":"yes $'one\\ntwo' | head -10 | nl | sort -R | cut -f2- | head -3"}
{"English":"List jobs and their process ids and print them by replacing newline with '^'","Bash":"joblist=$(jobs -l | tr \"\\n\" \"^\")"}
{"English":"Saves 'tmux' version in the 'tmux_version' variable.","Bash":"tmux_version=\"$(tmux -V | cut -c 6-)\""}
{"English":"Print the list of the subdirectories of \/path\/to\/dir","Bash":"find \/path\/to\/dir\/ -mindepth 1 -maxdepth 1 -type d"}
{"English":"Returns exit code 1.","Bash":"false"}
{"English":"display the directory name along with the modified time  for all the files \/var","Bash":"find \/var -maxdepth 2 -type d -printf \"%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\\n\""}
{"English":"Delete files \"*doc copoy\" in directory tree \/mnt\/zip","Bash":"find \/mnt\/zip -name \"*doc copy\" -execdir rm \"{}\" \\;"}
{"English":"Search the current directory tree for files named \"somename\", case insensitive","Bash":"find -iname 'somename'"}
{"English":"Replace spaces in directory names with underscores for all directories in the current directory tree","Bash":"find -name \"* *\" -type d | rename 's\/ \/_\/g'"}
{"English":"Exit the shell immediately if an error is encountered","Bash":"set -o errexit"}
{"English":"Report file system containing \/example disk usage in kilobytes.","Bash":"df -k \/example"}
{"English":"archive all the normal\/regular files in the current directory which have been modified in the last 24 hours.","Bash":"find . -mtime -1 -type f -exec tar rvf \"$archive.tar\" '{}' \\;"}
{"English":"Print the current directory tree with file permissions","Bash":"tree -p"}
{"English":"Prints long recursive listing of all content of a root folder, saving output to 'output.file'.","Bash":"ls -lR \/ | tee output.file"}
{"English":"Print the file sizes along with their paths for all *.txt (case insensitive) files\/directories under current directory tree","Bash":"find . -iname \"*.txt\" -exec du -b {} +"}
{"English":"search for the word \"methodNameHere\" in all the python files in the folder \"\/mycool\/project\/\" and display color on the matched lines in the output","Bash":"find \/mycool\/project\/ -type f -name \"*.py\" -print0 | xargs -I {} -0 grep -H --color \"methodNameHere\" \"{}\""}
{"English":"Delete all \".DS_Store\" files\/directories under test directory","Bash":"find test -name \".DS_Store\" -delete"}
{"English":"Find all *.rb (regular) files under current directory and print them on stdout putting the file name\/path in-between two string literals 'Hello,' and '!'","Bash":"find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"}
{"English":"Search the \/tmp\/ directory recursively for files matching regular expression \".*file[0-9]+$\"","Bash":"find \/tmp -regex \".*file[0-9]+$\""}
{"English":"Copy the directory hierarchy of the current directory to \"destdir\"","Bash":"find . -type d | cpio -pdvm destdir"}
{"English":"Find all files\/directories named 'java' under \/usr directory","Bash":"find \/usr -name java"}
{"English":"Rename all files in the current directory to the md5 sum followed by the extension and print the conversions","Bash":"md5sum * | sed -e 's\/\\([^ ]*\\) \\(.*\\(\\..*\\)\\)$\/mv -v \\2 \\1\\3\/e'"}
{"English":"Go to directory \/cygdrive\/c\/Program Files (x86) using backslashes to escape special characters","Bash":"cd \/cygdrive\/c\/Program\\ Files\\ \\(x86\\)"}
{"English":"Find files owned by the \"shadow\" group","Bash":"find \/ -group shadow"}
{"English":"Find all files in and below the home directory that have been modified in the last 90 minutes","Bash":"find ~ -mmin -90"}
{"English":"Change to folder where the oracle binary is.","Bash":"cd \"$(dirname \"$(which oracle)\")\""}
{"English":"Unzip all files matching \"\/homes\/ndeklein\/mzml\/*.gz\"","Bash":"ls \/homes\/ndeklein\/mzml\/*.gz | xargs -I {} gunzip {}"}
{"English":"Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.","Bash":"find foo -type f ! -name '*Music*' -exec cp {} bar \\;"}
{"English":"Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.","Bash":"$ ls -Fltr"}
{"English":"display all files in the current folder which do not belong to the user john","Bash":"find . ! -user john"}
{"English":"change owner of the files into directory \"\/mydir\" with \".txt\" extension to user root","Bash":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}
{"English":"Show the current UTC date in '%Y-%m-%dT%k:%M:%S%z' format","Bash":"date -u '+%Y-%m-%dT%k:%M:%S%z'"}
{"English":"List all files that are between 10000 and 32000 bytes in size","Bash":"find . -size +10000c -size -32000c -print"}
{"English":"List all files in current directory whose name or file type description contains the word \"ASCII\".","Bash":"file * | grep ASCII"}
{"English":"display all files in current folder and follow the symbolic links and display the pointed file","Bash":"find -L ."}
{"English":"Find files under \/tmp that are larger than 10KB and smaller than 20KB","Bash":"find \/tmp -size +10k -size -20k"}
{"English":"Look in the current directory and below for all files whose names begin with either \"my\" or \"qu\"","Bash":"find . \\( -name \"my*\" -o -name \"qu*\" \\) -print"}
{"English":"Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem","Bash":"find \/ -type f -user bluher -exec ls -ls {}  \\;"}
{"English":"Log in using key file \".\/device_id.pem\" as user \"deviceuser\" on host \"middle.example.org\" and port 2222","Bash":"ssh -i .\/device_id.pem -p 2222 deviceuser@middle.example.org"}
{"English":"delete all the files in the file system which belong to the user edwarda after user confirmation","Bash":"find \/ -user edwarda -ok rm \"{}\" \\;"}
{"English":"Search regular files from the \/path\/to\/dir directory tree for lines that contain \"_START\" and are enclosed in lines \"@GROUP\" and \"@END_GROUP\"","Bash":"find \/path\/to\/dir -type f -exec sed '\/@GROUP\/,\/@END_GROUP\/!d' {} \\; | grep '_START'"}
{"English":"Find all files\/directories named 'photo.jpg' under current directory tree","Bash":"find -name photo.jpg"}
{"English":"Find all directories under 'test' directory tree that match the regex '[course*]' in their paths","Bash":"find test -regex \"[course*]\" -type d"}
{"English":"Search the regular files of the current directory tree for string \"whatever\"","Bash":"find . -type f -exec grep -H whatever {} \\;"}
{"English":"Print a sorted list of all .jpg files in the current directory and below","Bash":"find -name '*.jpg' | sort -n"}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep inet | cut -d: -f2 | cut -d' ' -f1"}
{"English":"Remove all regular files found in and below \/path","Bash":"find \/path -type f -exec rm '{}' \\;"}
{"English":"display list of all the hidden directories in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search\/ -type d -iname \".*\" -ls"}
{"English":"find all files that are readable or writable by their owner","Bash":"find . -perm +600 -print"}
{"English":"Kills all child process and process itself having id 24901.","Bash":"kill `pstree -p 24901 | sed 's\/(\/\\n(\/g' | grep '(' | sed 's\/(\\(.*\\)).*\/\\1\/' | tr \"\\n\" \" \"`"}
{"English":"Find all files\/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree","Bash":"find . -user my_user -perm -u+rwx"}
{"English":"Changes group ownership of '\/var\/run\/fcgiwrap.socket' to 'forge'.","Bash":"chgrp forge \/var\/run\/fcgiwrap.socket"}
{"English":"Execute the file utility for each file found under \/etc and below","Bash":"find \/etc -print0 | xargs -0 file"}
{"English":"Print paths to all subdirectories inside of a directory","Bash":"du | awk '{print $2}'"}
{"English":"List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'","Bash":"find . -type f -print0 | xargs -0 grep -il '^Subject:.*unique subject'"}
{"English":"Move each of the directories in \/path\/to\/folders\/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory","Bash":"find \/path\/to\/folders\/* -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox\/Messages \\;"}
{"English":"split result of the command \"tar [your params]\" into pieces per 500 mb named as \"output_prefixNNN\"","Bash":"tar [your params] |split -b 500m - output_prefix"}
{"English":"Search the current directory recursively for files containing \"needle text\"","Bash":"find . -type f -exec grep -Iq . {} \\; -and -print0 | xargs -0 grep \"needle text\""}
{"English":"Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits","Bash":"find . -perm -664"}
{"English":"Create a symbolic link in the current directory to \"..\/config\/init\"","Bash":"ln -s \"..\/config\/init\""}
{"English":"Find all files under current directory and print only the filenames (not paths)","Bash":"find . -type f -printf \"%f\\n\""}
{"English":"Recursively change owner and group to \"$JBOSS_AS_USER\" of \"$JBOSS_AS_DIR\"","Bash":"chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR"}
{"English":"split file \/usr\/bin\/gcc into pieces per 100000 lines","Bash":"split -n 100000 \/usr\/bin\/gcc"}
{"English":"Search the \/tmp\/ directory recursively for regular files","Bash":"find \/tmp -type f"}
{"English":"Find all files and directories starting from the current directory and excluding hidden files and directories","Bash":"find . \\( ! -regex '.*\/\\..*' \\) | sed 's\/^..\/\/'"}
{"English":"Find all .sh files in the current directory tree and remove them","Bash":"find . -name \"*.sh\"| xargs rm -rf"}
{"English":"Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them","Bash":"find . -type f -mtime +31 -print0 | xargs -0 -r rm -f"}
{"English":"Read a line from standard input with prompt \"Are you sure? [Y\/n]\" and save response in variable \"response\"","Bash":"read -r -p \"Are you sure? [Y\/n]\" response"}
{"English":"Print all files in the current directory tree as a comma separated list","Bash":"find . -type f -print0 | tr '\\0' ','"}
{"English":"Find and remove all .mp3 regular files under the current directory and below","Bash":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}
{"English":"search for all perl files in the folder \/nas\/projects\/mgmt\/scripts\/perl which have been modified yesterday","Bash":"find \/nas\/projects\/mgmt\/scripts\/perl -mtime 1 -daystart -iname \"*.pl\""}
{"English":"Print the list of files in the current directory tree with \"xx\" preceding and following each filename","Bash":"find . -exec echo xx{}xx \\;"}
{"English":"Modify and rewrite 'file' replacing the first instance of \"foo\" on each line with \"bar\"","Bash":"sed -i 's\/foo\/bar\/' file"}
{"English":"Archive all filepattern-*2009* files\/directories under data\/ into 2009.tar","Bash":"find data\/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar"}
{"English":"Calculate the md5 sum of all *.py files in the current directory","Bash":"cat *.py | md5sum"}
{"English":"find all txt files under the current folder except .\/misc folder","Bash":"find . -path .\/misc -prune -o -name '*.txt' -print"}
{"English":"Recursively finds all files containing text 'OPEN' and prints folder where they are placed.","Bash":"grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"}
{"English":"Print a single line of numbers from \"001\" to \"010\"","Bash":"yes | head -n 10 | awk '{printf( \"%03d \", NR )}'    ##for 01..10"}
{"English":"display in a list of all the files that are bigger than 10KB in current folder","Bash":"find . -size +10k -ls"}
{"English":"List files larger than 10MB in the \/var directory recursively","Bash":"find \/var\/ -size +10M -ls"}
{"English":"Print the last 1000 lines of all files matching \"\/var\/spool\/cron\/*\"","Bash":"tail -n 1000 \/var\/spool\/cron\/*"}
{"English":"Display a count of regular files in each directory at the current level.","Bash":"find -P . -type f | rev | cut -d\/ -f2- | rev | cut -d\/ -f1-2 | cut -d\/ -f2- | sort | uniq -c"}
{"English":"Change every directory under \"\/var\/www\/html\/\" to have permissions 775","Bash":"sudo  find \/var\/www\/html\/ -type d -exec chmod 775 {} \\;"}
{"English":"Find SUID files","Bash":"find \/ -perm +4000"}
{"English":"List all files\/directories under current directory","Bash":"find . -print"}
{"English":"Find files\/directories that does not have write permssion for group","Bash":"find \/path ! -perm \/g+w"}
{"English":"Saves invoked command 'check_script_call=$(history |tail -1|grep myscript.sh )' in variable 'check_script_call', preceeding by its number in history.","Bash":"check_script_call=$(history |tail -1|grep myscript.sh )"}
{"English":"find all the files which have been accessed after modifying the file \/etc\/hosts","Bash":"find -anewer \/etc\/hosts"}
{"English":"Find UTF-8 files with BOM","Bash":"find . -type f -print0 | xargs -0 awk '\/^\\xEF\\xBB\\xBF\/ {print FILENAME} {nextfile}'"}
{"English":"Find files\/directories named 'foo' in the current partition of the root filesystem","Bash":"find -x \/ -name foo"}
{"English":"List the commands in \/usr\/bin, pausing for user input after each page.","Bash":"ls \/usr\/bin | more"}
{"English":"change the permissions of all the directories in the current folder","Bash":"find . -type d | xargs chmod 2775"}
{"English":"Creates 5-letter random file name and saves it in 'rand_str' variable.","Bash":"rand_str=\"$(mktemp --dry-run XXXXX)\""}
{"English":"Find all files\/directories owned by user 'joebob' under '\/some\/directory' directory tree","Bash":"find \/some\/directory -user joebob -print"}
{"English":"Find all *.txt files\/directories under current directory terminating their names\/paths with null character","Bash":"find . -name '*.txt' -print0"}
{"English":"Set 644 permission to all regular files under \/home\/my\/special\/folder directory","Bash":"chmod 644 `find \/home\/my\/special\/folder -type f`"}
{"English":"list all zero-length files under the current directory","Bash":"find . -empty -exec ls {} \\;"}
{"English":"Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today","Bash":"find -maxdepth 1 -type f -daystart -mtime -1"}
{"English":"display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago","Bash":"find . -mmin 60 -print0 | xargs -0r ls -l"}
{"English":"Find all files under .\/lib\/app and redirect their sorted list to myFile","Bash":"find .\/lib\/app -type f | sort | tee myFile"}
{"English":"Find files that have been modified within the last month and copy them somewhere","Bash":"find \/etc\/ -mtime -30 | xargs -0 cp \/a\/path"}
{"English":"Get only the latest version of the file 'filename' under current directory","Bash":"find . -name 'filename' | xargs -r ls -tc | head -n1"}
{"English":"remove all the \".core\" files in the file system","Bash":"find \/ -name \"*.core\" | xargs rm"}
{"English":"display all normal\/regular files in current folder in sorted order","Bash":"find . -type f print0 | sort -r"}
{"English":"Show the number of lines for each .php and .phtml file in the current directory tree","Bash":"find . -type f \\( -name \"*.php\" -o -name \"*.phtml\" \\) -exec wc -l {} +;"}
{"English":"Find all files and directories under current directory","Bash":"find ."}
{"English":"Find \"file.xml\" under the current directory and change directory to its parent","Bash":"cd `find . -name file.xml -printf %h`"}
{"English":"Find all files\/directories with space in their names under  \/tmp\/ directory and rename them by replacing all spaces with _","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename \" \" \"_\" \"{}\" \";\""}
{"English":"Print summary of files present only in dir1.","Bash":"diff -rq dir1 dir2 | grep 'Only in dir1\/'"}
{"English":"search for files with the name \"temp\" in the \/usr folder","Bash":"find \/usr -name temp -print"}
{"English":"sleep for 10 seconds","Bash":"sleep 10"}
{"English":"Print content of all files found regarding seach options '[whatever]'","Bash":"find [whatever] | xargs cat"}
{"English":"Left justify number each non-blank line in \"log.txt\" as input to \"sed ...\"","Bash":"nl -n ln log.txt | sed ..."}
{"English":"Replace each non-blank line in \"YOURFILE\" preceded with \"pX=\" where \"X\" is the line number","Bash":"grep -v '^$' YOURFILE | nl -s= -w99 | tr -s ' ' p"}
{"English":"Remove all files with names like \"vmware-*.log\" from the current directory tree","Bash":"find . -name vmware-*.log -print0 | xargs -0 rm"}
{"English":"List all active cron jobs, displaying only the command.","Bash":"crontab -l | grep -v \"^#\" | awk '{print $6}'"}
{"English":"change the group of all the files in the file system which belong to the group with the gid 999","Bash":"find \/ -group 999 -exec chgrp NEWGROUP {} \\;"}
{"English":"set a crontab to create or update the timestamp of \"washere1\" in the current directory every minute.","Bash":"echo \"* * * * * touch $(pwd)\/washere1\" | crontab"}
{"English":"get a PID of a process","Bash":"jobs -x echo %1"}
{"English":"Find all directories named \"D\" in the current directory tree and print their parents","Bash":"find .\/ -type d -name 'D'|sed 's\/D$\/\/'"}
{"English":"Copy \"6.3.3\/6.3.3\/macosx\/bin\/mybinary\" to \"~\/work\/binaries\/macosx\/6.3.3\/\" and create directory \"~\/work\/binaries\/macosx\/6.3.3\/\" if \"~\/work\/binaries\/macosx\/\" exists","Bash":"rsync 6.3.3\/6.3.3\/macosx\/bin\/mybinary ~\/work\/binaries\/macosx\/6.3.3\/"}
{"English":"Save the numerically greater value of \"$kf\" and \"$mp\" into variable \"gv\"","Bash":"gv=$(echo -e $kf'\\n'$mp | sort -t'.' -g | tail -n 1)"}
{"English":"Display a long list of all the files\/directories named \".todo\" under $STORAGEFOLDER directory tree","Bash":"find $STORAGEFOLDER -name .todo  -exec ls -l {} \\;"}
{"English":"Find all *.cgi files\/directories under current directory and change their permission to 775","Bash":"find . -name '*.cgi' -print0 | xargs -0 chmod 775"}
{"English":"Search all of \/usr for any directory named 'My Files', for each directory found, copy it to \/iscsi preserving full paths and attributes.","Bash":"find \/usr -type d -name My\\ Files -exec rsync -avR '{}' \/iscsi \\;"}
{"English":"Run .makeall.sh in an empty environment.","Bash":"env -i .\/makeall.sh"}
{"English":"Mount \"cpuset\" filesystem on \"\/cpuset\/\"","Bash":"mount -t cpuset none \/cpuset\/"}
{"English":"searches through the root filesystem (\"\/\") for the file named Chapter1.","Bash":"find \/ -name Chapter1 -type f"}
{"English":"compare each C header file in or below the current directory with the file \/tmp\/master","Bash":"find . -name '*.h' -execdir diff -u '{}' \/tmp\/master ';'"}
{"English":"modify the permissions of all the folders in a directory","Bash":"find \/path\/to\/dir -type d -exec chmod 755 {} \\;"}
{"English":"Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .","Bash":"find \/ -type d  -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"Move all files not matching \"Tux.png\" in \"~\/Linux\/Old\" to \"~\/Linux\/New\/\" using zsh with \"EXTENDED_GLOB\"","Bash":"mv ~\/Linux\/Old\/^Tux.png ~\/Linux\/New\/"}
{"English":"Find all *.foo files under current directory and print their contents","Bash":"cat `find . -name '*.foo' -print`"}
{"English":"Show the date in default format for tomorrow + 2 days + 10 minutes","Bash":"date -d tomorrow+2days-10minutes"}
{"English":"Change permissions to 644 recursively for PHP files.","Bash":"find . -type f -name '*.php' -exec chmod 644 {} \\;"}
{"English":"display all the jars in the current folder","Bash":"find . -iname '*.jar'"}
{"English":"search for a regular\/normal file myfile in the folder \"\/home\/weedly\"","Bash":"find \/home\/weedly -name myfile -type f -print"}
{"English":"display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output)","Bash":"find . -type d -maxdepth 1 -mindepth 1 -exec basename {} \\;"}
{"English":"Print a list of symbolic links reachable from the current directory that do not resolve to accessible files","Bash":"find -L. -type l"}
{"English":"For each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2.","Bash":"join -j1 file2 file1"}
{"English":"Store N symbols of input into variable 'buffer'","Bash":"read -N $BUFSIZE buffer"}
{"English":"Print the first line of every file matching pattern 'file?B' in the xargstest\/ directory tree","Bash":"find xargstest\/ -name 'file?B' | sort | xargs head -n1"}
{"English":"Find all regular files in \/usr\/bin accessed more than 20 days ago","Bash":"find \/usr\/bin -type f -atime +20"}
{"English":"Go to directory specified by variable \"somedir\", but replacing leading ~ character by actual home directory.","Bash":"cd $(echo $somedir | sed \"s#^~#$HOME#\")"}
{"English":"search for the file, filename.txt in the current folder","Bash":"find . -name filename.txt"}
{"English":"Find apparent size of a target directory","Bash":"du -hs \/path\/to\/directory"}
{"English":"Enables shell option 'promptvars'.","Bash":"shopt -s promptvars"}
{"English":"search for the word text in all the python files in the current folder","Bash":"find . -iname '*py' -exec grep \"text\" {} \\;"}
{"English":"Find all directories in the \/data1\/realtime directory tree that were modified within the last 60 minutes","Bash":"find \/data1\/realtime -mmin -60 -type d"}
{"English":"Find file1 in the level 1 directories and above","Bash":"find -maxdepth 2 -name file1"}
{"English":"display all the html files in the current folder that have not been modified in the last 7*24 horus","Bash":"find . -mtime +7 -name \"*.html\" -print"}
{"English":"Concatenate all files under the current directory and below that contain \"test\" in their names","Bash":"find . -iname '*test*' -exec cat {} \\;"}
{"English":"find all the files in the home folder which end with \".tex\"","Bash":"find ~ -iname '*.tex'"}
{"English":"Save the canonical filename of the script in variable \"me\"","Bash":"me=$(readlink --canonicalize --no-newline $0)"}
{"English":"remove all \"Foo*\" files under current dir","Bash":"find . -type f -name \"Foo*\" -exec rm {} \\;"}
{"English":"find all the php files in the current folder","Bash":"find . -name \\*.php"}
{"English":"Print the IP addresses for the current host name","Bash":"hostname  -I | awk -F\" \" '{print $1}'"}
{"English":"Remove junk files modified more than 31 days ago recursively","Bash":"find \/path\/to\/junk\/files -type f -mtime +31 -print0 | xargs -0 -r rm -f"}
{"English":"Find files under \/some\/path that are not executable by the owner","Bash":"find \/some\/path -type f ! -perm -100 -ls"}
{"English":"Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary.","Bash":"ps -A -o pid | xargs -I pid readlink \"\/proc\/pid\/exe\" | xargs -I file dirname \"file\""}
{"English":"Turns on network interface eth0.","Bash":"ifconfig eth0 up"}
{"English":"Display \"infile\" as printable characters or backslash escapes","Bash":"cat infile | od -c"}
{"English":"Reads content of bzip2 compressed files and processes it with awk utility.","Bash":"bzip2 -dc input1.vcf.bz2 input2.vcf.bz2 | awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 \";\" array[$1,$2] }'"}
{"English":"search for all the foo.txt files in the current folder and move them to another location","Bash":"find . -name foo.txt -print0 | xargs -0  -I{} mv {} \/some\/new\/location\/{}"}
{"English":"Display differences between files dir1.txt and dir2.txt.","Bash":"diff dir1.txt dir2.txt"}
{"English":"Check md5sum of directory \/path against the checksum saved in file 'file'","Bash":"du -csxb \/path | md5sum -c file"}
{"English":"Read a line from standard input into variable \"dir\"","Bash":"read dir"}
{"English":"Force remove all files and folders in the physical current working directory","Bash":"rm -rf \"$(pwd -P)\"\/*"}
{"English":"Set permissions to 600 for regular files under media\/","Bash":"find media\/ -type f -exec chmod 600 {} \\;"}
{"English":"search for all regular files in the current directory which have the extension \"c\" or \"asm\"","Bash":"find . -type f \\( -iname \"*.c\" -or -iname \"*.asm\" \\)"}
{"English":"display all the files ending with \".user\" or beginning with \"admin\" or ending with \".user.gz\" in \/var\/adm\/logs\/morelogs\/ and excluding  all regular files","Bash":"find \/var\/adm\/logs\/morelogs\/* -type f -prune \\( -name \"admin.*\" -o -name \"*.user\" -o -name \"*.user.gz\" \\) -print"}
{"English":"Search the current directory tree for all files matching regular expression \".*\\.rb$\"","Bash":"find . -regex \".*\\\\.rb$\""}
{"English":"display all the normal\/regular files in the current folder and do not go beyond 3 levels","Bash":"find . -maxdepth 3 -type f"}
{"English":"Removes 'folderName', and removes all content within if 'folderName' is folder.","Bash":"rm -rf folderName"}
{"English":"Move \"\/usr\/bin\/openssl\" to directory \"\/root\/\"","Bash":"mv \/usr\/bin\/openssl \/root\/"}
{"English":"Count number of users logged in","Bash":"who | awk -F' ' '{print $1}' | sort -u | wc -l"}
{"English":"Hunting down files with at least one banana","Bash":"find . -type f -print0| xargs -0 grep -c banana| grep -v \":0$\""}
{"English":"Recursively change the owner and group of \"\/opt\/antoniod\/\" to \"antoniod\"","Bash":"chown -R antoniod:antoniod \/opt\/antoniod\/"}
{"English":"Split \"file.tar.gz\" into files of size 1024 MB with a prefix of \"file.tar.gz.part-\"","Bash":"split -b 1024m \"file.tar.gz\" \"file.tar.gz.part-\""}
{"English":"Correct permissions for directories in the web directory","Bash":"find \/your\/webdir\/ -type d -print0 | xargs -0 chmod 755"}
{"English":"find all the word press configuration php files in the folder \/var\/www","Bash":"find \/var\/www\/ -name wp-config.php"}
{"English":"Calculate the md5 sum of \"password\"","Bash":"echo \"password\" | md5sum"}
{"English":"Replace newline with \"_\" in \"file\" then search for \"_foo_\" and output with \"_\" characters deleted","Bash":"grep -o \"_foo_\" <(paste -sd_ file) | tr -d '_'"}
{"English":"split file t.txt into pieces per 30000000 lines named as \"t.NN\" with numeric suffix","Bash":"split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t"}
{"English":"search for all the files in the folder \/data\/images which have been modified after \/tmp\/start and before \/tmp\/end","Bash":"find \/data\/images -type f -newer \/tmp\/start -not -newer \/tmp\/end"}
{"English":"Create a copy of the current working directory structure in the usr\/project directory,","Bash":"find . -type d -print|sed 's@^@\/usr\/project\/@'|xargs mkdir -p"}
{"English":"Search core files in current direcory and delete .","Bash":"find . -name core -exec rm {} \\;"}
{"English":"Search all Python files in the current directory tree for string \"import antigravity\"","Bash":"find . -name \"*.py\" | xargs grep 'import antigravity'"}
{"English":"Search the current directory tree for regular files changed on the 10th of September","Bash":"find .\/ -type f -ls |grep '10 Sep'"}
{"English":"Find file names *blast* in specfied directory","Bash":"find \/usr\/local -name \"*blast*\""}
{"English":"Print out all files with their paths that have identical content and the same filename in different cases","Bash":"find * -type f  | xargs md5sum | sort | uniq -Dw32 | awk -F'[ \/]' '{ print $NF }' | sort -f | uniq -Di"}
{"English":"Read two bytes from \"\/dev\/urandom\" and print them as an unsigned integer","Bash":"od -A n -N 2 -t u2 \/dev\/urandom"}
{"English":"display a long listing of all regular files  in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 -type f -exec ls -l {} \\;"}
{"English":"Get A record for domain $domain","Bash":"dig $domain"}
{"English":"Archive \"\/path\/to\/files\/source\" to \"user@remoteip:\/path\/to\/files\/destination\" via ssh on port 2121","Bash":"rsync -azP -e \"ssh -p 2121\" \/path\/to\/files\/source user@remoteip:\/path\/to\/files\/destination"}
{"English":"Remove all files with the .c extension in the current directory tree","Bash":"find . -name \"*.c\" -print0 | xargs -0 rm -rf"}
{"English":"Remove all files with a txt extension under current directory","Bash":"find . -type f -name \"*.txt\" -print|xargs rm"}
{"English":"long list al the files in the current directory which have read permission to the group","Bash":"find . -perm -g=r -type f -exec ls -l {} \\;"}
{"English":"Replace each newline in input \"1\\n2\\n3\\n4\\n5\" with a comma","Bash":"echo \"1\\n2\\n3\\n4\\n5\" | paste -s -d, \/dev\/stdin"}
{"English":"Find all directories that have been accessed $FTIME days ago under current directory tree","Bash":"find . -type d -atime $FTIME"}
{"English":"Find all regular files starting from level 3 of directory tree ~\/container and move them one level up","Bash":"find ~\/container -mindepth 3 -type f -execdir mv \"{}\" .\/.. \\;"}
{"English":"Copies all files like \"*foo*\" under the current directory to the '\/your\/dest' directory.","Bash":"find . -name \"*foo*\" | sed -e \"s\/'\/\\\\\\'\/g\" -e 's\/\"\/\\\\\"\/g' -e 's\/ \/\\\\ \/g' | xargs cp \/your\/dest"}
{"English":"List all regular files in and below the home directory that were modified more than 5 years ago","Bash":"find ~ -type f -mtime +1825 |xargs ls -l"}
{"English":"Delete all empty directories and directories that contain only empty directories under current directory","Bash":"find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}
{"English":"List *.txt files residing in the current directory tree","Bash":"find . -name *.txt -exec ls {} ;\\"}
{"English":"Print \"new.txt\" with line numbers prepended and lines 3 and 4 deleted","Bash":"cat new.txt  |  nl |sed  \"3d;4d\""}
{"English":"Lists long format information about file '\/bin\/echo'.","Bash":"ls -l \/bin\/echo"}
{"English":"Save the first \".\" separated field of the system host name to variable \"HOSTZ\"","Bash":"HOSTZ=$( hostname | cut -d. -f1 )"}
{"English":"Find all files that aren't owned by user www-data","Bash":"find -not -user www-data"}
{"English":"find Texinfo source files in \/usr\/local\/doc","Bash":"find \/usr\/local\/doc -name '*.texi'"}
{"English":"Find all files in $dir directory (non-recursive) and count them","Bash":"find \"$dir\" -maxdepth 1 -type f | wc -l"}
{"English":"Print A record for domain 'domain.' from 'some.other.ip.address' nameserver","Bash":"dig @some.other.ip.address domain. a"}
{"English":"Set shell option 'dotglob'.","Bash":"shopt -s dotglob"}
{"English":"Extract 8 bytes as an unsigned integer that is \"$o\" offset into \"$rpm\"","Bash":"set `od -j $o -N 8 -t u1 $rpm`"}
{"English":"Unzip and extract \"*\\(userAgent=[^=]*\\) [^ =][^ =]*=.*\" from \"input.gz\"","Bash":"zcat input.gz | sed -n 's\/.*\\(userAgent=[^=]*\\) [^ =][^ =]*=.*\/\\1\/p'"}
{"English":"Print the full path of command \"gcc\"","Bash":"which gcc"}
{"English":"Replace all ocurrences of '<title>' with 'sblmtitle\\n<title>' in all the regular files with '.html' extension under current directory tree","Bash":"find .\/ -type f -name '*.html' | xargs sed -i 's\/<title>\/sblmtitle\\n<title>\/g'"}
{"English":"Prints file descriptor of executed built-in 'true'.","Bash":"echo <(true)"}
{"English":"Calculate and show md5 sums for every files under current directory tree","Bash":"find . -type f -exec md5sum \\{\\} \\;"}
{"English":"display the three largest files by size in current folder","Bash":"find . -type f -exec ls -s {} + | sort -n -r | head -3"}
{"English":"Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them","Bash":"find \"$DIR\" -type f -mtime +15 -exec rm {} \\;"}
{"English":"Removes 55, adds a 10-digit line number, and rearranges the date for each line in \"input\" on OSX","Bash":"nl -nrz -w10 -s\\; input | sed -E 's\/55\/\/; s\/([0-9]{2})-([0-9]{2})-([0-9]{4})\/\\3\\2\\1\/'"}
{"English":"Split a file \"file.tar.gz\" into pieces named as \"file.tar.gz.part-NNN\" with size 1024 MB where NNN is a numeric suffix","Bash":"split -b 1024m \"file.tar.gz\" \"file.tar.gz.part-\""}
{"English":"List all php files below current directory whose full pathname name does not include \"libs\", \"tmp\", \"tests\", or \"vendor\", sorted by number of lines, letting the user page interactively through the output.","Bash":"find . -name '*.php' -print0 | xargs -0 wc -l | sort -nr | egrep -v \"libs|tmp|tests|vendor\" | less"}
{"English":"reverse both words and lines in file","Bash":"tac filename | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); printf(\"%s\\n\",$1)}'"}
{"English":"Print the user name of the user running sudo","Bash":"who -m | awk '{print $1}'"}
{"English":"Connect to host 'hostname' as user 'username' by forcing host key confirmation","Bash":"ssh -o UserKnownHostsFile=\/dev\/null username@hostname"}
{"English":"display all regular\/normal files which have been modified in the last 30 minutes","Bash":"find -type f -and -mmin -30"}
{"English":"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory without descending into other partitions","Bash":"find \/ -maxdepth 1 -xdev -type f -exec grep -Zli \"stringtofind\" {} +"}
{"English":"delete all text files in the entire file system","Bash":"find \/ -type f -name \"*.txt\" -print | xargs rm"}
{"English":"List \".java\" files that have the same filename and contents","Bash":"md5sum *.java | sort | uniq -d"}
{"English":"Backup all PHP files under the current directory tree","Bash":"find -name \"*.php\" \u2013exec cp {} {}.bak \\;"}
{"English":"Make directory \"new_dir\"","Bash":"mkdir new_dir"}
{"English":"Count the number of lines in \"\/dir\/file.txt\"","Bash":"cat \/dir\/file.txt | wc -l"}
{"English":"recursively change owner of the directory \/usr\/local to the current user","Bash":"sudo chown -R `whoami` \/usr\/local"}
{"English":"Remove all broken symlinks from the \/usr\/ports\/packages directory tree","Bash":"find -L \/usr\/ports\/packages -type l -delete"}
{"English":"Find all *conf* files recursively under current directory","Bash":"find . -name *conf*"}
{"English":"Find all target files outside the current working directory with symbolic links in the current working directory","Bash":"find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\""}
{"English":"Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'","Bash":"md5=\"$(md5sum \"${my_iso_file}\")\""}
{"English":"Print the full path of command \"rails\"","Bash":"which rails"}
{"English":"search for all the log files in the folder \/apps which have not been modified in the last 60 days and which are present in the same file system as that of \/apps and delete them","Bash":"find \/apps -xdev -name \"*.log\" -type f -mtime +60 | xargs rm"}
{"English":"Find all regular files in the \/path\/to\/base\/dir tree","Bash":"find \/path\/to\/base\/dir -type f"}
{"English":"display the name of all directories in the current folder and do not search in sub directories","Bash":"find . -type d -maxdepth 1 -exec basename {} \\;"}
{"English":"List every symbolic link in every home directory's subdirectory owned by group `staff'","Bash":"find `pwd` -group staff -exec find {} -type l -print ;"}
{"English":"Replace all instances of \"string\" with \"longer_string\" in file \"input.txt\" and re-align","Bash":"cat input.txt | sed 's\/string\/longer_string\/g' | column -t"}
{"English":"Find all regular files in the current directory tree that match pattern 'btree*.c'","Bash":"find . -type f -name 'btree*.c'"}
{"English":"Format and print the time string @133986838 according to the default time format","Bash":"date --date @120024000"}
{"English":"Find all the files in file system which are greater than 50MB and less than 100MB","Bash":"find \/ -size +50M -size -100M"}
{"English":"Remove all regular files under and below directory \"$DIR\" that were last accessed more than 5 days ago","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"display the filenames which do not have begin with dot (.)","Bash":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}
{"English":"List all processes with detailed information","Bash":"ps -ef"}
{"English":"Locate files that reside in the home directory and have not been accessed in the past 30 days","Bash":"find $HOME -atime +30"}
{"English":"Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.","Bash":"VAR=`dig axfr @dc1.localdomain.com localdomain.com | grep -i Lawler | awk '{ getline ; $1=substr($1,1,length($1)-1); print $1 ; exit }'`"}
{"English":"Replace \"foo\" with \"bar\" in all files in the current directory tree","Bash":"find . | xargs sed -i \u2018s\/foo\/bar\/g\u2019"}
{"English":"Find all files of the user with UID=1000","Bash":"find -uid 1000"}
{"English":"split all files in directory \"\/dev\/shm\/split\/\" into pieces per 1000 lines","Bash":"find \/dev\/shm\/split\/ -type f -exec split -l 1000 {} {} \\;"}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find -path \"*\/test\/*\" -delete"}
{"English":"Copy all regular files whose names end in \"~\" from the \/path directory tree to ~\/backups\/","Bash":"find \/path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ~\/backups"}
{"English":"find all files without 777 permision","Bash":"find \/ -type f ! perm 777"}
{"English":"find case-insentive example.com file, omit .\/beta path","Bash":"find .\/ -path .\/beta\/* -prune -o -iname example.com -print"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f | xargs ls -ltr | tail -n 1"}
{"English":"show all the regular\/normal files in the folder \/home\/user\/demo","Bash":"find \/home\/user\/demo -type f -print"}
{"English":"Compare \"$source_file\" and \"$dest_file\" line by line","Bash":"diff \"$source_file\" \"$dest_file\""}
{"English":"force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days","Bash":"find \/tmp -size 0 -atime +10 -exec rm -f {} \\;"}
{"English":"list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.","Bash":"find . ! -perm -g+r,u+r,o+r -prune"}
{"English":"Print full date of yesterday","Bash":"echo `date -v-1d +%F`"}
{"English":"Collapse double slashes in variable \"dir\" into a single one.","Bash":"dir=\"`echo $dir | sed s,\/\/,\/,g`\""}
{"English":"Find all files in the current user's home directory and its sub-directories with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and\/or \u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.","Bash":"find ~\/ [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] [\u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f]"}
{"English":"Archive \"_vim\/\" to \"~\/.vim\" suppressing non-error messages and compressing data during transmission","Bash":"rsync -aqz _vim\/ ~\/.vim"}
{"English":"forcibly and verbosely create a symbolic link named \"target\" to file \"source\"","Bash":"ln -sfvn source target"}
{"English":"find files in \/usr directory which are modified after February 1 of the current year","Bash":"find \/usr -newermt \"Feb 1\""}
{"English":"Find all files\/directories whose names start with 'readme' (case insensitive) under '\/usr\/share\/doc' directory tree","Bash":"find \/usr\/share\/doc -iname readme\\*"}
{"English":"Remove the file with inode number 752010","Bash":"find -inum 752010 -exec rm {} \\;"}
{"English":"Remove all vmware-*.log files under current directory ensuring white space safety in filename","Bash":"find . -name vmware-*.log -print0 | xargs -0 rm"}
{"English":"find all the header files in \/usr\/include which have been modified in the last 400 days","Bash":"find \/usr\/include -type f -mtime -400 -name \"*.h\""}
{"English":"Retrieve only build number of current kernel, ie. #104","Bash":"uname -v | grep -o '#[0-9]\\+'"}
{"English":"search all jpg,png,jpefg  files in the current folder and calculate the total size of them","Bash":"find . \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" \\) -ls | awk '{total += $7} END {print total}'"}
{"English":"Find files named \"needle\" ignoring the case","Bash":"find . -iname \"needle\""}
{"English":"find files changed in the last 1 day","Bash":"find . -mtime -1 -type f"}
{"English":"Remove all \\*~ files under dir","Bash":"find dir -name \\\\*~ -exec rm {} +"}
{"English":"Perform a default cPanel configuration","Bash":"find \/home\/*\/public_html\/ -type f -iwholename \u201c*\/wp-includes\/version.php\u201d -exec grep -H \u201c\\$wp_version =\u201d {} \\;"}
{"English":"Save the absolute path of the current script to variable \"SELF\"","Bash":"SELF=$(readlink \/proc\/$$\/fd\/255)"}
{"English":"Report file system containing path to the current working directory disk usage in kilobytes.","Bash":"df -k ."}
{"English":"Search for files that are at least 100MB","Bash":"find \/ -size +100M"}
{"English":"find all the text files present in the current directory excluding the search in certain paths.","Bash":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\""}
{"English":"Print a list of all files and directories in the \/var\/log directory tree","Bash":"find \/var\/log\/"}
{"English":"Filter the cron list of user \"user\" through \"my_wonderful_sed_script\" and re-apply the resulting output.","Bash":"crontab -u user -l | sed \"$my_wonderful_sed_script\" | crontab -u user -"}
{"English":"find all *.java files\/directories under current directory","Bash":"find . -name  \\*.java"}
{"English":"Find all files larger than 100M and delete them","Bash":"find \/ -size +100M -exec rm -rf {} \\;"}
{"English":"display all the files in the current folder which have been accessed in the last 60 minutes","Bash":"find . -amin -60"}
{"English":"Find all *foo* files\/directories under current directory and copy them to \/your\/dest","Bash":"find . -name \"*foo*\" | sed -e \"s\/'\/\\\\\\'\/g\" -e 's\/\"\/\\\\\"\/g' -e 's\/ \/\\\\ \/g' | xargs cp \/your\/dest"}
{"English":"Remove all files and directories in the \/home directory tree whose names are \"Trash\"","Bash":"find \/home -name Trash -exec rm {} \\;"}
{"English":"Saves number of lines of current directory listing in 'n_max' variable.","Bash":"n_max=`ls . | wc -l`"}
{"English":"Print only digits in variable \"$name\"","Bash":"echo $name | tr -c -d 0-9"}
{"English":"explicitly list all files in the current directory","Bash":"find . -print"}
{"English":"Print the user name of the current user","Bash":"whoami"}
{"English":"Remove all files with a txt extension under current directory","Bash":"find . -type f -name \"*.txt\" -exec rm {} \\; -print"}
{"English":"Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic","Bash":"find arch etc lib module usr xpic -type f | xargs chmod -x"}
{"English":"search for the word \"damian\" in all the regular\/normal files in the \/etc folder and display only the matched file name","Bash":"find \/etc -type f | xargs grep -l -i \"damian\""}
{"English":"Get the disk space used by all *.txt (case insensitive) files\/directories under current directory","Bash":"find . -iname \"*.txt\" -exec du -b {} + | awk '{total += $1} END {print total}'"}
{"English":"Find all directories under '.cache\/chromium\/Default\/Cache' that are bigger than 100 MB in size excluding single letter directory names","Bash":"find .cache\/chromium\/Default\/Cache\/ -type d -print0 | du -h | grep '[0-9]\\{3\\}M' | cut -f2 | grep -v '^.$'"}
{"English":"Search the current directory tree for regular files changed less than 1 day ago","Bash":"find . -type f -ctime -1"}
{"English":"Read a single character from standard input into variable \"REPLY\" ignoring backslash escapes and using the prompt \"${1:-Continue?} [y\/n]: \"","Bash":"read -r -n 1 -p \"${1:-Continue?} [y\/n]: \" REPLY"}
{"English":"get year-month-day from date","Bash":"date +%Y-%m-%d"}
{"English":"Force create a symbolic link without dereferencing named \"alpha\" to \"alpha_2\"","Bash":"ln -nsf alpha_2 alpha"}
{"English":"Find all filenames ending with .c in the current directory tree, case insensitive","Bash":"find -iname \"*.c\""}
{"English":"Identify CMS version\/releases accross all your PHPBB installations","Bash":"find \/var\/www\/vhosts\/*\/httpdocs\/ -type f -wholename *includes\/constants.php -exec grep -H \"PHPBB_VERSION\" {} \\;"}
{"English":"List the files in \"archive.tar.gz\"","Bash":"gzip -l archive.tar.gz"}
{"English":"Find all test1.h files under current directory","Bash":"sudo find . -name test1.h"}
{"English":"display all the files in the current folder which are present in the path \".\/sr*sc\"","Bash":"find . -path '.\/sr*sc'"}
{"English":"Creates temporary file in a current folder and saves path to it in 'f' variable.","Bash":"f=`mktemp -p .`"}
{"English":"display the number of lines in all the \".c\" files in the current folder","Bash":"find . -name \"*.c\" -print | xargs wc -l"}
{"English":"Sort the lines of the file 'temp.txt' and change it in-place","Bash":"sort temp.txt -o temp.txt"}
{"English":"Print the paths of all files in the current directory tree that contain \"abc\" replacing \"abc\" with \"xyz\"","Bash":"find . |xargs grep abc | sed 's\/abc\/xyz\/g'"}
{"English":"Find directories in the current directory tree that were modified within the last 24 hours and move them to \/path\/to\/target-dir","Bash":"find . -type d -mtime 0 -exec mv {} \/path\/to\/target-dir \\;"}
{"English":"search in the home folder for all the files with the name \"monfichier\"","Bash":"find \/home\/ -name monfichier"}
{"English":"change the permissions of all the regular\/normal files in the current folder","Bash":"sudo find . -type f -exec chmod 644 {} +"}
{"English":"display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories","Bash":"find . -maxdepth 1 -name \"*.jpg\" -size -50k | xargs echo rm -f"}
{"English":"Recursively change the owner and group of all files in \"\/your\/directory\/to\/fuel\/\" to \"nginx\"","Bash":"chown nginx:nginx \/your\/directory\/to\/fuel\/ -R"}
{"English":"find all the files in the current folder which end with \"ext1\" or \"ext2\" or \"ext3\"","Bash":"find -E . -regex \".*ext1|.*ext2|.*ext3\""}
{"English":"Display differences between \/tmp\/test1 and \/tmp\/test2 side-by-side.","Bash":"diff -y \/tmp\/test1  \/tmp\/test2"}
{"English":"Find all files that belongs to group Developer under \/home directory","Bash":"find \/home -group developer"}
{"English":"Recursively search for all files not ending in \".xml\" under the current directory, append \".xml\" to the end of each file name","Bash":"find . -type f \\! -name '*.xml' -print0 | xargs -0 rename 's\/$\/.xml\/'"}
{"English":"list complete path name to process associated with pid \"$1\"","Bash":"find \/proc\/$1\/exe -printf '%l\\n'"}
{"English":"Copy file \"exist\" from directory \"\/file\/that\" to a new file named \"file\" in \"\/location\/for\/new\"","Bash":"cp \/file\/that\/exists \/location\/for\/new\/file"}
{"English":"Find all directories in directory tree `httpdocs'","Bash":"find httpdocs -type d"}
{"English":"Find and print all PDF files in the current directory and its sub-directories except for any found in the .\/pdfs directory.","Bash":"find . -name \"*.pdf\" -print | grep -v \"^\\.\/pdfs\/\""}
{"English":"Find all files\/directories under $1 which have at least write permission for their owner and set write permission for group for these files\/directories","Bash":"find $1 -perm -u+w -exec chmod g+w {} \\;"}
{"English":"Set the value of \"to_sort\" to \"$1\" in a subshell which no longer exists after the pipeline completes","Bash":"echo \"$1\"| read -a to_sort"}
{"English":"Truncate all non-empty regular files under the current directory","Bash":"find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp \/dev\/null {}"}
{"English":"recursively change user of the direct \/home\/test\/ and all files into it to user test","Bash":"sudo chown -R test \/home\/test"}
{"English":"Find all files\/directories named 'foo' in the entire filesystem","Bash":"find \/ -name foo"}
{"English":"count amount of jobs running","Bash":"jobs | wc -l"}
{"English":"Look for files that have SUID or SGID set","Bash":"find \/ -perm +6000 -type f"}
{"English":"Find all files\/directories under current directory tree that belong to the group 'compta'","Bash":"find -group compta"}
{"English":"Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder","Bash":"find . -size +1M -exec mv {} files \\+"}
{"English":"Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts.","Bash":"find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf"}
{"English":"same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command","Bash":"find . -name core -ok rm {} \\;"}
{"English":"create directory aaa","Bash":"mkdir aaa"}
{"English":"Print only alphanumeric values from \"\/dev\/urandom\"","Bash":"cat \/dev\/urandom | tr -dc 'a-zA-Z0-9'"}
{"English":"Find all files\/directories that do not belong to any user under '\/home' directory tree","Bash":"find \/home -nouser -print"}
{"English":"Find all files and directories in the current directory tree except those whose name is \"dirname\", case insensitive","Bash":"find .\/ -iname ! -iname dirname"}
{"English":"display all the files in the folder \"\/dev\" which belong to the user \"peter\"","Bash":"find \/dev -user \"peter\" |more"}
{"English":"display all the empty files in the current folder( files of size 0 bytes)","Bash":"find . -empty"}
{"English":"Print common lines of files \"file1\", \"file2\", \"file3\", and \"file4\"","Bash":"comm -12 <(comm -12 <(comm -12 <(sort file1) <(sort file2)) <(sort file3)) <(sort file4)"}
{"English":"SSH into $1 with login name 'pete'","Bash":"ssh \"$1\" -l pete"}
{"English":"Search for 'example' in all regular files from the current directory tree","Bash":"find -type f -print0 | xargs -r0 grep -F 'example'"}
{"English":"Create a symbolic link in directory \"\/path\/to\/dir\" for each file and directory under the current directory starting with \".\"","Bash":"find $PWD -name '.[^.]*' -exec ln -s '{}' \/path\/to\/dir \\;"}
{"English":"display all the files ending with \".foo\" excluding those that are in the directory \".snapshot\"","Bash":"find . -name .snapshot -prune -o -name '*.foo' -print"}
{"English":"Create an archive named newArch from the contents of .\/test directory","Bash":"find .\/test -printf \".\/.\/%f\\n\"| cpio -o -F newArch"}
{"English":"For every cron job with a comment \"change-enabled\" at the end of its crontab entry, change the scheduled hour to 7.","Bash":"crontab -l | sed -re '\/# *change-enabled *$\/s\/^([^ ]+) [^ ]+\/\\1 7\/' | crontab -"}
{"English":"print all files in the file system excluding those ending with \".c\"","Bash":"find \/ \\! -name \"*.c\" -print"}
{"English":"Md5sum the last 5 files in \/directory1\/directory2\/","Bash":"find \/directory1\/directory2\/ -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum"}
{"English":"Search the home directory for filenames starting with \"xx\" except for \"xxx\" files","Bash":"find ~ -name 'xx*' -and -not -name 'xxx'"}
{"English":"Search the \/root directory recursively for the regular file named \"myfile\"","Bash":"find \/root\/ -name myfile -type f"}
{"English":"display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files","Bash":"find -exec grep -q fuddel {} \";\" -exec grep -q fiddel {} \";\" -ls"}
{"English":"Display only line numbers listed in 'file_of_line_numbers\" from file 'source'.","Bash":"sed 's\/$\/p\/' file_of_line_numbers | sed -nf - source"}
{"English":"Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"","Bash":"find . -name '*bills*' -exec grep put {} \\;"}
{"English":"Recursively prints all files in a current folders, and searches \"stringYouWannaFind\" in file content ignoring case differences, and preceding found string with its number in file.","Bash":"find .\/ -type f -print -exec grep -n -i \"stringYouWannaFind\" {} \\;"}
{"English":"List the files in the \/etc directory tree containing text '128.200.34.'","Bash":"find \/etc -type f -print | xargs grep -il '128\\.200\\.34\\.'"}
{"English":"Copies files 'src\/prog.js' and 'images\/icon.jpg' with fully-defined path to '\/tmp\/package' directory.","Bash":"cp --parents src\/prog.js images\/icon.jpg \/tmp\/package"}
{"English":"Find all the files called FindCommandExamples.txt of owner root","Bash":"find \/ -user root -name FindCommandExamples.txt"}
{"English":"Print full path of command \"python\"","Bash":"which python"}
{"English":"Write to standard error a trace for each command after it expands the command and before it executes it","Bash":"set -x"}
{"English":"Add cron lists from \"filename\" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","Bash":"crontab filename"}
{"English":"Print the first 32 hexadecimal characters from \"\/dev\/urandom\", determining C locale for character handling functions","Bash":"cat \/dev\/urandom | env LC_CTYPE=C tr -cd 'a-f0-9' | head -c 32"}
{"English":"Print login name and full name of all users currently logged in and delete instances of \"of group.*\"","Bash":"finger -l | awk '\/^Login\/' | sed 's\/of group.*\/\/g'"}
{"English":"Find all files\/directories containing 'foo' in their names under current directory tree","Bash":"find . -name '*foo*'"}
{"English":"Extract any line in \"fileA\" which does not appear as the first word of any line in \"fileB\"","Bash":"comm -23 <(sort fileA) <(cut -d' ' -f1 fileB | sort -u)"}
{"English":"Find all files\/directories named 'query' under current directory tree","Bash":"find -name \"query\""}
{"English":"Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time","Bash":"find . -regex \".*\\.\\(flv\\|mp4\\)\" -type f -printf '%T+ %p\\n' | sort | head -n 500"}
{"English":"Remove files from the file system that are owned by nobody","Bash":"find \/ -nouser -exec rm {} +"}
{"English":"Search for all files with same inode NUM","Bash":"find . -inum NUM"}
{"English":"Print unique lines of sorted \"File 1\" compared with sorted \"File 2\"","Bash":"comm -23 \"File 1\" \"File 2\""}
{"English":"change owner of the file file.sh to user root","Bash":"$sudo chown root file.sh"}
{"English":"Display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing.","Bash":"uname -i"}
{"English":"Print the list of all regular files residing in the current directory and below","Bash":"find .\/ -type f -print"}
{"English":"Find all files\/directories named 'articles.jpg' under '\/home\/username\/public_html\/images' directory tree","Bash":"find \/home\/username\/public_html\/images -name \"articles.jpg\""}
{"English":"Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.","Bash":"find . -name \"*.php\" -not -path \".\/tests*\" | xargs wc -l"}
{"English":"Compare files \"A1\" and \"A2\" with 3 lines of unified context and print lines beginning with \"+\"","Bash":"diff -u A1 A2 | grep -E \"^\\+\""}
{"English":"Search the home directory for OGG and MP3 files","Bash":"find $HOME -iname '*.ogg' -o -iname '*.mp3'"}
{"English":"Find files\/directories that does not have write permssion for group and others","Bash":"find \/path ! -perm \/022"}
{"English":"display all the text files in the current folder  and do not search in the bin directory","Bash":"find . -name bin -prune -o -name \"*.txt\" -print"}
{"English":"Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'","Bash":"find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u"}
{"English":"Display a long listing of all the regular files under current directory tree that are newer than \u2018Apr 18 23:59:59 EDT 2013\u2019 and older than \u2018Apr 20 00:00:00 EDT 2013\u2019 by modification time","Bash":"find . -type f -newermt \u2018Apr 18 23:59:59 EDT 2013\u2019 ! -newermt \u2018Apr 20 00:00:00 EDT 2013\u2019 -exec ls -l \u2018{}\u2019 \\;"}
{"English":"bind word \"foobar\" to key code \"\\e[24~\"","Bash":"bind '\"\\e[24~\":\"foobar\"'"}
{"English":"Find all files\/directories under current directory and print them twice in each line","Bash":"find | xargs -i sh -c \"echo {} {}\""}
{"English":"List the current directory recursively ignoring the \"dir1\" subdirectory","Bash":"find . -path .\/dir1  -prune -o -print"}
{"English":"Removes all files like '*.bak' in a current folder, and prints messages about what is being done.","Bash":"rm -v *.bak"}
{"English":"Print sorted list of strings from 'ip_addresses' file, with number of occurrences of each string.","Bash":"sort ip_addresses | uniq -c"}
{"English":"Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically","Bash":"find \"$dir\" -maxdepth 1 -type f -iname '*.txt' | sort -n"}
{"English":"find all the normal\/regular files in the folder \"pathfolder\" excluding all hidden files and display the count","Bash":"find pathfolder -maxdepth 1 -type f -not -path '*\/\\.*' | wc -l"}
{"English":"display all the regular\/normal files in current folder which have been modified exactly 60 minutes before","Bash":"find . -mmin 60 -type f"}
{"English":"Find all files\/directories under current directory excluding the paths that match the POSIX extended regex \".*def\/incoming.*|.*456\/incoming.*\"","Bash":"find . -regex-type posix-extended -regex \".*def\/incoming.*|.*456\/incoming.*\" -prune -o -print"}
{"English":"Print every found file like '*.cfg' under '\/path\/to\/files\/' directory followed by its content, and wait 2 seconds after each printed file","Bash":"find \/path\/to\/files -type f -name \\*.cfg  -print -exec cat {} \\; -exec sleep 2 \\;"}
{"English":"Change the owner of \"\/var\/www\/html\/mysite\/tmp_file_upload\/\" to \"nobody\"","Bash":"sudo chown nobody \/var\/www\/html\/mysite\/tmp_file_upload\/"}
{"English":"Delete all files under '\/home\/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago","Bash":"find \/home\/backups -type f -iregex '.*\\.t?gz$' -mtime +60 -exec rm {} \\;"}
{"English":"Find all files\/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files\/directories","Bash":"find $1 -perm -u+x -exec chmod g+x {} \\;"}
{"English":"find all the \"passwd\" files in the entire file system","Bash":"find \/ -iname passwd"}
{"English":"Find all files\/directores that are newer than \/etc\/motd and conain the string 'top' at the beginning of their names under user's home directory tree","Bash":"find ~ -name 'top*' -newer \/etc\/motd"}
{"English":"Delete all empty files and directories in the \"test\" directory tree","Bash":"find test -depth -empty -delete"}
{"English":"Find all regular files in current directory and \/home\/www directory","Bash":"find * \/home\/www -type f"}
{"English":"Find files in and below the current directory whose names begin with \"not\" and remove one of them","Bash":"find . -name not\\* | tail -1 | xargs rm"}
{"English":"Find all Perl source code files","Bash":"find . -name \"*.pl\""}
{"English":"Print the 6th field (delimited by '\/') from the paths specified by ~\/bin\/FilesDvorak\/.* files\/directories","Bash":"find ~\/bin\/FilesDvorak\/.* -maxdepth 0 | awk -F\"\/\" '{ print $6 }'"}
{"English":"search for files in current folder using name patterns","Bash":"find . -name \"S1A*1S*SAFE\""}
{"English":"display all the files in the home folder which have read permission to the user","Bash":"find \/home -perm \/u=r"}
{"English":"display all php,xml and phtml files in current folder","Bash":"find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'"}
{"English":"Copies all files under the current directory but ones with '*\/not-from-here\/*' in path to the '\/dest\/' directory.","Bash":"find . -type f -not -iname '*\/not-from-here\/*' -exec cp '{}' '\/dest\/{}' ';'"}
{"English":"Prints ten latest modified files within the current directory.","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n -r | head -${numl} |  cut -f2- -d\" \" | sed -e 's,^\\.\/,,' | xargs ls -U -l"}
{"English":"Find files under current directory that contains the string '\/bin\/ksh'","Bash":"find . -type f -exec grep -iH '\/bin\/ksh' {} \\;"}
{"English":"find in the file system for the directories with the name \"httpdocs\"","Bash":"find \/ -type d -name 'httpdocs'"}
{"English":"Uncompress \"archive.tar.gz\" and extract the archive to \"\/destination\"","Bash":"gzip -dc archive.tar.gz | tar -xf - -C \/destination"}
{"English":"Copy all files below the current directory whose names contain \"FooBar\" to directory foo\/bar\/ in user's home directory.","Bash":"find -name '*FooBar*' -print0 | xargs -0 cp -t ~\/foo\/bar"}
{"English":"display all the directories in the folder \/usr\/share","Bash":"find \/usr\/share -type d"}
{"English":"show all regular\/normal the files in the current folder whose size is bigger than 0 bytes excluding everything","Bash":"find * -prune -type f -size +0c -print"}
{"English":"Find all the files in the current directory","Bash":"find * -type f -print -o -type d -prune"}
{"English":"find all the backup files in the current folder and delete them after user confirmation","Bash":"find . -type f -name \"*.bak\" -exec rm -i {} \\;"}
{"English":"Find all files\/directories named 'text' under current directory","Bash":"find -name \"text\""}
{"English":"Find all *.txt files that reside under and below \/home\/wsuNID\/","Bash":"find \/home\/wsuNID\/ -name \"*.txt\""}
{"English":"Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.","Bash":"find ~\/ -name *.png -exec cp {} imagesdir \\;"}
{"English":"Recursively removes all empty folders under current folder.","Bash":"find -depth -type d -empty -exec rmdir {} \\;"}
{"English":"Connect to host \"$USER_AT_HOST\" in master mode in the background without executing any commands and set the ControlPath to \"$SSHSOCKET\"","Bash":"ssh -M -f -N -o ControlPath=\"$SSHSOCKET\" \"$USER_AT_HOST\""}
{"English":"extract \/path\/to\/my_archive.tar.xz to \/path\/to\/extract and preserve permissions.","Bash":"tar xpvf \/path\/to\/my_archive.tar.xz -C \/path\/to\/extract"}
{"English":"Recursively find strings in all files under current directory, that matching with comma-separated patterns list in file 'searches-txt'","Bash":"cat searches.txt| xargs -I {} -d, -n 1 grep  -r {}"}
{"English":"Find all orm* files\/directories under current directory","Bash":"find . -name 'orm*'"}
{"English":"Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago","Bash":"find . -maxdepth 1 -cmin +60 -name file"}
{"English":"Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end","Bash":"mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"}
{"English":"Print the IP addresses of the host name","Bash":"hostname -I"}
{"English":"find all the png files in current folder which are present in the pattern list file \"search.txt\"","Bash":"find . -name '*.png' | grep -f <(sed 's?.*?\/[0-9]_[0-9]_[0-9]_&_?' search.txt)"}
{"English":"Print groups of all users logged in","Bash":"groups $(who | cut -d' ' -f 1)"}
{"English":"change permissions of files older than 30 days","Bash":"find \/path\/to\/directory -type f -mtime +30 -exec chmod 644 {} +"}
{"English":"Find the current directory and all its subdirectories.","Bash":"find . -type d"}
{"English":"Find all regular files or symlinks in the entire file system","Bash":"find \/ -mount -depth \\( -type f -o -type l \\) -print"}
{"English":"Create a symbolic link named \"$SYMLINK\" to \"$ACTUAL_DIR\"","Bash":"ln -s \"$ACTUAL_DIR\" \"$SYMLINK\""}
{"English":"Find all regular files under and below \/home\/admin\/public_html\/, and change their permissions to 644","Bash":"find . \/home\/admin\/public_html\/ -type f -exec chmod 644 {} \\;"}
{"English":"Find all directories at level 3 of directory tree $from_dir","Bash":"find $from_dir -mindepth 3 -maxdepth 3 -type d"}
{"English":"Find empty files under test directory","Bash":"find test -empty"}
{"English":"display all scala files in the directory \"src\/main\"","Bash":"find . -path \"*src\/main*\" -type f -iname \"*\\.scala*\""}
{"English":"Remove all files and directories under '\/home\/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'","Bash":"find \/home\/foo \\( -name '.DS_Store' -or -name '._.DS_Store' -or -name '._*' -or -name '.TemporaryItems' -or -name '.apdisk' \\) -exec rm -rf {} \\;"}
{"English":"create directory \/var\/svn as user root","Bash":"sudo mkdir \/var\/svn"}
{"English":"Source \"lib\/B\" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.","Bash":"source \"$( dirname \"$( which \"$0\" )\" )\/lib\/B\""}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find . -name test -type d -exec rm -r {} +"}
{"English":"Print all filenames in \/usr\/src except for those that are of the form '*,v' or '.*,v'","Bash":"find \/usr\/src -not \\( -name \"*,v\" -o -name \".*,v\" \\) '{}' \\; -print"}
{"English":"List all files in the current directory tree that were modified 60 minutes ago","Bash":"find . -mmin 60 | xargs '-rd\\n' ls -l"}
{"English":"Delete the text matched by the regex '<script>if(window.*<\\\/script>' in all index.html files under current directory","Bash":"find index.html | xargs -rt sed -i 's\/<script>if(window.*<\\\/script>\/\/g'"}
{"English":"Print yesterday's date as yyy:mm:dd","Bash":"date +%Y:%m:%d -d \"1 day ago\""}
{"English":"download content from \"http:\/\/127.0.0.1:8000\" and output to \"index.html\"","Bash":"curl http:\/\/127.0.0.1:8000 -o index.html"}
{"English":"Find all files\/directories in directories\/files taken from the glob pattern '\/folder\/path\/*' recursively that have not been modified in the last 2 hours and delete them","Bash":"find \/folder\/path\/* -mmin +120 -delete"}
{"English":"Check if a drive with UUID \"$UUID\" is mounted","Bash":"mount | grep $(readlink -f \/dev\/disk\/by-uuid\/$UUID )"}
{"English":"Do not immediately exit the shell if a command fails","Bash":"set +e"}
{"English":"Move all files that contain \"Subject: \\[SPAM\\]\" to \"DIR\"","Bash":"grep -L -Z -r 'Subject: \\[SPAM\\]' . | xargs -0 -I{} mv {} DIR"}
{"English":"Archive all filepattern-*2009* files\/directories under data\/ into 2009.tar","Bash":"find data\/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;"}
{"English":"show all files in the current directory and all subdirectories","Bash":"find . -print"}
{"English":"Find all files under media\/ directory and change their permission to 600","Bash":"find media\/ -type f -exec chmod 600 {} \\;"}
{"English":"Locate all *.csv files under the current directory tree separating the file names with zeroes","Bash":"find . -name \"*.csv\" -print0"}
{"English":"Find files ending in \"config\"","Bash":"find .  -path '*\/*config'"}
{"English":"Find all *.$input_file_type files\/directories under $source_dir","Bash":"find \"$source_dir\" -name *.$input_file_type"}
{"English":"Find all directories under '\/nas' directory tree","Bash":"find \/nas -type d"}
{"English":"Open all .java files in the current directory tree in the vim editor","Bash":"find . -name '*.java' -exec vim {} +"}
{"English":"Find all files\/directories newer than ttt or owned by user 'wn' in entire file system","Bash":"find \/ \\( -newer ttt -or -user wnj \\) -print"}
{"English":"Recursively changes group ownership of everything in 'files' to 'my_group'.","Bash":"chgrp -R my_group files"}
{"English":"list regular file which file name end with 'cache' 'xml' or 'html' in current directory","Bash":"find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}
{"English":"Recursively change the user and group of all files in \"\/var\/lib\/jenkins\" to \"root\"","Bash":"chown -R root:root \/var\/lib\/jenkins"}
{"English":"Find all files in directory tree \"dirname\"","Bash":"find dirname -exec echo found {} \\;"}
{"English":"Find files modified more recently than file poop","Bash":"find . -newer poop"}
{"English":"long list all the files in the curent folder starting with \"Tes\"","Bash":"find . -type f -name \"Tes*\" -exec ls -l {} \\;"}
{"English":"Finds IP address of system network interface, that belongs to 192.168.111 subnet.","Bash":"ifconfig | grep 192.168.111 | awk '{print $2}'"}
{"English":"extract archive stored in $1","Bash":"tar -zxvf $1"}
{"English":"Find all files throughout the entire file hierarchy with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and\/or \u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.","Bash":"find \/ [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] \t[\u043e\u043f\u0446\u0438\u044f_\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f]"}
{"English":"Copy all \".xml\" files in the current directory tree to \"\/new\/parent\/dir\" preserving the directory hierarchy","Bash":"find . -name \\*.xml -print0 | cpio -pamvd0 \/new\/parent\/dir"}
{"English":"find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.","Bash":"find . -atime +1 -type f -exec mv {} TMP \\;"}
{"English":"Write \"foo\" to the real path of the current command's standard output","Bash":"echo foo | readlink \/proc\/self\/fd\/0"}
{"English":"find all the files starting with \"config\" in the folder Symfony ( case insensitive search)","Bash":"find Symfony -iname '*config*';"}
{"English":"Get current directory name without full path, ie. the part after the last \/","Bash":"basename \"$(pwd)\""}
{"English":"If variable \"c\" is a syntactically correct cron job, erase user's cron jobs and add \"c\" as the only cron job for user.","Bash":"echo $c | crontab"}
{"English":"Delete all 1US* (case insensitive) files under current directory","Bash":"find . -iname \"1US*\" -exec rm {} \\;"}
{"English":"Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree","Bash":"find . -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Find regular files in the current directory tree that have the user executable bit set","Bash":"find . -type f -perm -u=x"}
{"English":"Execute md5sum command on files found by the find command","Bash":"find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}
{"English":"Copies all files under the current directory like any-cased '*foobar*' to the '~\/foo\/bar' directory.","Bash":"find . -iname \"*foobar*\" -exec cp \"{}\" ~\/foo\/bar \\;"}
{"English":"display all the files in current folder which have write permission to all the users","Bash":"find . -perm \/222"}
{"English":"Remove the regular files from the current directory tree that are newer than \/tmp\/date.start but not newer than \/tmp\/date.end","Bash":"find .\/ -type f -newer \/tmp\/date.start ! -newer \/tmp\/date.end -exec rm {} \\;"}
{"English":"split file \"your_file\" into pieces per 9 lines","Bash":"split -l9 your_file"}
{"English":"Print the ping time of a single request to \"8.8.8.8\"","Bash":"ping -c 1 8.8.8.8 |  awk 'FNR == 2 { print $(NF-1) }'"}
{"English":"find all files in the current directory that are less than 1 byte size","Bash":"find . -size -1c -print"}
{"English":"Remove all files under \/home\/user\/Maildir\/.SPAM\/cur","Bash":"find \/home\/user\/Maildir\/.SPAM\/cur -type f -exec rm -f '{}' '+'"}
{"English":"Extract any line in \"set1\" which does not appear in \"set2\"","Bash":"comm -23 <(sort set1) <(sort set2)"}
{"English":"Search through the \/usr\/local directory for files that end with the extension .html, and print the file locations.","Bash":"find \/usr\/local -name \"*.html\" -type f"}
{"English":"Find all files\/directories named 'query' (case insensitive) under current directory","Bash":"find -iname \"query\""}
{"English":"Show the list of files that are not owned by user wnj or are not newer than file `ttt'","Bash":"find \/ \\! \\( -newer ttt -user wnj \\) -print"}
{"English":"Find files in two different directories (esofthub and esoft) having the \"test\" string and list them","Bash":"find esofthub esoft -name \"*test*\" -type f -ls"}
{"English":"recursively change owner of the directory \/Users\/xxx\/Library\/Developer\/Xcode\/Templates and all files to user xxx","Bash":"sudo chown -R xxx \/Users\/xxx\/Library\/Developer\/Xcode\/Templates"}
{"English":"Get a two column list of all regular .rb files residing in the current directory tree","Bash":"find . -name \"*.rb\" -type f -print0 | xargs -0 -n 2 echo"}
{"English":"remove all the files in the current folder which have not been changed in the last 30*24 hours","Bash":"find .\/ -ctime +30 -type f -exec rm -f {} \\;"}
{"English":"Find files with group write permission and remove the permission","Bash":"find . -perm -20 -print | xargs chmod g-w"}
{"English":"Find all PHP files under current directory that contain only one line","Bash":"find . -type f -name '*.php' -exec wc -l {} \\; | egrep \"^\\s*1\\s\""}
{"English":"Fiind and remove multiple files such as *.mp3 or *.txt","Bash":"find . -type f -name \"*.txt\" -exec rm -f {} \\;"}
{"English":"Find all .php files in the current directory tree","Bash":"find . -type f -name \"*.php\""}
{"English":"show all files in the current directory and all subdirectories","Bash":"find ."}
{"English":"Make directories \"Labs\/lab4a\/folder1\", \"Labs\/lab4a\/myfolder\", and \"Labs\/lab4a\/foofolder\"","Bash":"mkdir Labs\/lab4a\/{folder1,myfolder,foofolder}"}
{"English":"Find all files\/directories in entire file system for which owner has at least read\/write permissions, or the group has at least read permission, or others have at least read permission","Bash":"find \/ -perm \/u+rw,g+r,o+r"}
{"English":"Print 'Since -printf is an action the implicit -print is not applied\\n' for every file named 'file' found under current directory tree","Bash":"find -name file -printf 'Since -printf is an action the implicit -print is not applied\\n'"}
{"English":"Find all 15MB files","Bash":"find \/ -size 15M"}
{"English":"Print A record for domain 'domain.' from 'ns2.newnameserver' nameserver","Bash":"dig @ns2.newnameserver domain. a"}
{"English":"Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths","Bash":"find $SOURCE -type f -mtime +$KEEP | sed \u2018s#.*\/##'"}
{"English":"Allow all users to execute '$pathToShell\"myShell.sh\"'","Bash":"chmod a+x $pathToShell\"myShell.sh\""}
{"English":"search the word \"MySearchStr\" in all the regular\/normal files in the current folder and display the line number and the file name","Bash":"find . -type f -print0 | xargs -0 -e grep -nH -e MySearchStr"}
{"English":"Search directory tree `foo' for files named `Headers'","Bash":"find foo -name Headers"}
{"English":"Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago","Bash":"find $HOME \\( -name a.out -o -name '*.o' \\) -atime +7 -exec rm {} \\;"}
{"English":"Search the .java files from the current directory tree for TODO lines","Bash":"find . -name \"*.java\" -exec grep -i -n TODO {}  \\;"}
{"English":"Find the process id of mysql","Bash":"ps -A|grep mysql"}
{"English":"Compress every file in the current directory that matches \"*cache.html\" and keep the original file","Bash":"gzip -k *cache.html"}
{"English":"Find all files\/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '\/home\/spenx\/dst\/' directory","Bash":"find \/home\/spenx\/src -name \"a1a2*txt\" | xargs -n 1 dirname | xargs -I list mv list \/home\/spenx\/dst\/"}
{"English":"Remove all regular files in the current directory","Bash":"find .\/ -type f -exec rm -rf {} \\;"}
{"English":"Gets domain name from dig reverse lookup.","Bash":"$dig -x 8.8.8.8 | grep  PTR | grep -o google.*"}
{"English":"Write a random list of numbers to \/tmp\/lst and stdout.","Bash":"seq 1 10 | sort -R | tee \/tmp\/lst |cat <(cat \/tmp\/lst) <(echo '-------') **...**"}
{"English":"find all the files in the current folder which have been accessed in the last 60 minutes","Bash":"find . -amin -60"}
{"English":"display all the tex files in the current folder","Bash":"find . -name \\*.tex"}
{"English":"Send ping requests to \"yourhostname.local\"","Bash":"ping youhostname.local"}
{"English":"Find all Makefile's in the current directory tree and print the line 235 of each of them","Bash":"find . -type f -name Makefile -print -exec sed -n '235p' {} \\;"}
{"English":"Search for non-empty files","Bash":"find . ! -size 0k"}
{"English":"print the line containing TERMINATE and everything after in 'file'","Bash":"tail -n \"+$(grep -n 'TERMINATE' file | head -n 1 | cut -d \":\" -f 1)\" file"}
{"English":"Create hard links of all files and directories matching \"test\/icecream\/cupcake\/*\" or \"test\/mtndew\/livewire\/*\" in \"test-keep\" preserving directory hierarchy","Bash":"find test -path 'test\/icecream\/cupcake\/*' -o -path 'test\/mtndew\/livewire\/*' | cpio -padluv test-keep"}
{"English":"Print the list of all directories in the \/myfiles directory tree","Bash":"find \/myfiles -type d"}
{"English":"Shows status of a shell option 'compat31'.","Bash":"shopt compat31"}
{"English":"Print the day 1 day ago","Bash":"date --date='1 days ago' '+%a'"}
{"English":"Saves real path of the folder containing the current script","Bash":"DIR=$(dirname \"$(readlink -f \\\"$0\\\")\")"}
{"English":"find all the text files in the current folder expect those which are in the path \"sk\"","Bash":"find . -path \".\/sk\" -prune -o -name \"*.txt\" -print"}
{"English":"Remove all files with names like \"vmware-*.log\" from the current directory tree","Bash":"find . -name vmware-*.log -delete"}
{"English":"Save the directory of the full path to the current script in variable \"dir\"","Bash":"dir=$(dirname $(readlink \/proc\/$$\/fd\/255))"}
{"English":"Rename \"\/usr\/bin\/php\" to \"\/usr\/bin\/~php\"","Bash":"sudo mv \/usr\/bin\/php \/usr\/bin\/~php"}
{"English":"Close the master SSH control socket \"my-ctrl-socket\" to \"jm@sampledomain.com\"","Bash":"ssh -S my-ctrl-socket -O exit jm@sampledomain.com"}
{"English":"Calculate the md5 sum of the contents of \"$FILES\"","Bash":"cat $FILES | md5sum"}
{"English":"Search for \"pattern\" in all the .c files in the current directory tree","Bash":"find . -name \"*.c\" | xargs grep pattern"}
{"English":"Output the standard input followed by the line number until line 786","Bash":"nl -ba | sed 786q | grep . | awk '{print $2$1}'"}
{"English":"Change directory to the directory containing the current script","Bash":"cd $(dirname $(which $0) )"}
{"English":"delete all empty files in the current directory ( empty file = size 0 bytes )","Bash":"find . -empty -exec rm '{}' \\;"}
{"English":"Prints directory where the executing script ($0) is located.","Bash":"$(dirname $0)"}
{"English":"Find all files\/directories under current directory tree whose paths start with '.\/sr' and end with 'sc'","Bash":"find . -path '.\/sr*sc'"}
{"English":"Delete all files under \/path\/to\/input\/ that match the case insensitive string literal 'spammer@spammy.com' in their contents","Bash":"find \/path\/to\/input\/ -type f -exec grep -qiF spammer@spammy.com \\{\\} \\; -delete"}
{"English":"find all files named `linux' on the system","Bash":"find \/ -name linux"}
{"English":"find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names)","Bash":"find \"somedir\" -type l -print0"}
{"English":"Search for 'Text To Find' in all regular files under current directory tree and show the matched files","Bash":"find .\/ -type f -exec grep -l \"Text To Find\" {} \\;"}
{"English":"On host \"server_b\", connect as ssh user \"user\" and copy \"\/my_folder\/my_file.xml\" to directory \"\/my_new_folder\/\", with all transfer data relayed through local host.","Bash":"scp -3 user@server_b:\/my_folder\/my_file.xml user@server_b:\/my_new_folder\/"}
{"English":"Compress every file in the current directory tree with gzip and keep file extensions the same","Bash":"find folder -type f -exec gzip -9 {} \\; -exec mv {}.gz {} \\;"}
{"English":"Find all regular files undee '\/usr\/bin' directoryt tree that are less than 50 bytes in size","Bash":"find \/usr\/bin -type f -size -50c"}
{"English":"Find all broken symlinks under current directory","Bash":"find . -xtype l"}
{"English":"find all the directories in the current folder which have been modified in 24 hours and move them to the folder  \/path\/to\/target-dir","Bash":"find . -type d -mtime -0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Create a symbolc link in the current directory to \"target\"","Bash":"ln -s target"}
{"English":"Find '.git' directories in directory tree \/home\/madhu\/release\/workspace","Bash":"find \/home\/madhu\/release\/workspace -type d -name '.git'"}
{"English":"display all the regular\/normal files in current directory","Bash":"find . -type f"}
{"English":"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.","Bash":"echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3"}
{"English":"Get domain \"$domain\" IP address","Bash":"dig +short \"$domain\""}
{"English":"Change directory to the directory containing the \"oracle\" executable","Bash":"cd $(dirname `which oracle`)"}
{"English":"Look up for 'myip.opendns.com' in server 'resolver1.opendns.com' and save the terse output in 'IP' variable","Bash":"IP=$(dig +short myip.opendns.com @resolver1.opendns.com)"}
{"English":"Delete recursively empty files named 'bad'","Bash":"find . -name bad -empty -delete"}
{"English":"Print the second line of output of \"ls -l\"","Bash":"ls -l | head -2 | tail -1"}
{"English":"Set the timestamp of B to the same one as A","Bash":"touch -r A B"}
{"English":"Find all files in the current directory tree whose names are \".DS_STORE\" and delete them","Bash":"find . -name \".DS_STORE\" -delete"}
{"English":"Print the list of files and directories of the current directory including \".\"","Bash":"find . \\( -name . -o -prune \\)"}
{"English":"find all the files  in the folder \/opt which have been changed in the last 120 minutes","Bash":"find \/opt -cmin -120"}
{"English":"display all the regular\/ normal files in a folder","Bash":"find src\/js -type f"}
{"English":"Find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive","Bash":"find . -iname '*blah*' \\( -type d -o -type f \\) -mtime -2"}
{"English":"Print 'bla.txt' if at least one file with such name is present below the current directory.","Bash":"ls -alFt `find . -name \"bla.txt\"` | rev | cut -d\" \" -f1 | rev | head -1"}
{"English":"change owner and group  of all files and directory into current directory to user and group apache","Bash":"find . -maxdepth 1 -not -name \".\" -print0 | xargs --null chown -R apache:apache"}
{"English":"Save long listing of all files listed in file 'filenames.txt' to 'listing' variable","Bash":"listing=$(ls -l $(cat filenames.txt))"}
{"English":"rename all the svg.png files to png files in the current fodler","Bash":"find . -name \"*.svg.png\" -print0 | sed 's\/.svg.png\/\/g' | xargs -0 -I namePrefix mv namePrefix.svg.png namePrefix.png"}
{"English":"Find all files under \/path\/to\/base\/dir and change their permission to 644","Bash":"chmod 644 $(find \/path\/to\/base\/dir -type f)"}
{"English":"Find all *.mov (case insensitive) files under current directory and list their paths with their names","Bash":"find . -iname \"*.mov\" -printf \"%p %f\\n\""}
{"English":"Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '\/myprojects' directory tree","Bash":"find \/myprojects -type f -name '*.cpp' -print0 |    xargs -0 echo sed -i 's\/previousword\/newword\/g'"}
{"English":"Find all files starting from \/ whose names end with \".rpm\" and change their permissions to 755","Bash":"find \/ -name *.rpm -exec chmod 755 '{}' \\;"}
{"English":"display the files along with the size of all the files in the current which are bigger than 100MB","Bash":"find . -size +100M -exec ls -s {} \\;"}
{"English":"Print the 5th space separated fields in \"file\" as a comma separated list","Bash":"cut -d' ' -f5 file | paste -d',' -s"}
{"English":"Search the \/path tree for all executables","Bash":"find \/path -perm \/ugo+x"}
{"English":"Set variable 'rav' to the contents of 'var' spelled backwards.","Bash":"rav=$(echo $var | rev)"}
{"English":"search for \"some_function\" in all the python files in the current directory","Bash":"find . -name \\*.py | xargs grep some_function"}
{"English":"Recursively find the latest modified \"zip\" file in the current directory","Bash":"find . -name \"*zip\" -type f | xargs ls -ltr | tail -1"}
{"English":"Run 'chmod 0644' on all files in the current directory tree","Bash":"find . -type f -exec chmod 0644 {} \\;"}
{"English":"Search the \/root directory recursively for files named \"FindCommandExamples.txt\"","Bash":"find \/root -name FindCommandExamples.txt"}
{"English":"display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec)","Bash":"find . -name \"*.txt\" -exec ls -la {} +"}
{"English":"Read a line from standard input into variable \"message\" with prompt \"Please Enter a Message: \" followed by a newline","Bash":"read -p \"Please Enter a Message: `echo $'\\n> '`\" message"}
{"English":"find all files in the current folder which have been accessed in the last 30 minutes","Bash":"find . -amin -30"}
{"English":"Search the regular files of the current directory tree for string \"whatever\"","Bash":"find . -type f | xargs -L 100 grep whatever"}
{"English":"Recursively add user write permission to all files under \"\/path\/to\/git\/repo\/objects\"","Bash":"chmod -Rf u+w \/path\/to\/git\/repo\/objects"}
{"English":"Set the bash environmental variable \"PROMPT_COMMAND\" to save the output of the last executed command to variable \"LAST\" and file '\/tmp\/x\"","Bash":"PROMPT_COMMAND='LAST=\"`cat \/tmp\/x`\"; exec >\/dev\/tty; exec > >(tee \/tmp\/x)'"}
{"English":"Find all files\/directories named 'articles.jpg' under current directory tree","Bash":"find . -name \"articles.jpg\""}
{"English":"Mount a partition in \"$IMAGE\" with offset \"$OFFSET\" to \"media\/$DEST\" as read only using a loop device","Bash":"mount -o ro,loop,offset=$OFFSET -t auto $IMAGE \/media\/$DEST"}
{"English":"Creates temporary folder within TMPDIR, with name like current shell name and 10-letter suffix.","Bash":"mktemp -dt \"$(basename $0).XXXXXXXXXX\""}
{"English":"Search the files of the current directory tree for string \"searched-string\"","Bash":"find . | xargs grep \"searched-string\""}
{"English":"find all the directories in current folder and delete them","Bash":"find . -type d -delete"}
{"English":"Read a single character from standard input into variable \"key\" without backslash escapes and using the prompt \"Press any key to continue...\"","Bash":"read -n1 -r -p \"Press any key to continue...\" key"}
{"English":"search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).","Bash":"find . -size +10000c -size -32000c -print"}
{"English":"Find all files\/directories under $dir directory tree which have been modified in the last 3 days","Bash":"find $dir -mtime -3"}
{"English":"Find directories named 'work' under '\/usr\/ports\/' directory tree and remove them","Bash":"find \/usr\/ports\/ -name work -type d -print -exec rm -rf {} \\;"}
{"English":"Finds recursively all files not having extension .o in '\/path\/' that contain 'pattern', and prints matched strings with string number and file name.","Bash":"grep --exclude=*.o -rnw '\/path\/to\/somewhere\/' -e \"pattern\""}
{"English":"Find all directories under ~\/code and replace all newlines with : in the output then remove the last :","Bash":"find ~\/code -type d | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"display all the files  in the current folder excluding the perl files","Bash":"find . -not -name \"*.pl\""}
{"English":"Find all hidden directories starting from the current directory","Bash":"find . -type d -name \".*\""}
{"English":"find the top 25 files in the current directory and its subdirectories","Bash":"find . -type f -exec ls -al {} \\; | sort -nr -k5 | head -n 25"}
{"English":"find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension","Bash":"find . -name \"*.dat\" -type f -cmin +60 | grep \"^.\/[^\/]\\+dat\" | sed \"s\/^.\\\/\/\/\""}
{"English":"find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.","Bash":"find . -name 'cache*' -depth -exec rm {} \\;"}
{"English":"Find all files\/directories named 'articles.jpg' under 'images' directory tree","Bash":"find images -name \"articles.jpg\""}
{"English":"display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours","Bash":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print"}
{"English":"Print second section of data coming from stdin where sections are separated by one or more whitespace.","Bash":"tr -s ' ' | cut -d ' ' -f 2"}
{"English":"Move all files\/directories under current directory to ~\/play","Bash":"find . -exec mv '{}' ~\/play\/ \\;"}
{"English":"find all files that do not have read permission to all","Bash":"find . -type f ! -perm -444"}
{"English":"Delete all files in the current directory tree whose names end with ~","Bash":"find . -name \"*~\" -exec rm {} \\;"}
{"English":"list all files in \/home\/bozo\/projects directory tree that were modified exactly one day ago.","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"Recursively archive \"test\/a\/\" to \"test\/dest\" excluding \"test\/a\/b\/c\/d\"","Bash":"rsync -nvraL test\/a\/ test\/dest --exclude=\/b\/c\/d"}
{"English":"Find all directories named \"D\" in the current directory tree","Bash":"find .\/ -type d -name 'D'"}
{"English":"Print the host name","Bash":"hostname"}
{"English":"Change the permission to 644 for all files under current directory","Bash":"find . -type f | xargs -I{} chmod -v 644 {}"}
{"English":"Print second section of line <line> where sections are separated by one or more whitespace.","Bash":"echo -e \"<line>\" | sed 's:\\s\\+:\\t:g' | cut -f2"}
{"English":"Findx all files having text \"texthere\" recursively in a current folder, and prints only file names with matching strings.","Bash":"find -type f -exec grep -l \"texthere\" {} +"}
{"English":"Print the list of files in the current directory tree excluding those whose paths contain \"exclude3\" or \"exclude4\"","Bash":"find . | egrep -v \"(exclude3|exclude4)\" | sort"}
{"English":"Save the current working directory with resolved symbolic links to variable \"real1\"","Bash":"real1=$(pwd -P)"}
{"English":"Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .","Bash":"find . -type f -exec ls -s {} \\; sort -n |head -5"}
{"English":"Move all regular files under current directory to .\/newdir","Bash":"find .\/ -type f -print | xargs    -l56 -I {} mv -f {} .\/newdir"}
{"English":"Locate all files \"needle.txt\"","Bash":"find . -name \"needle.txt\""}
{"English":"This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search","Bash":"find . -type f -iname \"*.py\""}
{"English":"Find all regular files under '\/usr\/bin' directory tree that are less than 50 bytes in size","Bash":"find \/usr\/bin -type f -size -50c"}
{"English":"Enable history expansion in a script","Bash":"set -H"}
{"English":"find the md5 sum of all the regular files in multiple folders and display them in sorted order","Bash":"find teste1 teste2 -type f -exec md5 -r {} \\; | sort"}
{"English":"Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree","Bash":"find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0 | xargs -0 sed -i '' 's\/2013 Magento Inc.\/2012 Magento Inc.\/g'"}
{"English":"count the lines of java code for all the java files in the current directory","Bash":"find . -name \"*.java\" -print0 | xargs -0 wc"}
{"English":"Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names","Bash":"find . -path .\/.git -prune -o -not -name '*git*' -print |grep git"}
{"English":"Uncompress and unarchive \"data.tar.gz\"","Bash":"gzip -dc data.tar.gz | tar -xvf -"}
{"English":"Unzip \"file.gz\" and print each line with the 5th \" or | separated field greater than 5","Bash":"zcat file.gz | awk -F'[|\"]' '$5>5'"}
{"English":"Find all *.cgi files\/directories under current directory and change their permission to 755","Bash":"find . -name '*.cgi' -print0 | xargs -0 chmod 755"}
{"English":"Execute the first instance of \"parallel\" found in the PATH, passing it all parameters received by the script\/function","Bash":"`which parallel` \"$@\""}
{"English":"Search the files residing in the current directory tree whose names contain \"bills\" for \"put\"","Bash":"find . -name '*bills*' -exec grep -H \"put\" {} \\;"}
{"English":"find all files that belong to root user","Bash":"find . -uid 0 -print"}
{"English":"Find all files named \"foo_bar\" in the current directory recursively","Bash":"find -name foo_bar"}
{"English":"Search the \/myfiles directory tree for files last modified 2 days ago","Bash":"find \/myfiles -mtime 2"}
{"English":"Find all files in the current directory tree whose path names match pattern '.\/sr*sc'","Bash":"find . -path '.\/sr*sc'"}
{"English":"Find all files\/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size","Bash":"find . -iregex \".*packet.*\" ! -type d -size +1500c"}
{"English":"Replace the first occurrence of \"string1\" on each line with \"string2\" in all regular files in the current directory tree","Bash":"find .\/ -type f -exec sed -i 's\/string1\/string2\/' {} \\;"}
{"English":"Finds file 'Subscription.java' and changes to containing folder.","Bash":"cd `find . -name Subscription.java | xargs dirname`"}
{"English":"Move all files from the `sourceDir' directory to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -maxdepth 1 -print0 | xargs -0 mv --target-directory=destDir"}
{"English":"find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files","Bash":"find . -mindepth 1 -mmin -60 | xargs -r ls -ld"}
{"English":"Compress all files in the \"$FILE\" directory tree that were last modified 30 days ago and have not already been compressed with gzip","Bash":"find $FILE -type f -not -name '*.gz' -mtime 30 -exec gzip {} \\;"}
{"English":"Find all *~ files\/directories under dir and  print an rm command for each of them for deletion","Bash":"find dir -name \\*~ | xargs echo rm"}
{"English":"Recursively removes all files like '*.pyc' in a current folder, printing info message about each action.","Bash":"find . -name \"*.pyc\" | xargs -I {} rm -v \"{}\""}
{"English":"Prefix each non-blank line in \"filename\" with a line number","Bash":"nl filename"}
{"English":"Locate all \"copyright\" files under and below \/usr\/share\/doc","Bash":"find \/usr\/share\/doc -name \"copyright\""}
{"English":"Changes group ownership of 'logdir' to 'loggroup'.","Bash":"chgrp loggroup logdir"}
{"English":"Find and delete all core files in the user's home directory and below.","Bash":"find ~\/ -name 'core*' -exec rm {} \\"}
{"English":"Echo each command before running","Bash":"set -x"}
{"English":"search for al cpp files in current folder and display unique parent directory of these files in sorted order","Bash":"find . -name \"*.cpp\" -exec dirname {} \\; | sort -u"}
{"English":"Find all files\/directories under current directory that match the case insensitive regex .\/\\(RT\\|ED\\).* and show several lines of output from the beginning","Bash":"find . -iregex '.\/\\(RT\\|ED\\).*' | head"}
{"English":"Print the last file extension from standard input","Bash":"sed 's\/^\/.\/' | rev | cut -d. -f1  | rev"}
{"English":"Output two lines of \"-tcp\"","Bash":"yes -- -tcp | head -n 2"}
{"English":"Set shell option 'histverify'.","Bash":"shopt -s histverify"}
{"English":"split file abc.txt into pieces per 1500000000 bytes named as \"abc.NNN\"","Bash":"split --bytes=1500000000 abc.txt abc"}
{"English":"Find all .txt files under the current directory and below","Bash":"find . -name '*.txt' -print0"}
{"English":"Find all TXT files that belong to user root","Bash":"find \/ -user root -iname \"*.txt\""}
{"English":"Search my_folder recursively for text files containing \"needle text\"","Bash":"find my_folder -type f -exec grep -l \"needle text\" {} \\; -exec file {} \\; | grep text"}
{"English":"Print the path names of all regular .rb files prefixing them with string \"Hello, \"","Bash":"find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"}
{"English":"Display all the files\/directories under '\/home\/bozo\/projects' directory tree that have been modified within the last day","Bash":"find \/home\/bozo\/projects -mtime -1"}
{"English":"Recursively change the ownership of all directories in the current directory excluding \"foo\" to \"Camsoft\"","Bash":"ls -d * | grep -v foo | xargs -d \"\\n\" chown -R Camsoft"}
{"English":"Lists '\/tmp\/hashmap.$1' file or folder '\/tmp\/hashmap.$1' content one file per line.","Bash":"ls -1 \/tmp\/hashmap.$1"}
{"English":"Find one file or directory in the current directory whose name matches the pattern given as a variable $a","Bash":"find . -maxdepth 1 -name \"$a\" -print -quit"}
{"English":"Prints yesterday's date information","Bash":"date --date yesterday \"+%a %d\/%m\/%Y\""}
{"English":"Print 1000 astarisk ('*')","Bash":"head -c 1000 \/dev\/zero | tr '\\0' '*'"}
{"English":"Print the commands that would execute \"myfile\" on all .ogv files from the current directory tree","Bash":"find .\/ -name *.ogv -exec echo myfile {} \\;"}
{"English":"Process each file beginning with \"file\" in the current directory as an argument to \"bash script.sh\"","Bash":"find -type f -maxdepth 1 -name 'file*' -print0 | sort -z | xargs -0 bash script.sh"}
{"English":"Search the current directory recursively for regular files with the extension given as variable $extension","Bash":"find . -type f -name \"*.$extension\""}
{"English":"List all IP addresses assigned to current hostname, pausing for user interaction after each page.","Bash":"more \/etc\/hosts | grep `hostname` | awk '{print $1}'"}
{"English":"Show the subdirectories of the current directory","Bash":"find . -maxdepth 1 -type d -print | xargs -I {} echo Directory: {}"}
{"English":"Delete all files named 'Waldo' under ~\/Books directory tree where '~' expands to user's home directory","Bash":"find ~\/Books -type f -name Waldo -exec rm {} \\;"}
{"English":"Print disk of mount point \"\/pa\/th\"","Bash":"mount | awk '$3 == \"\/pa\/th\" {print $1}'"}
{"English":"Set the shell prompt to \"host:pwd>\"","Bash":"PS1=`hostname`':\\W> '"}
{"English":"Get domain name with 'google' from address $1","Bash":"dig -x \"$1\" | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}
{"English":"Run 'join' on file1 and file2, using a literal tab character as field separator.","Bash":"join -t $'\\t' file1 file2"}
{"English":"change the permissions of all the regular files in the current folder","Bash":"find . -type f -exec chmod 500 {} ';'"}
{"English":"Find all .* files excluding list_files (case insensitive) under current directory","Bash":"find . -iname \".*\" \\! -iname 'list_files'"}
{"English":"Remove files that are greater than 1MB in size under current directory","Bash":"find . -type f -size +1M -exec rm {} +"}
{"English":"Set permissions for files in `foldername' and its subdirectories to 644","Bash":"find foldername -type f -exec chmod 644 {} \";\""}
{"English":"Archive \"source\" to \"destination\" via ssh on port \"PORT_NUMBER\"","Bash":"rsync -azP -e \"ssh -p PORT_NUMBER\" source destination"}
{"English":"change the ownership of all the files in the file system from edwarda to earnestc","Bash":"find \/ -user edwarda -print | xargs chown earnestc"}
{"English":"searches through the \/usr\/local directory for files that end with the extension .html","Bash":"find \/usr\/local -name \"*.html\" -type f"}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 7 days ago","Bash":"find . -type f -mtime +7"}
{"English":"Find .java files in the current directory tree that contain 'TODO', and print their names","Bash":"find . -name \"*.java\" -exec grep -Hin TODO {} + | basename `cut -d \":\" -f 1`"}
{"English":"find all the text files in  the current folder and do not search in somedir, bin directories","Bash":"find . -name somedir -prune , -name bin -prune -o -name \"*.txt\" -print"}
{"English":"find all the files in the home folder which are less than 300Bytes","Bash":"find ~ -size -300b"}
{"English":"display all the normal\/regular files in a directory","Bash":"find $dir -type f -name $name -print"}
{"English":"Find all files named 'Makefile' in the \/usr\/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\\.\\.\/.*authors'","Bash":"find \/usr\/ports\/ -name Makefile -exec grep '^MASTER_SITE_SUBDIR.*\\.\\.\/.*authors' '{}' '+' | wc -l"}
{"English":"display long listing of all normal\/regular files in the current directory which have been modified in the last 2 days.","Bash":"find . -mtime -2 -type f -name \"t*\" -exec ls -l '{}' \\;"}
{"English":"Replace all newlines from standard input except the last with spaces","Bash":"sed ':a;N;$!ba;s\/\\n\/ \/g'"}
{"English":"Create tar archive \"dirall.tar\" and copy all files from directory tree \/tmp\/a1 to it","Bash":"find \/tmp\/a1 -exec tar -rvf dirall.tar {} \\;"}
{"English":"Find *.avi and *.flv files in \/path\/to\/your\/directory and below and copy them to \/path\/to\/specific\/folder","Bash":"find \/path\/to\/your\/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} \/path\/to\/specific\/folder \\;"}
{"English":"Find all HTML files starting with letter 'a' in the current directory and below ignoring the case","Bash":"find . -iname a\\*.html"}
{"English":"Change the owner of \"$JBOSS_CONSOLE_LOG\" to \"$JBOSS_USER\"","Bash":"chown $JBOSS_USER $JBOSS_CONSOLE_LOG"}
{"English":"Display each line in file.txt backwards","Bash":"rev file.txt"}
{"English":"Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files","Bash":"find $dir -type f -name $1 -exec sed $num'q;d' {} \\;"}
{"English":"Search the \/Applications directory tree for *.app directories","Bash":"find \/Applications -type d -name \"*.app\""}
{"English":"display all the .sh scripts in the folder \/usr","Bash":"find \/usr -name \\*.sh"}
{"English":"file all the Sticky Bit set files whose permission are 551","Bash":"find \/ -perm 1551"}
{"English":"download file  \"https:\/\/raw.githubusercontent.com\/creationix\/nvm\/v0.31.0\/install.sh\" and execute it","Bash":"curl -o- https:\/\/raw.githubusercontent.com\/creationix\/nvm\/v0.31.0\/install.sh | bash"}
{"English":"search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.","Bash":"find . -group staff -perm -2000 -print"}
{"English":"Delete the 4th tab separated column from the output of \"finger\"","Bash":"finger | awk -F\"\\t\" -v 'OFS=\\t' '{ $4=\"\"; print $0}' | sed 's\/\\t\\{2,\\}\/\\t\/'"}
{"English":"Print onlt last slash-separated field from $PATH value","Bash":"echo \"$PATH\" | rev | cut -d\"\/\" -f1 | rev"}
{"English":"Find all regular files that start with stat","Bash":"find . -type f \u2013iname stat*"}
{"English":"Find all the files\/directories with '.conf' extension under '\/etc' directory non-recursively and display the last ten files","Bash":"find \/etc -maxdepth 1 -name \"*.conf\" | tail"}
{"English":"Find all files\/directories with space in their names under $1 directory","Bash":"find $1 -name '* *'"}
{"English":"List the entire cron job list of user \"apache\".","Bash":"crontab -u apache -l"}
{"English":"Create a ssh key of RSA type, and prompt for a filename to store it, presenting the default for this type of key as $HOME\/.ssh\/id_rsa","Bash":"ssh-keygen -t rsa"}
{"English":"Counts all files in a current folder and subfolders.","Bash":"find . -type f | wc -l"}
{"English":"Sort \"some_data\" by the first and second \";\" delimited entries, outputing unique lines and stabilizing the sort","Bash":"sort -k1,1 -k2,2 -t';' --stable --unique some_data"}
{"English":"Find all files more than 700 megabytes","Bash":"find \/ -size +700M"}
{"English":"Calculate the md5 sum of all \".py\" files in \"\/your\/dir\" including content and filenames","Bash":"grep -ar -e . --include=\"*.py\" \/your\/dir | md5sum | cut -c-32"}
{"English":"Remove filetype suffix (last dot and following characters if any) from filename","Bash":"echo $filename | rev | cut -f 2- -d '.' | rev"}
{"English":"as root, find from \/ all files called \"file.txt\"","Bash":"sudo find \/ -name file.txt"}
{"English":"Display a long listing of the files\/directories with human readable sizes (100M, 10G etc..) under '\/var' directory tree which are bigger than 10MB","Bash":"find \/var\/ -size +10M -exec ls -lh {} \\;"}
{"English":"Remove spaces from output of \"echo aa | wc -l\"","Bash":"echo aa | wc -l | tr -d ' '"}
{"English":"Find all 50MB files in file system","Bash":"find \/ -size 50M"}
{"English":"display all directories in current folder","Bash":"find -type d"}
{"English":"find all posix-extended regex  \"[a-f0-9\\-]\\{36\\}\\.jpg\" files","Bash":"find . -regextype posix-extended -regex \"[a-f0-9\\-]\\{36\\}\\.jpg\""}
{"English":"delete what was typed in the command line and run \"pwd\" when button \"\\e[24~\"","Bash":"bind '\"\\e[24~\":\"\\C-k \\C-upwd\\n\"'"}
{"English":"Split \"${fspec}\" into 6 files with about equal number of lines each and use prefix \"xyzzy.\"","Bash":"split --number=l\/6 ${fspec} xyzzy."}
{"English":"Find file `hosts'","Bash":"find \/etc -name hosts"}
{"English":"Calculate the md5sum of each \".py\" file under \"\/path\/to\/dir\/\", sort the output, and calculate the md5sum of that","Bash":"find \/path\/to\/dir\/ -type f -name \"*.py\" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}
{"English":"Remove all .txt files with spaces in names in and below the current directory","Bash":"find -name \"*\\ *.txt\" | xargs rm"}
{"English":"List all files under current directory matching the regex '.*(c|h|cpp)$'","Bash":"find -E . -type f -regex '.*(c|h|cpp)$' -exec ls {} \\;"}
{"English":"Copies newest file under the current folder to the '\/tmp\/'","Bash":"cp $(ls -1tr * | tail -1) \/tmp\/"}
{"English":"search all the files in the current folder excluding those that are present in the folder test and using regex","Bash":"find . -name test -prune -regex \".*\/my.*p.$\""}
{"English":"search for all the files ending with \"fits\" in the folder \"\/store\/01\"","Bash":"find \/store\/01 -name \"*.fits\""}
{"English":"display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins","Bash":"find . -maxdepth 1 -name '*.dat' -type f -cmin +60 -exec basename {} \\;"}
{"English":"Find all files\/directories in level $i down the current directory with all positional parameters appended with the find command","Bash":"find -mindepth $i -maxdepth $i \"$@\""}
{"English":"Find all files that belong to group root","Bash":"find \/ -group root"}
{"English":"Search the *.c files residing in the current directory tree for string \"blash\"","Bash":"find . -name *.c -exec grep -n -e blash {} \\;"}
{"English":"Append all regular files modified in the last 24 hours to the \"$archive.tar\" tar archive","Bash":"find . -mtime -1 -type f -print0 | xargs -0 tar rvf \"$archive.tar\""}
{"English":"Find files in the current directory tree whose names begin with \"file\" and whose size is 0, and remove them","Bash":"find . -name 'file*' -size 0 -print0 | xargs -0 rm"}
{"English":"Find all files\/directories named 'myfile' under your home directory","Bash":"find ~ -name myfile"}
{"English":"Remove all CVS directories in the current directory tree","Bash":"find . -type d -name CVS -exec rm -r {} \\;"}
{"English":"display all the directories in the folder master-","Bash":"find master -type d | sort"}
{"English":"Copy file or directory 'gtest' from directory 'include' in current directory to \/usr\/include, preserving ownerships and permissions.","Bash":"sudo cp -a include\/gtest \/usr\/include"}
{"English":"Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names\/paths per line","Bash":"find . -name \"*.rb\" -type f -print0 | xargs -0 -n 2 echo"}
{"English":"Create a directory named 'alpha_real' in the current directory","Bash":"mkdir alpha_real"}
{"English":"Find files that were modified more than 7 days ago but less than 14 days ago and archive them","Bash":"find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}
{"English":"Print the full name of \"$USER\"","Bash":"finger $USER |head -n1 |cut -d : -f3"}
{"English":"Rename \"old\" to \"tmp\"","Bash":"mv old tmp"}
{"English":"Find files modified between 6 and 9 minutes ago","Bash":"find . -mmin +5 -mmin -10"}
{"English":"Search the \/Path\/bar* directories recursively for files matching pattern \"file_name*\"","Bash":"find \/Path\/bar* -name \"file_name*\""}
{"English":"Rename all \"thumbs\" directories to \"thumb\" in the current directory tree","Bash":"find . -type d -exec rename 's\/^thumbs$\/thumb\/' {} \";\""}
{"English":"Look for *.jpg files on the system","Bash":"find \/ -name \u201c*.jpg\u201d"}
{"English":"Save the day of the year from the time string \"20131220\" to variable 'DATECOMING'","Bash":"DATECOMING=$(echo `date -d \"20131220\" +%j`)"}
{"English":"Compresses all '*.xml' files under current directory with 'bzip2' utility.","Bash":"find -name \\*.xml -print0 | xargs -0 -n 1 -P 3 bzip2"}
{"English":"Remove all but 5 last comma-separated fields from each line in 'data.csv'","Bash":"cat data.csv | rev | cut -d, -f-5 | rev"}
{"English":"Find all files\/directories under '\/directory_path' directory tree that have been modified within the last day","Bash":"find \/directory_path -mtime -1 -print"}
{"English":"Remove all regular files from the current directory tree whose names do not end with \"txt\"","Bash":"find . -type f -not -name '*txt' -print0 | xargs -0 rm --"}
{"English":"Print unique lines of sorted file \"f1\" compared to sorted file \"f2\"","Bash":"comm -2 -3 f1 f2"}
{"English":"Delete all files that have not been accessed in the last 30 days","Bash":"find . -type f -atime +30 -exec rm {} \\;"}
{"English":"show all the files in the current folder excluding those from the directories whose name starts with \"git\"","Bash":"find . -type d -name '.git*' -prune -o -type f -print"}
{"English":"Find all files\/directories named orm.properties under  \/eserver6 directory","Bash":"find \/eserver6 -name \"orm.properties\""}
{"English":"find all the text files in current folder and move all these to another folder appending \".bar\" at the end of these files","Bash":"find . -name \"*.txt\" | xargs -I '{}' mv '{}' \/foo\/'{}'.bar"}
{"English":"display a long listing of all the directories in current directory","Bash":"find . -type d -ls"}
{"English":"Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"${1:-Are you sure? [y\/N]} \"","Bash":"read -r -p \"${1:-Are you sure? [y\/N]} \" response"}
{"English":"Change the ownership of all files in the current directory tree to myuser:a-common-group-name","Bash":"find . -exec chown myuser:a-common-group-name {} +"}
{"English":"Log in as \"middleuser\" with key \".\/middle_id.pem\" and forward port 22 on host \"middle.example.org\" to port 2222 on localhost","Bash":"ssh -i .\/middle_id.pem -R 22:localhost:2222 middleuser@middle.example.org"}
{"English":"Find all README's in \/usr\/share","Bash":"find \/usr\/share -name README"}
{"English":"Recursively copy all files and directories matching \"*ela*L1*TE*\" in localhost's directory \/tdggendska10\/vig-preview-dmz-prod\/docs\/sbo\/pdf\/ to \/var\/www\/html\/sbo\/2010\/teacher\/ela\/level1 on localhost connecting as ssh user \"dalvarado\", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.","Bash":"scp -Bpqr \/tdggendska10\/vig-preview-dmz-prod\/docs\/sbo\/pdf\/*ela*L1*TE* dalvarado@localhost:\/var\/www\/html\/sbo\/2010\/teacher\/ela\/level1"}
{"English":"delete all the regular files in the temp folder which have not been modified in the last 24 hours","Bash":"find \/tmp\/ -type f -mtime +1 -print0 | xargs -0 -n1 rm"}
{"English":"renames all \".htm\" files to \".html\" files","Bash":"find . -name \"*.htm\" -exec mv '{}' '{}l' \\;"}
{"English":"Find all regular files in the the user's home\/mail directory and search for the word \"Linux\".","Bash":"find ~\/mail -type f | xargs grep \"Linux\""}
{"English":"Change directory to the \"lib\" directory located two parent directories above the path to command \"perl\"","Bash":"cd $(dirname $(dirname $(which perl)))\/lib"}
{"English":"find all the regular files in the current directory which do not have a read permission","Bash":"find -type f ! -perm -444"}
{"English":"display all the files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime -1 -print"}
{"English":"Look for *log files in directories at most three levels down the directory tree","Bash":"find \/ -maxdepth 3  -name \"*log\""}
{"English":"List all empty files in the current directory tree","Bash":"find . -type f -empty"}
{"English":"Make a copy of the entire contents of dir1 in the Pictures directory located in the user's home directory.","Bash":"cp -r dir1\/ ~\/Pictures\/"}
{"English":"List level 2 subdirectories of the current directory","Bash":"find . -mindepth 2 -maxdepth 2 -type d -printf '%M %u %g %p\\n'"}
{"English":"find all the normal\/regular files in current folder and search for a pattern","Bash":"find . -type f -print0 | xargs -0 grep pattern"}
{"English":"Rename all .txt files to .bak in the current directory tree","Bash":"find . -name \"*.txt\" | sed \"s\/\\.txt$\/\/\" | xargs -i echo mv {}.txt {}.bak | sh"}
{"English":"Send reverse requests to get domain name for each address in 'my_ips' list","Bash":"cat my_ips | xargs -i dig -x {} +short"}
{"English":"find all files in the current folder whose size is less than 50KB","Bash":"find . -size -50k"}
{"English":"search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them","Bash":"find . -mtime +180 -exec du -sh {} \\;"}
{"English":"List first 20 files under current directory","Bash":"find . -type f |xargs ls -lS |head -20"}
{"English":"find md5sum of an empty string","Bash":"echo -n '' | md5"}
{"English":"find all the files that have been modified in the last 60 minutes","Bash":"find -mmin -60"}
{"English":"Prints calendar for a current month without first day of a week.","Bash":"cal | sed -e 's\/^.\\{3\\}\/\/' -e 's\/^\\(.\\{15\\}\\).\\{3\\}$\/\\1\/'"}
{"English":"Find all regular files in the current directory tree that do not contain a whitespace","Bash":"find . -type f \\( -exec grep -q '[[:space:]]' {} \\; -o -print \\)"}
{"English":"Find all *.rb (regular) files under current directory and count their line numbers","Bash":"find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;"}
{"English":"Move files from $sourcePath to $destPath that have not been modified in the last 10 days","Bash":"find $sourcePath -type f -mtime +10 -name \"*.log\" -exec mv {} $destPath \\;"}
{"English":"Creates full path with parents, that matches to folder path extracted from $f variable.","Bash":"mkdir -p -- \"$(dirname -- \"$f\")\""}
{"English":"Set variable BZIP2_CMD to the full path of command \"bzip2\"","Bash":"BZIP2_CMD=`which bzip2`"}
{"English":"Find all files residing in \/home\/dm\/Video or below that were last changed at least 10 days ago","Bash":"find \/home\/dm\/Video -mtime +10"}
{"English":"Save the canonical path of \"\/usr\/bin\/java\" with \"\/bin\/java\" removed to variable \"JAVA_HOME\"","Bash":"JAVA_HOME=$(readlink -f \/usr\/bin\/java | sed \"s:\/bin\/java::\")"}
{"English":"find all the files in the folder \/path\/to\/dir which have been modified after a specific date (Feb 07)","Bash":"find \/path\/to\/dir -newermt \u201cFeb 07\u201d"}
{"English":"Change permissions to 644 for all regular files under the \/path\/to\/dir\/ tree unless these permissions are already set","Bash":"find \/path\/to\/dir\/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644"}
{"English":"find all js files under the build direcotry except build\/external directory.","Bash":"find build -not \\( -path build\/external -prune \\) -name \\*.js"}
{"English":"List all regular files in the current directory tree","Bash":"find . -type f -exec ls -l '{}' \\;"}
{"English":"Run 'chmod 0755' on all directories in the current directory tree","Bash":"find . -type d -exec chmod 0755 {} \\;"}
{"English":"Add directory \"$HOME\/Pictures\" to the directory stack","Bash":"pushd \"$HOME\/Pictures\""}
{"English":"Print \"$1\" or default 10 random lines from standard input","Bash":"nl | sort -R | cut -f2 | head -\"${1:-10}\""}
{"English":"find regular files in the current directory, without descending into sub-directories and display as a null separated list.","Bash":"find -maxdepth 1 -type f -printf '%f\\000'"}
{"English":"Search regular files from the \/path\/to\/dir directory tree for lines that contain \"_START\" and are enclosed in lines \"@GROUP\" and \"@END_GROUP\"","Bash":"find \/path\/to\/dir -type f -exec sed '\/@GROUP\/,\/@END_GROUP\/!d' {} + | grep '_START'"}
{"English":"Remove regular files changed more than 15 days ago from the \/tmp directory tree","Bash":"find \/tmp\/ -ctime +15 -type f -exec rm {} \\;"}
{"English":"Find files in the current directory recursively that are not readable by all","Bash":"find -type f ! -perm -444"}
{"English":"display all the regular files in the current folder that are exactly 10KB","Bash":"find . -type f -size 10k"}
{"English":"Find all files\/directories named 'query' (case insensitive) under current directory tree","Bash":"find -iname \"query\""}
{"English":"Prepend the reverse history number to the output of the history command with arguments \"$@\"","Bash":"history \"$@\" | tac | nl | tac"}
{"English":"Exclude directory from find . command","Bash":"find . -name '*.js' -and -not -path directory"}
{"English":"search for the word \"foo\" in all the regular\/normal files in the directory \"\/path\/to\/dir\"","Bash":"find \/path\/to\/dir -type f | xargs grep -l \"foo\""}
{"English":"Search three folders named foo, bar, and baz for all \"*.rb\" files","Bash":"find foo bar baz -name \"*.rb\""}
{"English":"Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers","Bash":"find . -name '*.axvw' -exec grep -n 'some string' {} +"}
{"English":"Print info about all mounted file systems","Bash":"df"}
{"English":"Count the number of equal lines in sorted files \"ignore.txt\" and \"input.txt\"","Bash":"comm -12 ignore.txt input.txt | wc -l"}
{"English":"Find directories in the current directory tree that were modified within the last 24 hours and move them to \/path\/to\/target-dir","Bash":"find . -type d -mtime -0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Find all symbolic links containing 'javaplugin' in their names under '\/usr' directory tree","Bash":"find \/usr\/ -lname *javaplugin*"}
{"English":"Find all SUID files in entire file system","Bash":"find \/ -perm +4000"}
{"English":"Find all directories in the current directory tree that do not have `execute' permissions for anyone","Bash":"find . -type d ! -perm -111"}
{"English":"Find files newer than start.txt but not newer than end.txt","Bash":"find .\/ -newer start.txt -and ! -newer end.txt"}
{"English":"Find symbolic links in lpi104-6 and research\/lpi104-6 to files whose pathnames end in \"file1\"","Bash":"find lpi104-6 research\/lpi104-6 -lname \"*file1\""}
{"English":"Format tab delimited file \"list-of-entries.txt\" as a table","Bash":"column -t -s $'\\t' list-of-entries.txt"}
{"English":"Save number of lines in 'file.txt' file in 'nbLines' variable","Bash":"nbLines=$(cat -n file.txt | tail -n 1 | cut -f1 | xargs)"}
{"English":"Display all files in the current directory tree that match \"*foo\"","Bash":"tree -P \"*foo\""}
{"English":"Exclude directory from find . command","Bash":"find build -not \\( -path build\/external -prune \\) -name \\*.js"}
{"English":"Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '\/root\/test.out' file.","Bash":"echo 'ls -hal \/root\/ > \/root\/test.out' | sudo bash"}
{"English":"Print all distinct characters in input \"He likes cats, really?\"","Bash":"echo \"He likes cats, really?\" | fold -w1 | sort -u"}
{"English":"Copy recursively \"\/source\/backup\" to \"\/destination\" preserving symbolic links, modification times, and permissions","Bash":"rsync -rtvpl \/source\/backup \/destination"}
{"English":"Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -10 | cut -f2- -d\" \""}
{"English":"Remove empty folder, and skip error message if one is not empty.","Bash":"rmdir --ignore-fail-on-non-empty newBaseDir\/Data\/NewDataCopy"}
{"English":"Search the current directory tree for files named \"accepted_hits.bam\"","Bash":"find `pwd` -name \"accepted_hits.bam\""}
{"English":"Search for files only that end with .php and look for the string $test inside those files","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+"}
{"English":"Save full path of command \"rm\" to variable \"RM\"","Bash":"RM=`which rm`"}
{"English":"List and remove all regular files named \"core\" under \/prog that are larger than 500k","Bash":"find \/prog -type f -size +1000 -print -name core -exec rm {} \\;"}
{"English":"Search the system for the file 'myfile' ignoring permission denied errors","Bash":"find . -name myfile |& grep -v 'Permission denied'"}
{"English":"display all directories in current folder and do not search in sub directories","Bash":"find . -maxdepth 1 -mindepth 1 -type d"}
{"English":"Filter contents of 'file' through awk commands written in script.awk, display the result.","Bash":"awk -f script.awk file"}
{"English":"Find all regular files in the home directory tree that were modified in the last 24 hours","Bash":"find ~ -type f -mtime 0"}
{"English":"Recursively change owner to \"www-data\" of \"\/var\/www\/.gnome2\", \"\/var\/www\/.config\", and \"\/var\/www\/.config\/inkscape\"","Bash":"chown -R www-data \/var\/www\/.gnome2 \/var\/www\/.config \/var\/www\/.config\/inkscape"}
{"English":"Count the number of files in the \/usr\/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'","Bash":"find \/usr\/ports\/ -name pkg-plist\\* -exec grep 'unexec.rmdir %D' '{}' '+' | wc -l"}
{"English":"Shows state of 'globstar' shell option.","Bash":"shopt globstar"}
{"English":"force delete all the regular\/normal files in the current folder","Bash":"find . -type f -exec rm -fv {} \\;"}
{"English":"Exchanges the top two directories in the dirs stack.","Bash":"pushd"}
{"English":"Interactively display all lines containing 'word' in all files whose name ends with .properties in the current directory, waiting for user input after each page.","Bash":"grep -R 'word' *.properties | more"}
{"English":"Find all files\/directories under $1 which have at least read permission for their owner and set read permission for group for these files\/directories","Bash":"find $1 -perm -u+r -exec chmod g+r {} \\;"}
{"English":"list all regular files which path is not dir1 or dir2","Bash":"find dir -not \\( -path \"dir1\" -o -path \"dir2\" -prune \\) -type f"}
{"English":"find all the php files in the current folder","Bash":"find . -name \u201c*.[php|PHP]\u201d -print"}
{"English":"Remove files in the current directory tree whose names match pattern \"file?\"","Bash":"find . -name \"file?\" -exec rm -vf {} \\;"}
{"English":"Find all files starting from the current directory that match regular expression '.*Message.*\\.java'","Bash":"find . -print | grep '.*Message.*\\.java'"}
{"English":"Find all regular files under '\/home\/john\/scripts' directory tree excluding files with '.ksh' extension","Bash":"find \/home\/john\/scripts -type f -not -name \"*.ksh\" -print"}
{"English":"Remove all .txt files in and below the current directory","Bash":"find . -name \"*.txt\" | xargs rm"}
{"English":"find all files  that names are 'apt'","Bash":"find  \/ -name \"apt\""}
{"English":"Print the list of files and directories of the \/etc directory","Bash":"find \/etc   ! -name \/etc"}
{"English":"Find all directories under $path","Bash":"find $path -type d"}
{"English":"Gets IP address of ${NET_IF} network interface.","Bash":"NET_IP=`ifconfig ${NET_IF} | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'`"}
{"English":"Strip all '\\' and newlines from $output and save the result to variable 'output'","Bash":"output=$(echo \"$output\" | tr -d '\\' | tr -d '\\n')"}
{"English":"Remove all files that are not newer than Jul 01 by modification time","Bash":"find \/file\/path ! -newermt \"Jul 01\" -type f -print0 | xargs -0 rm"}
{"English":"display all the files in the file system which belong to the group lighttpd","Bash":"find \/ -group lighttpd -print"}
{"English":"Search for 'Processed Files' in all $srch* (case insensitive) files under current directory","Bash":"find . -iname \"$srch*\" -exec grep \"Processed Files\" {} \\; -print"}
{"English":"Find all files on the system that are world writable","Bash":"find \/ -wholename  '\/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \\;"}
{"English":"Print '-exec is an action so an implicit -print is not applied' for every file\/directory found by the name 'file' under current directory tree","Bash":"find -name file -exec echo '-exec is an action so an implicit -print is not applied' \\;"}
{"English":"find all the files in the folder \"\/u\/bill\" which have been accessed in the last 2-6 minutes","Bash":"find \/u\/bill -amin +2 -amin -6"}
{"English":"Search the .css files in the \/starting\/directory tree for \".ExampleClass\"","Bash":"find \/starting\/directory -type f -name '*.css' | xargs -ti grep '\\.ExampleClass' {}"}
{"English":"List all leaf directories of the current directory tree","Bash":"find . -type d -links 2"}
{"English":"Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\"","Bash":"packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')"}
{"English":"search for the file \"file1\" in the entire file system","Bash":"find \/ -name file1"}
{"English":"Find all .php files in all directory trees matching pattern `\/srv\/www\/*\/htdocs\/system\/application\/' and search those files for string \"debug (\"","Bash":"find \/srv\/www\/*\/htdocs\/system\/application\/ -name \"*.php\" -exec grep -H \"debug (\" {} +"}
{"English":"Find disk used space of only the target directory","Bash":"du --max-depth=0 .\/directory"}
{"English":"Connect to host \"server_b\" as ssh user \"user\" and copy local file \"\/my_folder\/my_file.xml\" to server_b's directory \"\/my_new_folder\/\".","Bash":"scp -v \/my_folder\/my_file.xml user@server_b:\/my_new_folder\/"}
{"English":"copy all the regular\/normal files from temp folder which have been modified in the last 30*24 hours to \/tmp\/backup","Bash":"find \/tmp -type f -mtime -30 -exec cp {} \/tmp\/backup \\;"}
{"English":"Make directory \"\/tmp\/imaginary\/\" on remote host before archiving \"file\" to \"user@remote:\/tmp\/imaginary\/\"","Bash":"rsync -aq --rsync-path='mkdir -p \/tmp\/imaginary\/ && rsync' file user@remote:\/tmp\/imaginary\/"}
{"English":"Find all regular files in and below the home directory that have been modified in the last 90 minutes","Bash":"find ~ -type f -mmin -90"}
{"English":"Replace all the mathes to regex '<script type=\"text\\\/javascript\" charset=\"utf-8\" src=\"file.js\"><\\\/script>.*' with '<script type=\"text\\\/javascript\" charset=\"utf-8\" src=\"file2.js\"><\\\/script>' in all HTML files under $DIR directory tree modifying the files in-place","Bash":"find $DIR -type f -name '*.html' -exec sed -i 's\/.*<script type=\"text\\\/javascript\" charset=\"utf-8\" src=\"file.js\"><\\\/script>.*\/<script type=\"text\\\/javascript\" charset=\"utf-8\" src=\"file2.js\"><\\\/script>\/g' {} \\;"}
{"English":"List all files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 | xargs -r ls -l"}
{"English":"Show manual page of find utility","Bash":"man find"}
{"English":"Find all regular files on the system whose names are 'myfile'","Bash":"find \/ -name myfile -type f -print"}
{"English":"Change to folder where the oracle binary is.","Bash":"cd $(dirname `which oracle`)"}
{"English":"Create an empty file 'last.check' in directory pointed by variable \"log_dir\", with specified timestamp.","Bash":"touch -m 201111301200.00 $log_dir\/last.check"}
{"English":"Search the specified user for the given \"filename\"","Bash":"find \/ -user pat -iname \"filename\""}
{"English":"Send SIGTERM signal to entire process tree starting from ID 24901 and below.","Bash":"kill `pstree -p 24901 | sed 's\/(\/\\n(\/g' | grep '(' | sed 's\/(\\(.*\\)).*\/\\1\/' | tr \"\\n\" \" \"`"}
{"English":"find all text files in the current folder excluding those that are presenti n the folder \"\/svn\" and search for a pattern.","Bash":"find . -name '*.txt' \\! -wholename '*\/.svn\/*' -exec grep 'sometext' '{}' \\; -print"}
{"English":"Print lines 15967 to 16224 in file \"dump.txt\"","Bash":"cat dump.txt | head -16224 | tail -258"}
{"English":"Find all files\/directories under '\/usr' directory tree that have been modified exactly 5 minutes ago","Bash":"find \/usr -mmin 5"}
{"English":"Find regular files larger than 500MB in the current directory tree","Bash":"find . -type f -size +500M"}
{"English":"Find a hostname that resolves to IP '173.194.33.71'","Bash":"dig +short -x 173.194.33.71"}
{"English":"Print all non-hidden files in the current directory and its subdirectories","Bash":"find . -not -path '*\/\\.*'"}
{"English":"find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them","Bash":"find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}
{"English":"Change the owner and group of \"testfile.txt\" to \"root\"","Bash":"sudo chown root:root testfile.txt"}
{"English":"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories","Bash":"find . -type d -exec chmod u=rwx,g=rx,o=rx {} \\;"}
{"English":"Create a symbolic link in the current directory for each hidden file or directory in \"git-stuff\/home\/\" excluding \".\" and \"..\"","Bash":"ln -s git-stuff\/home\/.[!.]* ."}
{"English":"change the permissions of all the directories in the current folder","Bash":"find . -type d -exec chmod 2775 {} \\;"}
{"English":"find the oldest normal file in the current directory and display its contents","Bash":"find -type f -printf \"%T+ %p\\0\" | sort -z | grep -zom 1 \".*\" | cat"}
{"English":"find all the regular\/normal files in the current directory and print them skip searching all the directories in the current folders.","Bash":"find * -type f -print -o -type d -prune"}
{"English":"Delete all regular files named 'FILE-TO-FIND' under current directory tree","Bash":"find . -type f -name \"FILE-TO-FIND\" -exec rm -f {} \\;"}
{"English":"Find all files in the home directory tree that are owned by another user","Bash":"find ~ ! -user ${USER}"}
{"English":"find all the html, javascript and text files in the current folder","Bash":"find . -type f -name \"*.htm*\" -o -name \"*.js*\" -o -name \"*.txt\""}
{"English":"find all text files in current folder and delete them","Bash":"find . -name \".txt\" -exec rm \"{}\" \\;"}
{"English":"Find all files\/directories under current directory bypassing file hierarchies in lexicographical order","Bash":"find -s"}
{"English":"replaces the second to last line of file","Bash":"tac file | sed '2 s\/,$\/\/' | tac"}
{"English":"find a difference between website content of \"http:\/\/tldp.org\/LDP\/abs\/html\/\" and \"http:\/\/www.redhat.com\/mirrors\/LDP\/LDP\/abs\/html\/\"","Bash":"diff <(curl -s http:\/\/tldp.org\/LDP\/abs\/html\/) <(curl -s http:\/\/www.redhat.com\/mirrors\/LDP\/LDP\/abs\/html\/)"}
{"English":"Display a long listing of all 0777 permission directories under current directory tree","Bash":"find . -perm 0777 -type d -exec ls -l {} \\;"}
{"English":"Find files in the current directory tree whose names match regular expression \"^.*~$\\|^.*#$\"","Bash":"find -regex \"^.*~$\\|^.*#$\""}
{"English":"Searches the manual pages with descriptions in section 3, that name begins with lowercase letter.","Bash":"apropos -s 3 . | grep ^[a-z]"}
{"English":"FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines","Bash":"find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'"}
{"English":"List files larger than 10MB in the \/var directory recursively","Bash":"find \/var\/ -size +10M -exec ls -lh {} \\;"}
{"English":"Give all files in the \/path\/to\/base\/dir tree read privileges","Bash":"find \/path\/to\/base\/dir -type f -print0 | xargs -0 chmod 644"}
{"English":"Request IP address for each domain name received on the command input","Bash":"dig +short -f - | uniq"}
{"English":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","Bash":"find -type f -regex \".*\/.*\\.\\(shtml\\|css\\)\""}
{"English":"list names of bind functions containing \"\/\"","Bash":"bind -l | grep \/"}
{"English":"Print the contents of \"$FILE\" starting from line 2","Bash":"tail -n +2 \"$FILE\""}
{"English":"display all files which have been modified between two dates in current folder","Bash":"find . -type f -newermt \"2014-01-01\" ! -newermt \"2014-06-01\""}
{"English":"Save list of groups which user $line belongs to and not matching pattern \"_unknown|sciences|everyone|netaccounts\" in 'results' variable","Bash":"results=$(groups \"$line\" | tr ' ' '\\n' | egrep -v \"_unknown|sciences|everyone|netaccounts\")"}
{"English":"Search for the regex \"\\$wp_version =\" in all the regular files that end with '\/wp-includes\/version.php' (case insensitive) in their paths in directories\/files taken from the glob pattern '\/home\/*\/\/public_html\/' and show the matched lines along with the file names","Bash":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/wp-includes\/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}
{"English":"Print a detailed list of all regular files from the current directory tree","Bash":"find . -type f -ls"}
{"English":"List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time","Bash":"find \/ -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -ls"}
{"English":"move all the files in the current folder  to temp folder and search atleast in one subfolder","Bash":"find . -mindepth 1 -exec mv -t \/tmp {} +"}
{"English":"Find all symlinks under current directory","Bash":"find .\/ -type l"}
{"English":"search for the directory \"config\" in the current folder","Bash":"find . -name config -type d"}
{"English":"Display kernel name, release, and version.","Bash":"uname -s -r -v"}
{"English":"Find .cpp files that differs in subdirectories PATH1 and PATH2.","Bash":"diff -rqx \"*.a\" -x \"*.o\" -x \"*.d\" .\/PATH1 .\/PATH2 | grep \"\\.cpp \" | grep \"^Files\""}
{"English":"Find all files that belong to group developer","Bash":"find \/home -group developer"}
{"English":"Fetch 'stackoverflow.com' domain IP addresses from dig DNS lookup","Bash":"dig stackoverflow.com | grep -e \"^[^;]\" | tr -s \" \\t\" \" \" | cut -d\" \" -f5"}
{"English":"Print 'huzzah' if \/some\/dir\/ is empty","Bash":"find \/some\/dir\/ -maxdepth 0 -empty -exec echo \"huzzah\" \\;"}
{"English":"Save the short system host name to variable \"hostname\"","Bash":"hostname=`hostname -s`"}
{"English":"display the file name and the file type of all the files in the current directory","Bash":"find . -printf \"%y %p\\n\""}
{"English":"Lists all subdirectories in the current directory","Bash":"ls -d -- *\/                    ### more reliable GNU ls"}
{"English":"Recursively removes all files like '._*' from current folder.","Bash":"find . -name \"._*\" -print0 | xargs -0 rm -rf"}
{"English":"Create a symolic link in \"\/usr\/local\/bin\/\" to \"\/Applications\/Sublime\\ Text.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"ln -s \/Applications\/Sublime\\ Text.app\/Contents\/SharedSupport\/bin\/subl \/usr\/local\/bin\/"}
{"English":"show all the \".acc\" files in the folder \/home","Bash":"find \/home -type f -name '*.aac'"}
{"English":"Print percents of the space used on the file system containing path to the current working directory.","Bash":"df . -B MB | tail -1 | awk {'print substr($5, 1, length($5)-1)'}"}
{"English":"Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way","Bash":"find -d MyApp.app -name Headers -type d -print0 | xargs -0 rm -rf"}
{"English":"display long listing of all the regular hidden files in the folder Musica","Bash":"find M\u00fasica\/* -type f -name \".*\" -exec ls -l {} \\;"}
{"English":"Find the largest files in a particular location","Bash":"find \/home\/tecmint\/Downloads\/ -type f -printf \"%s %p\\n\" | sort -rn | head -n 5"}
{"English":"find directory which case-insensitive name is foo in current directory.","Bash":"find . -iname foo -type d"}
{"English":"Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them","Bash":"find \"$DIR\" -type f \\! -newer \"$a\" \\! -samefile \"$a\" -delete"}
{"English":"find all directories that names are 'apt' and display details","Bash":"find  \/ -type d -name \"apt\" -ls"}
{"English":"Find all *.txt files\/directories in entire file system","Bash":"find \/ -name \"*.txt\""}
{"English":"List the directory paths of all *.ext (case insensitive) files under \/path directory","Bash":"find \/path -type f -iname \"*.ext\" -printf \"%h\\n\""}
{"English":"Change the ownership of \"\/etc\/udev\/rules.d\/51-android.rules\" to \"root\"","Bash":"sudo chown root. \/etc\/udev\/rules.d\/51-android.rules"}
{"English":"Search the current directory tree for all files except SVN ones","Bash":"find .  ! -regex \".*[\/]\\.svn[\/]?.*\""}
{"English":"Rename \"new\" to \"old\" and backup to \"old.old\" if \"old\" exists","Bash":"mv new old -b -S .old"}
{"English":"Print unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"","Bash":"comm -23 a.txt b.txt"}
{"English":"split file input.txt into pieces per 1 line named output.NNNNN","Bash":"split --lines=1 --suffix-length=5 input.txt output."}
{"English":"Print the current directory","Bash":"find -maxdepth 0"}
{"English":"Copy all files ending in \".a\" in directory trees matching \"folder*\" to \"\/path\/to\/dest\" preserving directory hierarchy","Bash":"find folder* -name '*.a' -print | cpio -pvd \/path\/to\/dest"}
{"English":"Find files with SGID (2000) and SUID(4000) permssions set in the file system","Bash":"find \/  \\( -perm -2000 -o -perm -4000 \\) -ls"}
{"English":"Find all files\/directories under \/home\/feeds\/data directory","Bash":"find \/home\/feeds\/data"}
{"English":"Find user daniel's files of type jpeg without `autumn' in the name","Bash":"find . -user daniel -type f -name *.jpg ! -name autumn*"}
{"English":"Add group write permission to all files and directories in the current directory including hidden files and excluding \"..\"","Bash":"chmod g+w .[^.]* ..?*"}
{"English":"Add executable permission to \"java_ee_sdk-6u2-jdk-linux-x64.sh\"","Bash":"sudo chmod +x java_ee_sdk-6u2-jdk-linux-x64.sh"}
{"English":"search for the folder .dummy in the entire directory structure of \"test folder\" and remove it.","Bash":"find -depth \"Test Folder\" -type d -name .dummy -exec rm -rf \\{\\} \\;"}
{"English":"Take the last slash-separated section of variable \"FILE\" and copy it to variable \"NAME\".","Bash":"NAME=`basename \"$FILE\"`"}
{"English":"Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir","Bash":"full_backup_dir=\"$(find . -depth \\( -wholename \\.\/\\.\\* \\) -prune -o -print | cpio -oav)\""}
{"English":"display ten files in the current directory","Bash":"find | head"}
{"English":"change owner of the file my_test_expect.exp to user el","Bash":"sudo chown el my_test_expect.exp     \/\/make el the owner."}
{"English":"Create symlinks to all  \/home\/folder1\/*.txt files and 'folder1_' directory with the same name in a target directory named '+'","Bash":"find \/home\/folder1\/*.txt -type f -exec ln -s {} \"folder1_\" +\\;"}
{"English":"Search for '\u201cfoobar\u201d' in all files starting with '\u2018' and ending with '\u2019' and contain '.' in their names in the entire filesystem and display only the matched files","Bash":"find \/ -name \u2018*.*\u2019 -exec grep -il \u201cfoobar\u201d {} \\;"}
{"English":"Find files that don\u2019t have 644 permissions","Bash":"find \/ -type f ! -perm 644"}
{"English":"force delete all the files which have not been accessed in the last 240 hours in the temp folder","Bash":"find \/tmp\/* -atime +10 -exec rm -f {} \\;"}
{"English":"Find regular files that are larger than 2GB","Bash":"find . -type f -size +2G"}
{"English":"Print crontabs of all users in system, skipping messages that some users don`t have crontab.","Bash":"cat \/etc\/passwd | sed 's\/^\\([^:]*\\):.*$\/crontab -u \\1 -l 2>\\&1\/' | sh | grep -v \"no crontab for\""}
{"English":"display all the files in the file system which belong to no group","Bash":"find \/ -nogroup staff -print"}
{"English":"Set prompt to the system host name and history number","Bash":"PS1=\"`hostname`:\\!>\""}
{"English":"Format the date represented by time string @1267619929 according to default format and print it","Bash":"date -ud @1267619929"}
{"English":"list all the directories in the folder httpdocs","Bash":"find httpdocs -type d"}
{"English":"Set the 'verbose' shell option causing bash to print shell input lines as they are read","Bash":"set -o verbose"}
{"English":"Find all *.p[lm] files under \/users\/tom directory that matches the regex '->get(\\|#hyphenate' in their contents","Bash":"find \/users\/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"}
{"English":"Prints \"$NEWFILE\" to the terminal and file '\/etc\/timezone' as a root user.","Bash":"echo \"$NEWFILE\" | sudo tee \/etc\/apt\/sources.list"}
{"English":"Print the list of files modified within a fortnight ago removing the leading .\/ from the file names","Bash":"find .  -mtime -14 | sed -e 's\/^\\.\\\/\/\/'"}
{"English":"Change directory to the current user's home directory","Bash":"cd \/home\/`whoami`"}
{"English":"find all *.java files\/directories under current directory","Bash":"find . -name  \"*.java\""}
{"English":"Print '\"HTTP\/1.1 200 OK', two new lines and the current date","Bash":"echo -e \"HTTP\/1.1 200 OK\\n\\n $(date)\""}
{"English":"List files with C-style escape sequences for non-alphanumeric characters","Bash":"ls -b"}
{"English":"Find all *.csv files under \/foot\/bar\/ and move them to some_dir","Bash":"find \/foot\/bar\/ -name '*.csv' -print0 | xargs -0 mv -t some_dir"}
{"English":"display all empty files(files with sisze 0 bytes) in home folder","Bash":"find ~ -empty"}
{"English":"Find files in the current directory tree whose content was changed within the last 60 minutes","Bash":"find . -mmin -60"}
{"English":"find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.","Bash":"find . \u2014 name \"[a\u2011z][a\u2011z][0\u20149][0\u20149].txt\" \u2014 print"}
{"English":"Search all files in the current directory tree, except *.html and *.svn*, for \"SearchString\"","Bash":"find . ! -name '*.html' ! -name '*.svn*' -exec grep 'SearchString' {} \/dev\/null \\;"}
{"English":"Find all files in the \/home\/ directory tree that were last accessed more than 7 days ago","Bash":"find \/home -atime +7"}
{"English":"Print the list of .txt files under and below the current directory","Bash":"find . -name '*.txt' -print0|xargs -0 -n 1 echo"}
{"English":"Search the current directory tree for all image files","Bash":"find . -type f -regex \".*\\.\\(jpg\\|jpeg\\|gif\\|png\\|JPG\\|JPEG\\|GIF\\|PNG\\)\""}
{"English":"delete all files that have the extension \"bam\" in current directory","Bash":"find . -name \"*.bam\" | xargs rm"}
{"English":"Search the current directory tree for *.wav files that have \"export\" in their pathnames","Bash":"find -type f -name \"*.wav\" | grep export"}
{"English":"Print only common file names in sorted listings of directory 'dir1' and 'dir2'","Bash":"comm -1 -2 <(ls \/dir1 | sort) <(ls \/dir2 | sort)"}
{"English":"Display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty.","Bash":"diff -ENwbur repos1\/ repos2\/"}
{"English":"Clear the in-memory history and read from the current history file","Bash":"history -cr"}
{"English":"find all files in the home folder which have been modified between 72 and 96 hours before","Bash":"find ~ -mtime 2 -mtime -4 -daystart"}
{"English":"Find all *.txt files under \/foo and print their total size","Bash":"find \/foo -name \"*.txt\" -exec du -hc {} + | tail -n1"}
{"English":"Display a detailed listing of the current directory, pausing for user input after each page.","Bash":"ls -l | more"}
{"English":"Find all files that are less than 50 bytes","Bash":"find \/ -size -50c"}
{"English":"Change permissions of all directories from the current directory tree to 644","Bash":"find . -type d -exec chmod 755 {} +"}
{"English":"Calculate md5 sums for each files matching 'main.cpp*'","Bash":"md5sum main.cpp*"}
{"English":"List .html files in the current directory tree that contain string \"base\\-maps\" but do NOT contain string \"base\\-maps\\-bot\"","Bash":"find . -name \"*.html\" -exec grep -lR 'base\\-maps' {} \\; | xargs grep -L 'base\\-maps\\-bot'"}
{"English":"find all the files in the home folder which have been modified in the last 24 hours","Bash":"find $HOME -mtime -1"}
{"English":"Find every JavaScript file in the wordpress directory","Bash":"find wordpress -maxdepth 1 -name '*js'"}
{"English":"Find all *.txt, *.html files under \/basedir that match the case insensitive pattern *company* in their names","Bash":"find \/basedir\/ \\( -iname '*company*' -and \\( -iname '*.txt' -or -iname '*.html' \\) \\) -print0"}
{"English":"Move all regular files under current directory to .\/newdir","Bash":"find .\/ -type f -print | xargs    -i mv -f {} .\/newdir"}
{"English":"Remove all *.mp3 files in tmp directory but not in it's subdirectories","Bash":"find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    -n1 rm"}
{"English":"Find all *$VERSION* files\/directories under current directory where $VERSION is a variable","Bash":"find . -name \"*$VERSION*\""}
{"English":"Find all .mp3 files with more then 10MB and delete them from root directory .","Bash":"find \/  -type f -name *.mp3 -size +10M -exec rm  {} \\;"}
{"English":"Create a tar file containing all the files in ~\/Library folder that contain spaces in their names","Bash":"find ~\/Library -name '* *' -print0 | xargs -0 tar rf blah.tar"}
{"English":"find regular which case-insensitive name is foo in current directory","Bash":"find . -iname foo -type f"}
{"English":"Print DISPLAY of \"orschiro\" user","Bash":"who | sed -e '\/orschiro\/! d; \/pts\/! d; s\/^.*\\(:[0-9.]\\+\\).*$\/\\1\/p;d' | head -n1"}
{"English":"Creates temporary directory in '\/tmp\/' folder and saves path to it in 'my_tmp_dir' variable.","Bash":"my_tmp_dir=$(mktemp -d --tmpdir=\/tmp)"}
{"English":"Sort \"$file\" and output the result to \"$file\"","Bash":"sort -o $file $file"}
{"English":"search for a word in all the files in the current directory","Bash":"find . -type f -exec grep 'needle' {} \\;"}
{"English":"delete all the files in the current folder which have been modified in the last 14*24 hours","Bash":"find . -mtime -14 -print|xargs -i rm \\;"}
{"English":"Find a.out and object files in the current directory tree","Bash":"find . ( -name a.out -o -name *.o ) -print"}
{"English":"Find all empty directories under a certain path","Bash":"find \/tmp -type d -empty"}
{"English":"search for \"flac\" files in current folder using regular expressions","Bash":"find .\/ -regex \".\/cmn-.\\.flac\""}
{"English":"List all .gif files in the current directory tree","Bash":"find . -name *.gif -exec ls {} \\;"}
{"English":"Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines","Bash":"grep -ioh \"facebook\\|xing\\|linkedin\\|googleplus\" access-log.txt | sort | uniq -c | sort -n"}
{"English":"Prints path to the folder that contains target of symbolic link ..\/..\/..\/..\/etc\/passwd.","Bash":"$(dirname $(readlink -e ..\/..\/..\/..\/etc\/passwd))"}
{"English":"Search the .VER files from the current directory tree for string \"Test_Version='","Bash":"find . -name \"*.VER\" -exec grep 'Test_Version=' '{}' ';' -print;"}
{"English":"Search for files\/directories which are writable by either their owner or their group","Bash":"find . -perm \/u+w,g+w"}
{"English":"display all symbolic links in the folder \"myfiles\" and follow them","Bash":"find -L \/myfiles"}
{"English":"Gets IP address of first network interface which name matches pattern \"venet0:0\\|eth0\".","Bash":"ifconfig | grep -A2 \"venet0:0\\|eth0\" | grep 'inet addr:' | sed -r 's\/.*inet addr:([^ ]+).*\/\\1\/' | head -1"}
{"English":"Find all files\/directories under '\/abs\/path\/to\/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names","Bash":"find \/abs\/path\/to\/directory -maxdepth 1 -name '.*invalidTemplateName.*'"}
{"English":"find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec)","Bash":"find . -type f -iname '*.cpp' -exec mv -t .\/test\/ {} \\+"}
{"English":"find all files under the \/etc\/sysconfig directory that were accessed in the last 30 minutes","Bash":"find \/etc\/sysconfig -amin -30"}
{"English":"find all the files in the folder \/opt which have been accessed exactly 20 days ago","Bash":"find \/opt -atime 20"}
{"English":"Search for files greater than 20MB in the entire file system and display the path and file size","Bash":"find \/ -type f -size +20M -exec ls -lh {} \\; | awk '{ print $NF \": \" $5 }'"}
{"English":"create directory subdirectory","Bash":"mkdir subdirectory"}
{"English":"Locate and rename unprintable directories using inode numbers","Bash":"find . -inum 211028 -exec mv {} newname.dir \\;"}
{"English":"Split \"hugefile.txt\" into files with 100000 lines each starting with \"part.\" and using numeric suffixes","Bash":"split -a4 -d -l100000 hugefile.txt part."}
{"English":"Find all files in $dir directory without going into sub-directories","Bash":"find \"$dir\" -maxdepth 1 -type f"}
{"English":"Search the \/root directory recursively for the regular file named \"myfile\" ignoring \/root\/work\/","Bash":"find \/root\/ -path '\/root\/work' -prune -o -name myfile -type f -print"}
{"English":"Forcibly removes ${temp} file.","Bash":"rm --force \"${temp}\""}
{"English":"List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj","Bash":"find \/ \\! \\( -newer ttt -user wnj \\) -print"}
{"English":"find all the mp3 files in the current folder and move them to another folder","Bash":"find . -name \"*.mp3\" -exec mv {} \"\/Users\/sir\/Music\/\/iTunes\/iTunes Media\/Automatically Add to iTunes.localized\/\" \\;"}
{"English":"Rename absolute path of symbolic link \"dirln\" to \"dir2\"","Bash":"mv \"$(readlink -f dirln)\" dir2"}
{"English":"display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input)","Bash":"find ~ -iname '*.jpg' -exec ls {} +"}
{"English":"Find and clear UTF-8 files with BOM","Bash":"find . -type f -exec sed '1s\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;"}
{"English":"Copy \"source\" recursively to \"destination\" excluding \"path1\/to\/exclude\" and \"path2\/to\/exclude\"","Bash":"rsync -av --exclude='path1\/to\/exclude' --exclude='path2\/to\/exclude' source destination"}
{"English":"Print common lines in sorted files \"ignore.txt\" and \"input.txt\"","Bash":"comm -12 ignore.txt input.txt"}
{"English":"Pass all the files from the current directory tree as arguments to a single 'echo' command","Bash":"find . -exec echo {} +"}
{"English":"Extract data from HTML table in \"mycode.html\"","Bash":"paste -d: <(grep '<th>' mycode.html | sed -e 's,<\/*th>,,g') <(grep '<td>' mycode.html | sed -e 's,<\/*td>,,g')"}
{"English":"Convert \"595a\" into characters and then print the hexadecimal and printable characters of each byte","Bash":"echo 595a | awk -niord '$0=chr(\"0x\"RT)' RS=.. ORS= | od -tx1c"}
{"English":"Make directory \"aaa\/bbb\"","Bash":"mkdir aaa\/bbb"}
{"English":"Find all PNG and JPG files and append them to archive `images.tar'","Bash":"find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}
{"English":"Counts lines in file fileName ignoring empty lines and lines with spaces only.","Bash":"awk '!\/^[[:space:]]*$\/{++x} END{print x}' filename"}
{"English":"Recursively change the owner and group of \"subdir2\" to \"user2\"","Bash":"chown user2:user2 -R subdir2"}
{"English":"List all files in a current folder, separating names with semicolon","Bash":"ls -1b | tr '\\n' ';'"}
{"English":"Prints real path of the folder containing $0 file.","Bash":"$(readlink -f $(dirname \"$0\"))"}
{"English":"Gets MAC address of eth0 network interface.","Bash":"ifconfig eth0 | grep HWaddr | cut -d ' ' -f 9"}
{"English":"Look for files in the current directory tree to which the group users have full access","Bash":"find . -perm -070 -print"}
{"English":"Print every file's type, name, and inode","Bash":"find -printf \"%y %i %prn\""}
{"English":"Find all filename.* files\/directories under \/root\/directory\/to\/search","Bash":"find \/root\/directory\/to\/search -name 'filename.*'"}
{"English":"Save the directory name of the current bash script to variable \"path\" if it is found in one of the directories specified by PATH.","Bash":"path=\"$( dirname \"$( which \"$0\" )\" )\""}
{"English":"Search the system for *.rpm files ignoring removable media","Bash":"find \/ -xdev -name \\*.rpm"}
{"English":"Continuously convert \"20131202\" into \"2013 12 02\" and print the result","Bash":"yes a=\\\"20131202\\\" | sed -e :a -e 's\/...\\([0-9]\\{4\\}\\)\\([0-9]\\{2\\}\\)\\([0-9]\\{2\\}\\).\/\\1 \\2 \\3\/'"}
{"English":"Open all .c files in the current directory tree in the vim editor","Bash":"find . -name \"*.c\" -print | vim -"}
{"English":"Save the full path of command \"~\/f\" to variable \"foo\"","Bash":"foo=`which ~\/f`"}
{"English":"Print unique lines of sorted file \"a\" compared with sorted file \"b\"","Bash":"comm -23 a b"}
{"English":"Find a directory named 'project.images' in the entire filesystem","Bash":"find  \/ -type d -name \"project.images\""}
{"English":"Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.","Bash":"pushd -2"}
{"English":"Display differences between files \"a.txt\" and \"b.txt\" side-by-side and do not output common lines.","Bash":"diff -a --suppress-common-lines -y a.txt b.txt"}
{"English":"find all the fles that have .ssh in the end and redirect the output to ssh-stuff","Bash":"find \/ -name .ssh* -print | tee -a ssh-stuff"}
{"English":"Count the number of all directories under current directory non-recursively","Bash":"find . -mindepth 1 -maxdepth 1 -type d | wc -l"}
{"English":"Find files\/directories in entire file system newer than myfile","Bash":"find \/ -newer myfile"}
{"English":"Make directory \"destdir\"","Bash":"mkdir destdir"}
{"English":"find all normal\/regular files in current folder and display them in sorted order","Bash":"find . -type f -ls | awk '{print $(NF-3), $(NF-2), $(NF-1), $NF}'"}
{"English":"Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.","Bash":"sed -f commandfile file"}
{"English":"find all the files in current folder which have been updated in the last 60 minutes","Bash":"find . -mmin -60"}
{"English":"Display an infinite number of lines consisting of \"y\", until the user presses the Q key.","Bash":"yes | cat | more"}
{"English":"Search the system for files whose names begin with letters 'a', 'b', or 'c'","Bash":"find  \/ -name '[a-c]*'"}
{"English":"Find all Read Only files","Bash":"find \/ -perm \/u=r"}
{"English":"Find users whose names begin with \"ab\" and ends with \"1\"","Bash":"who | cut -d ' ' -f 1 | grep -e '^ab' -e '1$'"}
{"English":"Search the bla directory recursively for *.so files","Bash":"find bla -name \"*.so\""}
{"English":"display a long listing of all the regular\/normal files in the file system which have set uid bit or set gid bit enabled.","Bash":"find \/ -type f \\( -perm -4000 -o -perm -2000 \\) -exec ls -l {} \\;"}
{"English":"Continuously send ping requests to broadcast address \"10.10.0.255\" and print the IP addresses who respond","Bash":"ping -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }'"}
{"English":"Change group ownership to `foo' for files with GID=2000","Bash":"find \/ -group 2000 -exec chgrp -h foo {} \\;"}
{"English":"Convert \"1199092913\" to dotted decimal IPv4 address","Bash":"ping -c1 1199092913 | head -n1 | grep -Eow \"[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+\""}
{"English":"display all regular\/normal files in the current folder with the name dummy","Bash":"find -type f -name dummy"}
{"English":"show all the directories in the current folder","Bash":"find . -type d"}
{"English":"Print file information of command \"bash\"","Bash":"echo $(ls -l $(which bash))"}
{"English":"split listing of the current directory into pieces per 500 lines named \"outputXYZNNN\"","Bash":"ls | split -l 500 - outputXYZ."}
{"English":"Find all .java files under and below the current directory","Bash":"find . -name '*.java'"}
{"English":"Remove all *.mp3 files in tmp directory but not in it's subdirectories","Bash":"rm `find tmp -maxdepth 1 -name '*.mp3'`"}
{"English":"Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields","Bash":"rev input | uniq -f1 | rev"}
{"English":"display all regular files in current folder excluding search in the directories that are ending with \"git,svn\"","Bash":"find . \\( -type d -regex '^.*\/\\.\\(git\\|svn\\)$' -prune -false \\) -o -type f -print0"}
{"English":"Create a ssh key and store it in the file ~\/.ssh\/apache-rsync","Bash":"ssh-keygen -f ~\/.ssh\/apache-rsync"}
{"English":"Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.","Bash":"file=`basename \"$1\"`"}
{"English":"Set permissions to 755 for every subdirectory of the current directory","Bash":"find  . -type d -mindepth 1 -print -exec chmod 755 {}\/* \\;"}
{"English":"Find all links pointing to \/path\/to\/foo.txt","Bash":"find . -lname \/path\/to\/foo.txt"}
{"English":"find in $HOME files ending in \"txt\" and do nothing with them, or files ending in \"html\" and list them null separated.","Bash":"find $HOME -name \\*txt -o -name \\*html -print0"}
{"English":"find all files in the home folder that are modified in the last 24 hours","Bash":"find $HOME -mtime -1"}
{"English":"Change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree","Bash":"find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}
{"English":"Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.","Bash":"find . -name \"*.php\" | xargs wc -l"}
{"English":"Find the largest original \".gz\" file in the current directory tree","Bash":"find . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"}
{"English":"Create a hard link named \"my-hard-link\" to \"myfile.txt\"","Bash":"ln myfile.txt my-hard-link"}
{"English":"Find all files whose permission are 777","Bash":"find \/ -type f -perm 777"}
{"English":"find md5sum of 'string to be hashed'","Bash":"md5 -s 'string to be hashed'"}
{"English":"Find all files\/directories named 'javac' under current directory","Bash":"find . -name 'javac'"}
{"English":"Wrap each line in \"file.txt\" to fit in 80 characters","Bash":"cat file.txt | fold"}
{"English":"Search the current directory recursively for regular files, skipping hidden files in the current directory","Bash":"find * -type f -print"}
{"English":"Locate files whose status was changed less than 1 day ago","Bash":"find . -ctime -1 -print"}
{"English":"Find all files in \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* that are older than 90 days and print only unique parent directory paths","Bash":"find \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* -type f -mtime +90 -printf \"%h\\n\" | sort | uniq"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory and create an archive (file.tar) of all the files found","Bash":"find var\/log\/ -iname \"anaconda.*\" -exec tar -rvf file.tar {} \\;"}
{"English":"find all the configuration files which have been accessed in the last 30 minutes.","Bash":"find \/etc\/sysconfig -amin -30"}
{"English":"Changes group ownership of 'myprogram' to ${USER} (the current user)","Bash":"chgrp \"${USER}\" myprogram"}
{"English":"display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB","Bash":"find . -size +10k -exec ls -ls {} \\+ | sort -nr"}
{"English":"Display the named characters in \"line1\\r\\nline2\"","Bash":"echo -e \"line1\\r\\nline2\" | od -a"}
{"English":"Find all catalina* files\/directories under current directory","Bash":"find -name 'catalina*'"}
{"English":"Copy all files matching \"file_name.extension\" to \"\/path\/to\/receiving\/folder\" preserving directory hierarchy","Bash":"find . -name 'file_name.extension' -print | cpio -pavd \/path\/to\/receiving\/folder"}
{"English":"Handles shell option 'nullglob' according with flags stored in $NGV variable.","Bash":"shopt \"$NGV\" nullglob"}
{"English":"List all regular file owned by root with permissions 4000","Bash":"find \/ -type f -user root -perm -4000 -exec ls -l {} \\;"}
{"English":"Find all *.old files and move them to directory oldfiles","Bash":"find . -name \"*.old\" -exec mv {} oldfiles \\;"}
{"English":"Recursively find all files in the directory \"posns\" and split each one into files of at most 10000 lines each","Bash":"find posns -type f -exec split -l 10000 {} \\;"}
{"English":"Find all TXT files on the system and copy them to \/tmp\/txt","Bash":"find \/ -iname '*.txt' | xargs --replace=@ cp @ \/tmp\/txt"}
{"English":"Find all directories in the current one with \"linkin park\" in their names and copy them to \/Users\/tommye\/Desktop\/LP","Bash":"find . -maxdepth 1 -type d -iname \"*linkin park*\" -exec cp -r {} \/Users\/tommye\/Desktop\/LP \\;"}
{"English":"Find files\/directories named 'foo.bar' in the root filesystem partition","Bash":"find \/ -name foo.bar -print -xdev"}
{"English":"Recursively copy \"old\/\" to \"new\/\" as a dry run skipping files that have matching checksums and output the name only","Bash":"rsync -rcn --out-format=\"%n\" old\/ new\/"}
{"English":"Locates 'gcc' executable file, strips last two parts of the full path, adds '\/lib' to the end and saves result in 'libdir' variable.","Bash":"libdir=$(dirname $(dirname $(which gcc)))\/lib"}
{"English":"search for files in the current folder using name patterns","Bash":"find . -name '[mM][yY][fF][iI][lL][eE]*'"}
{"English":"Changes group ownership of '\/etc\/btsync\/[prefered conf name].conf' to 'btsync'.","Bash":"chgrp btsync \/etc\/btsync\/[prefered conf name].conf"}
{"English":"Find all directories recursively starting from \/ and skipping the contents of \/proc\/, and count them","Bash":"find \/ -path \/proc -prune -o -type d | wc -l"}
{"English":"List .log files from the current directory tree","Bash":"find . -name \"*.log\" -exec echo {} \\;"}
{"English":"Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP","Bash":"PacketLoss=$(ping \"$TestIP\" -c 2 | grep -Eo \"[0-9]+% packet loss\" | grep -Eo \"^[0-9]\")"}
{"English":"Make directorie(s) 'es_MX.utf8\/LC_MESSAGES' as needed in the current directory","Bash":"mkdir --parents .\/es_MX.utf8\/LC_MESSAGES"}
{"English":"display the count of all the files in the current folder","Bash":"find . -print | wc -l"}
{"English":"Print a list of all the files in entire file system whose inode has been modified no later than one minute ago","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"Update the archived copy of the home directory, \"alldata.tar\"","Bash":"find ~\/ -newer alldata.tar -exec tar uvf alldata.tar {} ;"}
{"English":"Pushes directory path that saved in $line variable to the dirs stack, expanding symbol '~', if present, as home folder path.","Bash":"pushd \"${line\/#\\~\/$HOME}\";"}
{"English":"Filters out strings, using the extended regexp pattern '^#|^$|no crontab for|cannot use this program' from \"$USERTAB\"","Bash":"echo \"$USERTAB\"| grep -vE '^#|^$|no crontab for|cannot use this program'"}
{"English":"Find files under current directory without descending into other file systems and append a null character at the end of each paths","Bash":"find -x . -type f -print0"}
{"English":"Merge each non-blank line of standard input into a single comma separated line","Bash":"grep -v '^$' | paste -s -d\",\" -"}
{"English":"Save the first three octets of the current host's IP address to variable \"local\"","Bash":"local=$(hostname -I | awk '{print $2}' | cut -f1,2,3 -d\".\")"}
{"English":"Find all regular .abc files under and below \/the\/path and rename them prefixing their names with \"version_1\"","Bash":"find \/the\/path -type f -name '*.abc' -execdir rename 's\/\\.\\\/(.+)\\.abc$\/version1_$1.abc\/' {} \\;"}
{"English":"Measure the disk space taken up by all *.txt files in the current directory tree","Bash":"find . -name \"*.txt\" -print0 |xargs -0 du -ch"}
{"English":"find all the files in the current folder which have been modified in the last one minute","Bash":"find . -type f -mmin 0"}
{"English":"search for files which are writable by both their owner and their group","Bash":"find . -perm -220"}
{"English":"Search for 'class Pool' in all *.java (case insensitive) files under current directory","Bash":"find -iname '*.java'|xargs grep 'class Pool'"}
{"English":"List all files in the \/hometest directory tree whose names are \"Trash\", and their sizes","Bash":"find \/hometest -name Trash -exec ls -s {} \\;"}
{"English":"list files in the directory \"$directory\" with permissions \"$permissions\"","Bash":"find \"$directory\" -perm \"$permissions\""}
{"English":"Lists all directories in a current folder.","Bash":"ls -d *\/"}
{"English":"Print the base name via grep of the current working directory","Bash":"pwd | grep -o '[^\/]*$'"}
{"English":"delete all the mp3 files in the home folder","Bash":"find \/home\/ -exec grep -l \u201cmp3\u201d {} \\; | xargs rm"}
{"English":"Prints total number of lines of all *.c files in a current folder and subfolders.","Bash":"find . -name '*.c' -print0 |xargs -0 wc -l|grep -v total|awk '{ sum += $1; } END { print \"SUM: \" sum; }'"}
{"English":"List all .svn files\/directories under current directory","Bash":"find . -name .svn -exec ls {} \\;"}
{"English":"Delete all files with 128128 inode number under current directory tree","Bash":"find . -inum 128128 | xargs rm"}
{"English":"copy all the files with the extension \".type\" from one folder to a target directory","Bash":"find \"$sourcedir\" -type f -name \"*.type\" | xargs cp -t targetdir"}
{"English":"Read a line from standard input into variable \"response\" ignoring backslash escapes and using the prompt \"Are you sure? [y\/N] \"","Bash":"read -r -p \"Are you sure? [y\/N] \" response"}
{"English":"delete all the normal files in the current directory whcih have the word \"gui\" in their content.","Bash":"find \/ -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}
{"English":"Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names","Bash":"find -type d -a ! -name '.?*' -o ! -prune"}
{"English":"List all files except for those in directory SCCS","Bash":"find . -print -o -name SCCS -prune"}
{"English":"Prints out all the logged-in users along with their group information.","Bash":"groups $(who | cut -d' ' -f 1)"}
{"English":"find the count of all the regular files in a directory","Bash":"find \/usr -type f | wc -l"}
{"English":"Find all directories that have been modified in the last seven days.","Bash":"find . -mtime -7 -type d"}
{"English":"Print numbers from 1 to 10 using up to 4 processes","Bash":"seq 10 | xargs -P4 -I'{}' echo '{}'"}
{"English":"Find all executable files under the current directory and below","Bash":"find . -perm \/a=x"}
{"English":"Find *.html files in the current directory tree that were modified 7 days ago","Bash":"find . -mtime 7 -name \"*.html\" -print"}
{"English":"Save the absolute path of \"$path\" to variable \"full_path\"","Bash":"full_path=`readlink -fn -- $path`"}
{"English":"Count and show the number of lines for each PHP files in the current directory tree","Bash":"find . -name '*.php' | xargs wc -l"}
{"English":"Calculate md5 sum of the md5 sum of all the sorted files under $path","Bash":"find \"$path\" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"}
{"English":"List all files under and below the directory given as variable $FULFILLMENT","Bash":"find $FULFILLMENT -ls"}
{"English":"Change folder to the one where $0 link target file is located.","Bash":"cd $(dirname $(readlink -f $0))"}
{"English":"find all the files in the entire file system starting with the word top","Bash":"find \/ -name 'top?????*'"}
{"English":"Login to \"host\" using identity file \"id_rsa\"","Bash":"ssh -i id_rsa host"}
{"English":"display all files in the entire file system excluding the directories \/proc,\/sys,\/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set","Bash":"find \/ -noleaf -wholename '\/proc' -prune -o -wholename '\/sys' -prune -o -wholename '\/dev' -prune -o -perm -2 ! -type l  ! -type s ! \\( -type d -perm -1000 \\) -print"}
{"English":"Find all files\/directories under minimum 1 level down the $FOLDER directory and sort them","Bash":"find \"$FOLDER\" -mindepth 1 | sort"}
{"English":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","Bash":"find . -type f \\( -name \"*.shtml\" -or -name \"*.css\" \\)"}
{"English":"Recursively changes group ownership of every folder in a current directory to the name of that folder.","Bash":"find . -type d | sed -e 's\/^\\.\\\/\/\/g' | awk '{print $1, $1}' | xargs chgrp"}
{"English":"Find all empty directories recursively starting from the current one and delete them","Bash":"find . -type d -empty -print0 | xargs -0 \/bin\/rmdir"}
{"English":"List all files\/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\\n'","Bash":"find $dir_name -size $sizeFile -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\\n'"}
{"English":"recursively change owner of the directory testproject and all files into it to user ftpuser","Bash":"chown ftpuser testproject\/ -R"}
{"English":"set variable \"uname_m\" to machine architecture, ie. x86_64","Bash":"uname_m=`uname -m`"}
{"English":"display all files in the current folder and do not search in the sub directories","Bash":"find . -maxdepth 0"}
{"English":"Print the contents of \"my_script.py\"","Bash":"cat my_script.py"}
{"English":"Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 50","Bash":"ping 8.8.8.8 | awk -F\"[= ]\" '{if($10>50) {cmd=\"date\"; cmd | getline dt; close(cmd) ; print $10, dt}}'"}
{"English":"display all the file in the folder \/home\/david\/ which start with the word \"index\"","Bash":"find \/home\/david -name 'index*'"}
{"English":"Print pathnames of all files in the current directory and below skipping files under SCCS directories","Bash":"find . -print -name SCCS -prune"}
{"English":"find the oldest normal file in the current directory","Bash":"find -type f -printf '%T+ %p\\n' | sort | head -n 1"}
{"English":"Prints logged in users in sorted order.","Bash":"w | sort"}
{"English":"Read a line of standard input with prompt \"Enter the path to the file: \" and suggestion \"\/usr\/local\/etc\/\" and save the response to variable \"FILEPATH\"","Bash":"read -e -p \"Enter the path to the file: \" -i \"\/usr\/local\/etc\/\" FILEPATH"}
{"English":"Print a colon-separated list of all directories from the ~\/code directory tree, except hidden ones and those below them","Bash":"find ~\/code -type d | sed '\/\\\/\\\\.\/d' | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"display all the files in the current folder which have been modified after the files \"\/bin\/sh\"","Bash":"find . -newer \/bin\/sh"}
{"English":"Opens gawk info manual and goes to command-line options node.","Bash":"info -O gawk"}
{"English":"List all files in the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 |xargs ls -l"}
{"English":"display all the soft links in a  folder which are not broken","Bash":"find -L \/target ! -type l"}
{"English":"Copy the owner and group of \"oldfile\" to \"newfile\"","Bash":"chown --reference=oldfile newfile"}
{"English":"Display the count of regular files under 'home\/magie\/d2' directory tree which have execute permission to all the users","Bash":"find home\/magie\/d2 -type f -perm +111 | wc -l"}
{"English":"Find all files\/directories with '.txt' extension under '\/home' directory tree that are exactly 100KB in size","Bash":"find \/home -name \"*.txt\" -size 100k"}
{"English":"Prints sorted list of logged in users.","Bash":"w -h  | cut -d' ' -f1 | sort | uniq"}
{"English":"Find all directories under '\/var\/www' directory tree excluding '\/var\/www\/web-release-data' and '\/var\/www\/web-development-data' directories and their sub-directories","Bash":"find \/var\/www -type d \\( ! -wholename \"\/var\/www\/web-release-data\/*\"  ! -wholename \"\/var\/www\/web-development-data\/*\" \\)"}
{"English":"Give all files in the \/path\/to\/base\/dir tree read privileges","Bash":"find \/path\/to\/base\/dir -type f -exec chmod 644 {} +"}
{"English":"Find recursively all regular files in the current directory tree not ending in .dll or .exe","Bash":"find . -type f | grep -vP \"\\.dll$|\\.exe$\""}
{"English":"Find StringBuffer in all *.java files","Bash":"find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}
{"English":"Change the owner of \"\/var\/www\/html\/mysite\/images\/\" to \"nobody\"","Bash":"sudo chown nobody \/var\/www\/html\/mysite\/images\/"}
{"English":"Find all files under $d directory (no sub-directories) that are executable by owner and print only their names","Bash":"find $d -maxdepth 1 -perm -100 -type f | sed 's#.*\/##'"}
{"English":"List all *fink* files\/directories in entire file system","Bash":"find \/ \\( -type f -or -type d \\) -name \\*fink\\* -ls"}
{"English":"Search the current directory tree for regular files that contain \"string\"","Bash":"find . -type f | xargs grep string"}
{"English":"List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time","Bash":"find \/ -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\"  -printf '%T@ %p\\n' | sort -k 1 -n | sed 's\/^[^ ]* \/\/'"}
{"English":"Find all files matching \"abc*\" in the current directory and append \"\\tok\"","Bash":"find . -name 'abc*' | sed 's\/$\/\\tok\/' | column -t"}
{"English":"Set timestamp of all PHP files in current directory to date specified.","Bash":"touch -d '30 August 2013' *.php"}
{"English":"Shows status of a shell option 'dotglob'.","Bash":"shopt dotglob"}
{"English":"search for a word in all the files in the current directory","Bash":"find . -exec grep chrome {} +"}
{"English":"find all the files in the current folder which do not belong to any user","Bash":"find . -nouser -ls"}
{"English":"Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"","Bash":"echo -e \"$correctFilePathAndName\" | xargs touch"}
{"English":"Remove all .txt files in and below the current directory","Bash":"find . -name \"*.txt\" -delete"}
{"English":"Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.","Bash":"grep -rnw \"pattern\""}
{"English":"Prints line count of each file within current directory.","Bash":"find . -type f -print | xargs -L1 wc -l"}
{"English":"Change to the directory of the executable \"python\"","Bash":"cd `dirname $(which python)`"}
{"English":"Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"0\" [1]=\"1\" [2]=\"0\")'","Bash":"true | false | true"}
{"English":"find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB","Bash":"find . -atime +7 -o -size +20480 -print"}
{"English":"Remove all files containing 'sample' (case insensitive) in their names under '\/home\/user\/Series' directory tree","Bash":"find \/home\/user\/Series\/ -iname '*sample*' -exec rm {} \\;"}
{"English":"Print line, word and byte counts for each .php files in current directory tree and also show the total counts","Bash":"wc `find | grep .php$`"}
{"English":"Replace any blank character from standard input with a tab","Bash":"tr '[:blank:]' \\\\t"}
{"English":"find files in home directory that names are game","Bash":"find ~ -name game"}
{"English":"Recursively finds and compresses all files in the directory '\/path\/to\/dir'","Bash":"find \/path\/to\/dir -type f -exec bzip2 {} \\;"}
{"English":"Find all files under \/mountpoint and below which have hard links","Bash":"find \/mountpoint -type f -links +1"}
{"English":"Find files and directories that are at least seven levels of nesting in the directory \/usr\/src","Bash":"find \/usr\/src -name CVS -prune -o -mindepth 7 -print"}
{"English":"Creates temporary file by template provided in option '-t'.","Bash":"mktemp -t identifier.XXXXXXXXXX"}
{"English":"find all the files in the folder \/home which are exactly of size 10MB","Bash":"find \/home -size 10M"}
{"English":"Set the setup connection timeout to 3 seconds for connecting to \"user@ip\" via ssh","Bash":"ssh -o ConnectTimeout=3 user@ip"}
{"English":"Search for directories that contain the phrase \"foo\" but do not end in \".bar\"","Bash":"find . -name '*foo*' ! -name '*.bar' -type d -print"}
{"English":"display all the regular files in the current folder that are modified after the file \"file.log\"","Bash":"find . -type f -newer file.log"}
{"English":"Search for file names with \"bad\" characters in the current directory and delete the files.","Bash":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}
{"English":"Rename \"original.filename\" to \"new.original.filename\"","Bash":"mv {,new.}original.filename"}
{"English":"Exit the shell on the first error encountered","Bash":"set -o errexit"}
{"English":"split compressed content of the file www into pieces per 1073741824 bytes named as \"backup.tar.NNN\"","Bash":"tar czf - www|split -b 1073741824 - www-backup.tar."}
{"English":"Compresses all files in a current folder (not recursively).","Bash":"bzip2 *"}
{"English":"Count number of lines in \"Sample_51770BL1_R1.fastq.gz\"","Bash":"zcat Sample_51770BL1_R1.fastq.gz | wc -l"}
{"English":"search for the pattern \"tgt\/etc\/file1\" in the files tgt\/etc\/file2, tgt\/etc\/file3","Bash":"find . -type f -name \\* | grep tgt\/etc\/file1 tgt\/etc\/file2 tgt\/etc\/file3"}
{"English":"find all the files in the current folder which have been modified after the file disk.log","Bash":"find . -newer disk.log -print"}
{"English":"display all files in the current folder ($@ contains the variables passed as argument to the function)","Bash":"find . -iname \"*$@*\" -or -iname \".*$@*\""}
{"English":"Find all symbolic links containing 'vim' in their names uder '\/usr\/bin' directory tree","Bash":"find \/usr\/bin -name '*vim*' -type l"}
{"English":"Delete files older than 31 days","Bash":"find .\/ -mtime +31 -delete"}
{"English":"Find all files\/directories with '.tar.gz' extension under $DIR\/tmp\/daily\/ directory tree, sort them numerically and show the last 3 of them","Bash":"find $DIR\/tmp\/daily\/ -name '*.tar.gz' | sort -n | tail -3"}
{"English":"Mount \"\/dev\/shm\" using \/etc\/fstab entry","Bash":"mount \/dev\/shm"}
{"English":"find all the files in the current folder which have not been modified in the last 90 days and force delete them","Bash":"find . -mtime +90 -type f -exec rm -f {} \\;"}
{"English":"Print the lines in \"table.txt\" grouped by the first field","Bash":"cat table.txt | awk '{print $1}' | sort | uniq  | xargs -i grep {} table.txt"}
{"English":"Search the \"test1\" directory recursively for regular files","Bash":"find test1 -type f -print"}
{"English":"Print three lines of \"some line \" followed by a random number","Bash":"seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3"}
{"English":"Make directories \"\/tmp\/A\", \"\/tmp\/B\", \"\/tmp\/C\", and \"\/tmp\/ dir with spaces\"","Bash":"mkdir \/tmp\/A \/tmp\/B \/tmp\/C \"\/tmp\/ dir with spaces\""}
{"English":"find all files with pattern` '*song*abc2009*.jpg' and replace \"abc2009\" with \"def2010\"","Bash":"find . -name '*song*abc2009*.jpg' | sed 's\/\\(^.*song.*\\)abc2009\\(.*.jpg\\)$\/mv \"&\" \"\\1def2010\\2\"\/' | sh"}
{"English":"List all *fink* files\/directories under current directory","Bash":"find . -name \"*fink*\" |xargs ls -l"}
{"English":"Search all *.c files from the current directory tree for \"hogehoge\"","Bash":"find . -name \\*.c -exec grep hogehoge {} \\;"}
{"English":"Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory","Bash":"find . \\( ! -regex '.*\/\\..*' \\) -type f -name \"whatever\""}
{"English":"Find all files\/directories under \/home\/bozo\/projects directory that were modified 1 day ago","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"List all *.txt files\/directories under current directory","Bash":"find . -name '*.txt' -exec echo \"{}\" \\;"}
{"English":"Prints strings with text \"texthere\" in all files recursively in a current folder.","Bash":"grep -r \"texthere\" ."}
{"English":"Change permissions of all regular files from the current directory tree to 644","Bash":"find . -type f -exec chmod 644 {} +"}
{"English":"change owner and group of the file it to user and group root","Bash":"chown root:root it"}
{"English":"Request IP address of 'myip.opendns.com' from name server 'resolver1.opendns.com'","Bash":"dig +short myip.opendns.com @resolver1.opendns.com"}
{"English":"print disk usage of files or folders in current directory","Bash":"du -sh *"}
{"English":"Remove all vmware-*.log files under current directory","Bash":"find . -name \"vmware-*.log\" -exec rm '{}' \\;"}
{"English":"Find all *.tex regular files in maximum 2 levels down the current directory","Bash":"find . -type f -maxdepth 2 -name \"*.tex\""}
{"English":"find all the files ending with \"rb\" and display the first 10000 lines from these files.","Bash":"find . -name \"*rb\" -print0 | xargs -0 head -10000"}
{"English":"Find recursively all regular files in the current directory tree ending in .dll or .exe","Bash":"find . -type f | grep -P \"\\.dll$|\\.exe$\""}
{"English":"Make a list of regular files from the current directory tree that have more than 1 link and view it with the \"less\" pager","Bash":"find . -type f -noleaf -links +1 -printf \"%n %i %f\\t%h\\n\" | sort | less"}
{"English":"find files with the extension .conf in the \/etc directory","Bash":"find \/etc -name '*.conf'"}
{"English":"check if there any files from the .git folder after excluding it using the prune command","Bash":"find . -path .\/.git -prune -o -print -a \\( -type f -o -type l -o -type d \\) | grep '.git'"}
{"English":"Save absolute path of the script filename in variable \"MY_PATH\"","Bash":"MY_PATH=$(readlink -f \"$0\")"}
{"English":"Replace \",,\" with \", ,\" twice in \"data.csv\" and display the \",\" delimited result as a table","Bash":"sed 's\/,,\/, ,\/g;s\/,,\/, ,\/g' data.csv | column -s, -t"}
{"English":"find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .","Bash":"find . \\( -name a.out -o -name '*.' -o -name  'core' \\) -exec rm {} \\;"}
{"English":"delete all the \".doc\" files in the current folder","Bash":"find . -name '*.doc' -exec rm \"{}\" \\;"}
{"English":"List the unique parent directories of all .class files found in the entire filesystem","Bash":"find \/ -name *.class -printf '%h\\n' | sort --unique"}
{"English":"delete all normal\/regular files in the current folder which are empty","Bash":"find . -type f -empty -delete"}
{"English":"Unsets shell option 'extglob'.","Bash":"shopt -u extglob"}
{"English":"Print the first 24 alphanumeric characters from \"\/dev\/urandom\", determining C locale for all categories","Bash":"cat \/dev\/urandom | LC_ALL=C tr -dc 'a-zA-Z0-9' | fold -w 24 | head -n 1"}
{"English":"Find all files in the current directory tree whose names are \"file_name\", except for those with pathnames matching pattern \".\/dirt to be Excluded\/*\"","Bash":"find .\/ -iname file_name ! -path \".\/dirt to be Excluded\/*\""}
{"English":"copy all the regular files in the current directory to the temporary diectory.","Bash":"find . -type f -exec cp {} \/tmp +"}
{"English":"search files  in the file system excluding those in the paths \"10_Recommended\" and \"\/export\/repo\"","Bash":"find \/ -name whatever -not -path \"\/10_Recommended*\" -not -path \"\/export\/repo\/*\""}
{"English":"compresses all the files in the current folder with default depth","Bash":"find . -depth -print | cpio -dump \/backup"}
{"English":"Calculate the md5 sum of all files in the current directory with the filename printed first","Bash":"ls -p | grep -v \/ | xargs md5sum | awk '{print $2,$1}'"}
{"English":"display all pdf files in the current folder","Bash":"find . -name *.pdf"}
{"English":"Print summary of new\/missing files, and which files differ between dir1 and dir2.","Bash":"diff  --brief --recursive dir1\/ dir2\/"}
{"English":"Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with \"no-match\", and output the second field from standard input and the second and third field from file1.txt","Bash":"join -t, -o 1.2,2.2,2.3 -a 1 -a 2 -e 'no-match' - <(sort file1.txt)"}
{"English":"Find all files under ${searchpath} that match the regex '\"${string1}\".*\"${string2}\".*\"${string3}\"' (${string1} ... won't be expanded) in their contents","Bash":"find `echo \"${searchpath}\"` -type f -print0 | xargs -0 grep -l -E '\"${string1}\".*\"${string2}\".*\"${string3}\"'"}
{"English":"Copy \"\/new\/x\/y\/z\/\" over the network to \"user@remote:\/pre_existing\/dir\/\" preserving the directory hierarchy","Bash":"rsync -a --relative \/new\/x\/y\/z\/ user@remote:\/pre_existing\/dir\/"}
{"English":"Execute `find -type f | egrep -i \"(jpg|bmp|png|gif)$\"` every 300 seconds and display without title","Bash":"watch -n 300 -t `find -type f | egrep -i \"(jpg|bmp|png|gif)$\"`"}
{"English":"Execute \"ls -l\" every 2 seconds","Bash":"watch ls -l"}
{"English":"only get md5sum of a file","Bash":"md5 -q file"}
{"English":"Print the names of the directories from the paths expanded by the glob pattern \/path\/to\/directory\/*","Bash":"find \/path\/to\/directory\/* -maxdepth 0 -type d -printf '%f\\n'"}
{"English":"Change permissions to 644 for all subdirectories","Bash":"find . -type d -print0|xargs -0 chmod 644"}
{"English":"Compare text \"hello\" and \"goodbye\" line by line","Bash":"diff <(echo hello) <(echo goodbye)"}
{"English":"Take the section of variable \"FILE\" between the last slash and the following dot, if any, and store that section in variable \"NAME\".","Bash":"NAME=`basename \"$FILE\" | cut -d'.' -f-1`"}
{"English":"Find all empty directories under $somedir and copy \/my\/configfile into those directories","Bash":"find \"$somedir\" -type d -empty -exec cp \/my\/configfile {} \\;"}
{"English":"Print \"echo ping -c 2\" on each string in file 'ips'","Bash":"cat ips | xargs -n1 echo ping -c 2"}
{"English":"delete all the files ending with \"~\" in current folder","Bash":"find -name '*~' -print0 | xargs -0 rm"}
{"English":"Find all files in the level 6 subdirecotries of \/usr\/src and below, ignoring CVS files","Bash":"find \/usr\/src -name CVS -prune -o -mindepth +6 -print"}
{"English":"Find all php files in the current directory","Bash":"find . -type f -name \"*.php\""}
{"English":"Find all files\/directories matching the regex .*sql.*","Bash":"find -regex .*sql.*"}
{"English":"find all jpg files in the folder which are in the path \"\/201111\/\" and sort them based on name","Bash":"find *\/201111\/* -name \"*.jpg\" | sort -t '_' -nk2"}
{"English":"display all the files in the current folder excluding those which are in the path of \".git\"","Bash":"find . ! -path  \"*.git*\" -type f -print"}
{"English":"Search for \"vid=123\" in all compressed files found under \"\/my_home\" matching \"*log.20140226*\"","Bash":"zcat `find \/my_home -name '*log.20140226*'`|grep 'vid=123'"}
{"English":"Find files with extension .conf in the \/etc directory tree","Bash":"find \/etc -name \"*.conf\""}
{"English":"Print a count of each unique line from standard input sorted from least frequent to most frequent","Bash":"sort | uniq -c | sort -n"}
{"English":"Find all files\/directories named 'photoA.jpg' under current directory tree","Bash":"find . -name photoA.jpg"}
{"English":"Delete the line containing \"start\" plus the next 4 lines from standard input","Bash":"sed '\/start\/,+4d'"}
{"English":"Print position number of day '9' in fourth line of calendar output for September, 2009.","Bash":"cal 09 2009 | awk 'NR==4{day=\"9\"; col=index($0,day); print col }'"}
{"English":"Split \"t.txt\" into files with at most 30000000 lines each and use a prefix \"t\" and numeric suffixes of length 2","Bash":"split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t"}
{"English":"Change the group to `temp' for all files in the current directory tree that belong to group `root'","Bash":"find . -group root -print | xargs chgrp temp"}
{"English":"Exclude directory from find . command","Bash":"find . -name '*.js' | grep -v excludeddir"}
{"English":"List all files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 | xargs -r ls -ld"}
{"English":"Print command history","Bash":"history"}
{"English":"find all  *.csv files which  modify within last 2 days in \/home directory then zip ( archive )-","Bash":"find \/home\/archive -type f -name \"*.csv\"  -mtime -2 -exec gzip -9f {} \\;"}
{"English":"Creates temporary file and saves path to it in 'content_dir2' variable.","Bash":"content_dir2=$(mktemp)"}
{"English":"Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory","Bash":"find . -name CVS -prune -o -exec mv '{}' `echo {} | tr '[A-Z]' '[a-z]'` \\; -print"}
{"English":"List (in long list format with inode number) the file under the current directory that has the oldest modification time","Bash":"find . -type f -ls | sort +7 | head -1"}
{"English":"Print the contents of \"file\" with \" | \" appended to each line","Bash":"echo `sed -e 's\/$\/\\ |\\ \/g' file`"}
{"English":"find all the directories with the name \"DIRNAME\" in the current folder and force delete them","Bash":"find . -type d -name \u201cDIRNAME\u201d -exec rm -rf {} \\;"}
{"English":"Search the \/myfiles directory tree for files whose names contain \"blue\"","Bash":"find \/myfiles -name '*blue*'"}
{"English":"Print the hexadecimal bytes and printable characters of \"Hello world\"","Bash":"echo Hello world | od -t x1 -t c"}
{"English":"Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: \"length(FOO_NO_TRAIL_SPACE)==<counted number of characters>\"","Bash":"echo -e \"length(FOO_NO_TRAIL_SPACE)==$(echo -ne \"${FOO_NO_TRAIL_SPACE}\" | wc -m)\""}
{"English":"display all the ip addresses in all the files that are present in \/etc folder","Bash":"find \/etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}
{"English":"Creates temporary file, replacing XXXXXXXXXXXXXXXXXXXXXXX with equal length suffix.","Bash":"mktemp \/tmp\/banana.XXXXXXXXXXXXXXXXXXXXXXX.mp3"}
{"English":"Run \"command\" on server \"host\" as user \"user\"","Bash":"echo \"command\" | ssh user@host"}
{"English":"Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".","Bash":"rename 's\/^\/new.\/' original.filename"}
{"English":"Assign permissions 644 to files in the current directory tree","Bash":"find . -type f -print0 | xargs -0 chmod 644"}
{"English":"Find all files under \/mnt\/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter","Bash":"find \/mnt\/naspath \\! \\(-name .snapshot -prune\\) -type f -mtime 0 -print0"}
{"English":"Archive directory \"\/mnt\/data\" to \"\/media\/WD_Disk_1\/current_working_data\/\", deleting any extraneous files in destination, compress data during copy.","Bash":"rsync -az --delete \/mnt\/data\/ \/media\/WD_Disk_1\/current_working_data\/;"}
{"English":"Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size","Bash":"find $dir -type -f size +$size -print0 | xargs -0 ls -1hsS"}
{"English":"Split a file \"file.tar.gz\" into pieces with size 1024 MB","Bash":"split -b 1024m file.tar.gz"}
{"English":"Show directory sizes in KB and sort to give the largest at the end","Bash":"du -sk $(find . -type d) | sort -n -k 1"}
{"English":"Print every two lines in \"num.txt\" on a single line separated by a space","Bash":"paste -d' ' <(sed -n 'p;n' num.txt) <(sed -n 'n;p' num.txt)"}
{"English":"find all files in the current folder which end with macs","Bash":"find -name '*macs'"}
{"English":"Print lines unique and common to sorted files \"file1\" and  \"file2\"","Bash":"comm file1 file2"}
{"English":"Find all SGID files in entire file system","Bash":"find \/ -perm +2000"}
{"English":"Find all files with the SUID bit set","Bash":"find \/ -perm -u+s"}
{"English":"Print local SRV record of domain '_etcd-client._tcp.'","Bash":"dig @\"127.0.0.1\"  _etcd-client._tcp. SRV"}
{"English":"display all files in current folder","Bash":"find ."}
{"English":"Display all files in the folder home which are owned by the group test.","Bash":"find \/home -group test"}
{"English":"Reverse the space separated words in \"aaaa eeee bbbb ffff cccc\"","Bash":"echo \"aaaa eeee bbbb ffff cccc\"|tr ' ' '\\n'|tac|tr '\\n' ' '"}
{"English":"Read a single character from standard input into variable \"key\" without backslash escapes, with a timeout of 5 seconds, and with the prompt \"Press any key in the next five seconds...\"","Bash":"read -t5 -n1 -r -p 'Press any key in the next five seconds...' key"}
{"English":"Display a long listing of all the files\/directories under current directory tree that are newer than the file 'Nov' by modification time","Bash":"find . -newer Nov -ls"}
{"English":"Save hexadecimal byte 9 in binary file \"file.moi\" to variable \"month\"","Bash":"month=$(od -t x1 --skip-bytes=8 --read-bytes=1 file.moi | head -1 | awk '{print $2}')"}
{"English":"Find all files in the \/home\/ directory tree that were last modified less than 7 days ago","Bash":"find \/home -mtime -7"}
{"English":"Print all file\/directory names without white space safety under the \/proc directory","Bash":"find \/proc | xargs"}
{"English":"Find files with name `aaa.txt' under the current directory","Bash":"find . -name aaa.txt"}
{"English":"display all files ending with \".ext\" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items","Bash":"find . -name \\*.ext | cat - list.txt | sort | uniq -u"}
{"English":"Find all Name* files under ..\/..\/$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names","Bash":"find ..\/..\/$name-module -print0 -name 'Name*' -type f | xargs -0 rename \"s\/Name\/$Name\/\""}
{"English":"prints the last non-empty line of a file","Bash":"tac $FILE | grep -m 1 '.'"}
{"English":"Print numbers from 1 to 10 with 2 values per line","Bash":"seq 10 | sed '2~2G' | awk -v RS='' '{$1=$1; print}'"}
{"English":"Read a line from standard input and save each word in the bash array variable \"arr\"","Bash":"read -a arr"}
{"English":"Sort all directories under current directory placing the file with least modification time at first","Bash":"find -type d -printf '%T+ %p\\n' | sort"}
{"English":"change the permission of all the normal\/regular files to 644 in the current folder","Bash":"find -type f -exec chmod 644 {} \\;"}
{"English":"Unzip and expand tar archive \"compressFileName\"","Bash":"zcat compressFileName | tar xvf -"}
{"English":"display all soft links in current folder","Bash":"find . -type l"}
{"English":"Find and remove all .core files","Bash":"find \/ -name \"*.core\" | xargs rm"}
{"English":"Changes to the directory where 'ssh' executable is located.","Bash":"cd $(dirname $(which ssh));"}
{"English":"Displays calendar of a previous, current and next month for December of 2120 year.","Bash":"cal -3 12 2120"}
{"English":"Delete all files not owned by valid users","Bash":"find \/ -nouser | xargs -0 rm"}
{"English":"delete all the log files in the current folder","Bash":"find .\/ -name '*.log' -print0 | xargs -0 rm"}
{"English":"Search directories called ' backup ' from \/usr directory downwards and print them.","Bash":"find \/usr -type d -name backup -print"}
{"English":"Creates temporary folder in \/tmp\/ (by default) with 10-letter suffux.","Bash":"mktemp -d -t"}
{"English":"List all environment variables","Bash":"set"}
{"English":"Count the number of files named `file1'","Bash":"find -name file1 | wc -l"}
{"English":"Read a line from standard input","Bash":"read"}
{"English":"Search the *.txt files from the current directory tree for \"string\"","Bash":"find . -name \"*.txt\" -print0 | xargs -0 egrep 'string'"}
{"English":"Create a symbolic link named \"wh\" to \"$wh\"","Bash":"ln -s \"$wh\" wh"}
{"English":"Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them","Bash":"find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}
{"English":"Find all empty directories under current directory","Bash":"find . -type d -empty"}
{"English":"find all the files ending with \"mkv\" in current folder","Bash":"find -name \"*.mkv\""}
{"English":"list all *.txt files in the user's home directory.","Bash":"find ~\/ -name '*.txt'"}
{"English":"Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.","Bash":"find ~\/dir_data -type d -exec chmod a+xr,u+w {} \\;"}
{"English":"Keep the last 3 components (directories) of $path","Bash":"echo $path | rev | cut -d'\/' -f-3 | rev"}
{"English":"Prints string \"0 1 * * * \/root\/test.sh\" to the terminal, and append it to file '\/var\/spool\/cron\/root'","Bash":"echo \"0 1 * * * \/root\/test.sh\" | tee -a \/var\/spool\/cron\/root"}
{"English":"Print space separated list of numbers from \"$start\" to \"$end\"","Bash":"echo `seq $start $end`"}
{"English":"Lists all subdirectories in a current folder, removing trailing slash.","Bash":"ls -d *\/|sed 's|[\/]||g'"}
{"English":"Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them","Bash":"find . -type f -iname '*'\"$*\"'*' -ls"}
{"English":"List all *.txt files under current directory that match 'foo=' in their file information","Bash":"find . -name \"*.txt\" -type f -print | xargs file | grep \"foo=\" | cut -d: -f1"}
{"English":"Display all symlinks and their targets in the current directory","Bash":"find -P .  -maxdepth 1 -type l -exec echo -n \"{} -> \" \\; -exec readlink {} \\;"}
{"English":"Change permissions to 0755 for all directories in the \/path directory tree","Bash":"find \/path -type d | xargs chmod 0755"}
{"English":"find all the directories in the current folder that are empty(size 0 bytes)","Bash":"find -type d -empty"}
{"English":"List all regular files modified more than 61 days","Bash":"find -type f -mtime 61 -exec ls -ltr {} \\;"}
{"English":"Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '\/home\/backups' directory tree","Bash":"find \/home\/backups -type f \\( -name \\*.tgz -o -name \\*.gz \\) -print0 | xargs -0 ls -t | tail -1 | xargs rm"}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find . -name test -type d -print0|xargs -0 rm -r --"}
{"English":"Mount remote \"cifs\" filesystem \"\/\/192.168.0.111\/serv_share\" on \"\/mnt\/my_share\" with username \"me\" and password \"mine\"","Bash":"sudo mount -t cifs -o username=me,password=mine \/\/192.168.0.111\/serv_share \/mnt\/my_share"}
{"English":"Print each unique line that is duplicated in files \"file1\" and \"file2\" combined","Bash":"sort file1 file2 | uniq -d"}
{"English":"Lists all top-level files in a '\/home\/dreftymac\/' folder.","Bash":"ls \/home\/dreftymac\/"}
{"English":"Search PATH for utilities called \"rename\", display the type of file (script, executable, ...) for each match found.","Bash":"which -a rename | xargs file -L"}
{"English":"find all the files in the file system which hae set uid enabled and save them to \/root\/suid.txt and those which have size greater than 100MB save them to \/root\/big.txt","Bash":"find \/    \\( -perm -4000 -fprintf \/root\/suid.txt '%#m %u %p\\n' \\) , ( -size +100M -fprintf \/root\/big.txt '%-10s %p\\n' \\)"}
{"English":"Find files with 777 permissions and change them to 755","Bash":"find \/ -type f -perm 0777 -print -exec chmod 755 {} \\;"}
{"English":"Execute awk script \"script.awk\" with 2 arguments both \"file.txt\" and format the output as a table","Bash":"awk -f script.awk file.txt{,} | column -t"}
{"English":"Find every file\/directory under the directory \/home owned by the user joe","Bash":"find \/home -user joe"}
{"English":"Remove all files under \/myfiles that were accessed more than 30 days ago","Bash":"find \/myfiles -atime +30 -exec rm {} \\;"}
{"English":"Delete all .pyc files in the current directory tree","Bash":"find . -name \"*.pyc\" | xargs -0 rm -rf"}
{"English":"Format the time string $timestamp according to the format string \"%Y-%m-%d %H:%M:%S\" and save the output to variable 'CDATE'","Bash":"CDATE=$( date -d @\"$timestamp\" +\"%Y-%m-%d %H:%M:%S\" )"}
{"English":"Creates temporary file with name formatted like expression in variable ${PROG}, and saves path to it in 'mytemp' variable.","Bash":"mytemp=\"$(mktemp -t \"${PROG}\")\""}
{"English":"list txt files older than 5 days or html files of any age, null separated","Bash":"find . \\( -name '*.txt'  -mtime +5 -o -name '*.html' \\) -print0"}
{"English":"find all the files that were modified two days ago","Bash":"find . -daystart -ctime 1 -type f"}
{"English":"Places current job to background.","Bash":"bg %  so it wont die when you logoff"}
{"English":"Replace \",,\" with \", ,\" in \"$file\" and display the \",\" delimited result as a table in \"less\" with a shift value of 5 and line numbers","Bash":"cat \"$file\" | sed -e 's\/,,\/, ,\/g' | column -s, -t | less -#5 -N -S"}
{"English":"Find all readme.txt files\/directories under your home directory","Bash":"find ~ -name readme.txt"}
{"English":"display all the empty files in the folder \/opt (file size 0 bytes)","Bash":"find \/opt -type f -empty"}
{"English":"Prints file.txt without the last N bytes","Bash":"head -c -N file.txt"}
{"English":"Search for \" 000\" in the hex dump of \"file-with-nulls\"","Bash":"od file-with-nulls | grep ' 000'"}
{"English":"find all the directories in current folder which start with test","Bash":"find . -type d -name \"test*\""}
{"English":"delete all the files ending with \"~\" in current folder","Bash":"find -name '*~' -delete"}
{"English":"Make directory \"aaa\"","Bash":"mkdir aaa"}
{"English":"show all .cpp, .c, .h, .hpp files in the folder ~\/src","Bash":"find ~\/src -type f \\( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \\) -exec echo {} \\;"}
{"English":"Locate all passwd files on the system","Bash":"find \/ -name passwd"}
{"English":"display a list of all files in the folder passed as argument to a script","Bash":"find $@ -ls"}
{"English":"Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and saves location of such files to 'directories' variable.","Bash":"directories=$(diff -qr directory directory.original | cut -d' ' -f2 | xargs dirname | uniq)"}
{"English":"Find all .py files in the current directory except \"setup.py\" and those beginning with \"test_\"","Bash":"find . -maxdepth 1 -mindepth 1 \\( -name '*.py' -not -name 'test_*' -not -name 'setup.py' \\)"}
{"English":"display all the files in the current folder along with the hidden files with the depth","Bash":"find . \u2014 name \"*\" \u2014 print -\u043e -name \".*\" \u2014 print -depth"}
{"English":"Find all directories under the current directory that is on the same filesystem, execute \"\/tmp\/count_em_$$\" with the directory as an argument, sort the result numerically from least value to greatest value","Bash":"find . -mount -type d -print0 | xargs -0 -n1 \/tmp\/count_em_$$ | sort -n"}
{"English":"find all \".flac\" files starting with \"cmn-\" and search for files having CJK characters using unicodes","Bash":"find . -name 'cmn-*\\.flac' -print | grep -P '.\/cmn-[\\x4e00-\\x9fa5]\\.flac'"}
{"English":"List all directories of the $topdir directory tree that contain a Makefile and at least one .py file","Bash":"find \"$topdir\" -name '*.py' -printf '%h\\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\\n' | sort -u"}
{"English":"Find all broken symlinks under current directory","Bash":"find -type l -xtype l"}
{"English":"Output the system host name and date to the console","Bash":"echo Hostname=$(hostname) LastChecked=$(date)"}
{"English":"Report file system containing path to \/dir\/inner_dir\/ disk usage in kilobytes.","Bash":"df -k \/dir\/inner_dir\/"}
{"English":"Print all string from file 'file2.txt' matching pattern in file 'file1.txt'","Bash":"grep \"$(cat file1.txt)\" file2.txt"}
{"English":"Search the entire system for SUID or SGID files","Bash":"find \/ -path \/proc -prune -o -type f -perm +6000 -ls"}
{"English":"Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory","Bash":"find . -name text.txt | sed 's|.*\/\\(.*\\)\/.*|sed -i \"s@^@\\1 @\" & |' | sh"}
{"English":"Find all files under $source_dir that match the regex .*\\.\\(avi\\|wmv\\|flv\\|mp4\\) in their paths and print them with null character as the delimiter","Bash":"find \"$source_dir\" -type f -regex \".*\\.\\(avi\\|wmv\\|flv\\|mp4\\)\" -print0"}
{"English":"Recursively copy all (non-hidden) files and directories in current dir except \"foo\" to location specified by variable \"other\"","Bash":"rsync --recursive --exclude 'foo' * \"$other\""}
{"English":"Compare \"fastcgi_params\" and \"fastcgi.conf\" line by line, output 3 lines of unified context, and print the C function the change is in","Bash":"diff -up fastcgi_params fastcgi.conf"}
{"English":"Move all directories in the current directory tree that have been modified in the last day to \"\/path\/to\/target-dir\"","Bash":"find . -type d -mtime -0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Print the minimum transmission time of 10 ping requests to \"google.com\" from cygwin","Bash":"ping google.com -n 10 | grep Minimum | awk '{print $3}' | sed s\/,\/\/"}
{"English":"Print full path of command \"gradle\"","Bash":"which gradle"}
{"English":"display all normal\/regular files in current directory","Bash":"find . -type f"}
{"English":"Show manual page of find","Bash":"man find"}
{"English":"Find all $1 files\/directories under current directory and enter into the parent directory of the first one found","Bash":"cd $(find . -name $1 | xargs dirname)"}
{"English":"Change file owner and group of \"\/path\/to\/yourapp\" to root and print a diagnostic","Bash":"chown -v root:root \/path\/to\/yourapp"}
{"English":"Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.","Bash":"find . -mindepth 1 -maxdepth 1 -type d| grep \\\/a |xargs -n 1 cp -i index.html"}
{"English":"Find all the files which were modified more than 50 days but less than 100 days ago","Bash":"find \/ -mtime +50 -mtime -100"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn -exec rm -v {} \\;"}
{"English":"Print all files containing \"word1\" and \"word2\" in the current directory tree","Bash":"comm -12 <(grep -rl word1 . | sort) <(grep -rl word2 . | sort)"}
{"English":"Find all regular files under \/home\/www and replace every occurrences of 'subdomainA' with 'subdomainB' in those files (may produce 'agument too long' error)","Bash":"sed -i '' -e 's\/subdomainA\/subdomainB\/g' $(find \/home\/www\/ -type f)"}
{"English":"Unzip \"path\/to\/test\/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 limit","Bash":"gzip -cd path\/to\/test\/file.gz | awk 'BEGIN{global=1}\/my regex\/{count+=1;print $0 >\"part\"global\".txt\";if (count==1000000){count=0;global+=1}}'"}
{"English":"search for all \"tif\" images in current folder","Bash":"find . -name '*.tif ' -print"}
{"English":"Recursively change the owner and group of \"\/home\/el\/svnworkspace\" and \"775\" to \"your_user_name\"","Bash":"chown -R your_user_name.your_user_name 775 \/home\/el\/svnworkspace"}
{"English":"Find all *.jpg files in *\/201111\/* paths and numerically sort them according to the second field in the file name with a delimiter '_'","Bash":"find *\/201111\/* -name \"*.jpg\" | sort -t '_' -nk2"}
{"English":"Find all files changed on the 29th of September, 2008, starting from the current directory","Bash":"find . -type f -newerct 2008-09-29 ! -newerct 2008-09-30"}
{"English":"Find all .txt files except README.txt","Bash":"find . -type f -name \"*.txt\" ! -name README.txt -print"}
{"English":"Find all empty regular files in the current directory tree","Bash":"find . -size 0c -type f"}
{"English":"Report file systems disk space usage pretty formatted.","Bash":"df -Ph | column -t"}
{"English":"Prints process tree of user 'user' processes.","Bash":"pstree -p user"}
{"English":"Enables shell option 'nullglob'.","Bash":"shopt -s execfail"}
{"English":"display all files in current folder which are bigger than 100KB but are less than 500KB","Bash":"find . -size +100k -a -size -500k"}
{"English":"Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the .yaml files from the current directory tree","Bash":"find . -type f -name \"*.yaml\" -print0 | xargs -0 sed -i -e \"s\/HOGE\/MOGA\/\""}
{"English":"display all the files in the folder \/home which have the setuid bit enabled","Bash":"find \/home -perm \/u=s"}
{"English":"Search for 'js' in all files under current directory that match 'some string' in their names","Bash":"find . | grep 'some string' | grep js"}
{"English":"find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group","Bash":"find \/ -path \/proc -prune -o -nouser -o -nogroup"}
{"English":"simulate a full login of user builder","Bash":"su -l builder"}
{"English":"find all headers file *.h in \/nas\/projects directory","Bash":"find \/nas\/projects -name \"*.h\""}
{"English":"Recursively change the user and group of all files in \"\/var\/log\/jenkins\" to \"root\"","Bash":"chown -R root:root \/var\/log\/jenkins"}
{"English":"Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file","Bash":"find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,\/STRING\/d' {} \\;"}
{"English":"Find all xml files under current directory and archive them to .bz2 archives","Bash":"find -name \\*.xml -print0 | xargs -0 -n 1 -P 3 bzip2"}
{"English":"find all the files in the current directory which have the size 40 bytes in the current disk partition.","Bash":"find . -size -40 -xdev -print"}
{"English":"Find all files under current directory and show their file information","Bash":"find . -type f -print0 | xargs -0 file"}
{"English":"Find all directories under and below parent_directory","Bash":"find parent_directory -type d"}
{"English":"display all the files in the current folder in a single line separated by null command","Bash":"sudo find . -print0"}
{"English":"List all functions or variables containing \" ()\" defined in the shell","Bash":"set | grep \" ()\""}
{"English":"search for the directory starting with \"ora10\" in the entire file system","Bash":"find \/ -type d -name \"ora10*\""}
{"English":"Find files in the current directory and its sub-directories that begin with 'f'.","Bash":"find . -name f* -print"}
{"English":"Archive all files beginning with .env or .bash in current directory to user's home directory on host \"app1\", preserving timestamps and skipping files that are newer on \"app1\"","Bash":"rsync -vaut ~\/.env* ~\/.bash* app1:"}
{"English":"Search file aaa from current direcoty downwards and print it .","Bash":"find . -name aaa -print"}
{"English":"find regular file named foo.txt under root \/ directory.","Bash":"find \/ -name foo.txt -type f -print"}
{"English":"Set permissions to 500 for directories under the current directory","Bash":"find . -type d -exec chmod 500 {} \\;"}
{"English":"Write every two lines in \"infile\" on a single line separated by a space","Bash":"cat infile | paste -sd '  \\n'"}
{"English":"search for the host \"slc02oxm.us.oracle.com\" in all the xml files in the current folder and display the files which has the matched content","Bash":"find -name \u201c*.xml\u201d -exec grep -l \u201cslc02oxm.us.oracle.com\u201d {} \\;"}
{"English":"Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files","Bash":"find [directory] -name \"pattern_to_exclude\" -prune -o -name \"another_pattern_to_exclude\" -prune -o -name \"pattern_to_INCLUDE\" -print0 | xargs -0 -I FILENAME grep -IR \"pattern\" FILENAME"}
{"English":"Copy all files matching \"*failed.ipynb\" in the current directory tree to \".\/fails\" preserving the directory hierarchy","Bash":"find . -name \"*failed.ipynb\" | cpio -pd .\/fails"}
{"English":"Find all files and directories and count them","Bash":"find .\/ | wc -l"}
{"English":"Set the permissions of all directories inside the current directory tree to ug=rwx,o=","Bash":"find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Save the number of records in the system hostname that contain numbers in variable \"server_id\"","Bash":"server_id=`hostname | tr 'A-Za-z-.' ' ' | tr -d '[[:space:]]' | awk '{print NR}'`"}
{"English":"force delete all the directories the folder \"test folder\"","Bash":"find 'Test Folder' -type d -print0 | xargs -0 rm -rf"}
{"English":"ssh into default vagrant host without running \"vagrant ssh\" by passing the configuration parameters vagrant uses for ssh","Bash":"ssh vagrant@127.0.0.1 -p 2222 -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=\/dev\/null -o IdentitiesOnly=yes -i ~\/.vagrant.d\/less_insecure_private_key -o ForwardAgent=yes"}
{"English":"Find all files in the current directory tree and replace string $1 with string $2 in them","Bash":"find .\/ -type f -exec sed -i \"s\/$1\/$2\/\" {} \\;"}
{"English":"List all files in a current folder, separating names with semicolon","Bash":"ls -m | tr -d ' ' | tr ',' ';'"}
{"English":"delete all the files in the current folder which are bigger than 1KB","Bash":"find . -size +1024 ?print|xargs -i rm \\;"}
{"English":"Find files with 002 permission under \/tmp and print them with the string 'Found world write permissions:' printed as the first line of output","Bash":"find \/tmp -type f -perm -002 | sed '1s\/^\/Found world write permissions:\\n\/'"}
{"English":"Search the current directory tree for files whose names do not end in \".exe\" and \".dll\"","Bash":"find . -not -name \"*.exe\" -not -name \"*.dll\" -not -type d"}
{"English":"Count the total number of lines in all \"*.gz\" files in the current directory tree after decompression","Bash":"find . -type f -name '*.gz' | xargs zcat | wc -l"}
{"English":"Print the file content of command \"f\"","Bash":"cat \"$(which f)\""}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn | xargs rm -fr"}
{"English":"Create a symbolic link in target directory \"$tmpdir\" for each file under the current directory","Bash":"find $PWD -type f -exec ln -st $tmpdir {} +"}
{"English":"Print the number of lines in file.txt.","Bash":"wc -l file.txt | cut -f1 -d\" \""}
{"English":"Find \"*prefs copy\" files in the \/mnt\/zip directory tree and remove them","Bash":"find \/mnt\/zip -name \"*prefs copy\" -print0 | xargs rm"}
{"English":"Print all files in the current directory as a comma separated list","Bash":"ls -1 | paste -sd \",\" -"}
{"English":"Removes trailing and starting newlines from file","Bash":"tac file | sed -e '\/.\/,$!d' | tac | sed -e '\/.\/,$!d'"}
{"English":"find all the files in the file system which have sticky bit enabled to the user","Bash":"find \/ -perm -u+s"}
{"English":"Print amount of space available on the file system containg path to the current working directory human-readable.","Bash":"df -Ph $PWD | tail -1 | awk '{ print $3}'"}
{"English":"Take a file path from standard input and remove it.","Bash":"xargs -i rm '{}'"}
{"English":"List all *.gif files found in the current directory tree","Bash":"find . -name *.gif -exec ls {} \\;"}
{"English":"Search everywhere for files changed within the last minute","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"Print the current directory","Bash":"find -mindepth 0 -maxdepth 0"}
{"English":"Display long listing of all the files\/directories owned by the user 'me' under '\/tmp' directory tree","Bash":"find \/tmp -user me -ls"}
{"English":"Display infinite scroll of random ASCII art","Bash":"yes 'c=(\u2571 \u2572);printf ${c[RANDOM%2]}'|bash"}
{"English":"Find all .gif files in the \/var\/www directory tree that are between 5 kB and 10 kB in size","Bash":"find \/var\/www -name *.gif -size +5k -size -10k"}
{"English":"Save the network node hostname append with '-', the current date and '.txt' into variable 'filename'","Bash":"filename=\"$(uname -n)-$(date +%F).txt\""}
{"English":"display all the files in the entire file system","Bash":"find \/ -type f -exec echo {} \\;"}
{"English":"Silently read a single character from standard input into variable \"REPLY\" without backslash escapes, with a timeout of 5 seconds, and using the prompt $'Press any key or wait 5 seconds to continue...\\n'","Bash":"read -rsp $'Press any key or wait 5 seconds to continue...\\n' -n 1 -t 5"}
{"English":"display all text files in the folder \/home\/you which have been modified in the last 60*24 hours(case insensitive search)","Bash":"find \/home\/you -iname \"*.txt\" -mtime -60 -print"}
{"English":"Find files and directories with the name RAID but don't traverse a particular directory","Bash":"find . -name RAID -prune -o -print"}
{"English":"Change permissions to 644 for *.html files under \/usr\/local","Bash":"find \/usr\/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}
{"English":"Set up local port forwards in the background with no terminal or command execution from port 4431 to host \"www1\" port 443 and port 4432 to host \"www2\" port 443 via the host \"colocatedserver\"","Bash":"ssh -fNT -L4431:www1:443 -L4432:www2:443 colocatedserver"}
{"English":"Find all regular files whose names do not end in \"*.html\"","Bash":"find . -type f -not -name \"*.html\""}
{"English":"Find directories modified within the last 7 days","Bash":"find . -mtime -7 -type d"}
{"English":"Replace all instances of \";\" with \"\\n\" in \"bla@some.com;john@home.com\"","Bash":"echo \"bla@some.com;john@home.com\" | sed -e 's\/;\/\\n\/g'"}
{"English":"find all the directories with the name \"some-dir\" in the current folder and move them to another folder and do not search in subfolders","Bash":"find .\/ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x\/"}
{"English":"Find all *.pdf files under .\/polkadots","Bash":"find .\/polkadots -type f -name \"*.pdf\""}
{"English":"Find all directories under $1\/.hg and set their SGID bit","Bash":"find $1\/.hg -type d -exec chmod g+s {} \\;"}
{"English":"Find all files under current directory and append a null character at the end of each of their paths","Bash":"find -type f -print0"}
{"English":"Compress \"hello world\" and save to variable \"hey\"","Bash":"hey=$(echo \"hello world\" | gzip -cf)"}
{"English":"Find all files\/directories under current directory that are 10MB in size","Bash":"find . -size 10M"}
{"English":"Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line","Bash":"echo -en \"${line:0:11}\" \"\\t\" $(md5sum \"${line:12}\") \"\\0\""}
{"English":"Force create a hard link in \"\/usr\/local\/bin\" to \"findpdftext\"","Bash":"sudo ln -f \"findpdftext\" \/usr\/local\/bin"}
{"English":"Clear the terminal's search history","Bash":"history -c"}
{"English":"find all directories in the current directory","Bash":"find . -type d -name \"*\""}
{"English":"Count lines that are neither blanks nor comments in a file 'foo.pl'","Bash":"cat foo.pl | sed '\/^\\s*#\/d;\/^\\s*$\/d' | wc -l"}
{"English":"Find files on the system created during the last 50 days","Bash":"find \/ -ctime -50"}
{"English":"find all the normal\/regular files in the current directory","Bash":"find -type f"}
{"English":"Find all php files whose name is tecmint.php in a current working directory","Bash":"find . -type f -name tecmint.php"}
{"English":"Search for all files in the current directory recursively whose names end with \"Linkin Park\"","Bash":"find . -name \"*Linkin Park\""}
{"English":"calculate the disk usage for all the files which have been modified in the last 24 hours in ~\/tmp folder and display the file sizes","Bash":"find ~\/tmp -mtime 0 -exec du -ks {} \\; | cut -f1"}
{"English":"Delete all empty directories under current directory","Bash":"find -type d -empty"}
{"English":"List each unique case insensitive character in \"file\" prefixed by number of occurrences","Bash":"grep -o . file | sort -f | uniq -ic"}
{"English":"Find all files under current directory excluding hidden files","Bash":"find . -depth -path '.\/.*' -prune -o -print"}
{"English":"Write the current date and time followed by \" 1\" to the console and append to \"log.csv\"","Bash":"echo $(date) \"1\" | tee -a log.csv"}
{"English":"find the oldest normal file in the current directory and display with its timestamp","Bash":"find ! -type d -printf \"%T@ %p\\n\" | sort -n | head -n1"}
{"English":"Gets domain name from dig reverse lookup.","Bash":"dig -x 8.8.8.8 | awk '\/PTR[[:space:]]\/{print $NF}'"}
{"English":"Decompresses file.","Bash":"bzip2 -d \/tmp\/itunes20140618.tbz"}
{"English":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","Bash":"find . -name \\*.c -print | xargs grep wait_event_interruptible \/dev\/null"}
{"English":"dsisplay all files inthe current folder","Bash":"find ."}
{"English":"Find all files in the current directory tree which do not belong to any user","Bash":"find . -nouser"}
{"English":"Saves path to the $SCRIPT file in the SCRIPTPATH variable.","Bash":"set SCRIPTPATH=`dirname \"$SCRIPT\"`"}
{"English":"Remove trailing white spaces from all files under current directory ignoring .git and .svn directories","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -exec sed -i \"s\/[[:space:]]*$\/\/g\" \"{}\" \\;"}
{"English":"show all the files in the entire file system which are bigger than 100MB","Bash":"find \/ -size +100M"}
{"English":"List files larger than 10MB under \/var\/log","Bash":"find \/var\/log -size +10M -ls"}
{"English":"Counts lines of \/dir\/file.txt file.","Bash":"cat \/dir\/file.txt | wc -l"}
{"English":"Print a single line of numbers from \"001\" to \"100\"","Bash":"yes | head -n 100 | awk '{printf( \"%03d \", NR )}'   ##for 001...100"}
{"English":"Find all files on the system whose names are 'composer.json'","Bash":"find \/ -name composer.json"}
{"English":"Split \"data.tsv\" into files of at most 100 MiB preserving lines and use a prefix of \"data.tsv.\" and numeric suffixes","Bash":"split -C 100m -d data.tsv data.tsv."}
{"English":"search for the word echo all the bash files(files ending with .bash) in the current folder","Bash":"find . -name \"*.bash\" |xargs grep \"echo\""}
{"English":"Print a count of each unique line in \"ip_addresses.txt\" sorted numerically","Bash":"sort -n ip_addresses.txt | uniq -c"}
{"English":"Print the names of all files and directories in the current directory tree","Bash":"find . -print"}
{"English":"Create a symbolic link in directory \"~\/newlinks\" for each file listed in \"results2.txt\"","Bash":"cat results2.txt | xargs -I{} ln -s {} ~\/newlinks"}
{"English":"Removes first and last parts of path $path and saves the result in 'finalName' variable.","Bash":"finalName=$(dirname ${path#*\/})"}
{"English":"create directory foo","Bash":"mkdir foo"}
{"English":"Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories","Bash":"find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Find all files under directory tree \/path\/to\/dir whose permissions are not 644","Bash":"find \/path\/to\/dir ! -perm 644"}
{"English":"find all the files in the folder ~\/Music which begin with \"Automatically Add\"","Bash":"find ~\/Music\/ -name \"Automatically Add*\""}
{"English":"display all normal\/regular files in current folder which have readable permission","Bash":"find . -type f -readable"}
{"English":"Reversibly sorts content of the '${TMP}\/${SCRIPT_NAME}.name' file","Bash":"cat ${TMP}\/${SCRIPT_NAME}.name|sort -r;"}
{"English":"display all normal\/regular files in current folder","Bash":"find . -type f"}
{"English":"Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission","Bash":"find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \\;"}
{"English":"Delete all in the current directory tree","Bash":"find . -delete"}
{"English":"list all samba files in \/var\/l* directory ( \/var\/lib or \/var\/log )","Bash":"find  \/var -path *\/l??\/samba*"}
{"English":"List files\/directories at least three levels down the directory tree","Bash":"find \/ -mindepth 3  -name \"*log\""}
{"English":"display table of files with their name, owner, and size in bytes.","Bash":"find . -printf 'Name: %f Owner: %u %s bytes\\n'"}
{"English":"Find all empty files under \/tmp and below","Bash":"find \/tmp -type f -empty"}
{"English":"Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.","Bash":"join -t, -o 1.1,1.2,2.3 in1 in2"}
{"English":"Show the value of variable \"list\", discarding consecutive duplicates and adding number of occurrences at the beginning of each line.","Bash":"echo \"$list\" | uniq -c"}
{"English":"Search the current directory tree for PHP files changed less than 14 days ago","Bash":"find . -name *.php -ctime -14"}
{"English":"find all the files in the current directory which end with orig","Bash":"find . -name '*.orig'  -exec echo {} \\ ;"}
{"English":"Verbosely change ownership of \"$file\" to \"root\"","Bash":"chown -v root \"$file\""}
{"English":"Print last day of April, 2009","Bash":"cal 4 2009 | tr ' ' '\\n' | grep -v ^$ | tail -n 1"}
{"English":"Search the current directory tree for files named \"accepted_hits.bam\"","Bash":"find . -name \"accepted_hits.bam\""}
{"English":"Delete all empty directories under test directory","Bash":"find test -depth -type d -empty -delete"}
{"English":"find all the files that have been modified today(from the strart of the day)","Bash":"find . -type f -daystart -mtime 0"}
{"English":"Search for files\/directories named 'fileName.txt' under current directory tree without traversing into '.\/ignored_directory'","Bash":"find . -path .\/ignored_directory -prune -o -name fileName.txt -print"}
{"English":"Read a line from standard input into the variable \"yn\" with the prompt \"Do you wish to install this program?\"","Bash":"read -p \"Do you wish to install this program?\" yn"}
{"English":"Open \"charm\" executable file in vim","Bash":"sudo vim `which charm`"}
{"English":"Read a line from standard input into variable \"SSHPASS\" with prompt \"Password: \" and without echoing the input","Bash":"read -p \"Password: \" -s SSHPASS"}
{"English":"Find & replace broken symbolic links","Bash":"find -L . -type l -delete -exec ln -s new_target {} \\;"}
{"English":"copy the file header.shtml to those dirs","Bash":"find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}
{"English":"Execute the file utility for each file found under \/etc or below that contains \"test\" in its pathname","Bash":"find \/etc -print0 | grep -azZ test | xargs -0 file"}
{"English":"kill all background processes","Bash":"kill -INT $(jobs -p)"}
{"English":"Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.","Bash":"find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}
{"English":"Count the number of regular files in the current directory tree","Bash":"find . -type f | wc -l"}
{"English":"Print the directory name of the real full path of \"relative\/path\/to\/file\" where each symbolic link component must exist","Bash":"dirname `readlink -e relative\/path\/to\/file`"}
{"English":"Finds IP address of 'en0' network interface.","Bash":"ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}'"}
{"English":"Shows state of shell option 'extglob'.","Bash":"shopt extglob"}
{"English":"Find all the files without permission 777 in the file system","Bash":"find \/ -type f ! -perm 777"}
{"English":"Removes all files but $1 newest ones from current folder.","Bash":"ls -tp | grep -v '\/' | tail -n +\"$1\" | xargs -I {} rm -- {}"}
{"English":"Shuffles strings of text received by 'awk' command on the input.","Bash":"awk 'BEGIN{srand();} {printf \"%06d %s\\n\", rand()*1000000, $0;}' | sort -n | cut -c8-"}
{"English":"List all files without descending into subdirectories","Bash":"find * -type f -print -o -type d -prune"}
{"English":"Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.","Bash":"env - `cat ~\/cronenv` \/bin\/sh"}
{"English":"Find all files\/directories under current directory tree","Bash":"find | xargs"}
{"English":"find the file \"dateiname\" in the entire file system ( case insensitive search)","Bash":"find \/ -iname \"Dateiname\""}
{"English":"Display the contents of variable \"a\" converted to lowercase.","Bash":"echo \"$a\" | awk '{print tolower($0)}'"}
{"English":"Find all files whose filename does not end with *.html.","Bash":"find . -type f -not -name \"*.html\""}
{"English":"Synchronize \"xxx-files\" to \"different-stuff\/xxx-files\" recursively preserving metadata with a bandwidth limit of 2000 KiB\/s","Bash":"rsync -pogtEtvr --progress --bwlimit=2000 xxx-files different-stuff"}
{"English":"Change permissions of \".git\/hooks\/pre-commit\" to 777","Bash":"sudo chmod 755 .git\/hooks\/pre-commit"}
{"English":"Find the top 5 big files","Bash":"find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}
{"English":"Print \"deb-src http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu precise main\" and append to file \"\/etc\/apt\/sources.list\"","Bash":"echo \"deb-src http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu precise main\" | tee -a \/etc\/apt\/sources.list"}
{"English":"Read a single character from standard input and do not allow backslash to escape characters","Bash":"read -rn1"}
{"English":"Print the files in the current directory as a list of comma separated values","Bash":"ls -1 | tr '\\n' ','"}
{"English":"Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"","Bash":"find . -name \\*.exe -o -name \\*.dll -o -print"}
{"English":"Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory","Bash":"find . -name \"$1\" -type f -exec grep -i \"$2\" '{}' \\;"}
{"English":"Find all image.pdf files\/directories under .\/polkadots","Bash":"find .\/polkadots -name 'image.pdf'"}
{"English":"Recursively change the owner to \"ec2-user\" and group to \"apache\" of all files in \"\/vol\/html\"","Bash":"sudo chown -R ec2-user:apache \/vol\/html"}
{"English":"Copy all files from the current directory tree to \/path\/to\/destination\/dir preserving their times, permissions, and ownership","Bash":"find . | cpio -pdumv \/path\/to\/destination\/dir"}
{"English":"find all files in the current folder that are not modified in the last 240 hours","Bash":"find . -mtime +10 -print"}
{"English":"find all the files in the current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60"}
{"English":"Prints server name from SOA record for domain yahoo.com","Bash":"dig +noall +answer soa yahoo.com | awk '{sub(\/.$\/,\"\",$5);print $5}'"}
{"English":"create directory temp into home directory","Bash":"mkdir ~\/temp"}
{"English":"create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)","Bash":"find . -name '*.log' -mtime +3 -print0 | xargs -0 -n 500 -P 4 bzip2"}
{"English":"Find all directories under current directory excluding those which match the regex \/\\. in their names","Bash":"find . -type d | grep -v '\/\\.'"}
{"English":"find all the empty directories in current folder and delete them","Bash":"find .\/ -empty -type d -delete"}
{"English":"Saves index number of file 'script.sh' in the 'inode' variable.","Bash":"inode=`ls -i .\/script.sh | cut -d\" \" -f1`"}
{"English":"Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories","Bash":"find . -type d -exec chmod ug=rwx,o= {} \\;"}
{"English":"Search the current directory tree for files AAA and BBB","Bash":"find . \\( -name AAA -o -name BBB \\) -print"}
{"English":"Count the number of differing lines in \"file1\" and \"file2\" with 0 lines of unified context","Bash":"diff -U 0 file1 file2 | grep -v ^@ | wc -l"}
{"English":"Remove all files with the .c extension in the current directory tree","Bash":"find . -name \"*.c\" | xargs rm -rf"}
{"English":"Display kernel release name.","Bash":"uname -r"}
{"English":"Verbosely compresses all files on sixth and seventh depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*\/*\/*\/*\/*"}
{"English":"Set the variable \"me\" to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as \"-bash\".","Bash":"me=`basename -- \"$0\"`"}
{"English":"Print the list of regular files from the current directory that were last modified on November, 22","Bash":"find . -maxdepth 1 -type f -newermt \"Nov 22\" \\! -newermt \"Nov 23\" -exec echo {} +"}
{"English":"Print a minimal set of differences between files in directories \"a\" and \"b\", ignore differences in whitespace, and print 0 lines of unified context","Bash":"diff -dbU0 a b"}
{"English":"Recursively changes group ownership of everything within '\/git\/our_repos' to 'shared_group'.","Bash":"chgrp -R shared_group \/git\/our_repos"}
{"English":"Find all files under current directory whose file type description contains \"image\", display only path to each file.","Bash":"find . -type f -exec file {} \\; | awk -F: '{ if ($2 ~\/[Ii]mage|EPS\/) print $1}'"}
{"English":"Scan every file in \/etc for IPV4 addresses.","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"Return 0 if at least one \"abc\" file in the current directory tree contains text \"xyz\"","Bash":"find . -name 'abc' -type f -exec grep -q xyz {} +"}
{"English":"searches through the root filesystem (\"\/\") for the file named Chapter1, and prints the location","Bash":"find \/ -name Chapter1 -type f -print"}
{"English":"Save the canonical filename of \"$BASH_SOURCE\" in variable \"me\"","Bash":"me=$(readlink --canonicalize --no-newline $BASH_SOURCE)"}
{"English":"Create the directory '.npm-global' in the user's home directory(~).","Bash":"mkdir ~\/.npm-global"}
{"English":"Find all *.java files in the current directory tree","Bash":"find . -name  \\*.java"}
{"English":"find the count of all the charcters of the list of regular files present in the current folder","Bash":"find . -type f | xargs | wc -c"}
{"English":"Recursively finds all '*.pdf' files in a current folder and removes them without prompting.","Bash":"find . -name '*.pdf' -exec rm -f {} \\;"}
{"English":"Write \"deb http:\/\/downloads-distro.mongodb.org\/repo\/ubuntu-upstart dist 10gen\" to standard output and append to \"\/etc\/apt\/sources.list.d\/10gen.list\" as root","Bash":"sudo echo \"deb http:\/\/downloads-distro.mongodb.org\/repo\/ubuntu-upstart dist 10gen\" | sudo tee -a \/etc\/apt\/sources.list.d\/10gen.list"}
{"English":"Gets IP address of 'en0' selected network interface.","Bash":"ifconfig en0 | awk '\/inet addr\/ {gsub(\"addr:\", \"\", $2); print $2}'"}
{"English":"Replace all occurrence of \"toreplace\" with \"replaced\" in all files under \/home\/www","Bash":"find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's\/toreplace\/replaced\/g'"}
{"English":"Recursively finds string with text \"foo\" in all files of a current folder.","Bash":"find .\/ -type f | xargs grep \"foo\""}
{"English":"Page through the contents of yourFile, adding a $ at the end of each line.","Bash":"cat -e yourFile | less"}
{"English":"List all *.c, *.h and *.cpp files under current directory","Bash":"find . -type f \\( -name '*.c' -or -name '*.h' -or -name '*.cpp' \\) -exec ls {} \\;"}
{"English":"Recursively change the owner and group of \"\/workspace\" and \"775\" to \"your_user_name\"","Bash":"chown -R your_user_name.your_user_name 775 \/workspace"}
{"English":"find all files in the current directory and sub-directories that were modified after the \/etc\/passwd file was modified","Bash":"find -newer \/etc\/passwd"}
{"English":"Create symlinks to all  \/home\/folder1\/*.txt files and 'folder2_' directory with the same name in a target directory named '+'","Bash":"find \/home\/folder1\/*.txt -type f -exec ln -s {} \"folder2_\" + \\;"}
{"English":"Print the last space separated word from \"a b c d e\"","Bash":"echo \"a b c d e\" | tr ' ' '\\n' | tail -1"}
{"English":"change owner and group of the all files with group owner vboxusers into home directory to user and group kent","Bash":"find ~ -group vboxusers -exec chown kent:kent {} \\;"}
{"English":"Search the current directory tree for regular files omitting directory `omit-directory'","Bash":"find . -name omit-directory -prune -o -type f"}
{"English":"Save a unique list of the currently logged in usernames to variable \"line\"","Bash":"line=$(who | cut -d' ' -f1 | sort -u)"}
{"English":"Print the sorted unique column of usernames of users who are currently logged in without the header","Bash":"finger | tail -n +2 | awk '{ print $1 }' | sort | uniq"}
{"English":"Search the files from the current directory tree for \"chrome\"","Bash":"find . -exec grep chrome {} \\;"}
{"English":"find all executable files in \/home directory.","Bash":"find  \/home -type f -perm \/a=x"}
{"English":"Find all files\/directories with user id 120 under current directory tree","Bash":"find . -uid 120 -print"}
{"English":"Copy all files and directories under the current directory into \"..\/new\" preserving relative paths","Bash":"find -print0 | sort -z | cpio -pdv0 ..\/new"}
{"English":"Find files in the current directory whose names begin with \"file\" and remove them","Bash":"find . -name file* -maxdepth 1 -exec rm {} \\;"}
{"English":"Join lines in file \"A\" with lines in file \"B\" if the lines share a common first word","Bash":"join <(sort -n A) <(sort -n B)"}
{"English":"Print content of 'domains.txt' with removed first one of dot-delimited fields","Bash":"rev domains.txt | cut -d '.' -f 2- | rev"}
{"English":"Display the content of file \"f\" in home directory if it exists and is executable","Bash":"cat `which ~\/f`"}
{"English":"Rename \"fghfilea\" to \"jklfilea\"","Bash":"mv fghfilea jklfilea"}
{"English":"Change permissions to u=rw,g=r,o= for all files inside the current directory tree","Bash":"find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find -name \\*.txt"}
{"English":"Print the files in the current directory as a list of semicolon separated values","Bash":"ls -m | tr -d ' ' | tr ',' ';'"}
{"English":"Save full path of command \"cat\" to variable \"CAT\"","Bash":"CAT=`which cat`"}
{"English":"Remove trailing white spaces from all files under dir directory","Bash":"find dir -type f -exec sed -i 's\/ *$\/\/' '{}' ';'"}
{"English":"Output \"testFile.txt.1\" without the \".1\" suffix.","Bash":"basename testFile.txt.1 .1"}
{"English":"List the unique second \"\/\" delimited field of every line from standard input prefixed by the number of occurrences","Bash":"cut -d\/ -f1-2 | cut -d\/ -f2- | sort | uniq -c"}
{"English":"Get the base filename from variable 'path', similar to using the basename command.","Bash":"echo \"$path\" | rev | cut -d\"\/\" -f1 | rev"}
{"English":"Delete all filename* files under \/dir directory","Bash":"find \/dir -name \"filename*\" -type f -delete"}
{"English":"display all the files in the file system which belong to the user \"user1\"","Bash":"find \/ -user user1"}
{"English":"Find all files in the \/usr directory tree that are owned by group `staff'","Bash":"find \/usr -group staff"}
{"English":"Finds file 'Subscription.java' and changes to containing folder.","Bash":"cd $(find . -name Subscription.java | xargs dirname)"}
{"English":"Serach in current directory downwards all files which  have not been modified since last 7 days","Bash":"find .  -mtime +7 -print"}
{"English":"display all html files  in  current folder","Bash":"find -name \"*.htm\" -print"}
{"English":"search for a word in all the files in the current directory and display the file paths relative to the current directory","Bash":"find . -exec grep -l foo {} +"}
{"English":"Reread user's .profile configuration file.","Bash":"source ~\/.profile"}
{"English":"display all instances  of the file tkConfig.sh in the folder \/usr","Bash":"find \/usr -name tkConfig.sh"}
{"English":"Print a line of 100 random characters either \".\" or \" \"","Bash":"cat \/dev\/urandom | tr -dc '. ' | fold -w 100 | head -1"}
{"English":"Rename file with inode number 31467125 to new_name.html","Bash":"find . -type f -inum 31467125 -exec \/bin\/mv {} new_name.html \\;"}
{"English":"Print \"huzzah\" if directory \"\/some\/dir\" is empty","Bash":"find \/some\/dir\/ -maxdepth 0 -empty -exec echo \"huzzah\" \\;"}
{"English":"Print the path names of all files and directories in the current directory tree","Bash":"find -printf '\"%h\/%f\" '"}
{"English":"Archive \"\/path\/to\/files\" to \"user@targethost:\/path\"","Bash":"rsync -av \/path\/to\/files user@targethost:\/path"}
{"English":"Rename file ~\/junk\/cart1 to ~\/junk\/A","Bash":"find ~\/junk  -name 'cart1' -exec mv {} ~\/junk\/A \\;"}
{"English":"display all directories in current folder","Bash":"find . -type d -print0"}
{"English":"use find command to search for .png and .jpg files","Bash":"find .\/ -type f \\( -iname \\*.jpg -o -iname \\*.png \\)"}
{"English":"replace the word apple with orange in all the files in the current folder","Bash":"find .\/ -exec sed -i 's\/apple\/orange\/g' {} \\;"}
{"English":"display a list of all regular\/normal files in the current folder","Bash":"find . -type f -ls"}
{"English":"Find all file1 and file9 files\/directories under current directory","Bash":"find . -name file1 -or -name file9"}
{"English":"Find all regular files under '\/home\/john' directory tree that start with 'landof' in their names","Bash":"find \/home\/john -name \"landof*\" -type f -print"}
{"English":"Search for \"largecalculation\" in all processes owned by the current user","Bash":"ps -u `whoami` | grep largecalculation"}
{"English":"Delete all MP3 files under \/tmp","Bash":"find \/tmp -iname '*.mp3' -print0 | xargs -0 rm"}
{"English":"find all the *.conf files under \/ (root)","Bash":"find \/ -name \"*.conf\""}
{"English":"Run commands \"df -k;uname -a\" on server \"192.168.79.134\"","Bash":"echo \"df -k;uname -a\" | ssh 192.168.79.134"}
{"English":"find -name '*.js' -not -path '.\/node_modules\/*' -not -path '.\/vendor\/*'","Bash":"find -name '*.js' -not \\( -path '.\/node_modules\/*' -o -path '.\/vendor\/*' \\)"}
{"English":"Find all regular files under $DIR\/tmp\/daily\/, sort them in reverse numerical order and copy the first two files to $DIR\/tmp\/weekly\/","Bash":"find $DIR\/tmp\/daily\/ -type f -printf \"%p\\n\" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR\/tmp\/weekly\/"}
{"English":"Search the current directory tree for files whose names begin with \"my\" and end with \"p\" followed by any character","Bash":"find . -regex \".*\/my.*p.$\""}
{"English":"Find files and directories that are at least seven levels of nesting in the directory \/usr\/src excluding CVS directory","Bash":"find \/usr\/src -name CVS -prune -o -depth +6 -print"}
{"English":"Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output","Bash":"find $DIR -type f -exec grep $SEARCH \/dev\/null {} \\; | wc --bytes"}
{"English":"Saves printed calendar of February,1900 in positional variables.","Bash":"set -- $(cal 2 1900)"}
{"English":"Recursively counts non-blank lines in all files in a current folder, that match regex '\\.php|\\.as|\\.sql|\\.css|\\.js', but skip folders '.\/pma', '.\/blog', '.\/punbb', '.\/js\/3rdparty' and files like '*.svn'.","Bash":"find . -path '.\/pma' -prune -o -path '.\/blog' -prune -o -path '.\/punbb' -prune -o -path '.\/js\/3rdparty' -prune -o -print | egrep '\\.php|\\.as|\\.sql|\\.css|\\.js' | grep -v '\\.svn' | xargs cat | sed '\/^\\s*$\/d' | wc -l"}
{"English":"Serach for all the files containing grep in man pages","Bash":"find \/usr\/share\/man\/ -regex .*grep*"}
{"English":"Print the contents of \"order.txt\"","Bash":"cat order.txt"}
{"English":"Copy recursively \"tata\/\" to \"tata2\/\" and remove read, write, and execute permission for other","Bash":"rsync -avz --chmod=o-rwx -p tata\/ tata2\/"}
{"English":"Print canonical filename of \"\/path\/there\/..\/..\/\" even if it does not exist","Bash":"readlink -m \/path\/there\/..\/..\/"}
{"English":"find all the files that have been modified today","Bash":"find . -type f -mtime 0"}
{"English":"List in detail regular files from the current directory tree whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$'","Bash":"find -type f |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | sed -re 's\/(\\s)\/\\\\\\1\/g' | xargs ls -l"}
{"English":"Print unique lines of sorted file \"file1\" when compared with the list of first space separated fields of all sorted strings of file \"file2\"","Bash":"cut -d' ' -f1 file2 | comm -13 - file1"}
{"English":"Print $d if $d is empty","Bash":"find \"$d\" -prune -empty"}
{"English":"Find all *.foo files under current directory and search for 'bar' in those files","Bash":"find . -name '*.foo' -exec grep bar {} \\;"}
{"English":"remove top-level domain (.com, .org) from URL's in urllist.txt","Bash":"rev urllist.txt | cut -d. -f 2- | rev"}
{"English":"Display the count of regular files for which the owner has read and execute permission under 'home\/magie\/d2' directory tree","Bash":"find home\/magie\/d2 -type f -perm -u+rx | wc -l"}
{"English":"Archive directory \".\" to \"server2::sharename\/B\"","Bash":"rsync -av . server2::sharename\/B"}
{"English":"Remove trailing white spaces from all files under dir directory and keep backups of the originals","Bash":"find dir -type f -print0 | xargs -0 sed -i .bak -E \"s\/[[:space:]]*$\/\/\""}
{"English":"Find all *.txt files under current directory, change their permission to 666 and copy them to \/dst\/ directory","Bash":"find . -name \\*.txt -exec chmod 666 {} \\; -exec cp {} \/dst\/ \\;"}
{"English":"List any line in \"f1\" or \"f2\" which does not appear in the other and delete all tab characters in the output","Bash":"comm -3 <(sort -un f1) <(sort -un f2) | tr -d '\\t'"}
{"English":"List files named \"accepted_hits.bam\" in the current directory tree prefixing their names with \"somecommand\"","Bash":"find `pwd` -name \"accepted_hits.bam\" | xargs -i echo somecommand {}"}
{"English":"Prints groups list that user 'el' belongs to.","Bash":"groups el                                     \/\/see that el is part of www-data"}
{"English":"Find all files under current directory and change their permission to 400","Bash":"find . -type f -exec chmod 400 {} \\;"}
{"English":"Recursively change the owner to \"$USER\" and group to \"$GROUP\" of \"\/var\/lib\/cassandra\"","Bash":"sudo chown -R  $USER:$GROUP \/var\/lib\/cassandra"}
{"English":"find all the files in the entire file system whose size is exactly 15MB","Bash":"find \/ -size 15M"}
{"English":"search for a files \"cart1\" in the folder junk which is in home folder and move the folder to ~\/junk\/A.","Bash":"find ~\/junk  -name 'cart1' -exec mv {} ~\/junk\/A \\;"}
{"English":"Display all regular files under current directory tree ignoring files in '.\/dir1' and '.\/dir2' directories","Bash":"find . -type f |sed '\/.\\\/dir[12]\\\/[^\/]*$\/d'"}
{"English":"Replace all newlines with spaces in standard input","Bash":"sed -z 's\/\\n\/ \/'g"}
{"English":"search for text files in the folder \/home\/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents","Bash":"find \/home\/you -iname \"*.txt\" -mtime -60 -exec cat {} \\;"}
{"English":"Replace all newlines except the last with a comma in \"test.txt\"","Bash":"sed -i ':a;N;$!ba;s\/\\n\/,\/g' test.txt"}
{"English":"Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves","Bash":"find $ROOT_DIR -type d -depth -print"}
{"English":"search normal files called ' banckup '  from \/usr directory downward and print them.","Bash":"find \/usr -type f -name backup -print"}
{"English":"List level 2 subdirectories of the current directory","Bash":"find . -mindepth 2 -maxdepth 2 -type d -ls"}
{"English":"create backup of all the text files  present in the current folder","Bash":"find -name \"*.txt\" cp {} {}.bkup \\;"}
{"English":"Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.","Bash":"mktemp"}
{"English":"Display users who are currently logged in","Bash":"finger | sed 's\/^\\([^ ]*\\) *\\([^ ]*\\) *pts[^A-Z]*\\([^(]*\\).*\/\\2\\t(\\1)\\t\\3\/'"}
{"English":"Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.","Bash":"find . -group X_GNAME -exec chgrp Y_GNAME {} +"}
{"English":"Find all the files that were modified within the last day","Bash":"find . -mtime -1"}
{"English":"print all files in the current directory and all subdirectories","Bash":"find . -print"}
{"English":"Display the entire contents of 'file', replacing only the very first instance of \"old\" with \"new\".","Bash":"grep -E -m 1 -n 'old' file | sed 's\/:.*$\/\/' - | sed 's\/$\/s\\\/old\\\/new\\\/\/' - | sed -f - file"}
{"English":"display all files in current folder excluding current folder (.)","Bash":"find . \\! -name '.'"}
{"English":"Find all files\/directories with space in their names under current directory","Bash":"find . -name '* *'"}
{"English":"Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename","Bash":"find . -exec env f={} somecommand \\;"}
{"English":"Find files with 002 permission in entire file system","Bash":"find \/ -type f -perm -002"}
{"English":"Calculate the md5 sum of all files in the current directory with the filename printed first","Bash":"find -maxdepth 1 -type f -exec md5sum {} \\; | awk '{s=$2; $2=$1; $1=s;}1'"}
{"English":"Remove all regular non-hidden files modified more than 7 days ago and residing in the \/tmp directory tree","Bash":"find \/tmp -type f -name '*' -mtime +7 -print0 | xargs -0 rm -f"}
{"English":"prints the last occurrence of text between two tags","Bash":"tac file | sed -n '0,\/<tag>\\(.*\\)<\\\/tag>\/s\/\/\\1\/p'"}
{"English":"Send an audible ping to \"10.100.3.104\"","Bash":"ping -a 10.100.3.104"}
{"English":"Search the home directory tree for video files","Bash":"find ~ -type f -regex '.*\\.\\(mkv\\|mp4\\|wmv\\|flv\\|webm\\|mov\\)'"}
{"English":"SSH into \"myhost.com\" as user \"myname\" with a check every 60 seconds that the server is still alive","Bash":"ssh -o ServerAliveInterval=60 myname@myhost.com"}
{"English":"Search the system for the file \u201ctestfile.txt\u201d ignoring the case","Bash":"find \/ -iname \"testfile.txt\""}
{"English":"Move \"file.txt\" to docker container \"$COUNTAINER_ID\" in path \"\/var\/lib\/docker\/aufs\/mnt\/$CONTAINER_ID\/rootfs\/root\/file.txt\"","Bash":"mv -f file.txt \/var\/lib\/docker\/aufs\/mnt\/$CONTAINER_ID\/rootfs\/root\/file.txt"}
{"English":"Show files in \/home owned by group `test'","Bash":"find \/home -group test"}
{"English":"display all file names in current folder","Bash":"find . -printf '%p '"}
{"English":"Find all files\/directories under '\/usr\/local\/games' directory tree that contain the string 'xpilot' in their names","Bash":"find \/usr\/local\/games -name \"*xpilot*\""}
{"English":"display all the files in the current folder for the files which have not been accessed in the last 24 hours","Bash":"find . -type f -atime +1"}
{"English":"Search the current directory tree for files whose names start with \"f\"","Bash":"find . -name f* -print"}
{"English":"Find all directories named build under the current directory","Bash":"find . -type d -name build"}
{"English":"Print each character of \"abcdefg\" on a line","Bash":"echo \"abcdefg\" | fold -w1"}
{"English":"Print absolute path of java executable","Bash":"readlink -f $(which java)"}
{"English":"Search all the .c and .h files in the current directory tree for \"expr\"","Bash":"find -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Search the file system for regular files whose names are shorter than 25 characters","Bash":"find \/ -type f -regextype posix-extended -regex '.*\/.{1,24}$'"}
{"English":"ssh into localhost on port 4444","Bash":"ssh -p 4444 localhost"}
{"English":"Display summary of each specified file in human readable form","Bash":"du -sh *"}
{"English":"Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username","Bash":"find $dir -maxdepth 1 -type d -user $username -perm -100"}
{"English":"Print info about all mounted file systems, and grand total statistic about available and used space","Bash":"df --total"}
{"English":"Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path","Bash":"find \/ -type f -perm -002 -printf '%p has world write permissions\\n'"}
{"English":"Print the list of all regular files in the current directory and below","Bash":"find . -type f"}
{"English":"Takes first text field from file 'file.txt' as a domain name and gets short A record for this one.","Bash":"awk '{print $1}' file.txt | xargs dig +short"}
{"English":"Search for files containing string \"PENDWIDTH\" and view the result using the more command","Bash":"find . -exec grep PENWIDTH {} \\; | more"}
{"English":"Find files named 'core' in or below the directory \/tmp and delete them","Bash":"find \/tmp -name core -type f -print0 | xargs -0 \/bin\/rm -f"}
{"English":"Search for '\/usr\/bin\/perl' in all regular files under current dirctory tree and also show a long listing of them","Bash":"find . -type f -exec grep \"\/usr\/bin\/perl\" {} \\; -ls"}
{"English":"find all files in the file system which belong to the user pat and having the word \"filename\" in their name.","Bash":"find \/ -user pat -iname \"filename\""}
{"English":"count lines of C or C++ or Obj-C code under the current directory","Bash":"find . \\( -name \"*.c\" -or -name \"*.cpp\" -or -name \"*.h\" -or -name \"*.m\" \\) -print0 | xargs -0 wc"}
{"English":"Unpack all *.gz archives in the current directory tree","Bash":"find . -name '*.gz' -print0 | xargs -0 gunzip"}
{"English":"Search the current directory tree for regular files whose names end with \"keep.${SUFFIX}\", where $SUFFIX is a shell variable","Bash":"find . -type f -name \"*keep.${SUFFIX}\""}
{"English":"Delete all files with inode number 804180","Bash":"find -inum 804180 -exec rm {} \\"}
{"English":"List all files in the current directory tree larger than 1000 kb","Bash":"find . -size +1000k"}
{"English":"Replace all occurrences of \"foo_fn\" with \"bar_fn\" in the files named \"foo_fn\" from the current directory tree","Bash":"find . -name foo_fn exec sed -i s\/foo_fn\/bar_fn\/g '{}' \\;"}
{"English":"Recursively list contents of the current directory in a tree-like format","Bash":"tree"}
{"English":"Change permissions of \"mksdcard\" to 755","Bash":"sudo chmod 755 mksdcard"}
{"English":"Find all directories under current directory whose paths are 5 characters long","Bash":"find . -regextype posix-extended -type d -regex \".{5}\""}
{"English":"Print \"yes\" 4 times followed by 1 \"no\"","Bash":"yes yes | sed -e 5s\/yes\/no\/ -e 5q"}
{"English":"Print the full real path of \"\/dev\/disk\/by-uuid\/$1\" followed by \"is not mounted\"","Bash":"echo $(readlink -f \/dev\/disk\/by-uuid\/$1) is not mounted"}
{"English":"Prints lines count of each *.php file in a current folder and subfolders, and prints total count.","Bash":"find . -name '*.php' -print0 | xargs -0 wc -l"}
{"English":"search all jpg files in current folder","Bash":"find . -type f -name \"*.jpg\""}
{"English":"Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree","Bash":"find -O3 \"$save_path\" -depth -mindepth 1 -name 'sess_*' -ignore_readdir_race -type f -cmin \"+$gc_maxlifetime\" -delete"}
{"English":"find files which full path name like '*f' at current directory and print","Bash":"find .  -path '*f'"}
{"English":"Search \/usr\/local recursively for directories whose names end with a number 0-9","Bash":"find \/usr\/local -type d -name '*[0-9]'"}
{"English":"display all the files in the current folder excluding the files with the name mmm","Bash":"find . -name mmm -prune -o -print"}
{"English":"Set permissions of all directories under \"\/opt\/lampp\/htdocs\" to 755","Bash":"find \/opt\/lampp\/htdocs -type d -exec chmod 755 {} \\;"}
{"English":"Lists all subdirectories in the current directory with the trailing slash removed","Bash":"ls -d1 *\/ | tr -d \"\/\""}
{"English":"Search the files under and below \/directory\/containing\/files for \"pattern_to_search\"","Bash":"find \/directory\/containing\/files -type f -exec grep -H 'pattern_to_search' {} +"}
{"English":"create symbolic links in current directory to all files located in directory \"\/original\" and have filename extension \".processname\"","Bash":"ln -s $(echo \/original\/*.processme) ."}
{"English":"Recursively search for \"string here\" and write the output to the console followed by the number of matched lines","Bash":"grep -r \"string here\" * | tee >(wc -l)"}
{"English":"Recursively finds all 'STATUS.txt' files containing text 'OPEN' and prints containing folder of them.","Bash":"find -type f -name \"STATUS.txt\" -exec grep -q \"OPEN\" {} \\; -exec dirname {} \\;"}
{"English":"find all files in the current directory do not display the files which do not have read permission to all users","Bash":"find . ! -perm -g+r,u+r,o+r -prune"}
{"English":"Save \"$N\" number of '.' characters in variable \"myvar\"","Bash":"myvar=`seq 1 $N | sed 's\/.*\/.\/' | tr -d '\\n'`"}
{"English":"Perform a dry run replacing \"special\" with \"regular\" in all file names in the current directory","Bash":"rename -n 's\/special\/regular\/' **"}
{"English":"Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago","Bash":"find $backup_path\/*.sql -mtime +5 -exec rm -f {} \\;"}
{"English":"display long listing of all files in the current directory whose size is 24 or 25 bytes.","Bash":"find . -size -26c -size +23c -ls"}
{"English":"Remount \"extX\" filesystem \"\/dev\/hdaX\" on \"\/\" without writing in \"\/etc\/mtab\"","Bash":"mount -n -o remount -t extX \/dev\/hdaX \/"}
{"English":"Search the current directory tree for *.c and *.sh files","Bash":"find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}
{"English":"Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*'","Bash":"find -name '.?*' -prune -o \\( -type f -print0 \\)"}
{"English":"Set variable \"MAVEN_DEBUG_OPTS\" to \"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\" on Windows machines","Bash":"set MAVEN_DEBUG_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000"}
{"English":"Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt","Bash":"join -t':' <(sort LN.txt) <(sort PH.txt) | join -t':'  - <(sort AD.txt)"}
{"English":"Find all *shp* directories under current directory and move all regular files inside those directories to ..\/shp_all\/","Bash":"mv $(find $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq) -type f) ..\/shp_all\/"}
{"English":"Counts all files in a DIR_NAME folder and subfolders.","Bash":"find DIR_NAME -type f | wc -l"}
{"English":"Find all files\/directories named 'document' in maximum 4 levels down the '\/usr' directory","Bash":"find \/usr -maxdepth 4 -name document -print"}
{"English":"Replace all newlines from standard input except the last with spaces","Bash":"sed 'x;G;1!h;s\/\\n\/ \/g;$!d'"}
{"English":"Print the files to which symbolic links in the current directory point","Bash":"find . -type l -print | xargs ls -ld | awk '{print $10}'"}
{"English":"Find all files\/directories under 'A' directory tree excluding directory 'A\/a' and all of it's contents","Bash":"find A \\! -path \"A\/a\/*\" -a \\! -path \"A\/a\""}
{"English":"Recursively change the owner to \"$USER\" and group to \"$GROUP\" of \"\/var\/log\/cassandra\"","Bash":"sudo chown -R  $USER:$GROUP \/var\/log\/cassandra"}
{"English":"find all the files ending with jpg in current folder and display their count ( case insensitive )","Bash":"find .\/ -type f -regex \".*\\.[Jj][Pp][gG]$\" | wc -l"}
{"English":"Find and list all regular files","Bash":"find . -type f -ls"}
{"English":"Find files on the system that are bigger than 20 megabytes","Bash":"find \/ -type f -size +20M -exec ls -lh {} \\; | awk '{ print $NF \": \" $5 }'"}
{"English":"Enables 'nullglob' shell option.","Bash":"shopt -s nullglob"}
{"English":"Find all *.srt files under directory named 'working' and show the first one found","Bash":"find working -type f -name \"*.srt\" | head -1"}
{"English":"find all the perl files in the current folder","Bash":"find . -type f -name \"*.pl\""}
{"English":"Search for all *.conf files in entire file system","Bash":"find \/ -type f -name \"*.conf\""}
{"English":"Print file type of the executable file of command \"python\"","Bash":"file `which python`"}
{"English":"find all regular\/normal files in current folder which have been modified in the last 60 minutes","Bash":"find -type f -mtime -60"}
{"English":"Find files owned by nonexistent users","Bash":"find \/ -nouser -print"}
{"English":"Find *.java files under current directory and compress them to myfile.tar  (unsafe)","Bash":"find . -type f -name \"*.java\" | xargs    tar cvf myfile.tar"}
{"English":"Find all .txt files in the dir\/ directory tree and copy them along with times, permissions, and ownership to dir_txt\/","Bash":"find dir\/ -name '*.txt' | xargs cp -a --target-directory=dir_txt\/ --parents"}
{"English":"Save the canonical path of \"$dir\/$file\" in variable \"path\"","Bash":"path=`readlink --canonicalize \"$dir\/$file\"`"}
{"English":"Read one character from standard input into variable \"REPLY\"","Bash":"read -n1"}
{"English":"Get the list of regular files in the current directory","Bash":"find . -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0 -I {} echo \"{}\""}
{"English":"Print summary of new\/missing files, and which files differ between \/path\/to\/folder1 and \/path\/to\/folder2, sorted alphabetically.","Bash":"diff -rq \/path\/to\/folder1 \/path\/to\/folder2"}
{"English":"print all files in the current directory and all subdirectories","Bash":"find ."}
{"English":"Suffix all files and folders in the current directory with \"_SUF\"","Bash":"ls | xargs -I {} mv {} {}_SUF"}
{"English":"find the biggest files only (but not directories)","Bash":"find . -type f -exec du -Sh {} + | sort -rh | head -n 15"}
{"English":"Remount \"\/mnt\/mountpoint\" with read and write permission","Bash":"mount \/mnt\/mountpoint -oremount,rw"}
{"English":"find all the files that have the word \"fstab\" in their name in a folder","Bash":"find \/etc -name *fstab*"}
{"English":"Find all Executable files in the file system","Bash":"find \/ -perm \/a=x"}
{"English":"Merge already sorted files in the current directory ending in \".$suffix\"","Bash":"sort -m *.$suffix"}
{"English":"Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files","Bash":"find . -name \"filename_regex\"|grep -v '.svn' -v '.pdv'|xargs grep -i 'your search string'"}
{"English":"Open gcc info manual and select \"option index\" menu entry.","Bash":"info gcc \"option index\""}
{"English":"Search the current directory tree for directories lacking execute permissions for user, group, or others","Bash":"find . -type d ! -perm -111"}
{"English":"Recursively removes all files like '*.pyc' in a current folder.","Bash":"rm **\/*.pyc"}
{"English":"find the path of a specfic video file in the current directory","Bash":"find .\/ -name \"foo.mp4\" -printf \"%h\\n\""}
{"English":"As root, edit the cron job list of user \"apache\" using the editor specified by EDITOR environment variable, or default \/usr\/bin\/editor if this variable is not set.","Bash":"sudo crontab -e -u apache"}
{"English":"find all the files which start with the name \"Metallica\" in the folder \"\/mp3-collection\" and which are bigger than 10MB","Bash":"find \/mp3-collection -name 'Metallica*' -and -size +10000k"}
{"English":"Recursively finds and compresses all files in a current folder with 4 parallel processes.","Bash":"find . -type f -print0 | xargs -0 -n1 -P4 bzip2"}
{"English":"Print the current user name associated with standard input","Bash":"who -m | awk '{print $1;}'"}
{"English":"display all directories in a folder","Bash":"find \/etc -type d -print"}
{"English":"Find files\/directories that does not have write permssion for group","Bash":"find \/path ! -perm \/020"}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -print0 | xargs -0 \/bin\/rm"}
{"English":"Find all .bak files starting from the current directory and delete them","Bash":"find . -iname \"*.bak\" -type f -print | xargs \/bin\/rm -f"}
{"English":"Connect to port 2222 of example.com as ssh user \"user\", and copy local file \"\/absolute_path\/source-folder\/some-file\" to remote directory \"\/absolute_path\/destination-folder\"","Bash":"scp -P 2222 \/absolute_path\/source-folder\/some-file user@example.com:\/absolute_path\/destination-folder"}
{"English":"Prints directory where the executing script ($0) is located.","Bash":"`dirname $0`"}
{"English":"Create intermediate directories as required","Bash":"mkdir -p $2"}
{"English":"Find files whose pathnames end in \"f\"","Bash":"find .  -path '*f'"}
{"English":"Creates temporary file in $appdir variable with name formatted like expression in variable ${template}, and saves path to it in 'launcherfile' variable.","Bash":"launcherfile=$(mktemp -p \"$appdir\" \"$template\")"}
{"English":"Count the number of users logged in","Bash":"who | wc -l"}
{"English":"Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories","Bash":"find . -name foo.mp4 -exec dirname {} \\;"}
{"English":"split a file \"list.txt\" into pieces per 600 lines","Bash":"split -l 600 list.txt"}
{"English":"Create symbolic links in the current directory for all files excluding \"CONFIGFILE\" located under \"\/your\/project\" directory tree","Bash":"find \/your\/project -type f ! -name 'CONFIGFILE' -exec ln -s \\{\\} .\/ \\;"}
{"English":"remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.","Bash":"find * -perm 777 -exec chmod 770 {} \\;"}
{"English":"Search for first match of the regex 're' in all *.coffee files under current directory and print the file names","Bash":"find . -name \\*.coffee -exec awk '\/re\/ {print FILENAME \":\" $0;exit}' {} \\;"}
{"English":"Show manual of the find command","Bash":"man find"}
{"English":"Find .rmv files in the .\/root directory recursively and copy them to directory \/copy\/to\/here","Bash":"find root -name '*.rmv' -type f -exec cp {} \/copy\/to\/here \\;"}
{"English":"find all files in the current directory and sub-directories that were accessed after modifying \/etc\/hosts","Bash":"find -anewer \/etc\/hosts"}
{"English":"Find all files\/directories under current directory with 'FooBar' in their paths and copy them to ~\/foo\/bar","Bash":"find . | grep \"FooBar\" | tr \\\\n \\\\0 | xargs -0 -I{} cp \"{}\" ~\/foo\/bar"}
{"English":"Run command 'su whoami' on host 'remotehost'","Bash":"echo \"su whoami\" |ssh remotehost"}
{"English":"Remove all regular files named \"Waldo\" in the ~\/Books directory tree","Bash":"find ~\/Books -type f -name Waldo -exec rm {} \\;"}
{"English":"Change string \"searc\" to \"replace\" in all files in directory hierarchy","Bash":"find . -type f -exec sed -i 's\/searc\/replace\/g' {} \\;"}
{"English":"Find all .svn directories under current directory and delete them","Bash":"find . -type d -name \".svn\" -print | xargs    rm -rf"}
{"English":"Change the owner of \"destination_dir\" to \"user\"","Bash":"chown user destination_dir"}
{"English":"Remove `core' files whose status was changed more than 4 days ago","Bash":"find `pwd` -name core -ctime +4 -execdir \/bin\/rm -f {} \\;"}
{"English":"List environment variables and their values whose name matches '^\\w*X\\w*'","Bash":"set | grep -P '^\\w*X\\w*(?==)'"}
{"English":"Find and remove the .rhosts file in the \/home directory tree","Bash":"find \/home -name .rhosts -print0 | xargs -0 rm"}
{"English":"Search the current directory tree for hidden files skipping .htaccess","Bash":"find . -type f \\( -iname \".*\" ! -iname \".htaccess\" \\)"}
{"English":"Search the current directory for all files with no 'read' privilege for 'others'","Bash":"find . -maxdepth 1 ! -perm  -o=r"}
{"English":"List all *.txt files under current directory that contains the regex 'pattern'","Bash":"find . -type f -name '*.txt' -exec egrep -l pattern {} \\;"}
{"English":"Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames","Bash":"find . -name '*.txt' -exec grep 'sometext' '{}' \\; -print"}
{"English":"Write \"fifo forever\" infinitely using the named pipe \"fifo\" by writing its contents to standard output and to \"fifo\"","Bash":"echo \"fifo forever\" | cat - fifo | tee fifo"}
{"English":"Find all directories that start with stat","Bash":"find . -type d \u2013iname stat*"}
{"English":"Change the owner to \"owner\" and group to \"nobody\" of \"public_html\"","Bash":"chown owner:nobody public_html"}
{"English":"Find all files\/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time","Bash":"find . -name '*.[ch]' -exec grep $i {} | less"}
{"English":"create an archive using 7zhelper.sh as a compress program","Bash":"tar -I 7zhelper.sh -cf OUTPUT_FILE.tar.7z paths_to_archive"}
{"English":"Change permissions of all directories residing under and below .\/debian to 755","Bash":"find .\/debian -type d | xargs chmod 755"}
{"English":"Find all subdirectories of the current directory except hidden ones","Bash":"find -maxdepth 1 -type d ! -name \".*\""}
{"English":"Remove all \"core\" files that were last changed more than 4 days ago from the current directory tree","Bash":"find . -name core -ctime +4 -exec \/bin\/rm -f {} \\;"}
{"English":"Search for occurrences of string \"main(\" in the .c files from the current directory tree","Bash":"find . -name \"*.c\" -print | xargs grep \"main(\""}
{"English":"Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c","Bash":"find b -type f -cmin -5 -exec cp '{}' c \\;"}
{"English":"Prints path to the target of symbolic link 'relative\/path\/to\/file'","Bash":"dirname `readlink -e relative\/path\/to\/file`"}
{"English":"Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder .\/JUKEBOX","Bash":"find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE .\/JUKEBOX"}
{"English":"Find all hard links to file \/path\/to\/file that exist under the current directory tree","Bash":"find . -samefile \/path\/to\/file"}
{"English":"find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB","Bash":"find . -type f -mtime +356 -printf '%s\\n'  | awk '{a+=$1;} END {printf \"%.1f GB\\n\", a\/2**30;}'"}
{"English":"Print a randomly sorted list of numbers from 1 to 10 to file \"\/tmp\/lst\" and outputs \"-------\" followed by the reverse list to the screen","Bash":"seq 1 10 | sort -R | tee \/tmp\/lst |cat <(cat \/tmp\/lst) <(echo '-------') | tac"}
{"English":"create a backup of all the files which have been modified in the last 48 hours","Bash":"find source\/directory -ctime -2 | cpio -pvdm \/my\/dest\/directory"}
{"English":"Print the base name of the current working directory","Bash":"basename $(pwd)"}
{"English":"Find files\/directories that isn't owned by the user 'apache' under \/var\/www","Bash":"find \/var\/www ! -user apache -print0 | xargs -0"}
{"English":"Change permissions to 755 recursively only for directories","Bash":"find . -type d -exec chmod 755 {} \\;"}
{"English":"Infinitely print \"no\" to the screen","Bash":"yes no"}
{"English":"Set permissions of all files under \"\/opt\/lampp\/htdocs\" to 644","Bash":"find \/opt\/lampp\/htdocs -type f -exec chmod 644 {} \\;"}
{"English":"Change the permission to 0644 for all files under current directory","Bash":"find . -type f -exec chmod 0644 {} +"}
{"English":"Create a symbolic link named \"\/usr\/local\/bin\/subl\" to \"\/Applications\/Sublime Text 2.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"sudo ln -s \"\/Applications\/Sublime Text 2.app\/Contents\/SharedSupport\/bin\/subl\" \/usr\/local\/bin\/subl"}
{"English":"Print the date followed by the host name","Bash":"echo `date` `hostname`"}
{"English":"login as user root","Bash":"su -l"}
{"English":"Make directory \"mybuild\"","Bash":"mkdir mybuild"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory","Bash":"find var\/log\/ -iname anaconda.*"}
{"English":"Force create a hard link named \"non_secret_file.txt\" to \"secret_file.txt\"","Bash":"ln -f secret_file.txt non_secret_file.txt"}
{"English":"Remove trailing white spaces from all *.rb files under current directory","Bash":"find . -name '*.rb' | xargs -I{} sed -i '' 's\/[[:space:]]*$\/\/g' {}"}
{"English":"display all the files in the usr folder and those that are in the path local","Bash":"find \/usr\/ -path \"*local*\""}
{"English":"Find all directories under minimum 1 level down the current directory and set their permission to 755","Bash":"find  . -type d -mindepth 1 -print -exec chmod 755 {}\/* \\;"}
{"English":"Append the current date in '%d%m%Y-%H-%M' format, '_' and the current username, then save it in 'name' variable","Bash":"name=\"$(date +'%d%m%Y-%H-%M')_$(whoami)\""}
{"English":"Search the given $directory for files with permissions stored in $permissions","Bash":"find \"$directory\" -perm \"$permissions\""}
{"English":"Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.","Bash":"kill -HUP $( cat \/var\/run\/nginx.pid )"}
{"English":"Save the short DNS lookup output of $WORKSTATION to 'WORKSTATION_IP' variable","Bash":"WORKSTATION_IP=`dig +short $WORKSTATION`"}
{"English":"display all normal\/regular files in current  folder","Bash":"find . -type f"}
{"English":"Print the grand total disk usage of all files listed in \"files.txt\"","Bash":"cat files.txt | xargs du -c | tail -1"}
{"English":"Find all *.plist files\/directories under current directory","Bash":"find . -name \\*.plist"}
{"English":"Save IP addresses of the host name in variable \"ip\"","Bash":"ip=$(hostname -I)"}
{"English":"Search for 'mystring' in all *.txt (case insensitive) files under current directory","Bash":"find . -iname *.txt -exec egrep mystring \\{\\} \\;"}
{"English":"Show human-readable file type description of file \"\/mnt\/c\/BOOT.INI\"","Bash":"file \/mnt\/c\/BOOT.INI"}
{"English":"Extract the second-to-last slash-separated path component, ie. \"90_2a5\" in this case.","Bash":"echo 'test\/90_2a5\/Windows' | xargs dirname | xargs basename"}
{"English":"display all the regular\/normal files in the folder \/path\/ which have not been modified today ( from day start ie, 00:00 )","Bash":"find \/path\/ -type f -daystart -mtime +0"}
{"English":"Search for 'example' in all regular files from the current directory","Bash":"find -maxdepth 1 -type f | xargs grep -F 'example'"}
{"English":"Find all *.tex regular files under current directory","Bash":"find . -type f -name \"*.tex\""}
{"English":"Find all regular files named 'Waldo' under ~\/Books directory tree","Bash":"find ~\/Books -type f -name Waldo"}
{"English":"view the manual page of find","Bash":"man find"}
{"English":"Find all *.c files located under \/home and below","Bash":"find \/home -name \"*.c\""}
{"English":"Find file names *blast* in specfied directory, case insensitive","Bash":"find \/usr\/local -iname \"*blast*\""}
{"English":"Make DNS lookup for hostname stackoverflow.com","Bash":"dig stackoverflow.com"}
{"English":"Find all *.m4a files\/directories under \/home\/family\/Music directory","Bash":"find \/home\/family\/Music -name '*.m4a' -print0"}
{"English":"Write output and error of \"bash myscript.sh\" to standard output and to \"output.log\"","Bash":"bash myscript.sh 2>&1 | tee output.log"}
{"English":"Find all SUID files .","Bash":"find \/  -perm \/u=s"}
{"English":"Print list of file systems currently mounted.","Bash":"df -h |  awk '{print $1}'"}
{"English":"Print information about all users who are logged in","Bash":"who -la"}
{"English":"find all text files in current folder and trim the extra spaces in all lines in these files","Bash":"find . -type f -name '*.txt' -exec sed --in-place 's\/[[:space:]]\\+$\/\/' {} \\+"}
{"English":"Traverse the filesystem just once, listing setuid files and directories into \/root\/suid.txt and large files into \/root\/big.txt.","Bash":"find \/       \\( -perm -4000 -fprintf \/root\/suid.txt '%#m %u %p\\n' \\) , \\              \\( -size +100M -fprintf \/root\/big.txt  '%-10s %p\\n' \\)"}
{"English":"Create an empty file \"foo\" in each directory under the current directory containing a file named \"bar\".","Bash":"find -name \"bar\" -execdir touch foo \\;"}
{"English":"extract 'archive.tar.gz' to \/destination","Bash":"tar xzf archive.tar.gz -C \/destination"}
{"English":"find setuid files and directories writing the details to \/root\/suid.txt , and find large files writing the details to \/root\/big.txt, traversing the filesystem just once","Bash":"find \/ \\( -perm -4000 -fprintf \/root\/suid.txt '%#m %u %p\\n' \\) , \\  \\( -size +100M -fprintf \/root\/big.txt '%-10s %p\\n' \\)"}
{"English":"Remove the passphrase from user's ssh key without prompting.","Bash":"echo | ssh-keygen -P ''"}
{"English":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\\n'","Bash":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\\n'"}
{"English":"Calculate the md5 sum of every \".py\" file in directory tree \"\/path\"","Bash":"find \/path -type f -name \"*.py\" -exec md5sum \"{}\" +;"}
{"English":"Get from file 'File1.txt' strings starting with 'Q', extract only part of them following after '=' sign, and print which ones are not found in 'File2.txt'","Bash":"grep ^Q File1.txt | cut -d= -f2- | sort | comm -23 - <(sort File2.txt)"}
{"English":"Find all 50MB files","Bash":"find \/ -size 50M"}
{"English":"Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html'","Bash":"find . -type f \\( -name \"*cache\" -o -name \"*xml\" -o -name \"*html\" \\)"}
{"English":"find all the wav files in the current folder and do not search in the sub directories","Bash":"find . -name '*.wav' -maxdepth 1"}
{"English":"Search all regular files in the current directory for \"example\"","Bash":"find -maxdepth 1 -type f | xargs grep -F 'example'"}
{"English":"Print the names of all hidden regular files from the current directory","Bash":"find . -maxdepth 1 -type f -name '.*' -exec basename {} \\;"}
{"English":"Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file \"txtlist.txt\"","Bash":"ls *.txt | tee \/dev\/tty txtlist.txt"}
{"English":"Rename file extension '.andnav' to '.tile' for all files\/directories under current directory tree","Bash":"find . -name \"*.andnav\" | rename \"s\/\\.andnav$\/.tile\/\""}
{"English":"Interactively create a symbolic link in the current directory for \"$SCRIPT_DIR\/$FILE\"","Bash":"ln --symbolic --interactive $SCRIPT_DIR\/$FILE"}
{"English":"Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ","Bash":"find FOLDER1 -type f -print0 | xargs -0 -I % find FOLDER2 -type f -exec diff -qs --from-file=\"%\" '{}' \\+"}
{"English":"Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch","Bash":"source  <(date +\"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'\")"}
{"English":"Verbosely compresses all files on third and fourth depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*\/*"}
{"English":"Search the *.cc files in the current directory tree for string \"xxx\"","Bash":"find . -name \"*.cc\" | xargs grep \"xxx\""}
{"English":"Recursively change owner to \"amzadm\" and group to \"root\" of all files in \"\/usr\/lib\/python2.6\/site-packages\/awscli\/\"","Bash":"chown amzadm.root -R \/usr\/lib\/python2.6\/site-packages\/awscli\/"}
{"English":"Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries","Bash":"find -type f -printf \"%s %p\\n\" | sort -nr | head -n 4 | awk \"{print $2}\""}
{"English":"Find and compress all .pl files in the current directory tree","Bash":"find . -name \"*.pl\" | xargs tar -zcf pl.tar.gz"}
{"English":"extracts text between pattern1 and pattern2 if and only if the pattern1 is followed by pattern2","Bash":"tac infile | sed -ne '\/pattern2\/,\/pattern1\/ p' | tac -"}
{"English":"Search the current directory tree for .aux files","Bash":"find . -name \".aux\""}
{"English":"Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place","Bash":"find . -type f -maxdepth 1 -exec sed -i \"s\/$P_FROM\/$P_TO\/g\" {} \\;"}
{"English":"Display the number of regular files under current directory tree","Bash":"find . -type f -exec echo {} \\; | wc -l"}
{"English":"display all the \".c\" files in the current folder excluding those that are present in the .svn sub folder","Bash":"find .  -name .svn -prune -o -name \"*.c\" -print"}
{"English":"search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order","Bash":"find . -name '*.cpp' | sed -e 's\/\\\/[^\/]*$\/\/' | sort | uniq"}
{"English":"Print history with the first field removed","Bash":"history | awk '{sub($1, \"\", $0); sub(\/^[ \\t]+\/, \"\", $0); print}'"}
{"English":"Find hard links to the same file lpi104-6\/file1 in the directory tree lpi104-6","Bash":"find lpi104-6 -samefile lpi104-6\/file1"}
{"English":"display all the regular\/normal files in the current folder which are modified after a file","Bash":"find . -type f -newer \"$FILE\""}
{"English":"Split \"ADDRESSS_FILE\" into files containing at most 20 lines and prefix \"temp_file_\"","Bash":"split -l20 ADDRESSS_FILE temp_file_"}
{"English":"display all the files in the directory modules","Bash":"find . -name modules"}
{"English":"Search the current directory tree for files and directories called \"test\"","Bash":"find . -name test -print"}
{"English":"Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmp'","Bash":"tmp=$(mktemp -d $(dirname \"$1\")\/XXXXXX)"}
{"English":"search for all the files having spaces in the current folder and save the output to the variable founddata","Bash":"founddata=`find . -name \"filename including space\" -print0`"}
{"English":"Find all files in \"\/home\/\" which contain \"string1\", \"string2\" or the host name in its filename","Bash":"find \/home\/ -type f -regextype posix-extended -regex \".*(string1|string2|$(hostname)).*\""}
{"English":"Print all matching commands in $PATH for command \"python\"","Bash":"which -a python"}
{"English":"display all files in current folder which are bigger than 1 MB","Bash":"find . -size +1M"}
{"English":"list symbolic links under the directory \"$directory\" using contents of the $IFS variable between output of each one","Bash":"find $directory -type l -printf \"%p$IFS\""}
{"English":"Recursively finds all files with any cased text \"Text\" in a current folder, and precedes found string with its number in file.","Bash":"grep -inr \"Text\" folder\/to\/be\/searched\/"}
{"English":"Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable \"i\", waiting 1 second for a reply, and output only lines containing \"from\" to standard output.","Bash":"ping -W 1 -c 1 10.0.0.$i | grep 'from' &"}
{"English":"display all the regular files in the current folder that are less than 10KB","Bash":"find . -type f -size -10k"}
{"English":"Search the current directory tree for the files with extension \"trc\" and remove them if they are more than three days old","Bash":"find . -name \"*.trc\" -ctime +3 -exec rm {} \\;"}
{"English":"Find empty files and directories","Bash":"find . -empty"}
{"English":"Search the current directory tree for .log files containing the string \"The SAS System\" on the first line","Bash":"find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{\/The SAS System\/q0};q1' {} \\; -print"}
{"English":"Find file `Chapter1' on the system","Bash":"find \/ -name Chapter1 -type f -print"}
{"English":"Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )","Bash":"find \/ -type f -printf \"\\n%Ab %p\" | head -n 11 | sort -k1M"}
{"English":"Display the mount point of a device file \"$path\"","Bash":"mount | grep \"^$path\" | awk '{print $3}'"}
{"English":"Move all Emacs backup files from the current directory tree to ~\/backups\/","Bash":"find . -name '*~' -print 0 | xargs -0 -I % cp % ~\/backups"}
{"English":"Save a random 4 byte unsigned integer from \"\/dev\/urandom\" to variable \"RAND\"","Bash":"RAND=`od -t uI -N 4 \/dev\/urandom | awk '{print $2}'`"}
{"English":"find all the files in the current directory that have the extension \"bar\" and donot search in the subdirecotries directories.","Bash":"find . -name *.bar -maxdepth 2 -print"}
{"English":"search for all the \".c\" files in the folder \"\/home\/david\" which have been modified in the last 10 minutes","Bash":"find \/home\/david -mmin -10 -name '*.c'"}
{"English":"Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.","Bash":"find . -type f -ctime -3 | tail -n 5"}
{"English":"List all files\/directories under \/myfiles directory","Bash":"find \/myfiles -exec ls -l {} ;"}
{"English":"List all hidden regular files from the current directory separating them with zeroes","Bash":"find . -maxdepth 1 -type f -name '.*' -printf '%f\\0'"}
{"English":"display all text files in the folder \/tmp\/1","Bash":"find \"\/tmp\/1\" -iname \"*.txt\""}
{"English":"List all *.ogg files under your home directory along with their size","Bash":"find $HOME -name '*.ogg' -type f -exec du -h '{}' \\;"}
{"English":"Find all SGID set files in the file system","Bash":"find \/ -perm \/g=s"}
{"English":"display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .","Bash":"find . -size -26c -size +23c -exec ls -l '{}' \\;"}
{"English":"find files under the current directory containing a space in the filename and delete them","Bash":"find . -name \"* *\" -exec rm -f {} \\;"}
{"English":"Print the number of lines for each *.txt file from the $DIR directory tree","Bash":"find $DIR -name \"*.txt\" -exec wc -l {} \\;"}
{"English":"Print yesterday's date as yyy:mm:dd","Bash":"date +%Y:%m:%d -d \"yesterday\""}
{"English":"Find things changed today","Bash":"find \/path\/to\/search -daystart -ctime -1"}
{"English":"Unzip \"bigfile.txt.gz\" to standard output, search for patterns in \"patterns.txt\", and list the unique matches","Bash":"gunzip -c bigfile.txt.gz | grep -f patterns.txt | sort | uniq -c"}
{"English":"Gives longest '*.php' files with line count first, and excludes directories with \"libs\", \"tmp\", \"tests\" and  \"vendor\" in their paths.","Bash":"find . -name '*.php' | xargs wc -l | sort -nr | egrep -v \"libs|tmp|tests|vendor\" | less"}
{"English":"Find all files excluding *.gz files in the current directory tree and compress them with gzip","Bash":"find . -type f ! -name '*.gz' -exec gzip \"{}\" \\;"}
{"English":"List all leaf directories of the current directory tree","Bash":"find . -type d | sort | awk '$0 !~ last \"\/\" {print last} {last=$0} END {print last}'"}
{"English":"Delete all files under $DESTINATION directory tree that were modified more than 7 days ago","Bash":"find $DESTINATION -mtime +7 -exec rm {} \\;"}
{"English":"Copy the entire contents of the current directory preserving ownership, permissions, and times","Bash":"find . | cpio -pdumv \/path\/to\/destination\/dir"}
{"English":"Recursively finds all \"*.pas\" and \"*.dfm\" files and prints strings with \"searchtext\" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.","Bash":"find . -type f \\( -name \"*.pas\" -o -name \"*.dfm\" \\) -print0 | xargs --null grep --with-filename --line-number --no-messages --color --ignore-case \"searchtext\""}
{"English":"List all nfs mounts","Bash":"mount -l -t nfs4"}
{"English":"find all the symbolic links in the current folder and follow to the pointing file","Bash":"find -L"}
{"English":"Delete all regular files that have not been modified in the last 31 days under '\/path\/to\/junk\/files' directory tree","Bash":"find \/path\/to\/junk\/files -type f -mtime +31 -exec rm -f {} \\;"}
{"English":"Create directorie(s) 'some\/path' as required in the current directory","Bash":"mkdir -p .\/some\/path"}
{"English":"Print space separated list of numbers from \"$start\" to \"$end\"","Bash":"seq -s' ' $start $end"}
{"English":"Creates random file name formatted like expression in variable ${str\/\/ \/X} and saves it in 'rand_str' variable.","Bash":"rand_str=$(mktemp --dry-run ${str\/\/ \/X})"}
{"English":"Calculate the md5 sum of the file \"filename\" and print only the hash","Bash":"md5sum filename |cut -f 1 -d \" \""}
{"English":"Archive \"somedir\/.\/foo\/bar\/baz.c\" to \"remote:\/tmp\/\" preserving the relative path of \"foo\/bar\/baz.c\"","Bash":"rsync -avR somedir\/.\/foo\/bar\/baz.c remote:\/tmp\/"}
{"English":"Make directories to \"\/tmp\/test\/blah\/oops\/something\" as needed","Bash":"mkdir -p \/tmp\/test\/blah\/oops\/something"}
{"English":"Find all directories in the current directory tree with \"music_files\" in their names","Bash":"find . -type d -iname \\*music_files\\*"}
{"English":"Pushes current folder to the directory stack.","Bash":"pushd $PWD"}
{"English":"Locate OGG files under the home directory larger than 100 megabytes","Bash":"find $HOME -iname '*.ogg' -size +100M"}
{"English":"find all the core files in the entire file system and  delete them","Bash":"find \/ -name core -exec rm -f {} \\;"}
{"English":"find all the patch files in current folder and copy them to separate folder patches","Bash":"find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches\/"}
{"English":"Find all directories under current directory tree that were modified $FTIME days ago","Bash":"find . -type d -mtime $FTIME"}
{"English":"Use \"vagrant-ssh\" as the config file and ssh into \"default\" host","Bash":"ssh -F vagrant-ssh default"}
{"English":"search for the file, filename.txt in the folder \/home","Bash":"find \/home -name filename.txt"}
{"English":"Print a space separated list of numbers from 1 to 10","Bash":"seq 10 | xargs"}
{"English":"Open all files named 'filename' with 'nano' editor in the entire filesystem","Bash":"find \/ -name filename -exec nano '{}' \\;"}
{"English":"Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them","Bash":"find -d MyApp.app -name Headers -type d -exec rm -rf \"{}\" \\;"}
{"English":"Find all files\/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents","Bash":"find . -name \"*.pdf\" -print | grep -v \"^\\.\/pdfs\/\""}
{"English":"List all regular files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 -type f | xargs ls -l"}
{"English":"Find all files that have additional permissions","Bash":"find \/ -perm -644"}
{"English":"Counts lines with all-cased word 'null' in file 'myfile.txt'.","Bash":"grep -n -i null myfile.txt | wc -l"}
{"English":"Find all files\/directories that are owned by user 'takuya' under current directory tree","Bash":"find -user takuya"}
{"English":"Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files","Bash":"find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}
{"English":"Delete all the files found in the current directory tree whose names begin with \"heapdump\"","Bash":"find . -name heapdump* -exec rm {} \\ ;"}
{"English":"SSH into host \"server\" as user \"user\"","Bash":"ssh user@server"}
{"English":"display all hidden files in the current folder","Bash":"find . -type f -name \".*\""}
{"English":"Split \"INPUT_FILE_NAME\" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix \"input.part.\"","Bash":"split -b 500M -d -a 4 INPUT_FILE_NAME input.part."}
{"English":"Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.","Bash":"find \/home\/tecmint\/Downloads\/ -type f -printf \"%s %p\\n\" | sort -rn | head -n 5"}
{"English":"Show a long listing of the latest file or directory under current directory","Bash":"ls -lrt | tail -n1"}
{"English":"Print file system disk space usage with a grand total","Bash":"df --total"}
{"English":"Print the list of the subdirectories of the current directory","Bash":"find . -mindepth 1 -maxdepth 1 -type d -printf \"%P\\n\""}
{"English":"Gets IP address of 'en0' network interface.","Bash":"ifconfig en0 | awk '\/inet addr\/{print substr($2,6)}'"}
{"English":"Create symbolic links in current directory for all files located in \"dir\" directory and have filename extension \"jpg\"","Bash":"find dir -name '*.jpg' -exec ln -s \"{}\" \\;"}
{"English":"Find all files\/directories under '\/usr' directory tree that have not been modified in the last 356 days counting days from today","Bash":"find \/usr -mtime +356 -daystart"}
{"English":"Read a line from standard input into variable \"REPLY\" with prompt \"$*\"","Bash":"read -p \"$*\""}
{"English":"search for *.log files starting from \/","Bash":"find \/ -name \"*.log\""}
{"English":"Compress all files under \/source directory tree using gzip with best compression method","Bash":"find \/source -type f -print0 | xargs -0 -n 1 -P $CORES gzip -9"}
{"English":"remove all the files in current folder which have the extension \"DS_Store\"","Bash":"find . -name \".DS_Store\" -exec rm {} \\;"}
{"English":"find all files in the current directory do not display the files which are not readable","Bash":"find . ! -readable -prune"}
{"English":"Remove all .sh files in the current directory tree whose names begin with \"t\"","Bash":"find . -name \"t*.sh\" -exec rm -vf '{}' \\;"}
{"English":"Send 4 ping packets of size 2 to \"www.google.com\" on a Solaris machine","Bash":"ping -s www.google.com 2 4"}
{"English":"Print reverse lookup for adress 127.0.0.1","Bash":"dig -x 127.0.0.1"}
{"English":"search for a word in all the regular\/normal files in the current folder and display the filename along with the matched text","Bash":"find . -type f -exec grep -l linux {} \\;"}
{"English":"Print the difference between line 2 and 3 in file \"$f\"","Bash":"diff <(fold -w1 <(sed '2q;d' $f)) <(fold -w1 <(sed '3q;d' $f)) | awk '\/[<>]\/{printf $2}'"}
{"English":"Find all files in the current directory tree that are newer than some_file","Bash":"find . -newer some_file"}
{"English":"find all the files that have not been modified in the last 24 hours","Bash":"find \/tmp\/test\/* -mtime +1"}
{"English":"Search all files and   directories either of the directory \/home\/oracle and  \/home\/databse which  contain the \"zip\"  anywhere in the files or directory name .","Bash":"find \/home\/oracle \/home\/database -name '*zip*'"}
{"English":"Display the contents of \"myfile\" located in the current directory.","Bash":"cat myfile"}
{"English":"Removes everything from current folder but '*ddl*' and '*docs*' files.","Bash":"ls -1|grep -v -e ddl -e docs| xargs rm -rf"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn -exec rm -rf {} +"}
{"English":"create directory \/etc\/cron.15sec","Bash":"mkdir \/etc\/cron.15sec"}
{"English":"Print all unique file paths under \"dir1\" compared to \"dir2\"","Bash":"comm -23 <(find dir1 -type f | sed 's\/dir1\/\\\/\/'| sort) <(find dir2 -type f | sed 's\/dir2\/\\\/\/'| sort) | sed 's\/^\\\/\/dir1\/'"}
{"English":"Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http:\/\/example.com","Bash":"sed -n 's;\\(http:\/\/[^\/]*\\)\/.*;\\1;p'"}
{"English":"Print the content of the file 'file' deleting the last four lines","Bash":"nl -b a file | sort -k1,1nr | sed '1, 4 d' | sort -k1,1n | sed 's\/^ *[0-9]*\\t\/\/'"}
{"English":"Pipe output of \"yes\" to \"more\" and append the first 3 lines to \"file\"","Bash":"yes | awk 'FNR<4 {print >>\"file\"; close(\"file\")}  1' | more"}
{"English":"Find all files under and below \/dir that were changed or created less than 60 minutes ago","Bash":"find \/dir -cmin -60"}
{"English":"search for all the files in the current folder which have spaces and force delete them","Bash":"find . -name \"filename including space\" -print0 | xargs -0 rm -rdf"}
{"English":"Print file extension assuming there is only one dot in the file name.","Bash":"echo \"$FILE\" | cut -d'.' -f2"}
{"English":"Look for files with wide open permissions","Bash":"find . -type f  -perm a=rwx -exec ls -l {} \\;"}
{"English":"Print numbers from 1 to 5 without separating spaces and without a newline","Bash":"seq 5 | awk '{printf \"%s\", $0}'"}
{"English":"Find files bigger than 20 megabytes in the home directory tree","Bash":"find ~ -size +20M"}
{"English":"Go to first directory specified in PATH which contains the command 'oracle'","Bash":"cd $(which oracle | xargs dirname)"}
{"English":"list PID of a group leader","Bash":"jobs -lp"}
{"English":"find all the files in the entire file system that have been modified between 50 to 100 days and display ten files","Bash":"find \/ -mtime +50 -mtime -100 | head"}
{"English":"Search directory trees \/usr\/local\/man and \/opt\/local\/man for files whose names begin with 'my'","Bash":"find \/usr\/local\/man \/opt\/local\/man -name 'my*'"}
{"English":"Find all files\/directories with execute permission by group or others","Bash":"find \/path -perm \/011"}
{"English":"Cuts off last part from the path $dir, and deletes resulted folder if empty.","Bash":"rmdir \"$(dirname $dir)\""}
{"English":"find all the files ending with \".sh\" in the folder \/dir excluding those wth the names foo and bar.","Bash":"find \/dir \\( -name foo -prune \\) -o \\( -name bar -prune \\) -o -name \"*.sh\" -print"}
{"English":"Find all Makefile's in the current directory tree and look for line 235 in each of them","Bash":"find . -name Makefile -print0 | xargs -0 grep -nH $ | grep :235:"}
{"English":"find all files in \/usr\/bin and run the \"file\" command on them.","Bash":"find \/usr\/bin | xargs file"}
{"English":"List all files\/directories under current directory","Bash":"find ."}
{"English":"Print space separated numbers from 1 to 10","Bash":"seq 10 | xargs echo"}
{"English":"display the base name(name without extension) of all the \".flac\" files in the current folder","Bash":"find . -name \"*.flac\" -exec basename \\{\\} .flac \\;"}
{"English":"Find files in the current directory tree which have permissions rwx for user and rw for group and others","Bash":"find . -perm 766"}
{"English":"Find all files\/directories under current directory and append a null character at the end of each path","Bash":"find -print0"}
{"English":"create a symbolic link with absolute path \"\/cygdrive\/c\/Program Files\" to file \"\/cygdrive\/c\/ProgramFiles\"","Bash":"ln -s \"\/cygdrive\/c\/Program Files\" \/cygdrive\/c\/ProgramFiles"}
{"English":"Search the current directory tree for TXT files skipping hidden ones","Bash":"find . -type f \\( -iname \"*.txt\" ! -iname \".*\" \\)"}
{"English":"Download \"Louis Theroux's LA Stories\" using rsync over ssh","Bash":"rsync -ave ssh '\"Louis Theroux\"''\"'\"'\"'\"''\"s LA Stories\"'"}
{"English":"Search the system for files and directories owned by group `managers'","Bash":"find \/ -group managers -print"}
{"English":"search in the current folder for all the directories with the name \"test\"","Bash":"find . -type d -name test"}
{"English":"Print only printable characters from \"\/dev\/urandom\"","Bash":"cat \/dev\/urandom | tr -dC '[:graph:]'"}
{"English":"Remove files whose names start with `Foo'","Bash":"find . -type f -name \"Foo*\" -exec rm {} \\;"}
{"English":"Search the current directory tree for .rb files ignoring .vendor directories","Bash":"find . -name .vendor -prune -o -name '*.rb' -print"}
{"English":"Rename all .jpg files to .jpeg under the current directory and below","Bash":"find  | rename 's\/\\.jpg$\/.jpeg\/'"}
{"English":"delete all the files in the current folder  which do not belong to any user","Bash":"find \/ -nouser -exec rm {}\\;"}
{"English":"Find recursively all regular .txt files in the current directory tree except README.txt","Bash":"find . -type f -name \"*.txt\" ! -name README.txt -print"}
{"English":"Find regular files modified within the last 7 days","Bash":"find . -mtime -7 -type f"}
{"English":"Print \"deb http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu precise main\" and append to file \"\/etc\/apt\/sources.list\"","Bash":"echo \"deb http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu precise main\" | tee -a \/etc\/apt\/sources.list"}
{"English":"Find all files with '.conf' extension under '\/etc' directory going into at most 2 level deep and show the last 10 of them","Bash":"find \/etc -maxdepth 2 -name \"*.conf\" | tail"}
{"English":"Recursively copy all files and directories in \"demo\" excluding \".git\" to \"demo_bkp\"","Bash":"find demo -depth -name .git -prune -o -print0 | cpio -0pdv --quiet demo_bkp"}
{"English":"display the count of number of files in the current folder","Bash":"find | wc -l"}
{"English":"The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.","Bash":"find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}
{"English":"find all the text files in the home directory","Bash":"find ~\/ -name '*.txt'"}
{"English":"Read a line of standard input into variable \"_command\" with the prompt as the current working directory followed by \"$\"","Bash":"read -p \"`pwd -P`\\$ \" _command"}
{"English":"search for the word \"redeem reward\" in all the regular\/normal files in the current folder","Bash":"find . -type f -exec grep -i \u201credeem reward\u201d {} \\; -print"}
{"English":"","Bash":""}
{"English":"Find all Read Only files in the file system","Bash":"find \/ -perm \/u=r"}
{"English":"display the contents of all the files in the current folder which start with test ( case insensitive search )","Bash":"find . -iname '*test*' -exec cat {} \\;"}
{"English":"Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under the current directory and below ignoring SVN files","Bash":"find . \\( ! -regex '.*\/\\..*' \\) -type f -print0 | xargs -0 sed -i 's\/subdomainA.example.com\/subdomainB.example.com\/g'"}
{"English":"search for all the files in the current directory which have the name a.out or core or which end with .o and delete them.","Bash":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}
{"English":"Print lines in \"file1.txt\" that do not exist in \"file2.txt\"","Bash":"sort <(sort -u file1.txt) file2.txt file2.txt | uniq -u"}
{"English":"Find all regular files starting from level 3 of directory tree ~\/container and move them one level up","Bash":"find ~\/container  -mindepth 3 -type f  -execdir mv \"{}\" $(dirname \"{}\")\/.. \\;"}
{"English":"Copy a large sparse file \"sparse-1\" to \"sparse-1-copy\"","Bash":"rsync --sparse sparse-1 sparse-1-copy"}
{"English":"Extracts a bz2 file.","Bash":"bunzip2 file.bz2"}
{"English":"Split the output of \"ls\" into files of at most 500 lines each with prefix \"outputXYZ.\"","Bash":"ls | split -l 500 - outputXYZ."}
{"English":"Save the current user name in variable \"myvariable\"","Bash":"myvariable=$(whoami)"}
{"English":"recursively change owner of the directory \/usr\/local\/lib\/node_modules\/ to the current user","Bash":"sudo chown -R $USER \/usr\/local\/lib\/node_modules"}
{"English":"search for all regular\/normal files in the current folder and display the number of lines in the file","Bash":"find . -type f -print | xargs -L1 wc -l"}
{"English":"find the file with the name \"esxcfg-firewall\" in the current folder","Bash":"find -print | grep esxcfg-firewall"}
{"English":"Find files containing string \"#!\/bin\/ksh\" and append their names and matching strings to \/tmp\/allfiles","Bash":"find . -type f -print | xargs \/usr\/bin\/grep -il 'bin\/ksh' | tee \/tmp\/allfiles"}
{"English":"search for all the mp3 files in the file system and move them to the folder \/mnt\/mp3","Bash":"find \/ -iname \"*.mp3\" -exec mv {} \/mnt\/mp3 \\;"}
{"English":"List all *.txt files\/directories under current directory","Bash":"find . -name *.txt -exec ls {} \\;"}
{"English":"Look for any files that were modified 2-5 days ago","Bash":"find -mtime +2 -mtime -5"}
{"English":"find a specfic video file in the current directory","Bash":"find .\/ -name \"foo.mp4\" -exec echo {} \\;"}
{"English":"Find text in whole directory tree","Bash":"find . -type f | xargs grep \"text\""}
{"English":"Remove all .tmp files in and below \/tmp","Bash":"find \/tmp -name \"*.tmp\" | xargs rm"}
{"English":"display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems","Bash":"find \/ -nouser \\( -fstype jfs -o -fstype jfs2 \\) -ls"}
{"English":"Find all level 1 subdirectories of the current directory","Bash":"find . -maxdepth 1 -type d"}
{"English":"Search the current directory for files whose names start with \"messages.\" ignoring SVN, GIT, and .anythingElseIwannaIgnore files","Bash":"find . -type f -print0 | xargs -0 egrep messages. | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'"}
{"English":"Print each line in \"file1\" and file2\" separated by tabs and \"file3\" separated by a space","Bash":"paste -d\" \" file1 file2 | paste -d'|' - file3 | sed 's,|, ,g'"}
{"English":"Eliminates partially duplicate lines by column, keeping the last occurrence","Bash":"tac temp.txt | sort -k2,2 -r -u"}
{"English":"Find files in the current directory tree whose pathnames contain \"sub\"","Bash":"find .\/ | grep \"sub\""}
{"English":"Search all the regular files in the current directory tree for \"example\"","Bash":"find -type f -print0 | xargs -r0 grep -F 'example'"}
{"English":"search all the files in the current folder using name patterns","Bash":"find . -name 'a(b*' -print"}
{"English":"Count all the lines of code in all php files in current directory recursively","Bash":"find . -name \"*.php\" | xargs grep -v -c '^$' | awk 'BEGIN {FS=\":\"} { $cnt = $cnt + $2} END {print $cnt}'"}
{"English":"Find all regular files residing in the current directory tree and search them for string \"\/bin\/ksh\"","Bash":"find . -type f -print | xargs grep -i 'bin\/ksh'"}
{"English":"Find all files named \"something\" in the current folder and below and run them through the ls -l command, one by one.","Bash":"find . -name something -exec ls -l {} \\;"}
{"English":"Print the list of all files under the current directory and below","Bash":"find ."}
{"English":"Update the timestamp of '\/tmp\/$$' to the current month and day","Bash":"touch -t `date +%m%d0000` \/tmp\/$$"}
{"English":"Find regular files whose names end in .JPG","Bash":"find . -type f -name \"*.JPG\""}
{"English":"Find all files\/directories under current directory tree that belong to user 'john'","Bash":"find . -user john"}
{"English":"find all normal\/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and move them to  temp folder","Bash":"find . -maxdepth 1 -type f  -name '*~' -exec mv {} \/tmp\/ \\;  -or  -name '#*#' -exec mv {} \/tmp\/ \\;"}
{"English":"Make directory \"dir1\"","Bash":"mkdir dir1"}
{"English":"Find all *.ext files\/directories under current directory and print their path and parent directory path","Bash":"find \/path -type f -name \"*.ext\" -printf \"%p:%h\\n\""}
{"English":"Set permissions to 660 for all regular files in the current directory tree","Bash":"find . -type f -exec chmod 0660 {} +"}
{"English":"Find all files\/directories named 'testfile.txt' under current directory tree","Bash":"find . -name testfile.txt"}
{"English":"Save the user name of the current user to variable \"me\"","Bash":"me=$(whoami)"}
{"English":"Find every vim undo file in the current directory tree","Bash":"find -type f -iname '*.un~'"}
{"English":"find and image in current folder (case insensitive search)","Bash":"find . -iname \"Articles.jpg\""}
{"English":"Print the files under current directory twice per line","Bash":"find . -type f -exec echo {} {} \\;"}
{"English":"create directory \/cpuset","Bash":"mkdir \/cpuset"}
{"English":"Remove all tmp\/*.mp3 files","Bash":"find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs -n1 rm"}
{"English":"Display the content of YourFile.txt, waiting for user input at each page.","Bash":"cat YourFile.txt | more"}
{"English":"display all the directories in the folder \/var and do not go beyond 2 levels during search","Bash":"find \/var -maxdepth 2 -type d;"}
{"English":"Delete all directories found in $LOGDIR that are more than a work-week old","Bash":"find $LOGDIR -type d -mtime +5 -exec rm -rf {} \\;"}
{"English":"Find regular files matching pattern \"*oraenv*\" and excecute the \"file\" utility for each of them","Bash":"find . -name \"*oraenv*\" -type f -exec file {} \\;"}
{"English":"Archive \"src-dir\" to \"dest-dir\" on \"remote-user@remote-host\" and delete any files in \"dest-dir\" not found in \"src-dir\"","Bash":"rsync -av --delete src-dir remote-user@remote-host:dest-dir"}
{"English":"Creates temporary file name and saves path to it in 'TMP_FILE' variable.","Bash":"TMP_FILE=\"$(mktemp -t)\""}
{"English":"Find all files\/directories containing the case insensitive string something' in their names under current directory tree","Bash":"find . -iname '*something*'"}
{"English":"forcible create a symbolic link named \"\/etc\/file.conf\" to file \"\/etc\/configuration\/file.conf\"","Bash":"ln -fs \/etc\/configuration\/file.conf \/etc\/file.conf"}
{"English":"Calculate md5 sum of file $ecriv","Bash":"md5sum \"$ecriv\""}
{"English":"find the depth of all the files in current folder and display the depth and file name","Bash":"find folder1\/ -depth -type f -printf \"%d\\t%p\\n\""}
{"English":"Search all variables and their values for \"NAME\"","Bash":"env | grep NAME"}
{"English":"Move all files including hidden files and excluding \"..\" in \"\/path\/subfolder\/\" to \"\/path\/\"","Bash":"mv \/source\/path\/{.[!.],}* \/destination\/path"}
{"English":"Decompress \"path\/to\/test\/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 line limit","Bash":"gzip -dc path\/to\/test\/file.gz | grep -P --regexp='my regex' | split -dl1000000 - file"}
{"English":"Move all files and directories not starting with \"l\" in \"\/mnt\/usbdisk\" to \"\/home\/user\/stuff\/.\"","Bash":"mv \/mnt\/usbdisk\/[^l]* \/home\/user\/stuff\/."}
{"English":"Remove all files from the current directory tree whose names do not match regular expression \"excluded files criteria\"","Bash":"find . | grep -v \"excluded files criteria\" | xargs rm"}
{"English":"Get directory listing of URL $1 and save them to variable 'header' by deleting '\\r' characters","Bash":"header=\"$(curl -sI \"$1\" | tr -d '\\r')\""}
{"English":"Find all files\/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree","Bash":"find . -iname '*blah*' -mtime -2"}
{"English":"Print linker search path using gcc formatted on new lines","Bash":"gcc -print-search-dirs | sed '\/^lib\/b 1;d;:1;s,\/[^\/.][^\/]*\/\\.\\.\/,\/,;t 1;s,:[^=]*=,:;,;s,;,;  ,g' | tr \\; \\\\012"}
{"English":"Find all read-only files","Bash":"find \/ -perm \/u=r"}
{"English":"Search for 'string_to_find' in all files under current directory","Bash":"find -type f | sed 's\/.\/\\\\&\/g' | xargs grep string_to_find"}
{"English":"recursively look for files ending in either .py or .py.server","Bash":"find . -type f -regex \".*\\.\\(py\\|py\\.server\\)\""}
{"English":"View the bash manpage, starting with the view positioned at the first occurrence of the expression \"BASH_SOURCE\".","Bash":"man bash | less -p BASH_SOURCE"}
{"English":"Make directories for each line in \"folder_list.txt\"","Bash":"cat folder_list.txt | xargs mkdir"}
{"English":"Make directory \"\/data\/db\"","Bash":"sudo mkdir \/data\/db"}
{"English":"Search the current directory tree for an html file having the text 'Web sites' in it","Bash":"find . -type f -iname \\*.html -exec grep -s \"Web sites\" {} \\;"}
{"English":"Find all files\/directories case insensitively containing 'xt' in their names under '\/etc' directory tree","Bash":"find \/etc -iregex '.*xt.*'"}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -exec \/bin\/rm {} \\;"}
{"English":"display all the hidden files in the folder \/home","Bash":"find \/home -name \".*\""}
{"English":"Change permissions to 644 of multiple files with permissions 755","Bash":"find . -perm 755 -exec chmod 644 {} \\;"}
{"English":"Find all *.rb (regular) files under current directory","Bash":"find . -name \"*.rb\" -type f"}
{"English":"Find files using file-name","Bash":"find -iname \"MyCProgram.c\""}
{"English":"Find all files\/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern","Bash":"find . -name 'test*' -prune"}
{"English":"Prints the absolute directory path of the current script preceded by the string \"dirname\/readlink: \"","Bash":"echo \"dirname\/readlink: $(dirname $(readlink -f $0))\""}
{"English":"delete all the files in the current folder","Bash":"find . -delete"}
{"English":"Print directories in the the current directory as a list with no report information","Bash":"tree -d -L 1 -i --noreport"}
{"English":"find all the html files in the current folder which have been modified excatly 7 days before","Bash":"find . -mtime 7 -name \"*.html\" -print"}
{"English":"Remove files in the current directory tree modified more than 31 days ago recursively","Bash":"find . -type f -mtime +31 -print0 | xargs -0 -r rm -f"}
{"English":"Lists content of compressed text file.","Bash":"zless MyFile"}
{"English":"Search the \/usr\/local\/doc directory tree for .texi files","Bash":"find \/usr\/local\/doc -name '*.texi'"}
{"English":"show the disk use of all the regular\/normal files in the file system which are bigger than 100MB","Bash":"find \/ -type f -size +100M | xargs du -sh"}
{"English":"Mount a read only ntfs filesystem","Bash":"mount -t ntfs"}
{"English":"Recursively add read and execute permissions to all files and folders in \"directory\"","Bash":"chmod -R +xr directory"}
{"English":"delete all the files which start with \"Tes\" in the current folder","Bash":"find . -type f -name \"Tes*\" -exec rm {} \\;"}
{"English":"Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory","Bash":"find -L -maxdepth 1 -name 'upvoter-*' -type f -perm \/111"}
{"English":"Print the first line and lines with \"f\" as the third \",\" separated field in \"input\" and format the result as a \",\" delimited table","Bash":"awk -F, '{ if (NR == 1)print}{if($3 == \"f\")print}' input | column -t -s,"}
{"English":"find files in $HOME ending in \"txt\" or \"html\" and case insensitive search for the word \"vpn\"","Bash":"find $HOME \\( -name \\*txt -o -name \\*html \\) -print0 | xargs -0 grep -li vpn"}
{"English":"search for all the .o files in the current directory which have permisssions 664 and print them.","Bash":"find . -name *.o -perm 664 -print"}
{"English":"search for the directory testdir in the folder \/home","Bash":"find \/home -type d -name testdir"}
{"English":"Find all 777 permission files and use chmod command to set permissions to 644","Bash":"find \/ -type f -perm 0777 -print -exec chmod 644 {} \\;"}
{"English":"dispaly all the empty regular\/normal files in the current folder","Bash":"find . -type f -empty"}
{"English":"display all the files in the current folder which are present in the path \".\/src\/emacs\"","Bash":"find . -path '.\/src\/emacs' -prune -o -print"}
{"English":"list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3","Bash":"find . -name '*.js' | grep -v excludeddir | grep -v excludedir2 | grep -v excludedir3"}
{"English":"Copy all regular files from the current directory tree to directory `TARGET'","Bash":"find . -type f -exec cp -t TARGET {} \\+"}
{"English":"Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'","Bash":"ARGS=\"--ignore `echo ${TO_IGNORE[@]} | tr ' ' ','`\""}
{"English":"Delete all the .c files present in the current directory and below","Bash":"find . -name \"*.c\" | xargs rm -f"}
{"English":"Recursively change the owner and group of all files in \"public_html\" to \"owner\"","Bash":"chown -R owner:owner public_html"}
{"English":"Search \"file1\" for lines matching regex patterns listed in \"file2\" and list the unique results (sorted alphabetically)","Bash":"grep -f file2 file1 | sort -u"}
{"English":"find all the files in the current folder that have not been modified in the last 24*3 hours","Bash":"find .\/ -mtime +3"}
{"English":"Make directory \"temp\"","Bash":"mkdir temp"}
{"English":"Calculate md5 checksum of '\/etc\/localtime' and save the first space separated part in variable 'checksum'","Bash":"checksum=`md5sum \/etc\/localtime | cut -d' ' -f1`"}
{"English":"Calculate the total size of all *.jpg files in the directory tree","Bash":"find . -name \"*jpg\" -exec du -k {} \\; | awk '{ total += $1 } END { print total\/1024 \" Mb total\" }'"}
{"English":"Set 444 permission to all regular files under current directory","Bash":"find . -type f -print | xargs chmod 444"}
{"English":"Removes 'foo' file.","Bash":"rm foo"}
{"English":"Print amount of space available on the file system containing path to the current working directory in megabytes.","Bash":"df . -B MB | tail -1 | awk {'print $4'} | grep  .[0-9]*"}
{"English":"Find all regular files under ${S} directory","Bash":"find \"${S}\" -type f"}
{"English":"Stores date of last month day in the 'lastdaymonth' variable.","Bash":"set lastdaymonth=`cal $month $year  |tr -s \" \" \"\\n\"|tail -1`"}
{"English":"Find all files under current directory whose file type description contains \"image\", display the paths to files and file type descriptions.","Bash":"find . -name '*' -exec file {} \\; | grep -o -P '^.+: \\w+ image'"}
{"English":"Display inputfile all on one line (replace newlines by spaces)","Bash":"awk 1 ORS=' ' file"}
{"English":"find all files in current folder which are bigger than 1 MB and move them to another folder","Bash":"find . -size +1M -exec mv {} files \\+"}
{"English":"Find all the files that end with the extension \u201c.java\u201d in the current directoy tree","Bash":"find . -name \"*.java\""}
{"English":"Read 10 bytes from $0 and print them by replacing the set '\\000-\\377' with '#'","Bash":"head -c 10 \"$0\" | tr '\\000-\\377' '#'"}
{"English":"search for a cpp directory in current folder and display all its files","Bash":"find . -type d -name \"cpp\" -exec find {} -type f \\;"}
{"English":"display the help of find command","Bash":"find --help"}
{"English":"find all the files that are modified in the last 7 days","Bash":"find -daystart -mtime -7"}
{"English":"display all the regular\/normal files in the current directory which are atleast 2 levels deep","Bash":"find . -mindepth 2 -type f"}
{"English":"List path\/filename of all PHP files under current directory whose file type description or path\/name contains \"CRLF\"","Bash":"find . -type f -iname \"*.php\"  -exec file \"{}\" + | grep CRLF"}
{"English":"Recursively removes all files and folders that match pattern '\/usr\/local\/{lib\/node{,\/.npm,_modules},bin,share\/man}\/npm*'","Bash":"rm -rf \/usr\/local\/{lib\/node{,\/.npm,_modules},bin,share\/man}\/npm*"}
{"English":"Find files named tecmint.txt  of owner root in the entire file system","Bash":"find \/ -user root -name tecmint.txt"}
{"English":"List all files and directories residing in the current directory and below","Bash":"find -print0 | xargs -0 ls"}
{"English":"Find all files\/directories under current directory tree excluding hidden files\/directories","Bash":"find . -not -path '*\/\\.*'"}
{"English":"List the names of all files under current directory","Bash":"find . -type f -exec basename {} \\;"}
{"English":"Locate all *.csv files under the current directory tree","Bash":"find . -name \"*.csv\""}
{"English":"Send SIGHUP (hangup) signal to all parents of zombie processes.","Bash":"kill -HUP $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2 }')"}
{"English":"Go to directory named \"~\" (not home directory)","Bash":"cd \"~\""}
{"English":"find all the text files in current folder and force delete them","Bash":"find . -name \"*.txt\" | xargs rm -rf"}
{"English":"Remount \"\/system\" with read and write permission","Bash":"mount -o rw,remount \/system"}
{"English":"Print \"file1.txt\" \"file2.txt\" and \"file3.txt\" with filename headers","Bash":"tail -n +1 file1.txt file2.txt file3.txt"}
{"English":"Print a welcome message with the current user's user name","Bash":"echo \"Welcome `whoami`!\""}
{"English":"Create an empty index.html, or update its timestamp if it already exists.","Bash":"touch index.html"}
{"English":"find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )","Bash":"find . -iname '*.txt' -type f -exec sed -i '' 's\/[[:space:]]\\{1,\\}$\/\/' {} \\+"}
{"English":"display all the files in the home folder excluding directories which have been modified in the last 24 hours","Bash":"find \/home\/ -mtime -1 \\! -type d"}
{"English":"Find all files\/directories named 'findcommandexamples.txt' (case insensitive) in the entire filesystem","Bash":"find  \/ -iname findcommandexamples.txt"}
{"English":"Get the total sizes of all files under current directory","Bash":"find . -type f -printf '%p %s\\n' | awk '{ sum+=$2}; END { print sum}'"}
{"English":"Find all files\/directories under $1 which have at least write permission for their owner and set write permission for group for these files\/directories","Bash":"find \"$1\" -perm -u+w -print0 | xargs chmod g+w"}
{"English":"Print the number of 'processors' (both physical and virtual\/hypethereading cores) less 1.","Bash":"cat \/proc\/cpuinfo | awk '\/^processor\/{print $3}' | tail -1"}
{"English":"Recursively rename all files under \/your\/target\/path replacing 'special' with 'regular' - all file\/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.","Bash":"find \/your\/target\/path\/ -type f -exec rename 's\/special\/regular\/' '{}' \\;"}
{"English":"Make directory \"~\/practice\"","Bash":"mkdir ~\/practice"}
{"English":"Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files","Bash":"find ${x} -type f -exec chmod ug=rw,o= '{}' \\;"}
{"English":"Count all the lines of all php files in current directory recursively","Bash":"find -name '*.php' | xargs cat | wc -l"}
{"English":"Find all files\/directories with '.xml' extension that start with 'log4j' in their names under '\/cygdrive\/e\/MyDocs\/Downloads\/work\/OATS Domain related\/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames","Bash":"find \"\/cygdrive\/e\/MyDocs\/Downloads\/work\/OATS Domain related\/\" -iname \"log4j*.xml\" | xargs -I % grep -ilr \"CONSOLE\" \"%\" | xargs -I % grep -H \"ASYNC\" %"}
{"English":"Remove all *.doc files from the current directory tree","Bash":"find . -name '*.doc' -exec rm \"{}\" \\;"}
{"English":"display the name and size of all the regular\/normal files  in the var\/log folder which are bigger than 100MB","Bash":"find \/var\/log -type f -size +100000k -exec ls -lh {} \\; | awk '{ print $9 \": \" $5 }'"}
{"English":"find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation","Bash":"find . -size +1M -ok mv {} files \\+"}
{"English":"Remove all files named \"filename\" from the current directory tree, ignoring directory \"FOLDER1\"","Bash":"find . -name FOLDER1 -prune -o -name filename -delete"}
{"English":"Copy directory tree preserving UID and GID and leaving user files alone","Bash":"find . -depth -print | cpio -o -O \/target\/directory"}
{"English":"display all the regular\/normal files in the current folder excluding the files \"bbb\" and \"yyy\"","Bash":"find . \\( -name bbb -o -name yyy \\) -prune -o -type f -print"}
{"English":"Find all files\/directories named 'photo.jpg' (case insensitive) under current directory tree","Bash":"find . -iname \"photo.jpg\""}
{"English":"Answer \"n\" to any prompts in the interactive recursive removal of \"dir1\", \"dir2\", and \"dir3\"","Bash":"yes n | rm -ir dir1 dir2 dir3"}
{"English":"Find files under \/usr that are the same age or older than file `FirstFile'","Bash":"find \/usr ! -newer \/FirstFile -print"}
{"English":"find all directories in the current folder","Bash":"find -type d"}
{"English":"Find all *.txt files under \/foo and delete them","Bash":"find \/foo -name \"*.txt\" -delete"}
{"English":"find all the files in the home folder which are empty (Size 0 bytes)","Bash":"find ~ -empty"}
{"English":"recursively change user of the direct public_html and all files into it to user owner","Bash":"chown -R owner:owner public_html"}
{"English":"Find *.c files under $HOME and search for the string 'sprintf' in those files","Bash":"find $HOME -name '*.c' -print | xargs    grep -l sprintf"}
{"English":"split the file \"\/path\/to\/large\/file\" into pieces per 50000 lines named as \/path\/to\/output\/file\/prefixNNN","Bash":"split --lines=50000 \/path\/to\/large\/file \/path\/to\/output\/file\/prefix"}
{"English":"display all the files in the current folder which are in the path \".\/sr*sc\"","Bash":"find . -path '.\/sr*sc'"}
{"English":"Create a symbolc link named \"public_html\" to \"current\/app\/webroot\" under the current working directory","Bash":"ln -s `pwd`\/current\/app\/webroot public_html"}
{"English":"Print command line of process with pid 17709","Bash":"cat \/proc\/17709\/cmdline | xargs -0 echo"}
{"English":"Search the files from the current directory tree for \"chrome\"","Bash":"find . | xargs grep 'chrome'"}
{"English":"Set the variable \"me\" to the name of the running script.","Bash":"me=`basename \"$0\"`"}
{"English":"Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory excluding other partitions","Bash":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -q \"{}\" \\; -print0 | xargs -0 sed '\/.\/d'"}
{"English":"Find all files\/directories with '.o' extension under '\/lib\/modules' directory tree","Bash":"find \/lib\/modules -name '*.o'"}
{"English":"Write every two lines in \"infile\" on a single line separated by a comma","Bash":"cat infile | paste -sd ',\\n'"}
{"English":"Search directory trees foo and bar for .java files","Bash":"find foo bar -name \"*.java\""}
{"English":"Find regular files that are bigger than 500 MB in size under current directoryt tree","Bash":"find . -type f -size +500M"}
{"English":"Recursively copy \"emptydir\" to \"destination\/newdir\"","Bash":"rsync --recursive emptydir\/ destination\/newdir"}
{"English":"display all the html files in the current folder","Bash":"find . -name \\*.html"}
{"English":"Change directory to parent directory and do not resolve any symlinks in the resulting path","Bash":"cd -L .."}
{"English":"Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.","Bash":"egrep -R \"word-1|word-2\u201d directory-path"}
{"English":"Display the mimetype of \"filename\"","Bash":"file -i filename"}
{"English":"Find directories modified in last 7 days","Bash":"find . -mtime -7 -type d"}
{"English":"Output only the filetype suffix of \"foo.tar.gz\", in this case \"gz\"","Bash":"echo \"foo.tar.gz\" | rev | cut -d\".\" -f1 | rev"}
{"English":"Find all files\/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem","Bash":"find \/ -newer ttt -user wnj -print"}
{"English":"Finds all files like \"mylog*.log\" newer than $2 and archives them with bzip2.","Bash":"find . -type f -ctime -$2 -name \"mylog*.log\" | xargs bzip2"}
{"English":"Add the .abc suffix to the names of all *.txt regular files in the current directory tree","Bash":"find . -type f -iname '*.txt' -print0 | xargs -0 mv {} {}.abc"}
{"English":"delete all the files in the file system which belong to the user edwarda","Bash":"find \/ -user edwarda -exec rm \"{}\" \\;"}
{"English":"Search for broken symlinks","Bash":"find -L -type l"}
{"English":"Get the number of \"use\" statements in all PHP files, ordered","Bash":"find . -type f -name \"*.php\" -exec grep --with-filename -c \"^use \" {} \\; | sort -t \":\" -k 2 -n -r"}
{"English":"Find the passwd file in the current directory and one level down","Bash":"find -maxdepth 2 -name passwd"}
{"English":"tar all the regular java files to myfile.tar","Bash":"find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"}
{"English":"Find *.java files under current directory and compress them to myfile.tar","Bash":"find . -type f -name \"*.java\" | xargs    tar rvf myfile.tar"}
{"English":"Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals.","Bash":"kill -0 $PID"}
{"English":"search for the file test in the current folder","Bash":"find . -name test"}
{"English":"Find files\/directories writable by group or others under the \/path directory","Bash":"find \/path -perm \/g+w,o+w"}
{"English":"Find all TXT files in the current directory and copy them to directory \"$HOME\/newdir\"","Bash":"find \"$HOME\" -name '*.txt' -type f -print0 | xargs -0 cp -ut \"$HOME\/newdir\""}
{"English":"find list of all files with file permission , link , owner , group , reation time , size , file name","Bash":"find . -exec ls -ld {} \\;"}
{"English":"Print the character representations of 65 to 90","Bash":"seq 65 90 | awk '{printf(\"%c\",$1)}'"}
{"English":"Find all directories named '.texturedata' under '\/path\/to\/look\/in\/' directory tree","Bash":"find \/path\/to\/look\/in\/ -type d -name '.texturedata'"}
{"English":"Print only unique lines in files 'set1' and 'set2'","Bash":"cat set1 set2 | sort -u"}
{"English":"Print a colon-separated list of all directories from the ~\/code directory tree","Bash":"find ~\/code -type d | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"Store info about all mounted file systems, printing all sizes in powers of 1000","Bash":"a=$( df -H )"}
{"English":"Find *.jpg screenshots that are bigger than 500k","Bash":"find ~\/Images\/Screenshots -size +500k -iname '*.jpg'"}
{"English":"Count the number of .gz files in the current directory tree","Bash":"find -name \"*.gz\" | wc -l"}
{"English":"find all the files ending with \".foo\" in the folder \/usr","Bash":"find \/usr -name '*.foo' -print"}
{"English":"Set permissions for files in `foldername' to 777","Bash":"find foldername -exec chmod a+rwx {} \";\""}
{"English":"Create the directory '.npm-packages' in the user's home directory($HOME)","Bash":"mkdir \"${HOME}\/.npm-packages\""}
{"English":"SSH with trusted X11 forwarding into \"user@remoteToRemote_IP\" from SSH connection \"user@remote_IP\"","Bash":"ssh -XY -t user@remote_IP 'ssh -XY -t user@remoteToRemote_IP'"}
{"English":"Find all files\/directories under .\/var\/log directory","Bash":"find .\/var\/log"}
{"English":"Find every file under the directory \/var\/spool that was modified more than 60 days ago.","Bash":"find \/var\/spool -mtime +60"}
{"English":"Find all regular files named 'Chapter1' under current directory tree","Bash":"find . -name Chapter1 -type f -print"}
{"English":"delete all the mp3 files in the current folder.","Bash":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}
{"English":"find all the \".c\" files in the folder \/home\/david which have been modified in the last 48 hours","Bash":"find \/home\/david -mtime -2 -name '*.c'"}
{"English":"Find all files\/directories that belong to the group 'staff' under '\/usr' directory tree","Bash":"find \/usr -group staff"}
{"English":"Replace all negative numbers in the 3rd comma-separated column of inputfile by the number notated in parenthesis instead of with a minus sign.","Bash":"awk -F, 'BEGIN {OFS = \",\"} {gsub(\"-([0-9.]+)\", \"(\" substr($3, 2) \")\", $3); print}' inputfile"}
{"English":"Rename all *.txt regular files in the current directory tree to *.abc","Bash":"find . -type f -iname '*.txt' -print0 | xargs -0 rename .txt .abc"}
{"English":"Recursively change owner to \"$1\" and group to \"httpd\" of all files in the current directory","Bash":"chown -R $1:httpd *"}
{"English":"Display current running kernel's compile-time config file.","Bash":"cat \/boot\/config-`uname -r`"}
{"English":"Find all files under \/path and below writable by `group' and `other'","Bash":"find \/path -perm -go+w"}
{"English":"Gets IP address of 'en0' network interface.","Bash":"ifconfig en0 | awk '$1 == \"inet\" {print $2}'"}
{"English":"Find all .gz archives in the current directory tree and check if they are valid","Bash":"find . -name *.gz -exec gunzip '{}' \\;"}
{"English":"display long listing of all the text files in the current folder","Bash":"find . -name \"*.txt\" -exec ls -la {} \\;"}
{"English":"Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '\/myprojects' directory tree and modify them in-place","Bash":"find \/myprojects -type f -name '*.cpp' -print0 | xargs -0 -n 1 sed -i 's\/previousword\/newword\/g'"}
{"English":"Copies all files like '*.txt' under the current directory to the '.\/tmp\/' directory.","Bash":"find . -type f -name '*.txt' | sed 's\/'\"'\"'\/\\'\"'\"'\/g' | sed 's\/.*\/\"&\"\/'  | xargs -I{} cp -v {} .\/tmp\/"}
{"English":"find all '*.c' files under $HOME directory which context contains sprintf","Bash":"find $HOME -name '*.c' -print | xargs grep -l sprintf"}
{"English":"find all directory list which have empty list in \/tmp directory","Bash":"find \/tmp -type d -empty"}
{"English":"find all the files in the entire file system which have been modified in the last 48 hours","Bash":"find \/ -mtime -2 -print"}
{"English":"Report file systems disk usage human-readable using POSIX output format.","Bash":"df -Ph"}
{"English":"Find and remove all .core files","Bash":"find \/ -name \"*.core\" -print -exec rm {} \\;"}
{"English":"finds all files modified within a certain time frame recursively","Bash":"find . -type f -newermt \"2013-06-01\" \\! -newermt \"2013-06-20\""}
{"English":"Counts all business days in a current month.","Bash":"cal -h | cut -c 4-17 | tail -n +3  | wc -w"}
{"English":"Find files\/directories that are newer than 'foo.txt' under current directory tree","Bash":"find -newer foo.txt"}
{"English":"Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files","Bash":"find $d -type f -exec chmod ug=rw,o= '{}' \\;"}
{"English":"Use \"$BYTES\" amount of RAM with no output","Bash":"yes | tr \\\\n x | head -c $BYTES | grep n"}
{"English":"Show all running processes with a name matching \"postgres\"","Bash":"ps -ef | grep postgres"}
{"English":"Find all files\/directories named 'foo.bar' under '.\/dir1' and '.\/dir2' directory trees","Bash":"find .\/dir1 .\/dir2 -name foo.bar -print"}
{"English":"Find all files\/directories named 'query' under current directory","Bash":"find -name \"query\""}
{"English":"display all regular\/normal files in temp folder and display the filename along with file size","Bash":"find tmp -type f -printf \"f %s %p\\n\""}
{"English":"find all the files in the current directory which have been modified in the last 30 days and display the contents.","Bash":"find . -atime +30 -exec ls \\;"}
{"English":"Search user1's home directory tree for *.bin files","Bash":"find \/home\/user1 -name \\*.bin"}
{"English":"Recursively copy \/path\/to\/foo on host \"your.server.example.com\" to local directory \"\/home\/user\/Desktop\", connecting as ssh username \"user\".","Bash":"scp -r user@your.server.example.com:\/path\/to\/foo \/home\/user\/Desktop\/"}
{"English":"Rename uppercase file or folder name $1 to lower case name","Bash":"mv $1 `echo $1 | tr '[:upper:]' '[:lower:]'`"}
{"English":"find all the files in the current folder which do not have the execute permission","Bash":"find . -type d ! -perm -111"}
{"English":"Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.","Bash":"find . -not -empty -type f -exec ls -s {} \\; | sort -n  | head -5"}
{"English":"Find all executable upvoter-* files\/symlinks under maximum 1 level down the {} directory","Bash":"find {} -name 'upvoter-*' \\( -type f -or -type l \\) -maxdepth 1 -perm +111"}
{"English":"find out what group a given user has","Bash":"groups user"}
{"English":"Search the \/myfiles directory tree for files that are 5 512 byte blocks in size","Bash":"find \/myfiles -size 5"}
{"English":"Save standard input to variable 'stdin' until the first character encoded as '\\004' is read","Bash":"read -d \"$(echo -e '\\004')\" stdin"}
{"English":"simulate a full login of user root","Bash":"su -"}
{"English":"Print each line in \"file\", \"file2\", and \"file3\" and replace any tabs with spaces","Bash":"paste file file2 file3 | sed 's\/\\t\/ \/'"}
{"English":"find all the files in the current folder which are modified after \/bin\/sh.","Bash":"find . -newer \/bin\/sh"}
{"English":"move all the files in the current folder  to temp folder and search atleast in one subfolder","Bash":"find . -mindepth 1 -print0|xargs -0 -I, mv , \/tmp"}
{"English":"Print fourth column of space-separated data from text file text.txt.","Bash":"cat text.txt | cut -d \" \" -f 4"}
{"English":"search for files in the current folder ending with \".au\"","Bash":"find -type f -name '*.au'"}
{"English":"Make directories \"foo\" and \"bar\"","Bash":"mkdir foo bar"}
{"English":"Find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories","Bash":"find \"$1\" -path \"*\/.*\" -prune -o \\( -type f -print0 \\)"}
{"English":"list the details of all the directories in the current folder","Bash":"find . -type d -exec ls -ld {} \\;"}
{"English":"Print the file system \"file\/goes\/here\" is on","Bash":"df -P file\/goes\/here | tail -1 | cut -d' ' -f 1"}
{"English":"Gets IP address of eth0 network interface.","Bash":"ifconfig eth0 | grep addr: | awk '{ print $2 }' | cut -d: -f2"}
{"English":"Remove all files from the system whose path names contain \"GUI\"","Bash":"find \/ -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}
{"English":"find all the files (under root file system \/) that were updated in the last 24 hours","Bash":"find \/ -mtime -1"}
{"English":"Find all files\/directories named 'Waldo' under 'Books' directory tree that is located in user's home directory","Bash":"find ~\/Books -name Waldo"}
{"English":"Recursively from current folder searches only files that names match \".*xxx\" pattern, ignores binary files and prints file name before every string that contains \"my Text to grep\".","Bash":"grep --include=\"*.xxx\" -nRHI \"my Text to grep\" *"}
{"English":"Find all *.jpg files under current directory","Bash":"find . -name *.jpg"}
{"English":"get year-month-day hour:minute:second from date","Bash":"date +%Y-%m-%d:%H:%M:%S"}
{"English":"Search the `research' directory and one level below for directories that are not owned by group `ian'","Bash":"find -L research -maxdepth 2 -type d ! -group ian"}
{"English":"Save the current time formatted according to the format string \"%Y-%m-%d %H:%M:%S\" to the variable 'CDATE'","Bash":"CDATE=$(date \"+%Y-%m-%d %H:%M:%S\")"}
{"English":"find all the files (under root file system \/) that were changed within the last 24 hours","Bash":"find \/ -ctime -1"}
{"English":"Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days","Bash":"find \"$DIR_TO_CLEAN\" -type -f -mtime \"+$DAYS_TO_SAVE\" -exec rm {} \\; -printf '.' | wc -c"}
{"English":"Search all files called \"abc\" that reside in the current directory tree for string \"xyz\"","Bash":"find . -name \"abc\" -exec grep \"xyz\" {} \\;"}
{"English":"list in long format all files from \/ whose filename ends in \"jbd\", not descending into directories that are not readable while searching.","Bash":"find \/ \\! -readable -prune -o -name '*.jbd' -ls"}
{"English":"Search the current directory tree for .rb files ignoring the \".\/vendor\" subdirectory","Bash":"find . -name '*.rb' ! -wholename \".\/vendor\/*\" -print"}
{"English":"Find all files whose name or type description includes \"text\", display only paths to files.","Bash":"find . -exec file {} \\; | grep text | cut -d: -f1"}
{"English":"Show all files that have not been accessed in the $HOME directory for 30 days or more","Bash":"find $HOME -atime +30"}
{"English":"Find all .php files starting from the root directory and ignoring \/media","Bash":"find \/ -name \"*.php\" -print -o -path '\/media' -prune"}
{"English":"Change owner to \"$1\" and group to \"httpd\" of \".htaccess\"","Bash":"chown $1:httpd .htaccess"}
{"English":"Unzip and untar \"tarball.tar.gz\"","Bash":"zcat tarball.tar.gz | tar x"}
{"English":"Save a nginx link to \"\/path\/to\/file\" with the current user and system FQDN host name in variable \"path\"","Bash":"path=\"http:\/\/$(whoami).$(hostname -f)\/path\/to\/file\""}
{"English":"Save full path of command \"mktemp\" to variable \"MKTEMP\"","Bash":"MKTEMP=`which mktemp`"}
{"English":"Calculate the md5 sum of the list of files in the current directory","Bash":"find . -maxdepth 1 -type f | md5sum"}
{"English":"Create a symbolic link named \"$tmpdir\/bam\" to the full path of command \"bam2\" found in \"$PATH\"","Bash":"ln -s \"$(which bam2)\" \"$tmpdir\"\/bam"}
{"English":"search  in root ( \/ ) directory downwards all files which  have exactly 2 links.","Bash":"find \/  -links 2 -print"}
{"English":"Remove all empty regular files under the current directory and below","Bash":"find .\/ -type f -size 0c -print | xargs rm"}
{"English":"find files in the current directory and sub-directories, whose content was updated within the last hour","Bash":"find . -mmin -60"}
{"English":"Search for files specifying the maximum depth of the search","Bash":"find -maxdepth num -name query"}
{"English":"Make $WEEKS_TO_SAVE+1 directories named \"weekly.N\" where N ranges from 0 to \"$WEEKS_TO_SAVE\"","Bash":"mkdir -p $(seq -f \"weekly.%.0f\" 0 $WEEKS_TO_SAVE)"}
{"English":"delete all the \".bak\" or swap files in kat folder","Bash":"find kat -type f \\( -name \"*~\" -p -name \"*.bak\" \\) -delete"}
{"English":"Print the lines of file \"strings\" specified in file \"index\"","Bash":"join <(sort index) <(nl strings | sort -b)"}
{"English":"List all symlinks under current directory and search for targetfile.txt in this list","Bash":"find . -type l | xargs -I % ls -l % | grep targetfile.txt"}
{"English":"Print comma separated gaps in file \"file\" that contains new line separated ordered numbers","Bash":"seq $(tail -1 file)|diff - file|grep -Po '.*(?=d)'"}
{"English":"Find all files\/directories under current directory","Bash":"find ."}
{"English":"Look for files with wide open permissions","Bash":"find . -type f  -perm 777 -exec ls -l {} \\;"}
{"English":"Remove the files or directories 'bin\/node', 'bin\/node-waf', 'include\/node', 'lib\/node', 'lib\/pkgconfig\/nodejs.pc' and 'share\/man\/man1\/node.1'","Bash":"rm -r bin\/node bin\/node-waf include\/node lib\/node lib\/pkgconfig\/nodejs.pc share\/man\/man1\/node.1"}
{"English":"Replace \"  \" with \" $UID \" in the output of \"history\"","Bash":"history | sed \"s\/  \/ $UID \/\""}
{"English":"Print all unique strings in $1.tmp file.","Bash":"cat $1.tmp | sort -u"}
{"English":"Search the current directory for PHP files","Bash":"find . -type f -name \"*.php\""}
{"English":"Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format.","Bash":"du -ksh * | sort -n -r"}
{"English":"Find all files\/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes","Bash":"find \/var\/log\/crashes -name app-\\*\\.log -mmin -5"}
{"English":"Write \"suspend\" to standard output and to file \"\/sys\/bus\/usb\/devices\/usb3\/power\/level\"","Bash":"echo suspend | sudo tee \/sys\/bus\/usb\/devices\/usb3\/power\/level"}
{"English":"Change every file under \"\/var\/www\/html\/\" to have permissions 664","Bash":"sudo  find \/var\/www\/html\/ -type f -exec chmod 664 {} \\;"}
{"English":"List all empty files in the current directory tree","Bash":"find . -empty -exec ls {} \\;"}
{"English":"find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.","Bash":"find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}
{"English":"Find all regular files with space in their names under current directory and rename them by replacing all spaces with _","Bash":"find -name \"* *\" -type f | rename 's\/ \/_\/g'"}
{"English":"Remove all empty files in \/tmp\/ and below","Bash":"find \/tmp -type f -empty -print | xargs rm -f"}
{"English":"find the file \"MyCProgram.c\" in the current folder","Bash":"find -iname \"MyCProgram.c\""}
{"English":"Search for the string 'magic' in all regular files under current directory tree and display long listing of them","Bash":"find . -type f -exec grep \"magic\" {} \\; -ls"}
{"English":"Print the percentage of packets lost of the 5 packets sent to \"$host\"","Bash":"ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)'"}
{"English":"Cuts off last two parts from the path $dir, and deletes resulted folder if empty.","Bash":"rmdir \"$(dirname $(dirname $dir))\""}
{"English":"Search the .java files from the \/Applications\/ directory tree for TODO lines","Bash":"find \/Applications\/ -name \"*.java\" -print0 | xargs -0 grep -i \"TODO\""}
{"English":"find all files in and under the current directory that have read, write and execute permissions set for all users.","Bash":"find . -perm 777 -print"}
{"English":"Print lines in \"foo.txt\" that are found only once","Bash":"sort foo.txt | uniq"}
{"English":"find all the perl files in \/var\/www","Bash":"find \/var\/www\/ -type f -name \"*.pl\" -print"}
{"English":"Remove empty directories from the current directory tree","Bash":"find . -depth -empty -type d -delete"}
{"English":"Find the empty directories and files under current directory","Bash":"find -empty"}
{"English":"ssh into \"hostname\" as user \"buck\"","Bash":"ssh -l buck hostname"}
{"English":"Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last","Bash":"echo $(find \/ -type f -perm -002) has world write permissions"}
{"English":"search for the file picasso in the folder \/home\/calvin\/ (case insensitive search)","Bash":"find \/home\/calvin\/ -iname \u201cpicasso\u201d"}
{"English":"Prints message info about filename and location of the current script","Bash":"echo \"The script you are running has basename `basename $0`, dirname `dirname $0`\""}
{"English":"Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories","Bash":"find . -type f -exec chmod ug=rw,o= {} \\;"}
{"English":"add read,write permissions to all the files in the current folder which have the permission 600","Bash":"find . -perm 600 -print | xargs chmod 666"}
{"English":"Measure the disk space taken up by all *.txt files in the current directory tree","Bash":"find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1"}
{"English":"display all the text and pdf files in the current folder","Bash":"find . -regex \".*\\(\\.txt\\|\\.pdf\\)$\""}
{"English":"List all *jsp and *java regular files found in the current directory tree","Bash":"find . \\( -name '*jsp' -o -name '*java' \\) -type f -ls"}
{"English":"Attempt to connect as root to localhost and copy \/home\/reportuser\/dailyReport.doc to directory \/root\/dailyReports\/20150105\/ - this will normally fail because ssh won't accept root connections by default.","Bash":"scp -p \/home\/reportuser\/dailyReport.doc root@localhost:\/root\/dailyReports\/20150105\/"}
{"English":"Search the \"katalogi\" directory tree for files named \"wzorzec\"","Bash":"find katalogi -name wzorzec"}
{"English":"Find all files recursively which end in \".php\"","Bash":"find . -name \"*.php\" -print"}
{"English":"Find all files named \"filename\"","Bash":"find -name \"filename\""}
{"English":"Finds all files in a '\/path' folder and prints long listing for them.","Bash":"find \/path -type f -exec ls -l \\{\\} \\;"}
{"English":"Print the full real path of \"\/dev\/disk\/by-uuid\/$1\" followed by \"is mounted\"","Bash":"echo $(readlink -f \/dev\/disk\/by-uuid\/$1) is mounted"}
{"English":"Find all *company* (case-insensitive) files\/directories under \/basedir with null character as the delimiter","Bash":"find \/basedir\/ -iname '*company*' -print0"}
{"English":"Remove the last file extension from \"filename.gz\"","Bash":"echo \"filename.gz\"     | sed 's\/^\/.\/' | rev | cut -d. -f2- | rev | cut -c2-"}
{"English":"create an archive excluding files matching patterns listed in \/path\/to\/exclude.txt","Bash":"tar -czf backup.tar.gz -X \/path\/to\/exclude.txt \/path\/to\/backup"}
{"English":"Archive \"src\/bar\" on host \"foo\" to local directory \"\/data\/tmp\"","Bash":"rsync -avz foo:src\/bar \/data\/tmp"}
{"English":"find all the direcories in the current folder","Bash":"find -type d"}
{"English":"Remove all 'a.out', '*.o', and 'core' files in the current directory tree","Bash":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}
{"English":"list files in \/u\/bill that were last read from 2 to 6 minutes ago","Bash":"find \/u\/bill -amin +2 -amin -6"}
{"English":"Connect via ssh to \"your.server.example.com\" and recursively copy directory \"\/path\/to\/foo\" on this host to direcotry \"\/home\/user\/Desktop\" on local host, using \"blowfish\" cipher algorithm.","Bash":"scp -c blowfish -r user@your.server.example.com:\/path\/to\/foo \/home\/user\/Desktop\/"}
{"English":"change html files to mode 644","Bash":"find \/usr\/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}
{"English":"Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"","Bash":"comm -23 a.txt b.txt | wc -l"}
{"English":"Show the epoch in default date\/time format","Bash":"date -ud@0"}
{"English":"find all the backup files in the current folder and delete them","Bash":"find . -type f -name \"*.bak\" -exec rm -f {} \\;"}
{"English":"Searches the manual page names and descriptions by 'disk' keyword.","Bash":"apropos disk"}
{"English":"Search the current directory for regular files whose names start with my","Bash":"find . -name 'my*' -type f"}
{"English":"Find all the regular files under '\/your\/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes","Bash":"find \/your\/dir -type f -size +5M -exec du -h '{}' + | sort -hr"}
{"English":"Sort \",\" delimited lines in \"file\" by the first field preserving only unique lines","Bash":"sort -u -t, -k1,1 file"}
{"English":"start from current directory, skip the directory src\/emacs and all files and directories under it, and print the names of the other files found","Bash":"find . -wholename '.\/src\/emacs' -prune -o -print"}
{"English":"Search for all files in the current directory recursively whose names contain \"linkin\", ignoring the case","Bash":"find . -iname *linkin*"}
{"English":"Copy all files in the current directory tree matching \"textToSearch\" to \"$destination_path\"","Bash":"find . -type f | xargs grep -l \"textToSearch\" | cpio -pV $destination_path"}
{"English":"find all the files that have been modified in the last 2 days","Bash":"find . -type f -daystart -mtime -2"}
{"English":"Reports count of processors in system.","Bash":"grep \"^core id\" \/proc\/cpuinfo | sort -u | wc -l"}
{"English":"Replace the spaces after line number in the output of history with \"..\"","Bash":"history | sed 's\/^\\( *[0-9]*\\) *\/\\1..\/'"}
{"English":"Print only strings from file 'file2' that not found in 'file1'","Bash":"comm -1 -3 file1 file2"}
{"English":"Find all *.ogg (case insensitive) files\/directories under your home directory that are greater than 20MB in size","Bash":"find $HOME -iname '*.ogg' -size +20M"}
{"English":"Reverse the order of lines in \"dax-weekly.csv\" keeping the first line the same","Bash":"cat dax-weekly.csv | awk '1 { last = NR; line[last] = $0; } END { print line[1]; for (i = last; i > 1; i--) { print line[i]; } }'"}
{"English":"Search the entire file system for .jpg files.","Bash":"find \/ -name \u201c*.jpg\u201d"}
{"English":"Find all files\/directories under current directory and print them with newline as the delimiter","Bash":"find -print | xargs -d'\\n'"}
{"English":"Verbosely compresses all files on seventh and eighth depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*\/*\/*\/*\/*\/*"}
{"English":"Find all *.txt file (case insensitive) in the entire system and copy them to \/tmp\/txt","Bash":"find \/ -iname '*.txt' | xargs --replace=@ cp @ \/tmp\/txt"}
{"English":"find all the files in the current directory which have been modified in the last 24 hours","Bash":"find . -mtime 0"}
{"English":"Print the list of files and directories of the \/etc directory","Bash":"find \/etc\/. ! -name . -prune"}
{"English":"Silently read a line from standard input into variable \"REPLY\" without backslash escapes and using the prompt $'Press enter to continue...\\n'","Bash":"read -rsp $'Press enter to continue...\\n'"}
{"English":"Search the files in the current directory tree for lines containing string \"vds admin\"","Bash":"find . -exec grep -i \"vds admin\" {} \\;"}
{"English":"Find all regular files under \/home\/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files","Bash":"find \/home\/www -type f -print0 | xargs -0 sed -i 's\/subdomainA\\.example\\.com\/subdomainB.example.com\/g'"}
{"English":"find all the files in the current folder with the name \"test-a\" and move them to the folder test-10. execdir runs the command in the directory where the file is found.","Bash":"find ~ -type f -name test-a -execdir mv {} test-10 \\;"}
{"English":"Archive \"\/path\/to\/copy\" on host \"remote.host\" as user \"user\" to \"\/path\/to\/local\/storage\" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission","Bash":"rsync -chavzP --stats user@remote.host:\/path\/to\/copy \/path\/to\/local\/storage"}
{"English":"Find all files that are set group ID to 10","Bash":"find . -group 10 -perm -2000 -print"}
{"English":"Find all files\/directories under \/path\/to\/dir and set directory permission to 0755 and file permission to 0644","Bash":"find \/path\/to\/dir -type d -exec chmod 0755 '{}' \\; -o -type f -exec chmod 0644 '{}' \\;"}
{"English":"display all the text files in the current folder except readme files","Bash":"find . -type f -name \"*.txt\" ! -name README.txt -print"}
{"English":"display all regular\/normal files in the folder Symfony","Bash":"find Symfony -type f"}
{"English":"Find all files\/directories named file1 under current directory","Bash":"find -name file1"}
{"English":"create directory new_dir","Bash":"mkdir new_dir"}
{"English":"Delete all files named '-F' under current directory tree","Bash":"find . -name \"-F\" -exec rm {} \\;"}
{"English":"Archive files in \"\/mnt\/source-tmp\" to \"\/media\/destination\"","Bash":"rsync -a \/mnt\/source-tmp \/media\/destination\/"}
{"English":"Search the current directory tree for files larger than 10MB but smaller than 50MB","Bash":"find . -size +10M -size -50M -print"}
{"English":"Run \".\/configure\" with a new environment variable CC set to the full path of the command 'gcc'","Bash":"CC=$(which gcc) .\/configure"}
{"English":"Find all regular .html files in the \/var\/www directory tree","Bash":"find \/var\/www -type f -name \"*.html\""}
{"English":"Make a copy of file1 in dir1, dir2, and dir3.","Bash":"echo dir1 dir2 dir3 | xargs -n 1 cp file1"}
{"English":"Display differences between \/destination\/dir\/1 and \/destination\/dir\/2 excluding XML files.","Bash":"diff \/destination\/dir\/1 \/destination\/dir\/2 -r -x *.xml"}
{"English":"Ping all hosts in file \"ips\" twice","Bash":"cat ips | xargs -n1 ping -c 2"}
{"English":"prevents curl from returning error (23) Failed writing body when grepping for foo","Bash":"curl \"url\" | tac | tac | grep -qs foo"}
{"English":"Search for regular expression 'expr' in all .c and .h files from the current directory tree","Bash":"find -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership","Bash":"find . -depth -print | cpio -o -O \/target\/directory"}
{"English":"rename all the png files to jpg files in the current fodler","Bash":"find . -name \"*.png\" -print0 | sed 'p;s\/\\.png\/\\.jpg\/' | xargs -0 -n2 mv"}
{"English":"Recursively finds all '*.pdf' files in a current folder and removes them.","Bash":"find . -name \"*.pdf\" -print0 | xargs -0 rm"}
{"English":"Print the minimum transmission time of 10 ping requests to \"google.com\" from cygwin","Bash":"ping google.com -n 10 | awk '\/Minimum =\/ { sub(\",\",\"\",$3); print $3 }'"}
{"English":"Recursively changes group ownership of everything within a current directory to 'repogroup'.","Bash":"chgrp -R repogroup ."}
{"English":"Join comma-separated data in file1 and file2, including extra non-matching information in both files.","Bash":"join -t, -a1 -a2 <(sort file1) <(sort file2)"}
{"English":"Report all C language source code files under the current directory","Bash":"find . -name \\*.c -print"}
{"English":"change user of the direct public_html to user owner and group nobody","Bash":"chown owner:nobody public_html"}
{"English":"display all the files in the folder \"$ORIG_DIR\"","Bash":"find \"$ORIG_DIR\""}
{"English":"Split \"abc.txt\" into files with at most 1500000000 bytes each and use prefix \"abc\"","Bash":"split --bytes=1500000000 abc.txt abc"}
{"English":"delete all text files in the home folder after user confirmation","Bash":"find $HOME\/. -name \"*.txt\" -ok rm {} \\;"}
{"English":"Search for file \"file\" with minimum depth set to 4","Bash":"find -mindepth 4 -name file"}
{"English":"find all the files ending with \"~\" in current folder and move them to temp folder","Bash":"find -name '*~' -print0 | xargs -0 -I _ mv _ \/tmp\/"}
{"English":"display all the files in current folder","Bash":"find ."}
{"English":"Find all files that were last modified less than7 days ago under \/home","Bash":"find \/home -mtime -7"}
{"English":"Find regular files that have SUID or SGID set","Bash":"find \/ -perm +6000 -type f"}
{"English":"Find all files in the `sourceDir' directory","Bash":"find sourceDir -mindepth 1 -maxdepth 1"}
{"English":"Calculate the md5 sum of the sorted list of md5 sums of all \".py\" files under \"\/path\/to\/dir\/\"","Bash":"find \/path\/to\/dir\/ -type f -name *.py -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}
{"English":"Sources script incl.sh in the folder where current script is located.","Bash":"source $(dirname $0)\/incl.sh"}
{"English":"Remove all *.tmp files from the \/tmp directory tree","Bash":"find \/tmp -name \"*.tmp\" | xargs rm"}
{"English":"Print full path of command \"c++\"","Bash":"which c++"}
{"English":"Create a symbolc link named \"latest\" to the last modified file or directory in \"target-directory\"","Bash":"ln -s target-directory\/`ls -rt target-directory | tail -n1` latest"}
{"English":"Read a line from standard input into the variable \"yn\" using the first argument as the prompt (\"$1 \")","Bash":"read -p \"$1 \" yn"}
{"English":"Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.","Bash":"path=$(basename $(pwd) | awk '{print tolower($0)}')"}
{"English":"Change file permissions on all regular files within a directory","Bash":"find \/path\/to\/directory -type f -exec chmod 644 {} +"}
{"English":"Find all directories with 755 permission and change the permission to 700","Bash":"find . -type d -perm 755 -exec chmod 700 {} \\;"}
{"English":"Remove all vmware-*.log files under current directory","Bash":"find . -name vmware-*.log | xargs rm"}
{"English":"find all files starting with capital letter in the current folder","Bash":"find . \u2014 name \"[A\u2011Z]*\" \u2014 print"}
{"English":"Count all directories in maximum 1 level down the current directory","Bash":"find . -maxdepth 1 -type d -exec ls -dlrt {} \\; | wc --lines"}
{"English":"find the oldest normal file in the current directory","Bash":"find . -type f -print0 | xargs -0 ls -ltr | head -n 1"}
{"English":"Print lines in the sorted contents of \"second.txt\" that are not in the sorted contents of \"first.txt\"","Bash":"comm -13 <(sort first.txt) <(sort second.txt)"}
{"English":"Print the number of regular files found in the current directory tree","Bash":"find . -type f | wc -l"}
{"English":"Find all *.mp3 files under current directory","Bash":"find . -name *.mp3"}
{"English":"Archive all filepattern-*2009* files\/directories under data\/ into 2009.tar","Bash":"find data\/ -name 'filepattern-*2009*' -exec tar uf 2009.tar '{}' +"}
{"English":"Recursively changes group ownership on every file in the ${WP_ROOT}\/wp-content directory to ${WS_GROUP} group.","Bash":"find ${WP_ROOT}\/wp-content -exec chgrp ${WS_GROUP} {} \\;"}
{"English":"Find all sample*_1.txt files\/directories under current directory","Bash":"find . -name \"sample*_1.txt\""}
{"English":"Print host name without a newline","Bash":"echo -n `hostname`"}
{"English":"Find all the files whose permissions are 777 under current directory","Bash":"find . -type f -perm 0777 -print"}
{"English":"find all the files in the \/usr folder which have modification date less than or equal to the file \"\/FirstFile\"","Bash":"find \/usr ! -newer \/FirstFile -print"}
{"English":"Find files matching the pattern \".\/sr*sc\" in their paths under current directory","Bash":"find . -path \".\/sr*sc\""}
{"English":"Find all files and directories under current directory without crossing over to other partitions","Bash":"find . -xdev -print0"}
{"English":"Search \/usr\/bin for regular files that have been modified within the last 10 days","Bash":"find \/usr\/bin -type f -mtime -10"}
{"English":"Print content of all files ending with '*.foo' in current directory recursively","Bash":"find . -name '*.foo' -exec cat {} \\;"}
{"English":"Save absolute path of \"$path\" that must exist along with all parents to variable \"abspath\"","Bash":"abspath=$(readlink -e $path)"}
{"English":"Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen","Bash":"bzip2 -c file | tee -a logfile"}
{"English":"Locate file \"file1\"","Bash":"find -name file1"}
{"English":"Print the files in the current directory as a list of semicolon separated values","Bash":"ls -1b | tr '\\n' ';'"}
{"English":"search all the lines that start with the word malloc in the files ending with .c or .h or .ch","Bash":"grep ^malloc `find src\/ -name '*.[ch]'`"}
{"English":"Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.","Bash":"rsync $OPTS $FIND $BACKUPDIR"}
{"English":"Find all files\/directories named 'file_name' under current directory tree","Bash":"find . -name file_name"}
{"English":"Append *.java files from the current directory tree to tar archive `myfile.tar'","Bash":"find . -type f -name \"*.java\" | xargs tar rvf myfile.tar"}
{"English":"Enables shell option 'progcomp'.","Bash":"shopt -s progcomp"}
{"English":"Search for files only that end with .php and look for the string $test inside those files","Bash":"find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'"}
{"English":"display all the files in the current folder.","Bash":"find ."}
{"English":"find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files","Bash":"find . -type f -iname '*.CR2' -print0 | xargs -0 -n 1 -P 8 -I {}"}
{"English":"Find all files whose names contain the string 'xpilot' which exist within '\/usr\/local\/games'","Bash":"find \/usr\/local\/games -name \"*xpilot*\""}
{"English":"Count the number of directories under directory '\/directory\/' non-recursively","Bash":"find \/directory\/ -maxdepth 1 -type d -print| wc -l"}
{"English":"Search the current directory tree for a regular file named \"file_name\"","Bash":"find . -type f -name file_name"}
{"English":"Counts lines in each *.php file, sorted by number of lines, descending.","Bash":"find . -name '*.php' -type f | xargs wc -l | sort -nr"}
{"English":"Print the empty directories and files under current directory","Bash":"find -empty"}
{"English":"Search the current directory recursively for *.txt files with lines that match regular expression \"^string\"","Bash":"find . -name \"*.txt\" -exec egrep -l '^string' {} \\;"}
{"English":"Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.","Bash":"find -type d -name a -exec rmdir {} \\;"}
{"English":"Compare the contents of \"\/bin\" and \"\/usr\/bin\" line by line","Bash":"diff <(ls \/bin) <(ls \/usr\/bin)"}
{"English":"display all instances of the .profile file in the entire file system","Bash":"find \/ -name .profile -print"}
{"English":"Find files in the current directory tree whose names are of the form \"cxx_data.txt\" where xx is a number from 40 to 70","Bash":"find . -regextype posix-egrep -regex \".\/c(([4-6][0-9])|70)_data.txt\""}
{"English":"Opens gcc info manual and selects \"option index\" menu entry.","Bash":"info gcc \"option index\""}
{"English":"Find all Read Only files in entire file system and show a few lines of output from the beginning","Bash":"find \/ -perm \/u=r | head"}
{"English":"Search all files in the current directory tree that are named \"whatever\" for \"whatever\"","Bash":"find . -name whatever -print | xargs grep whatever"}
{"English":"Find all files\/directories named modules under current directory and list them twice","Bash":"find . -name modules \\! -exec sh -c 'find -name modules' \\;"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find . -name \"*.txt\""}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 1 day ago","Bash":"find . -type f -mtime +1"}
{"English":"Find all php files that belong to user 'takuya' and have been modified in the last 1 day","Bash":"find -user takuya -name '*.php' -daystart -mtime -1"}
{"English":"List all existing environment variables in the current shell.","Bash":"env | awk -F= '\/[a-zA-Z_][a-zA-Z_0-9]*=\/ { if (!system(\"[ -n \\\"${\" $1 \"+y}\\\" ]\")) print $1 }' | sort | uniq"}
{"English":"Print the sorted unique column of usernames of users who are currently logged in without the header","Bash":"finger | cut -d ' ' -f1 | sort -u | grep -iv login"}
{"English":"find all class files or sh script files  in the current folder","Bash":"find . -type f \\( -name \"*.class\" -o -name \"*.sh\" \\)"}
{"English":"Make directory \"subdirectory\"","Bash":"mkdir subdirectory"}
{"English":"Find all files\/directories named 'file' and print them with null character as the delimiter instead of newline","Bash":"find -name file -print0"}
{"English":"Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.","Bash":"scp -qv $USER@$HOST:$SRC $DEST"}
{"English":"Connect to host \"remotehost\" as ssh user \"user\" to copy remote file \"\/location\/KMST_DataFile_*.kms\" to current directory on local host.","Bash":"scp -v user@remotehost:\/location\/KMST_DataFile_*.kms"}
{"English":"Count the number of files named 'job.history' under '\/data\/SpoolIn' directory tree that match 'FAIL' in their contents","Bash":"find \/data\/SpoolIn -name job.history | xargs grep -l FAIL | wc -l"}
{"English":"Search for \"search term\" in a sorted list of all files under current directory","Bash":"find . | awk '{FS = \"\/\" ; print \"\", NF, $F}' | sort -n  | awk '{print $2}' | xargs grep -d skip \"search term\""}
{"English":"Gets IP addresses of all active network interfaces and saves to 'ip' variable.","Bash":"ip=$(ifconfig | grep -oP \"(?<=inet addr:).*?(?=Bcast)\")"}
{"English":"Copy all files unconditionally and directories in directory tree \"myfiles\" to \"target-dir\" preserving directory hierarchy and modification time","Bash":"find myfiles | cpio -pmud target-dir"}
{"English":"Find all catalina* files\/directories under \/path\/to\/search\/in","Bash":"find \/path\/to\/search\/in -name 'catalina*'"}
{"English":"Delete all files in directory $DIR that have not been accessed in at least 5 days","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"keep only read access to all the files in a directory.","Bash":"find \/path\/to\/dir\/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644"}
{"English":"Find all directories under \/home\/me","Bash":"find \/home\/me -type d"}
{"English":"Remove all regular files found in and below \/path","Bash":"find \/path -type f -print | xargs rm"}
{"English":"Get IP address of your SSH session","Bash":"who am i --ips|awk '{print $5}' #ubuntu 14"}
{"English":"Find all files under \/myfiles with read-write access for others","Bash":"find \/myfiles -type f -perm -o+rw"}
{"English":"Print the current directory","Bash":"find -prune"}
{"English":"Login to \"$HOST\" and create file \"$FILE_PATH\" if it does not exist","Bash":"ssh -q $HOST \"[[ ! -f $FILE_PATH ]] && touch $FILE_PATH\""}
{"English":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","Bash":"find . -type f \\( -name \"*.shtml\" -o -name \"*.css\" \\) -print"}
{"English":"Send 5 pings to broadcast address \"10.10.0.255\" and print the unique IPs who responded","Bash":"ping -c 5 -b 10.11.255.255 | sed -n 's\/.* \\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\).*\/\\1\/p' | sort | uniq"}
{"English":"Enables shell options 'extglob' and 'progcomp'","Bash":"shopt -s extglob progcomp"}
{"English":"Replace \"_\" with newlines in \"Testing\\r\\nTested_Hello_World\" and display the named characters","Bash":"echo -e \"Testing\\r\\nTested_Hello_World\" | awk -v RS=\"_\" '{ print $0; }' | od -a"}
{"English":"Find CSS files omitting results containing \"CVS\"","Bash":"find . \\! -path \"*CVS*\" -type f -name \"*.css\""}
{"English":"Dump \"testscript.sh\" as 2 byte hexadecimale, printable characters, and octal values","Bash":"od -xcb testscript.sh"}
{"English":"find  files which full path name is \/tmpfoo\/bar under foo directory and print","Bash":"find foo -path \/tmp\/foo\/bar -print"}
{"English":"Show the mv commands that would rename the *.so files in the current directory tree prepending their names with \"lib\"","Bash":"find . -name \"*.so\" -printf \"mv '%h\/%f' '%h\/lib%f'\\n\" | less -S"}
{"English":"Find all \"YourProgramName\" regular files in the current directory tree and print the full paths to the directories containing them","Bash":"find . -type f -name YourProgramName -execdir pwd \\;"}
{"English":"Test if a file named 'file' in the current directory is more than 1 hour old","Bash":"find file -chour +1 -exit 0 -o -exit 1"}
{"English":"search for a word in all the regular\/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.","Bash":"find \/ -type f -exec grep -i 'the brown dog' {} +;"}
{"English":"Edit the cron job list for user 'wwwrun' using default editor specified by the EDITOR environment variable, or \/usr\/bin\/editor if no default editor is specified.","Bash":"sudo crontab -u wwwrun -e"}
{"English":"Identify files that do not have a listing in the \/etc\/passwd or \/etc\/group file","Bash":"find \/ -nouser -o  -nogroup"}
{"English":"Find all the .c files in the current directory tree that contain the string \u2018stdlib.h\u2019","Bash":"find . -name \u2018*.c\u2019 | xargs egrep stdlib.h"}
{"English":"Print file system disk space usage with sizes in powers of 1000","Bash":"a=$( df -H )"}
{"English":"find all text files in the current directory and display them page wise","Bash":"find . -name \"*.txt\" -print"}
{"English":"Find all files named \"file.ext\" under the current working directory tree and print its filename","Bash":"find `pwd` -name \"file.ext\" -printf \"%f\\n\""}
{"English":"Set variable OS to the name of the operating system, ie. \"Linux\"","Bash":"OS=$(uname -s)"}
{"English":"Print file system disk space usage of the current directory's file system","Bash":"df ."}
{"English":"Find all files under $source_dir that match the regex expanded by $input_file_type in their paths","Bash":"find \"$source_dir\" -type f|egrep \"$input_file_type\""}
{"English":"find files in current directory that names are game","Bash":"find . -name game"}
{"English":"Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~\/code directory without descending into hidden directories","Bash":"find ~\/code -name '.*' -prune -o -type f -a -perm \/u+x -printf ':%h\\n' | sort | uniq | tr -d '\\n'"}
{"English":"Find all files\/directories with 664 permission under current directory tree","Bash":"find -perm 664"}
{"English":"Push the directory containing the first existing command found in all arguments to the directory stack.","Bash":"pushd $(dirname `which $@`)"}
{"English":"Print ls output for all non-empty files under under current directory","Bash":"find . -type f ! -size 0 -exec ls -l '{}' \\;"}
{"English":"change the ownership of all the files in the file system from edwarda to earnestc","Bash":"find \/ -user edwarda -exec chown earnestc \"{}\" \\;"}
{"English":"Prints a random line from $FILE","Bash":"sort --random-sort $FILE | head -n 1"}
{"English":"Prints last modified file in a current folder with modification time.","Bash":"find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}
{"English":"Search the \/etc directory tree for files accessed within the last 24 hours","Bash":"find \/etc -atime -1"}
{"English":"Back up all *.txt files\/directories in new files\/directories with a .bak extension in their names under \/etc directory","Bash":"find \/etc -print0 -name \"*.txt\" | xargs -I {} -0 mv {} {}.bak"}
{"English":"Find all foo.mp4 files in the current directory tree","Bash":"find .\/ -name \"foo.mp4\" -exec echo {} \\;"}
{"English":"find all the normal\/regular files in the current folder which have been modified in the last day and display a long listing of them","Bash":"find . -type f -mtime -1 -daystart -exec ls -l {} \\;"}
{"English":"Find all empty files in the current directory and delete them","Bash":"find . -maxdepth 1 -type f -empty -delete"}
{"English":"Generates default-formatted file name of temporary file in a \/dev\/mapper folder, and saves path to it in a variable 'MAPPER'.","Bash":"MAPPER=$(mktemp -up \/dev\/mapper)"}
{"English":"Prints long listing of ${0} file.","Bash":"ls -l ${0}"}
{"English":"Find all files named \"test2\" in the current directory","Bash":"find -name test2 -prune"}
{"English":"List all empty files under the current directory","Bash":"find . -maxdepth 1 -empty"}
{"English":"Resolve any symlinks in working directory, and go to resulting pathname.","Bash":"cd \"`pwd -P`\""}
{"English":"Report available space on the file system containing \/tmp in kilobytes.","Bash":"df -k \/tmp | tail -1 | awk '{print $4}'"}
{"English":"Find all files under current directory that are read less than 1 minute ago","Bash":"find . -amin -1"}
{"English":"List all paths to files or directories under \"\/data\/\" that start with \"command-\" and end with \"-setup\", sort the result by the version number specified between \"command-\" and \"-setup\" (least to greatest)","Bash":"find \/data\/ -name 'command-*-setup' | sort -t - -V -k 2,2"}
{"English":"Gets the groups these users belong to.","Bash":"groups a b c d"}
{"English":"Create compressed archive from \"my_large_file_1\" and \"my_large_file_2\" and split into files of size 1024 MiB with prefix \"myfiles_split.tgz_\"","Bash":"tar cz my_large_file_1 my_large_file_2 | split -b 1024MiB - myfiles_split.tgz_"}
{"English":"Print the largest 20 files under current directory","Bash":"find . -type f -printf '%k %p\\n' |sort -n |tail -n 20"}
{"English":"search for files that are readable for everybody, have at least on write bit set but are not executable for anybody","Bash":"find . -perm -a+r -perm \/a+w ! -perm \/a+x"}
{"English":"display all the \".c\" files in the folder \"\/home\/david\" which have been accessed in the last 48 hours","Bash":"find \/home\/david -atime -2 -name '*.c'"}
{"English":"find all the files in the home folder which have been modified after a file","Bash":"find $HOME -newer ~joeuser\/lastbatch.txt"}
{"English":"displays all the files in the current folder","Bash":"find ."}
{"English":"Print \"$PATH\" variable as input to awk script \"rem_dup.awk\" and concatenate the result with \":\"","Bash":"echo $PATH | awk -F: -f rem_dup.awk | paste -sd:"}
{"English":"find  files which  full path name is \/tmp\/foo\/bar under foo directory and print","Bash":"find foo -path \/tmp\/foo\/bar -print"}
{"English":"Make directory \"\/etc\/cron.5minute\"","Bash":"mkdir \/etc\/cron.5minute"}
{"English":"Print what year it was 222 days ago","Bash":"date '+%Y' --date='222 days ago'"}
{"English":"Erase user's cron jobs and add one cron job to run \"script\" every minute.","Bash":"echo \"* * * * * script\" | crontab -"}
{"English":"Find all .mp3 files starting from the current directory","Bash":"find . -type f -iname *.mp3"}
{"English":"Remove the passphrase from ~\/.ssh\/id_rsa.","Bash":"ssh-keygen -f ~\/.ssh\/id_rsa -P \"\""}
{"English":"Print 10 lines of a single \"x\"","Bash":"yes x | head -n 10"}
{"English":"Search *.x files from the current directory tree for string \"fred\"","Bash":"find . -name \u2018*.x\u2019 -print0 | xargs -0 grep fred"}
{"English":"Find all 100MB files in file system and delete them using rm command","Bash":"find \/ -size +100M -exec rm -rf {} \\;"}
{"English":"Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.","Bash":"cd -P .."}
{"English":"Print and save the ping results of 25 requests to \"google.com\" in \"\/home\/user\/myLogFile.log\" containing at most 100000 bytes","Bash":"ping -c 25 google.com | tee >(split -d -b 100000 - \/home\/user\/myLogFile.log)"}
{"English":"Find all files\/directories under current directory appending a null character at the end of each file name\/path","Bash":"find -print0"}
{"English":"Print the current directory tree","Bash":"tree"}
{"English":"Calculate the md5 sum of \"logdir\" and print only the hash","Bash":"echo -n \"logdir\" | md5sum - | awk '{print $1}'"}
{"English":"Write the current date and time followed by \" 0\" to the console and append to \"log.csv\"","Bash":"echo $(date) \"0\" | tee -a log.csv"}
{"English":"Find all empty folders in the current directory and below","Bash":"find . -type d -empty"}
{"English":"display long listing of all the files in the root folder which are bigger than 3KB","Bash":"find \/ -dev -size +3000 -exec ls -l {} ;"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's\/.*\/\"&\"\/' | xargs ls -l"}
{"English":"Find all directories in \/path\/to\/dir\/ without going into sub-directories","Bash":"find \/path\/to\/dir\/ -mindepth 1 -maxdepth 1 -type d"}
{"English":"Archive \"\/media\/10001\/music\/\" on host \"server\" to local directory \"\/media\/incoming\/music\/\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","Bash":"rsync -avzru --delete-excluded server:\/media\/10001\/music\/ \/media\/Incoming\/music\/"}
{"English":"Create a symbolic link named \"$1\/link\" to the current working directory","Bash":"ln -s \"`pwd`\" $1\/link"}
{"English":"find all readable files","Bash":"find \/ -readable"}
{"English":"To match only hidden dot directories","Bash":"find \/nas01\/backups\/home\/user\/ -type d -name \".*\" -print0 -exec ls -lrt {} \\;"}
{"English":"Lookup information for user \"vivek\"","Bash":"finger vivek"}
{"English":"search for the file foo.txt in the current folder and open it in vi editor","Bash":"find -name foo.txt -execdir vim '{}' ';'"}
{"English":"Prints calendar of February, 1900.","Bash":"cal 2 1900"}
{"English":"Change permissions to 0755 for all directories in the \/path directory tree","Bash":"find \/path -type d -exec chmod 0755 {} \\;"}
{"English":"change the directory to the last found folder in the directory 'a'","Bash":"cd `find a |sed '$!d'`"}
{"English":"List all files\/directories under current directory with 'FooBar' in their paths ensuring white space safety","Bash":"find . -print0 | grep --null 'FooBar' | xargs -0"}
{"English":"Write the common third space separated fields in \"file1.sorted\" and \"file2.sorted\" to \"common_values.field\"","Bash":"comm -12 <(cut -d \" \" -f 3 file1.sorted | uniq) <(cut -d \" \" -f 3 file2.sorted | uniq) > common_values.field"}
{"English":"Copy an entire file structure, creating empty files in the copy instead of copying the actual files.","Bash":"find src\/ -type d -exec mkdir -p dest\/{} \\; -o -type f -exec touch dest\/{} \\;"}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 4 days ago","Bash":"find . -type f -mtime +4"}
{"English":"Find all .zip files starting from the current directory which are owned by user tommye","Bash":"find . -type f -user tommye -iname \"*.zip\""}
{"English":"Display the current directory tree except files or directories starting with \"3rd\"","Bash":"tree -I '3rd*'"}
{"English":"display the count of all the directories in the current folder","Bash":"find . -type d \u2013print | wc -l"}
{"English":"removes last N lines from file.txt","Bash":"head --lines=-N file.txt"}
{"English":"Find all symbolic links under current directory that are not hard links","Bash":"find . -type f -links 1 -print"}
{"English":"Set trace prompt to print seconds.nanoseconds","Bash":"PS4='+ $(date \"+%s.%N\")\\011 '"}
{"English":"Search the \/path directory tree for files that do not have a valid user or group","Bash":"find \/path -nouser -or -nogroup"}
{"English":"Remove all .mpg files in the \/home\/luser directory tree","Bash":"find \/home\/luser -type f -name '*.mpg' | tr \"\\n\" \"\\000\" | xargs -0 rm -f"}
{"English":"find for the word \"dba_2pc_pending\" in all the files of current fodler having the word \"sql\" in their name","Bash":"find . -print|grep sql|xargs grep -i dba_2pc_pending"}
{"English":"Find all files\/directories under $TARGET_DIR directory tree matching the posix extended regular expression \\\".*\/$now.*\\\" (where $now is a variable) and save the output in file $FILE_LIST","Bash":"find $TARGET_DIR -regextype posix-extended -regex \\\".*\/$now.*\\\" -fprint $FILE_LIST"}
{"English":"display all the files in current folder which have been changed in the last 2-6 days","Bash":"find . -cmin +2 -cmin -6"}
{"English":"Measure the disk space taken up by all TXT files in the current directory tree","Bash":"find . -iname \"*.txt\" -exec du -b {} + | awk '{total += $1} END {print total}'"}
{"English":"Find all files that are exactly 50 bytes","Bash":"find \/ -size 50c"}
{"English":"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","Bash":"find . -type d -regextype posix-egrep -regex '\\.\/processor[[:digit:]]*\/10\\.(1|2)'"}
{"English":"Save the greater version number of \"$1\" and \"$2\" into variable \"ver\"","Bash":"ver=`echo -ne \"$1\\n$2\" |sort -Vr |head -n1`"}
{"English":"List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest","Bash":"du -s * | sort -n"}
{"English":"Prints all child processes of a process with id 20238.","Bash":"pstree -p 20238 | sed 's\/(\/\\n(\/g' | grep '(' | sed 's\/(\\(.*\\)).*\/\\1\/'"}
{"English":"Print a list of all duplicate case insensitive filenames in the current directory tree","Bash":"find . -type f | awk -F\/ '{print $NF}' | sort -f | uniq -i -d"}
{"English":"Open a ssh connection to user@host with X11 forwarding to run GUI programs","Bash":"ssh user@host -X"}
{"English":"display all normal\/regular files in a folder","Bash":"find \/home\/the_peasant -type f"}
{"English":"List all the .c files under the current directory and below in a 3 column format","Bash":"find . -name \"*.c\" | xargs -n3 echo"}
{"English":"Gets list of IP addresses of all network interfaces.","Bash":"ifconfig | awk -F\"[ :]+\" '\/inet addr\/ && !\/127.0\/ {print $4}'"}
{"English":"search for the pattern in all the regular\/normal files in the entire file system","Bash":"find \/ -type f -print0 | xargs -0 grep -i pattern"}
{"English":"display all the html files in the current folder excluding search in the path .\/foo","Bash":"find . -path \".\/foo\" -prune -o -type f -name \"*.html\""}
{"English":"Print the byte count of all regular files found in the current directory tree","Bash":"find . -type f | xargs | wc -c"}
{"English":"remove all core files in the file system","Bash":"find \/ -name \"*.core\" | xargs rm"}
{"English":"Print which files differ between \"folder1\" and \"folder2\" treating all files as text","Bash":"diff -arq folder1 folder2"}
{"English":"Find all files under current directory and show their file information","Bash":"find . -type f -exec file {} \\;"}
{"English":"Find the file whose inode number is 1316256","Bash":"find . -inum 1316256"}
{"English":"Overwirte file '\/path\/to\/your\/file' with random content, then overwrite with zeroes, and remove, showing progress while execution.","Bash":"shred -v -n 1 -z -u \/path\/to\/your\/file"}
{"English":"Make directory named in variable \"archive\" with \".tar*\" stripped from the end","Bash":"mkdir ${archive%.tar*}"}
{"English":"Find all files in the current directory recursively with \"linkin park\" in their names and copy them to \/Users\/tommye\/Desktop\/LP, preserving path hierarchy","Bash":"find . -type f -iname \"*linkin park*\" | cpio -pvdmu \/Users\/tommye\/Desktop\/LP"}
{"English":"Print file type of the executable file of command \"file\"","Bash":"file `which file`"}
{"English":"Find all files\/directories named orm.properties under current directory","Bash":"find . -name \"orm.properties\""}
{"English":"Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago","Bash":"find $backup_path\/* -mtime +30 -exec rm {} \\;"}
{"English":"Find .jpg files owned by user daniel in the current directory and its sub-directories.","Bash":"find . -user daniel -type f -name *.jpg"}
{"English":"Print $d if $d is an empty directory","Bash":"find \"$d\" -prune -empty -type d"}
{"English":"Lists all files in a current folder, separating names with space.","Bash":"ls -1 | awk 'ORS=\" \"'"}
{"English":"Find files with a question mark in their names","Bash":"find . -name \\*\\\\?\\*"}
{"English":"Remount \"rfs\" filesystem \"\/dev\/stl12\" on \"\/system\" with read and write permission","Bash":"mount -o rw,remount -t rfs \/dev\/stl12 \/system"}
{"English":"Report file system containing path to \/some\/dir disk usage in kilobytes.","Bash":"df -k \/some\/dir"}
{"English":"Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches","Bash":"find . -name '*.txt'|xargs grep -m1 -ri 'oyss'"}
{"English":"Find all files\/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time","Bash":"find ~ -iname \"screen*\" | more"}
{"English":"Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x","Bash":"find . -type d -exec chmod u=rwx,g=rx,o=x {} \\;"}
{"English":"Prints number of files with extension \"${EXTENSION}\" in the \"${SEARCHPATH}\" directory.","Bash":"echo \"Number files in SEARCH PATH with EXTENSION:\" $(ls -1 \"${SEARCHPATH}\"\/*.\"${EXTENSION}\" | wc -l)"}
{"English":"display all regular\/normal files in the folder \"dir\" and display the filename along with file size","Bash":"find dir -type f -printf \"f %s %p\\n\""}
{"English":"Recursively find the latest modified file in the current directory","Bash":"find . -type f -print0|xargs -0 ls -drt|tail -n 1"}
{"English":"find all of the executable files on your computer","Bash":"find \/ -executable"}
{"English":"Find all files under current directory whose file type description contains \"image\", display only path to each file.","Bash":"find . -type f -exec file {} \\; | grep -o -P '^.+: \\w+ image'"}
{"English":"display all the files in the current folder","Bash":"find . -print"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","Bash":"find . -mtime 0 | grep -v '^\\.\/en' | grep -v '^\\.\/es' | grep -v .swp"}
{"English":"Search the home directory tree for video files","Bash":"find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'"}
{"English":"Search for the pattern 'search string' in all the files in the ''\/tmp folder and display the matched lines along with the file names","Bash":"find \/tmp -type f -exec grep 'search string' '{}' \/dev\/null \\+"}
{"English":"Remove \"-\" from the contents of \"\/proc\/sys\/kernel\/random\/uuid\" and save output to variable \"comment\"","Bash":"comment=$(cat \/proc\/sys\/kernel\/random\/uuid | sed 's\/\\-\/\/g')"}
{"English":"Merge each line in \"file\" into a single comma separated line","Bash":"paste -d, -s file"}
{"English":"Prints full path of a 'cat.wav' file in a current folder.","Bash":"ls $PWD\/cat.wav"}
{"English":"Find the 5 largest regular files in the Downloads folder of tecmint's home directory.","Bash":"find \/home\/tecmint\/Downloads\/ -type f -exec du -Sh {} + | sort -rh | head -n 5"}
{"English":"find all the files which have the write permission to the group and remove the write permission.","Bash":"find . -perm -20 -exec chmod g-w {} ;"}
{"English":"display all the files having the word \"searched phrasse\" in their name in the current folder excluding those from the paths \"\/tmp\/\" and \".\/var\/log\"","Bash":"find . -type f -name \"*searched phrasse*\" ! -path \".\/tmp\/*\" ! -path \".\/var\/log\/*\""}
{"English":"find all regular files under the \/etc\/sysconfig directory that were accessed in the last 30 minutes","Bash":"find \/etc\/sysconfig -amin -30 -type f"}
{"English":"Print whether the unique contents of \"set1\" and \"set2\" differ","Bash":"diff -q <(sort set1 | uniq) <(sort set2 | uniq)"}
{"English":"Print the names of all files in or below the current directory, with all of the file permission bits S_ISUID, S_ISGID, and S_IWOTH set","Bash":"find . -perm -o+w,+s"}
{"English":"Convert relative symbolic link \"$link\" to absolute symbolic link","Bash":"ln -sf \"$(readlink -f \"$link\")\" \"$link\""}
{"English":"Request that the master ssh connection \"otherHosttunnel\" exits","Bash":"ssh -O exit otherHosttunnel"}
{"English":"Remove all files in and below the current directory whose names begin with \"not\"","Bash":"find . -name not\\* -print0 | xargs -0 rm"}
{"English":"Search the current directory tree for regular files lacking read permissions for user, group, or others","Bash":"find . -type f ! -perm -444"}
{"English":"find all the files that have been changed today","Bash":"find . -ctime 0 -type f"}
{"English":"display a long listing of all the log files in the current folder which are bigger than 1MB","Bash":"find . -size +1000k -name *.log -print0 | xargs -0 ls \u2013lSh"}
{"English":"Executes 'echo \"$ret\"' in a subshell that is opened by command 'true'.","Bash":"true | echo \"$ret\""}
{"English":"Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.","Bash":"info bash 'Basic Shell Features' 'Shell Expansions' 'Filename Expansion' 'Pattern Matching'"}
{"English":"Make directories to \"directory{1..3}\/subdirectory{1..3}\/subsubdirectory{1..2}\" as needed","Bash":"mkdir -p directory{1..3}\/subdirectory{1..3}\/subsubdirectory{1..2}"}
{"English":"Find all files\/directories which have been modified within the last day in the drectories\/files taken from the glob pattern '\/tmp\/test\/*'","Bash":"find \/tmp\/test\/* -mtime -1"}
{"English":"Recursively copy directory or file \/something on host \"myServer\" to current directory on local host, connecting as ssh user matching username on local host.","Bash":"scp -r myServer:\/something"}
{"English":"Print a listing of the `other' directory","Bash":"find other -maxdepth 1 -printf \"%P\\n\""}
{"English":"find all the database files in the folder \/var\/named","Bash":"find \/var\/named -type f -name *.db"}
{"English":"Archive current directory to \"\/some\/path\" on localhost, using ssh to authentify as user \"me\", only update files that are newer in the source directory.","Bash":"rsync -auve \"ssh -p 2222\" . me@localhost:\/some\/path"}
{"English":"Find recursively all files whose names ends with \"foo\"","Bash":"find . -name \"*foo\""}
{"English":"display a long listing of all the files in the home folder which are bigger than 200MB","Bash":"find \/home -size +200M -exec ls -sh {} \\;"}
{"English":"Lists all files in a current folder, separating names with comma.","Bash":"ls -1 | tr '\\n' ',' | sed 's\/,$\/\\n\/'"}
{"English":"Find all files under current directory with 755 permission and change their permission to 644","Bash":"find . -type f -perm 755 -exec chmod 644 {} \\;"}
{"English":"Get a recursive file list of directory $dir","Bash":"find $dir -type f"}
{"English":"Search the current directory tree for regular files that contain \"string\"","Bash":"find . -type f -printf '\"%p\"\\n' | xargs grep string"}
{"English":"Write \"2-1.1.1\" to standard output and to file \"\/sys\/bus\/usb\/drivers\/usb\/unbind\"","Bash":"echo '2-1.1.1'|sudo tee \/sys\/bus\/usb\/drivers\/usb\/unbind"}
{"English":"Remove recursively Emacs backup files in the current directory","Bash":"find . -name '*~' -print0 | xargs -0 rm"}
{"English":"Save host name in variable \"thisHOSTNAME\"","Bash":"thisHOSTNAME=`hostname`"}
{"English":"search for files in the current folder which start with \"myfile\" ( case insensitive search )","Bash":"find . -iname 'MyFile*'"}
{"English":"Find \"*.dat\" files recursively in the current directory, print the lines starting on line 5 to the console and save to \"concat.txt\"","Bash":"find . -type f \\( -name \"*.dat\" \\) -exec tail -n+5 -q \"$file\" {} + |tee concat.txt"}
{"English":"Print a count of case insensitive duplicate filenames in the current directory","Bash":"ls -1 | tr '[A-Z]' '[a-z]' | sort | uniq -c | grep -v \" 1 \""}
{"English":"Search the entire file hierarchy for files ending in '.old' and delete them.","Bash":"find \/ -name \"*.old\" -delete"}
{"English":"Find the first file\/directory in ... directory and quit","Bash":"find ... -print -quit"}
{"English":"List *.pl directories in the current directory tree","Bash":"find . -name \"*.pl\" -exec ls -ld {} \\;"}
{"English":"Adjust the timestamp of file $filename by subtracting 2 hours from it","Bash":"touch -d \"$(date -r \"$filename\") - 2 hours\" \"$filename\""}
{"English":"Print the names and sizes of regular files residing in the \"dir\" directory tree","Bash":"find dir -type f -printf \"f %s %p\\n\""}
{"English":"searches through the root filesystem (\"\/\") for the file named Chapter1, and prints the location","Bash":"find \/ -name Chapter1 -type f"}
{"English":"Create symbolic links in the current directory for all files located in directory \"\/path\/with\/files\" with a name containing \"txt\"","Bash":"find \/path\/with\/files -type f -name \"*txt*\" -exec ln -s {} . ';'"}
{"English":"Remount \"\/dev\/block\/mtdblock3\" on \"\/system\" with read only permission","Bash":"mount -o remount,ro -t yaffs2 \/dev\/block\/mtdblock3 \/system"}
{"English":"Find all files\/directories that are owned by user 'eric' under current directory tree","Bash":"find -user eric -print"}
{"English":"Convert relative path \"\/x\/y\/..\/..\/a\/b\/z\/..\/c\/d\" into absolute path with resolved symbolic links","Bash":"readlink -f \/x\/y\/..\/..\/a\/b\/z\/..\/c\/d"}
{"English":"Find directories named `doc' in \/usr and below","Bash":"find \/usr \\( -name doc -and -type d \\)"}
{"English":"Find all regular files under current directory","Bash":"find . -type f"}
{"English":"Expand bash array \"myargs\" as arguments to \"mv\"","Bash":"mv \"${myargs[@]}\""}
{"English":"Archive showing progress all files in \"\/media\/2TB\\ Data\/data\/music\/\" to \"\/media\/wd\/network_sync\/music\/\" excluding files matching \"*.VOB\", \"*.avi\", \"*.mkv\", \"*.ts\", \"*.mpg\", \"*.iso\", \"*ar\", \"*.vob\", \"*.BUP\", \"*.cdi\", \"*.ISO\", \"*.shn\", \"*.MPG\", \"*.AVI\", \"*.DAT\", \"*.img\", \"*.nrg\", \"*.cdr\", \"*.bin\", \"*.MOV\", \"*.goutputs*\", \"*.flv\", \"*.mov\", \"*.m2ts\", \"*.cdg\", \"*.IFO\", \"*.asf\", and \"*.ite\"","Bash":"rsync -av --progress --exclude=*.VOB --exclude=*.avi --exclude=*.mkv --exclude=*.ts --exclude=*.mpg --exclude=*.iso --exclude=*ar --exclude=*.vob --exclude=*.BUP --exclude=*.cdi --exclude=*.ISO --exclude=*.shn --exclude=*.MPG --exclude=*.AVI --exclude=*.DAT --exclude=*.img --exclude=*.nrg --exclude=*.cdr --exclude=*.bin --exclude=*.MOV --exclude=*.goutputs* --exclude=*.flv --exclude=*.mov --exclude=*.m2ts --exclude=*.cdg --exclude=*.IFO --exclude=*.asf --exclude=*.ite \/media\/2TB\\ Data\/data\/music\/* \/media\/wd\/network_sync\/music\/"}
{"English":"Find all directories in 1 level down the current directory","Bash":"find . -mindepth 1 -maxdepth 1 -type d"}
{"English":"Find all files under \/path\/to\/dir that were modified less than 7 days ago and show only first several lines of output","Bash":"find \/path\/to\/dir -type f -mtime -7 -print0 | xargs -0 ls -lt | head"}
{"English":"Find every vim undo file under current directory","Bash":"find -type f -iname '*.un~'"}
{"English":"Print nothing because B.txt is compared with itself.","Bash":"comm -2 -3 <(sort -n B.txt) <(sort -n B.txt)"}
{"English":"Archive \"src\" to \"dst\" without overwriting existing files in \"dst\"","Bash":"rsync -a -v --ignore-existing src dst"}
{"English":"Mount the \"linprocfs\" filesystem on \"\/proc\"","Bash":"mount -t linprocfs none \/proc"}
{"English":"Move all files excluding hidden files in \"\/path\/subfolder\/\" to \"\/path\/\"","Bash":"mv \/path\/subfolder\/* \/path\/"}
{"English":"Split \"list.txt\" into files with at most 600 lines each","Bash":"split -l 600 list.txt"}
{"English":"Find files in the current directory tree that are named \"some_pattern\" and move them to directory \"target_location\"","Bash":"find . -name some_pattern -print0 | xargs -0 -i mv {} target_location"}
{"English":"Overwirte file '\/path\/to\/your\/file' with random content, showing progress while execution.","Bash":"shred -v -n 1 \/path\/to\/your\/file #overwriting with random data"}
{"English":"Update timestamps of all files and directories under directory \/path\/to\/dir.","Bash":"find \/path\/to\/dir -print0 | xargs -0 touch"}
{"English":"Force create a symbolic link without dereferencing named \"$SYMLINK_PATH\" to \"$lastModified\"","Bash":"ln -nsf $lastModified $SYMLINK_PATH"}
{"English":"Mount \"proc\" file system on \"\/var\/snmp3\/proc\"","Bash":"mount -t proc none \/var\/snmp3\/proc"}
{"English":"Search the current directory tree for file `teste.tex'","Bash":"find -name teste.tex"}
{"English":"Find files matching regular expression regexp","Bash":"find . | xargs grep regexp"}
{"English":"Save the system host name to variable \"myHostName\"","Bash":"myHostName=`hostname`"}
{"English":"Search for occurrences of string \"main(\" in the .c files from the current directory tree","Bash":"find . -type f -name \"*.c\" -print -exec grep -s \"main(\" {} \\;"}
{"English":"List all files in the current directory tree invoking xargs only once","Bash":"find . -type f -print | xargs ls -l"}
{"English":"Make a copy of file.txt in all directories in current directory - names may not contain spaces.","Bash":"ls -d *\/ | xargs -iA cp file.txt A"}
{"English":"find all the files in the current directory and display them","Bash":"find . -exec echo {} ;"}
{"English":"file1.txt and file2.txt both contain a name and a number on each line. For each name whose corresponding number does not match in both files, display the \"Age of ... is different\" message.","Bash":"join file{1,2}.txt | awk '$2 != $3 { print \"Age of \" $1 \" is different\" }'"}
{"English":"Unzip all files that match \"*.gz\" in the current directory and subdirectories to stdout and search for \"test\"","Bash":"find . -name \"*.gz\" -exec zcat \"{}\" + |grep \"test\""}
{"English":"Find files by type","Bash":"find -type type_descriptor"}
{"English":"display all text files in the current folder","Bash":"find . -type f -name \"*.txt\""}
{"English":"Compress \"archive.tar\"","Bash":"gzip archive.tar"}
{"English":"Format the contents of \"[file]\" in a neat table","Bash":"cat file | column -t"}
{"English":"find all the files in the current folder and display adding quotations to each file and replace spaces with new line","Bash":"find $PWD | sed -e 's\/^\/\"\/g' -e 's\/$\/\"\/g' | tr '\\n' ' '"}
{"English":"Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space","Bash":"diff -bur folder1\/ folder2\/"}
{"English":"Fix files to default permissions 644","Bash":"find . -type f -exec chmod 644 {} \\;"}
{"English":"Find all files\/directories with '.bar' extension in maximum 2 levels down the current directory","Bash":"find . -name *.bar -maxdepth 2 -print"}
{"English":"Count md5sum of all '*.py' files in a current folder with subfolders.","Bash":"find \/path\/to\/dir\/ -type f -name \"*.py\" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"}
{"English":"Prints latest modified file in a directory","Bash":"ls -1t | head -1"}
{"English":"Find all Makefile's in the current directory tree","Bash":"find -type f -name \"Makefile\""}
{"English":"Move all the .c files from the current directory tree to temp\/","Bash":"find . -name \"*.c\" -print0 | xargs -0 -n1  -I '{}' mv '{}' temp"}
{"English":"Delete all empty directories in the \"test\" directory tree","Bash":"find test -depth -type d -empty -delete"}
{"English":"Check all .txt files whose names may contain spaces whether they contain \"needle\"","Bash":"find . -type f -iname \"*.txt\" -print0 | xargs -0 grep \"needle\""}
{"English":"Find files\/directories that are owned by the user 'syslog' in entire filesystem","Bash":"find \/ -user syslog"}
{"English":"Find \"*prefs copy\" files in the \/mnt\/zip directory tree and remove them with prompting","Bash":"find \/mnt\/zip -name \"*prefs copy\" -print0 | xargs -p rm"}
{"English":"Find all files matching shell pattern \"foo\/bar\" in the foo directory tree","Bash":"find foo -path foo\/bar -print"}
{"English":"Find all files under and below \/dir that were accessed less than 60 minutes ago","Bash":"find \/dir -amin -60"}
{"English":"find all the jpg files in the directory \/ftp\/dir which are bigger than 500KB","Bash":"find \/ftp\/dir\/ -size +500k -iname \"*.jpg\""}
{"English":"Delete all directories in the \/myDir directory tree","Bash":"find \/myDir -type d -delete"}
{"English":"Print each line in \"file1\" whose first word does not exist as the first word of any line in \"file2\"","Bash":"join -v 1 <(sort file1) <(sort file2)"}
{"English":"Invoke a trusted X11 forwarding SSH connection with the server $ssh_server as user $ssh_user","Bash":"ssh -Y $ssh_user@$ssh_server"}
{"English":"Find all regular files with 755 permission under current directory tree and change their permission to 644","Bash":"find . -type f -perm 755 -exec chmod 644 {} \\;"}
{"English":"Find files\/directories named 'aaa.txt' under current directory tree","Bash":"find . -name aaa.txt"}
{"English":"display all the files having spaces in the current folder","Bash":"find . -name \"filename including space\""}
{"English":"find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names","Bash":"find . -name '*.[ch]' | xargs grep -l thing"}
{"English":"Search the home directory tree for files owned by sam","Bash":"find \/home -user sam"}
{"English":"Print '-okdir is an action so an implicit -print is not applied' for each file\/directory found by the name 'file' under current directory tree","Bash":"find -name file -okdir echo '-okdir is an action so an implicit -print is not applied' \\;"}
{"English":"Display the number of lines in all regular files under current directory tree and also show the total count","Bash":"find . -type f -exec wc -l {} +"}
{"English":"Find all 400 permission files under \/data directory","Bash":"find \/data -type f -perm 400"}
{"English":"Find all regular files in the current directory tree ignoring GIT and SVN directories","Bash":"find . \\( -type d -regex '^.*\/\\.\\(git\\|svn\\)$' -prune -false \\) -o -type f -print0"}
{"English":"List all variables (names only) with names containing X.","Bash":"env | awk -F \"=\" '{print $1}' | grep \".*X.*\""}
{"English":"Find all files\/directories in maximum 1 level down the current directory which do not have only read permission for 'other'","Bash":"find . -maxdepth 1 ! -perm  -o=r"}
{"English":"find all the html files in the current folder which have been modified in the last 7 days","Bash":"find . -mtime -7 -name \"*.html\" -print"}
{"English":"Find all btree*.c files under current directory","Bash":"find . -type f -name 'btree*.c'"}
{"English":"Add read permission for 'other' for all files\/directories named 'rc.conf' under current directory tree","Bash":"find . -name \"rc.conf\" -exec chmod o+r '{}' \\;"}
{"English":"list symbolic links under the directory \"$directory\"","Bash":"find $directory -type l"}
{"English":"Change to location of '$TARGET_FILE' file.","Bash":"cd `dirname $TARGET_FILE`"}
{"English":"Recursively set all permissions under \"..\/tools\" to 777","Bash":"chmod -R 777 ..\/tools"}
{"English":"Display \"\/tmp\/file\" as a table of width 30 with columns filled before rows","Bash":"column -x -c 30 \/tmp\/file"}
{"English":"Find all *.$input_file_type files\/directories under $source_dir with the null character as the delimiter","Bash":"find \"$source_dir\" -name \"*.$input_file_type\" -print0"}
{"English":"find all regular\/normal files which have cpp folder in their path","Bash":"find . -type f -path \"*\/cpp\/*\""}
{"English":"Removes all files from current folder but 5 newest ones, ignoring folders in a files list.","Bash":"find . -maxdepth 1 -type f | xargs -x ls -t | awk 'NR>5' | xargs -L1 rm"}
{"English":"display all the text files in a folder","Bash":"find $1 -type f -name '*'$n'.txt'"}
{"English":"change permissions of all the script files in a directory","Bash":"find \/home\/john\/script -name \"*.sh\" -type f -exec chmod 644 {} \\;"}
{"English":"List all regular files residing in the current directory tree and containing string \"\/bin\/ksh\"","Bash":"find . -type f -exec grep -li '\/bin\/ksh' {} \\;"}
{"English":"List the last entry of the numerically sorted list of all files and folders under \"\/foldername\"","Bash":"find \/foldername | sort -n | tail -1"}
{"English":"Find all files in your home directory and below that are exactly 100M.","Bash":"find ~ -size 100M"}
{"English":"Search the \/tmp tree for files between 10kb and 20kb","Bash":"find \/tmp -size +10k -size -20k"}
{"English":"Calculate the md5 sum of \"exampleString\"","Bash":"echo -n 'exampleString' | md5sum"}
{"English":"Find all broken symlinks under current directory","Bash":"find -xtype l"}
{"English":"Delete characters in columns 36 through 40 from the output of \"finger\"","Bash":"finger |  sed 's\/\\(.\\{35\\}\\).....\/\\1\/'"}
{"English":"display all files in the directory \"dir\" which have been changed in the last 60 minutes","Bash":"find \/dir -cmin -60"}
{"English":"Find files\/directories that belong to user 'ian' under '\/tmp' directory tree","Bash":"find \/tmp -user ian"}
{"English":"Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format","Bash":"find  \/ -type d -iname \"project.images\" -ls"}
{"English":"Find all files owned by user vivek","Bash":"find \/ -user vivek"}
{"English":"find files under the current directory ending in \"txt\" and list them, or ending in  \"html\" but do nothing.","Bash":"find . -name '*.txt' -print -o -name '*.html'"}
{"English":"Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)","Bash":"touch -a UEDP0{1..5}_20120821.csv"}
{"English":"Search the system for directories named \"needle\"","Bash":"find \/ -type d -name \"needle\""}
{"English":"Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'","Bash":"find . -not -path \"*git*\" -not -name '*git*' |grep git"}
{"English":"Print the common third whitespace separated fields in \"file1\" and \"file2\"","Bash":"comm -12 <(awk '{print $3}' file1 | sort -u) <(awk '{print $3}' file2 | sort -u)"}
{"English":"Search the current directory tree for file \"a.txt\"","Bash":"find . -name \"a.txt\" -print"}
{"English":"Set permissions of all directories under \"\/opt\/lampp\/htdocs\" to 711","Bash":"find \/opt\/lampp\/htdocs -type d -exec chmod 711 {} \\;"}
{"English":"Count the number of equal lines in \"file1.txt\" and \"file2.txt\"","Bash":"comm -12 <(sort file1.txt) <(sort file2.txt) | wc -l"}
{"English":"find for lighttpd in \/var","Bash":"find \/var -name lighttpd"}
{"English":"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with \".git\"","Bash":"find . \\! -path \".\/.git*\" -a \\! -name states_to_csv.pl"}
{"English":"Fix files to default permissions 755","Bash":"find . -type d -exec chmod 755 {} \\;"}
{"English":"Find all *.php (case insensitive) files and *.js files\/directories (case insensitive) under \/home\/jul\/here excluding *.js files\/directories under \/home\/jul\/here\/exclude\/* paths","Bash":"find \/home\/jul\/here -type f -iname \"*.php\" -o -iname \"*.js\" ! -path \"\/home\/jul\/here\/exclude\/*\""}
{"English":"Convert \";\" separated list \"luke;yoda;leila\" to new line separated list","Bash":"echo \"luke;yoda;leila\" | tr \";\" \"\\n\""}
{"English":"Calculate md5 sum of file $item and save it to variable 'md5'","Bash":"md5=$(md5sum $item | cut -f1 -d\\ )"}
{"English":"Print the total disk usage in bytes of all files listed in \"files.txt\"","Bash":"cat files.txt | xargs du -c | tail -1 | awk '{print $1}'"}
{"English":"display all the files in the current folder excluding the directory aa","Bash":"find . -type d ! -name aa"}
{"English":"Delete all empty files\/directories under test directory","Bash":"find test -depth -empty -delete"}
{"English":"display all the files in the file system which belong to no user","Bash":"find \/ -nouser -print"}
{"English":"Find all dir* files\/directories under parent","Bash":"find parent -name dir*"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f | sed 's\/.*\/\"&\"\/' | xargs ls -E | awk '{ print $6,\" \",$7,\" \",$9 }' | sort | tail -1"}
{"English":"search all mp3 files in the folder \"\/home\/you\" which have been modified yesterday (from the start of day 00:00 to 23:59)","Bash":"find \/home\/you -iname \"*.mp3\" -daystart -type f -mtime 1"}
{"English":"search for all the regular files in the folder \/home which have the permission 077","Bash":"find \/home -type f -perm 0777 -print"}
{"English":"display all the files in the current folder and do not search in sub directories and move them to the directory \/directory1\/directory2.","Bash":"find . -maxdepth 1 -type f | xargs -I \u2018{}\u2019 sudo mv {} \/directory1\/directory2"}
{"English":"Print each character in \"Hello\" as a hexadecimal value","Bash":"echo -n \"Hello\" | od -A n -t x1"}
{"English":"Find all files\/directories in the paths expanded by the glob pattern '.*'","Bash":"find .*"}
{"English":"Delete empty regular files","Bash":"find . -type f -empty -delete"}
{"English":"Go to directory \/cygdrive\/c\/Program Files (x86)\/$dollarsign using single quotes to escape special characters, including dollar signs","Bash":"cd '\/cygdrive\/c\/Program Files (x86)\/$dollarsign'"}
{"English":"lists txt or html files older than 5 days, null separated","Bash":"find . \\( -name '*.txt' -o -name '*.html' \\) -mtime +5 -print0"}
{"English":"Find all *stat files\/directories under \/usr","Bash":"find \/usr -name *stat"}
{"English":"Print the file 'text1;text2;text3' replacing each space(\" \") with a newline","Bash":"cat \"text1;text2;text3\" | sed -e 's\/ \/\\n\/g'"}
{"English":"Recursively finds all folders in a current folder that contain files like '.git'.","Bash":"find . -name '.git' | xargs dirname"}
{"English":"Search the regular files of the current directory tree for string \"stuff\"","Bash":"find . -type f -exec grep -n \"stuff\" {} \\; -print"}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 5 days ago","Bash":"find . -type f -mtime +5"}
{"English":"display all files in current folder in sorted order of depth","Bash":"find folder1\/ -type f -printf \"%d\\t%p\\n\" | sort -n | sed -e \"s|[0-9]*\\t||\""}
{"English":"Read a line from standard input with prompt \"Is this a good question (y\/n)? \" and save the response to variable \"answer\"","Bash":"read -p \"Is this a good question (y\/n)? \" answer"}
{"English":"Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each","Bash":"find . -name \"*.java\" -exec cp {} {}.bk \\;"}
{"English":"Print the IP addresses for the current host name","Bash":"hostname  -I"}
{"English":"Prints total count of lines of all files in a current folder and subfolders.","Bash":"find . -type f -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}
{"English":"Infinitely print \"1\" then \"0\"","Bash":"yes 0 | sed '1~2s\/0\/1\/'"}
{"English":"find all the html files which are modified in the last 7 days","Bash":"find . -mtime -7 -name \"*.html\""}
{"English":"Find all files\/directories named 'date' under \/usr","Bash":"find \/usr -name date"}
{"English":"Find all files\/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them","Bash":"find \/storage -name \"*.mp4\" -o -name \"*.flv\" -type f | sort | head -n500"}
{"English":"Represent the UTC date given in time string \"1970.01.01-$string1\" as number of seconds since the epoch and save it in 't1' variable","Bash":"t1=$(date -u -d \"1970.01.01-$string1\" +\"%s\")"}
{"English":"Find the directory with least modification time under current directory","Bash":"find -type d -printf '%T+ %p\\n' | sort | head -1"}
{"English":"Format bash array \"${arr}\" in columns","Bash":"echo \" ${arr[@]\/%\/$'\\n'}\" | sed 's\/^ \/\/' | column"}
{"English":"Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way","Bash":"find MyApp.app -name Headers -type d -prune -exec rm -rf {} +"}
{"English":"Convert the contents of 'var1' variable to lowercase","Bash":"var1=`echo $var1 | tr '[A-Z]' '[a-z]'`"}
{"English":"display all file in the folder \/dir\/to\/search except \".c\" files","Bash":"find \/dir\/to\/search\/ \\! -name \"*.c\" print"}
{"English":"find all the files in the current folder and display adding quotations to each file and replace spaces with new line","Bash":"find $PWD -exec echo -n '\"{}\" ' \\; | tr '\\n' ' '"}
{"English":"Mount \"\/tmp\/loop.img\" on \"\/mnt\/image\" as a loop back device","Bash":"mount \/tmp\/loop.img \/mnt\/image -o loop"}
{"English":"Remove all files that end with 'prefs copy' in their names under '\/mnt\/zip' directory tree","Bash":"find \/mnt\/zip -name \"*prefs copy\" -print | xargs rm"}
{"English":"find all files in current folder which are bigger than 1 MB and move them to another folder","Bash":"find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files"}
{"English":"Find all 1US* files\/directories under current directory","Bash":"find . -name '1US*'"}
{"English":"List all files under current directory","Bash":"find . -type f | xargs ls"}
{"English":"display all executable files in the folder \/home","Bash":"find \/home -perm \/a=x"}
{"English":"find all files not ending in \".html\"","Bash":"find . -type f -not -name \"*.html\""}
{"English":"Synchronize \"\/home\/user1\/\" to \"wobgalaxy02:\/home\/user1\/\" including hidden files","Bash":"rsync -av \/home\/user1\/ wobgalaxy02:\/home\/user1\/"}
{"English":"find all regular file and create jw-htmlfiles.tar","Bash":"find . -type f -name \"*html\" | xargs tar cvf jw-htmlfiles.tar -"}
{"English":"Change permissions to u=rw,g=r,o= for all files in the current directory tree","Bash":"find . -type f -exec chmod u=rw,g=r,o= '{}' \\;"}
{"English":"Lists all files in a '\/home\/dreftymac\/' folder and subfolders without recursion.","Bash":"ls \/home\/dreftymac\/*"}
{"English":"Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules'","Bash":"find .\/ -not -path \"*\/node_modules\/*\" -name \"*.js\" | xargs grep keyword"}
{"English":"display a long listing of all the normal\/regular files in the current folder and do not search in the sub folders","Bash":"find . -maxdepth 1 -type f -exec ls -l {} \\; | less"}
{"English":"Find x* files\/directories under \/tmp directory whose status was changed less than 1 day ago and move them to ~\/play","Bash":"find \/tmp\/ -ctime -1 -name \"x*\" -exec mv '{}' ~\/play\/"}
{"English":"Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.","Bash":"find -type f -name 'header.php' | xargs -n 1 dirname | xargs -n 1 cp -f topscripts.php"}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | awk '\/inet addr\/{sub(\"addr:\",\"\"); print $2}'"}
{"English":"Recursively removes all files like '*.pyc' in a current folder.","Bash":"find . -name \"*.pyc\" -exec rm -rf {} \\;"}
{"English":"Find links to file path\/to\/foo.txt","Bash":"find -L \/ -samefile path\/to\/foo.txt"}
{"English":"Move all files and directories in the current directory to \"\/tmp\/blah\/\"","Bash":"mv * \/tmp\/blah\/"}
{"English":"Case-insensitive search all existing environment variables and their values for \"shell\".","Bash":"env | grep -i shell"}
{"English":"search for the files with the name \"temp\" and which have not been accessed in the last 7*24 hours in the \/usr folder","Bash":"find \/usr -name temp -atime +7 -print"}
{"English":"Deletes folder like \/tmp\/*\/* or deeper, older than +7 days if they don`t contain files or other folders.","Bash":"find \/tmp\/*\/* -mtime +7 -type d -exec rmdir {} \\;"}
{"English":"print number of jobs","Bash":"n_jobs=$( jobs -p | awk '{print NR}' )"}
{"English":"Find all files\/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~\/foo\/bar","Bash":"find . -iname \"*foobar*\" -exec cp \"{}\" ~\/foo\/bar \\;"}
{"English":"Finds all folders that contain 'ssh' file and have 'bin' in path.","Bash":"dirname `find \/ -name ssh | grep bin`"}
{"English":"Change permissions to 755 for all directories in the current directory tree","Bash":"find . -type d | xargs chmod -v 755"}
{"English":"Find all HTML files starting with letter 'a' in the current directory and below","Bash":"find . -name a\\*.html"}
{"English":"find all the xml files in the current folder which are present in the pattern text file","Bash":"find . -name \"*.xml\" -exec grep -HFf <(find . -name \"*.txt\" -printf \"%f\\n\") {} \\;"}
{"English":"find all the files in the home folder which have been modified in the last 7 days","Bash":"find $HOME -mtime -7"}
{"English":"Find all directories under 'test' directory tree that match the regex '.*\/course[0-9.]*' in their paths","Bash":"find test -type d -regex '.*\/course[0-9.]*'"}
{"English":"Find files in the \/var\/log folder which were modified an hour or more ago","Bash":"find \/var\/log\/ -mmin +60"}
{"English":"Find all files\/directories with spaces in their names under ~\/Library directory","Bash":"find ~\/Library -name '* *'"}
{"English":"Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file.","Bash":"join -o 1.1,1.2,1.3,2.1,2.2,2.3 -j2 <(sort -k2 file1) <(sort -k2 file2)"}
{"English":"Prints name of temporary file but doesn`t create nothing.","Bash":"mktemp -u"}
{"English":"create directory es if it is not exist and create direcoty LC_MESSAGES","Bash":"mkdir -p es\/LC_MESSAGES"}
{"English":"Find and delete all hard links in the \/home directory to file1","Bash":"find \/home -xdev -samefile file1 -print0 | xargs -0 rm"}
{"English":"Print appended data in \"\/var\/log\/syslog\" as the file grows","Bash":"tail -f \/var\/log\/syslog"}
{"English":"List all files in maximum 2 levels down the current directory","Bash":"find . -maxdepth 2  -type f -exec ls -l {} \\;"}
{"English":"Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty","Bash":"find project -maxdepth 1 -mindepth 1 -regextype posix-egrep ! -iregex  $PATTERN  ! -empty -type d"}
{"English":"Show all values (without the names) of variables whose name or value contains \"VARIABLE_NAME\"","Bash":"set | grep VARIABLE_NAME | sed 's\/^.*=\/\/'"}
{"English":"search  character special files called ' backup '  from  \/usr directory downwards and print them .","Bash":"find \/usr -type c -name backup -print"}
{"English":"display all the jpg files in the current folder which belong to the user nobody","Bash":"find . -name *.jpg -user nobody"}
{"English":"Changes group ownership of 'shared' to 'Workers'.","Bash":"chgrp Workers shared"}
{"English":"Prints only first ten characters of each string of file $file.","Bash":"cat $file | cut -c 1-10"}
{"English":"Lists all directories in the current folder.","Bash":"ls -d .\/*\/"}
{"English":"Find files\/directories named 'document' in 'ext2' partitions in entire filesystem","Bash":"find \/ -fstype ext2 -name document -print"}
{"English":"Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: '","Bash":"find . -maxdepth 1 -type d -print | xargs  -I \"^\" echo Directory: \"^\""}
{"English":"Remount \"\/system\" as read only","Bash":"mount -o remount,ro \/system"}
{"English":"verbosely create intermediate directoriy tmp as required and directory boostinst","Bash":"mkdir -pv \/tmp\/boostinst"}
{"English":"Find all files\/directories under current directory tree that are owned by 'root'","Bash":"find . -uid 0 -print"}
{"English":"Search *.txt files under and below \/directory\/containing\/files for \"pattern_to_search\"","Bash":"find \/directory\/containing\/files -type f -name \"*.txt\" -exec grep -H 'pattern_to_search' {} +"}
{"English":"Save the system host name in variable \"HOSTNAME\"","Bash":"HOSTNAME=$(hostname)"}
{"English":"find all files in etc which have been changed in the last 1 day","Bash":"find \/etc -daystart -ctime -1"}
{"English":"display all the files in the current folder excluding those ending with \".disabled\" in sorted order","Bash":"find \/target\/ | grep -v '\\.disabled$' | sort"}
{"English":"delete all the files in the current folder which end with \".bak\" or \".backup\" and which have not been accessed in the last 30 days","Bash":"find . ( -name '*.bak' -o -name *.backup ) -type f -atime +30 -exec rm '{}' ;"}
{"English":"Gets MAC address of en0 network interface.","Bash":"ifconfig en0 | grep -Eo ..\\(\\:..\\){5}"}
{"English":"find all files in the current folder which are bigger than 10MB and less than 50 MB","Bash":"find . -size +10M -size -50M -print"}
{"English":"Print 'file' content, formatting output as 29-symbol wide column","Bash":"cat file | fold -w29"}
{"English":"List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'","Bash":"find . -type f -print | xargs grep -il '^Subject:.*unique subject'"}
{"English":"Change owner to \"bob\" and group to \"sftponly\" of \"\/home\/bob\/writable\"","Bash":"sudo chown bob:sftponly \/home\/bob\/writable"}
{"English":"display all the files in the home folder that have been modified in the last 7*24 hours","Bash":"find $HOME -mtime -7"}
{"English":"remove all the files with the name \"Trash\" in the folder \/home","Bash":"find \/home -name Trash -exec rm {} \\;"}
{"English":"find files ending with .jpg","Bash":"find . -name '*.jpg' -print .\/bar\/foo.jpg"}
{"English":"Change permissions of all files ending in \".php\" under the current directory to 755 and print a count of modified files","Bash":"find . -name \"*.php\" -exec chmod 755 {} \\; -exec \/bin\/echo {} \\; | wc -l"}
{"English":"Find files in the current directory tree that match pattern \"*sub*\"","Bash":"find .\/ -name \"*sub*\""}
{"English":"Find all files with '.jpg' extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz","Bash":"find . -maxdepth 1 -iname \"*.jpg\" | xargs tar -czvf jpeg.tgz"}
{"English":"Change permissions to 644 for all files in the current directory tree","Bash":"find . -type f | xargs -I{} chmod -v 644 {}"}
{"English":"find for a word in all the regular files in the current directory","Bash":"find . -type f -print | xargs grep -li 'bin\/ksh'"}
{"English":"Find all the files without permission 777","Bash":"find \/ -type f ! -perm 777"}
{"English":"List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later","Bash":"find -newermt \"mar 03, 2010\" -ls"}
{"English":"convert epoch second timestamp to date","Bash":"date -d @1278999698 +'%Y-%m-%d %H:%M:%S'"}
{"English":"find all the regular\/normal files in the \/path folder and delete them","Bash":"find \/path -type f -print0 | xargs -0 rm"}
{"English":"Remove all .sh files in the current directory tree whose names begin with \"new\"","Bash":"find . -name \"new*.sh\" -exec rm -f '{}' \\;"}
{"English":"Print lines 10000 to 10010 from input \"seq 1 100000\"","Bash":"seq 1 100000 | tail -n +10000 | head -n 10"}
{"English":"Remove with prompting all files starting in \/mydir that have not been accessed in over 100 days","Bash":"find \/mydir -atime +100 -ok rm {} \\;"}
{"English":"Search the \/home\/pankaj directory for regular files whose status has changed within the last 5 minutes","Bash":"find \/home\/pankaj -maxdepth 1 -cmin -5 -type f"}
{"English":"Split \"file.tar.gz\" into files of size 1024 MB","Bash":"split -b 1024m file.tar.gz"}
{"English":"search for all the files in current folder and display all the file names separated by space","Bash":"find . | awk '{printf \"%s \", $0}'"}
{"English":"list all files under the current directory called cookies.txt","Bash":"find -name cookies.txt"}
{"English":"find all the files in the current folder that are modified after the modification date of a file","Bash":"find . -newer document -print"}
{"English":"Return all of the .conf files in Pat's user folder and subdirectories","Bash":"find \/home\/pat -iname \"*.conf\""}
{"English":"List all files in the current directory tree except for those in the .\/src\/emacs directory","Bash":"find . -path '.\/src\/emacs' -prune -o -print"}
{"English":"Change permissions of \"\/dvtcolorconvert.rb\" to 755","Bash":"sudo chmod 755 \/dvtcolorconvert.rb"}
{"English":"Recursively removes all files like '*.pyc' in a current folder.","Bash":"rm `find . -name \\*.pyc`"}
{"English":"Move \"tobecopied\/tobeexclude\" to \"tobeexclude\"","Bash":"mv tobecopied\/tobeexclude tobeexclude;"}
{"English":"Find the password file between sub-directory level 2 and 4.","Bash":"find -mindepth 3 -maxdepth 5 -name passw"}
{"English":"Find the largest 10 files (regular files) under current directory","Bash":"find . -type f -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}"}
{"English":"Find all regular files with 400 permission under '\/data' directory tree","Bash":"find \/data -type f -perm 400 -print"}
{"English":"Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'","Bash":"bgxjobs=\" $(jobs -pr | tr '\\n' ' ')\""}
{"English":"find all gzip files in a folder","Bash":"find \/home\/foo -name \"*.gz\""}
{"English":"List environment variables whose name contains \"X\"","Bash":"set | grep -oP '^\\w*(?==)' | grep X"}
{"English":"Find files associated with an inode","Bash":"find . -inum 968746 -exec ls -l {} \\;"}
{"English":"Execute \"wget -qO-  http:\/\/fake.link\/file.txt\" every 5 seconds","Bash":"watch -n 5 wget -qO-  http:\/\/fake.link\/file.txt"}
{"English":"List all *.txt files\/directories under current directory","Bash":"find . -name \"*.txt\" -exec $SHELL -c 'echo \"$0\"' {} \\;"}
{"English":"Lists all manual pages.","Bash":"apropos -r '.*'"}
{"English":"Search the \/myfiles directory tree for regular files with read and write permissions set for `others'","Bash":"find \/myfiles -type f -perm -o+rw"}
{"English":"Test if a file named 'file' in the current directory is more than 1 hour old","Bash":"find file -prune -cmin +60 -print | grep -q ."}
{"English":"Wrap each line in \"file.txt\" to fit in 80 characters","Bash":"fold -w 80 file.txt"}
{"English":"Archive \"\/media\/Incoming\/music\/\" to \"\/media\/10001\/music\/\" on host \"server\" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission","Bash":"rsync -avzru --delete-excluded \/media\/Incoming\/music\/ server:\/media\/10001\/music\/"}
{"English":"Create intermediate directories as required and directory project\/{lib\/ext,bin,src,doc\/{html,info,pdf},demo\/stat\/a}","Bash":"mkdir -p project\/{lib\/ext,bin,src,doc\/{html,info,pdf},demo\/stat\/a}"}
{"English":"replace the word foo to bar in all the regular\/normal files in the current folder (does not update the file)","Bash":"find . -type f -exec sed -i 's\/foo\/bar\/g' {} +"}
{"English":"create a symbolic link named \"$ORACLE_HOME\/include\" to file \"\/usr\/include\/oracle\/11.2\/client\"","Bash":"sudo ln -s \/usr\/include\/oracle\/11.2\/client $ORACLE_HOME\/include"}
{"English":"Mount remote \"cifs\" filesystem \"\/\/server\/source\/\" on \"\/mnt\/source-tmp\" with username \"Username\" and password \"password\"","Bash":"mount -t cifs \/\/server\/source\/ \/mnt\/source-tmp -o username=Username,password=password"}
{"English":"Make regular files from debian\/fglrx-amdcccle\/usr\/lib\/fglrx\/bin\/ executable for all","Bash":"find debian\/fglrx-amdcccle\/usr\/lib\/fglrx\/bin\/ -type f | xargs chmod a+x"}
{"English":"Numerically sort standard input by the second word of each line","Bash":"sort -n -k 2"}
{"English":"search for files starting with memo and which belong to the user ann in the folder \/work","Bash":"find \/work -name 'memo*' -user ann -print"}
{"English":"find dirctory files which modification time is  7 days ago","Bash":"find . -mtime -7 -type d"}
{"English":"Find all directories under current directory having DIRNAME in their name","Bash":"find . -type d | grep DIRNAME"}
{"English":"sort each file in the bills directory, leaving the output in that file name with .sorted appended","Bash":"find bills -type f -execdir sort -o '{}.sorted' '{}' ';'"}
{"English":"search for all \"tif\" images in the entire file system","Bash":"find \/ -name '*.tif ' \u2013print"}
{"English":"Search the directory given as variable $d for empty subdirectories","Bash":"find \"$d\" -mindepth 1 -prune -empty"}
{"English":"Find all files under minimum 1 level down the current directory","Bash":"find .  -mindepth 1 -type f"}
{"English":"List .c files in the current directory","Bash":"find . \\( ! -name . -prune \\) -name \"*.c\" -print"}
{"English":"Find all files that were last accessed more than 7 days ago under \/home","Bash":"find \/home -atime +7"}
{"English":"find all the header files in \/usr\/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files","Bash":"find usr\/include -name '*.h' -mtime -399 | wc"}
{"English":"Remove empty directories from directory tree \/srv\/abc","Bash":"find \/srv\/abc\/ -type d -empty -exec rmdir {} \\;"}
{"English":"list all javascipts file expect files under proc folder","Bash":"find . -type d -name proc -prune -o -name '*.js'"}
{"English":"Print file type information of the \"java\" executable","Bash":"cat `which java` | file -"}
{"English":"find the file \"httpd.log\" in the folder \/home\/web-server\/","Bash":"find \/home\/web-server\/ -type f -name httpd.log"}
{"English":"Print \"This is a sentence.\" by replacing all consecutive space characters with a single newline character","Bash":"echo \"This is   a sentence.\" | tr -s \" \" \"\\012\""}
{"English":"find the file arrow.jpg in the entire file system","Bash":"find \/ -name arrow.jpg"}
{"English":"find all the javascript files in current folder using regular expressions","Bash":"find . -regex '.+\\.js'"}
{"English":"Search for .bam files anywhere in the current directory recursively","Bash":"find . -name \"*.bam\""}
{"English":"find all the directories in the current folder which have been modified in 24 hours and move them to the folder  \/path\/to\/target-dir","Bash":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir"}
{"English":"Search all *.txt files under ~\/documents for the word \"DOGS\"","Bash":"find ~\/documents -type f -name '*.txt' -exec grep -s DOGS {} \\; -print"}
{"English":"Find all files under current directory and count the output line number","Bash":"find . -type f | wc -l"}
{"English":"Print unique lines of sorted file \"b\" compared with sorted file \"a\"","Bash":"comm -13 a b"}
{"English":"Display environment variable \"_\" of the current shell","Bash":"set | grep \"^_=\""}
{"English":"find all the directories in the folder \/raid with the extension local_sd_customize.","Bash":"find \/raid -type d -name \".local_sd_customize\" -print"}
{"English":"Recursively removes all folders named '.svn' in a current folder.","Bash":"find . -type d -name .svn -print0|xargs -0 rm -rf"}
{"English":"Search the current directory tree for regular files last changed more than 14 days ago","Bash":"find -type f -ctime +14"}
{"English":"Delete all files\/directories with inode number 117672808 under current directory tree","Bash":"find -inum 117672808 -exec rm {} \\;"}
{"English":"Get the disk space used by all *.txt (case insensitive) files under \/home\/d directory","Bash":"find \/home\/d -type f -name \"*.txt\" -printf \"%s\\n\" | awk '{s+=$0}END{print \"total: \"s\" bytes\"}'"}
{"English":"Make a copy of the entire contents of SRCFOLDER called \"DESTFOLDER\", if DESTFOLDER exists, the copy will be placed within it.","Bash":"cp -R SRCFOLDER DESTFOLDER\/"}
{"English":"create a symbolic link named \"\/usr\/lib\/jvm\/default-java\" to file \"\/usr\/lib\/jvm\/java-7-oracle\"","Bash":"sudo ln -s \/usr\/lib\/jvm\/java-7-oracle \/usr\/lib\/jvm\/default-java"}
{"English":"Search the current directory recursively for files whose size is between 10 and 50 MB","Bash":"find . -size +10M -size -50M -print"}
{"English":"Print unique lines of sorted file \"second.txt\" compared to sorted file \"first.txt\"","Bash":"comm -13 first.txt second.txt"}
{"English":"Recursively removes all files and folders named '.svn' in a current folder.","Bash":"find . -name .svn -exec rm -rf {} +"}
{"English":"find all the \".JPG\" files in current folder and display their count","Bash":"find .\/ -name '*.JPG' -type f | wc -l"}
{"English":"Recursively copies everything from '\/zzz\/zzz\/' to the '\/xxx\/xxx' overwriting the existing files and answering 'yes' on each request for overwriting.","Bash":"yes | cp -rf \/zzz\/zzz\/* \/xxx\/xxx"}
{"English":"Find all files in \/tmp whose names begin with the current user's name followed by \".\"","Bash":"find \/tmp -maxdepth 1 -name \"$USER.*\""}
{"English":"Find all the *.txt files in the current directory older than 48 hours","Bash":"find . -maxdepth 1 -name '*.txt' -mtime +2"}
{"English":"find all files in the file system which have no user and no group","Bash":"find \/ -nouser -nogroup"}
{"English":"Delete every second line from output of \"seq 10\"","Bash":"seq 10 | sed '0~2d'"}
{"English":"search for directories in the folder \"test\" which end have 5 digits as their name","Bash":"find .\/test -type d -name '[0-9][0-9][0-9][0-9][0-9]'"}
{"English":"Count the number of files\/directories named file1 under current directory","Bash":"find -name file1 | wc -l"}
{"English":"change owner of all files into current directory except  files named as  '.\/var\/foo*' to user www-data","Bash":"find . -not -iwholename '.\/var\/foo*' -exec chown www-data '{}' \\;"}
{"English":"Print common files of directory \"1\" and \"2\"","Bash":"comm -12  <(ls 1) <(ls 2)"}
{"English":"delete all the regular files in the temp folder which have not been modified in the last 24 hours","Bash":"find \/tmp\/ -type f -mtime +1 -exec rm {} \\;"}
{"English":"display files in current folder ending with \"pdf\" or \"PDF\"","Bash":"find . -name '*.pdf' -or -name '*.PDF'"}
{"English":"Login in 'whatever.com' as user 'whoever' with X11 forwarding to enable GUI programs on remote to be run","Bash":"ssh -X whoever@whatever.com"}
{"English":"Find all files\/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time","Bash":"find . -name '*.[ch]' | xargs grep $1 | less"}
{"English":"Join comma-separated information in 4 files - files must be sorted.","Bash":"join -t, test.1 test.2 | join -t, - test.3 | join -t, - test.4"}
{"English":"Set variable PING to 1 if it's possible to ping host ADDRESS, to 0 otherwise.","Bash":"PING=$(ping ADDRESS -c 1 | grep -E -o '[0-9]+ received' | cut -f1 -d' ')"}
{"English":"find all files in the folder \/etc which have been modified after \/tmp\/foo","Bash":"find \/etc -newer \/tmp\/foo"}
{"English":"change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition","Bash":"find . -xtype f \\! -iname *.html   -exec mv -iv \"{}\"  \"{}.html\"  \\;"}
{"English":"Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago","Bash":"find ${CURR_DIR} -type f \\( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \\) -printf \".\/%P\\n\""}
{"English":"Copy src_dir recursively to dest_dir, but without overwriting existing files.","Bash":"cp -nr src_dir dest_dir"}
{"English":"Find all files under path_to_dir","Bash":"find path_to_dir -type f"}
{"English":"Save the current date to 'DATE' variable","Bash":"DATE=$(echo `date`)"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory and create an archive (file.tar) of the last file found","Bash":"find var\/log\/ -iname anaconda.* -exec tar -cvf file.tar {} \\;"}
{"English":"Gets IP addresses of all active network interfaces.","Bash":"ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'"}
{"English":"find all the files in the current folder which end with .o or with the name a.out and display them.","Bash":"find . ( -name a.out -o -name *.o ) -print"}
{"English":"Find all files\/directories under '\/home\/user\/' directory tree whose status were changed 10 minutes ago","Bash":"find \/home\/user\/ -cmin 10 -print"}
{"English":"find all the files which are of size 0 bytes.","Bash":"find . -type f -empty"}
{"English":"Forward port 8000 bound on localhost to port 22 in 'clusternode' via 'user@bridge'","Bash":"ssh -L localhost:8000:clusternode:22 user@bridge"}
{"English":"Find all files in maximum 1 level down the current directory that were modified less than 1 day ago","Bash":"find -maxdepth 1 -type f -mtime -1"}
{"English":"set variable r to currently running kernel release, ie. 4.4.0-81-generic","Bash":"r=\"$(uname -r)\""}
{"English":"find directory names starts with 'bar'","Bash":"find . -path '.\/bar*' -print"}
{"English":"Find files that are 100k","Bash":"find -size 100k"}
{"English":"Search \/usr, \/home, \/tmp for *.jar files","Bash":"find \/usr \/home  \/tmp -name \"*.jar\""}
{"English":"Find all files\/directories with 777 permission under current directory tree","Bash":"find . -perm 777 -print"}
{"English":"List all files\/directories under \/data1\/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago","Bash":"find \/data1\/Marcel -size +1024  \\( -mtime +365 -o -atime +365 \\) -ls -exec file {} \\;"}
{"English":"Search all .c and .h files in the current directory tree for string \"e\"","Bash":"find . -name \"*.[ch]\" -exec grep --color -aHn \"e\" {} \\;"}
{"English":"Find all *.rb (regular) files under current directory and change their mode to 600","Bash":"find . -name \"*.rb\" -type f -exec chmod 600 {} \\;"}
{"English":"Limits the number of results from grep to 2 lines","Bash":"grep -o '1.' yourfile | head -n2"}
{"English":"Make directories and parents as needed to \"${raw_folder}\" and \"${split_folder}\"","Bash":"mkdir -p ${raw_folder} ${split_folder}"}
{"English":"Find all regular files under '\/directory_path' directory tree that have been modified within the last day","Bash":"find \/directory_path -type f -mtime -1 -print"}
{"English":"print all readline bindings","Bash":"bind -P"}
{"English":"Find all orm.* files\/directories under current directory","Bash":"find . -name \"orm.*\""}
{"English":"Read a line from standard input into variable \"REPLY\" with prompt \"Press [Enter] key to release lock...\"","Bash":"read -p \"Press [Enter] key to release lock...\""}
{"English":"View manual page of the find command","Bash":"man find"}
{"English":"Find all files\/directores under \/etc filter them by searching for 'test' in their name and run the file command on each of them","Bash":"find \/etc -print0 | grep -azZ test | xargs -0 file"}
{"English":"display list of all the C files ( fuiles with \".c\" extension ) in current folder","Bash":"find . -name '*.c' -ls"}
{"English":"Find all files under \/path and below writable by `group' and `other'","Bash":"find \/path -perm -g+w,o+w"}
{"English":"Print content of 'filename' file, showing all non-printing characters and displaying $ at the end of each line.","Bash":"cat -v -e filename"}
{"English":"Recursively copies 'src' to 'dest' preserving overwriting the existing files.","Bash":"cp -nr src_dir dest_dir"}
{"English":"Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder","Bash":"find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files"}
{"English":"Recursively change the owner of all files in \"~\/tmp\" to \"$USER\"","Bash":"sudo chown -R $USER ~\/tmp"}
{"English":"Find all files in the current directory tree whose size is greater than 1MB, and move them to the \"files\" folder with confirmation","Bash":"find . -size +1M -ok mv {} files \\+"}
{"English":"Find files that match the executable bit for owner or group","Bash":"find -type f -perm \/110"}
{"English":"Search the current directory and two levels below for file `teste.tex'","Bash":"find ~\/ -maxdepth 3 -name teste.tex"}
{"English":"Find the total size of *.jpg files within the current directory tree","Bash":"find . -type f -iname '*.jpg' -print0 | du -c --files0-from=-"}
{"English":"search for the file foo in  the current folder and display a long listing of it in sorted order of modification date","Bash":"find . -name foo | xargs ls -tl"}
{"English":"Finds all the log* files recursively in \/myDir that are more than 7 days older and compresses them.","Bash":"find \/myDir -name \"log*\" -ctime +7 -exec bzip2 -zv {} \\;"}
{"English":"Remove all spaces from standard input","Bash":"tr -d ' '"}
{"English":"Find all files whose names do not begin with \"zsh\" on ext3 file systems","Bash":"find \/ -fstype ext3 -name zsh*"}
{"English":"Search for \"LOG\" in jsmith's home directory tree","Bash":"find ~jsmith -exec grep LOG '{}' \/dev\/null \\; -print"}
{"English":"Find and print detailed information about all regular files in your home directory and below that have only the group permission set","Bash":"find . -perm g=r -type f -exec ls -l {} \\;"}
{"English":"Archive \"\/path\/to\/application.ini\" on host \"source_host\" to current directory.","Bash":"rsync -avv source_host:path\/to\/application.ini .\/application.ini"}
{"English":"display all the text files in the current folder","Bash":"find -name \u201c*.txt\u201d"}
{"English":"Recursively lists all *.py and *.html files in a current folder.","Bash":"ls **\/*.py **\/*.html"}
{"English":"Find all first occurrences of directories named '.texturedata' under '\/path\/to\/look\/in' directory tree","Bash":"find \/path\/to\/look\/in\/ -type d -name '.texturedata' -prune"}
{"English":"For each line in 'file', print \"result = \" followed by the line backwards.","Bash":"rev file | awk '{print \"result =\",$0}'"}
{"English":"Follows symbolic link $BASH_SOURCE, and prints path to its target.","Bash":"$(dirname $(readlink -f $BASH_SOURCE))"}
{"English":"search for text files in the folders \/home\/hobbes\/ \/home\/calvin\/","Bash":"find \/home\/hobbes\/ \/home\/calvin\/ -name \u201c*.txt\u201d"}
{"English":"Print only first line of 'file' content, formatted as 29-symbol wide column, regarding space symbol as a word separator","Bash":"cat file | fold -s -w29 | head -1"}
{"English":"Read a line from standard input into variable \"a\" without backslash escapes","Bash":"read -r a"}
{"English":"Move all files and directories in the current directory to \"\/foo\"","Bash":"mv `ls` \/foo"}
{"English":"Find all directories under current directory","Bash":"find . -type d"}
{"English":"Find files\/directories under current directory and print them as null terminated strings.","Bash":"find -print0"}
{"English":"Find all files\/directories in entire file system that are exactly 50 bytes","Bash":"find \/ -size 50c"}
{"English":"Split the contents of all \".txt\" excluding the first 1000 lines into files of at most 1000 lines each","Bash":"cat *.txt | tail -n +1001 | split --lines=1000"}
{"English":"Save the absolute path of \"$path\" to variable \"fullpath\"","Bash":"fullpath=`readlink -f \"$path\"`"}
{"English":"Find files and directories owned by xuser1 and change their ownership to user2","Bash":"find . -user xuser1 -exec chown -R user2 {} \\;"}
{"English":"Convert the content of variable 'CLEAN' to small letters","Bash":"CLEAN=`echo -n $CLEAN | tr A-Z a-z`"}
{"English":"Print the kernel configuration options found in \"\/proc\/config.gz\"","Bash":"cat \/proc\/config.gz | gunzip"}
{"English":"Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx","Bash":"find . -perm u=rwx,g=rx,o=rx"}
{"English":"Reverse the order of lines in \"myfile.txt\" using BSD \"tail\" command","Bash":"tail -r myfile.txt"}
{"English":"Find all regular files named postgis-2.0.0 under your home directory","Bash":"find ~\/ -type f -name \"postgis-2.0.0\""}
{"English":"Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file","Bash":"find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt"}
{"English":"Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.","Bash":"find . -name \"*.pdf\" -print0 | xargs -0 rm -rf"}
{"English":"Perform white space safe deletion of files named core under \/tmp","Bash":"find \/tmp -name core -type f -print0 | xargs -0 \/bin\/rm -f"}
{"English":"find all the swap files (files ending with ~) in the current folder and delete them","Bash":"find . -name \"*~\" -exec rm {} \\;"}
{"English":"Find files\/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names","Bash":"find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\""}
{"English":"Search the current directory for all regular files executable by 'user', 'group', and 'others'","Bash":"find . -maxdepth 1 -type f -perm -ugo=x"}
{"English":"Search the files from the current directory tree for \"chrome\"","Bash":"find . -exec grep chrome {} +"}
{"English":"Search the \/var\/www\/ tree for files not owned by user `apache'","Bash":"find \/var\/www ! -user apache -print0 | xargs -0"}
{"English":"display all files in current folder excluding those that have the word \"git\" in their name and display files that have git in their path names","Bash":"find . ! -name '*git*' | grep git"}
{"English":"find all the files in the current folder that have been modified in the last 24*3 hours","Bash":"find .\/ -mtime -3"}
{"English":"Sort tab separated file \"file\" using a version sort for field 6 and a numeric sort for field 7","Bash":"sort -t$'\\t' -k6V -k7n file"}
{"English":"Print unique lines in \"set1\" and \"set2\" when compared to each other and remove any tabs","Bash":"comm -3 <(sort set1) <(sort set2) | sed 's\/\\t\/\/g'"}
{"English":"Remove the .jpg files from the current directory whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"","Bash":"find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\" | xargs rm"}
{"English":"Find all directories under \/home\/username\/public_html\/themes and set their permission to 750","Bash":"find \/home\/username\/public_html\/themes -type d -exec chmod 750 {} +"}
{"English":"Create symbolic links in the current directory for all files excluding \"CONFIGFILE\" located in \"\/your\/project\"","Bash":"find \/your\/project -maxdepth 1 ! -name \"CONFIGFILE\" -exec ln -s \\{\\} .\/ \\;"}
{"English":"Create intermediate directories \"x\" and \"p\" as required and create \"q\"","Bash":"mkdir -p x\/p\/q"}
{"English":"Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in \"index.html\"","Bash":"sed -i 's\/STRING_TO_REPLACE\/STRING_TO_REPLACE_IT\/g' index.html"}
{"English":"search for a word in all the shell scripts in the current folder and display the matched files.","Bash":"find . -type f -name \"*.sh\" -exec grep -l landoflinux {} \\;"}
{"English":"Search \/var\/tmp for files larger than 30 MB modified 31 days ago","Bash":"find \/tmp \/var\/tmp -size +30M -mtime 31 -ls"}
{"English":"Read a line from standard input into variable \"REPLY\" with prompt \"$1 ([y]es or [N]o): \"","Bash":"read -p \"$1 ([y]es or [N]o): \""}
{"English":"Change the permissions of the current directory and all its subdirectories to 755.","Bash":"find . -type d -exec chmod 755 {} \\;"}
{"English":"show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories","Bash":"find . -maxdepth 1 -name \\*.txt -print0 | grep -cz ."}
{"English":"Print the names of the directories from the paths expanded by the glob pattern \/path\/to\/directory\/*","Bash":"find \/path\/to\/directory\/* -maxdepth 0 -type d -exec basename -a {} +"}
{"English":"display all regular\/normal files in the current folder which are not accessed in the last 7*24 hours","Bash":"find . -type f -atime +7"}
{"English":"Search for \"ifconfig\" in the output of \"history\" and print 5 lines that precede and follow","Bash":"history | grep ifconfig -A5 -B5"}
{"English":"Find all files\/directories under current directory tree with '.old' extension","Bash":"find . -name \u201d*.old\u201d -print"}
{"English":"Display the file size of file '\/data\/sflow_log' in bytes","Bash":"du -sb \/data\/sflow_log | cut -f1"}
{"English":"Find all TXT files in the current directory and copy them to directory \"$HOME\/newdir\"","Bash":"find \"$HOME\" -name '*.txt' -type f -not -path \"$HOME\/newdir\/*\" -print0 | xargs -0 cp -t \"$HOME\/newdir\""}
{"English":"find all files in home folder which have been modified after a timestamp","Bash":"find ~ -newer \/tmp\/timestamp"}
{"English":"find all the \"jpg\" file in a folder.","Bash":"find \/win\/C -iname *JPG"}
{"English":"Search for files\/directories which are writable by either their owner or their group","Bash":"find . -perm \/u=w,g=w"}
{"English":"find all the png files in current folder which are present in the pattern list file \"search.txt\" and copy them to another directory","Bash":"find . -name '*.png' | grep -f <(sed s?^?\/[0-9]_[0-9]_[0-9]_? search.txt) | xargs -i{} cp {} \/path\/to\/dir"}
{"English":"Find the first file\/directory under current directory and quit","Bash":"find . ... -print -quit"}
{"English":"Read the first 10 characters from standard input in an interactive shell into variable \"VAR\"","Bash":"read -n10 -e VAR"}
{"English":"Print common lines in \"file1\" and \"file2\"","Bash":"comm -12 file1 file2"}
{"English":"Find a used disk space of a target directory and files inside of it","Bash":"du -h your_directory"}
{"English":"Remove all files with names like \"vmware-*.log\" from the current directory tree","Bash":"find . -name vmware-*.log | xargs -i rm -rf {}"}
{"English":"Find all files under \/path\/to\/input\/ that match the case insensitive string literal 'spammer@spammy.com' in their contents","Bash":"find \/path\/to\/input\/ -type f -exec grep -qiF spammer@spammy.com \\{\\} \\; -print"}
{"English":"Replace all occurrences of \"StringA\" with \"StringB\" in the *.php and *.html files residing in the current directory tree","Bash":"find . \\( -name \"*.php\" -or -name \"*.html\" \\) | xargs grep -l StringA | xargs sed -i -e 's\/StringA\/StringB\/g'"}
{"English":"Gets IP addresses of all active network interfaces on host.","Bash":"ifconfig | grep 'inet' | grep -v '127.0.0.1' | awk '{print $2}' | sed 's\/addr:\/\/'"}
{"English":"Find files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -print"}
{"English":"display all the html files in the current folder","Bash":"find . -name \"*.html\" -print"}
{"English":"Find files owned by no user","Bash":"find \/ -nouser"}
{"English":"Connect to host \"${HOSTNAME}\" as user \"${USERNAME}\" and execute \"${SCRIPT}\" non-interactively","Bash":"ssh -l ${USERNAME} ${HOSTNAME} \"${SCRIPT}\""}
{"English":"Find regular files in the current directory tree that have all executable bits set","Bash":"find -L . -type f -perm -a=x"}
{"English":"Search the .cs files of the current directory tree for string \"content pattern\"","Bash":"find .\/ -type f -iname \"*.cs\" -print0 | xargs -0 grep \"content pattern\""}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -print | xargs \/bin\/rm"}
{"English":"Prints path location of $BASH_SOURCE file.","Bash":"echo this dir: `dirname $BASH_SOURCE`"}
{"English":"find all jpg files in current folder","Bash":"find . -type f -name \"*.JPG\""}
{"English":"Remove all files and directories called \"test\" from the current directory tree","Bash":"find . -name test -delete"}
{"English":"search for the word LOG in all the files in the folder ~\/jsmith","Bash":"find ~jsmith -exec grep LOG '{}' \/dev\/null \\; -print"}
{"English":"find all jpg files in the current folder","Bash":"find . -name \"*.jpg\""}
{"English":"find all files in the current folder and search for a word in them.","Bash":"find . -type f -exec grep \"applicationX\" {} \\;"}
{"English":"display all the .sh scripts and perl files in the current folder","Bash":"find . -type f \\( -name \"*.[sS][hH]\" -o -name \"*.[pP][lL]\" \\)"}
{"English":"find a 'fool.scala' named regular file under \/opt \/usr \/var those directories.","Bash":"find \/opt \/usr \/var -name foo.scala -type f"}
{"English":"Returns exit status 0.","Bash":"foo=$(false)$(true)"}
{"English":"find all the files in the present directory which have the group staff and check if is a symbolic link and display it.","Bash":"find `pwd` -group staff -exec find {} -type l -print ;"}
{"English":"Finds shell options with 'login' in name.","Bash":"shopt | grep login"}
{"English":"Find all files\/directores under '\/usr\/local' directory tree that case insensitively contain the word 'blast' in their names","Bash":"find \/usr\/local -iname \"*blast*\""}
{"English":"Prints total count of lines of all *.php files in a current folder and subfolders.","Bash":"find . -name '*.php' -type f -exec cat -- {} + | wc -l"}
{"English":"delete all the log files in the current folder","Bash":"find -name '*.log' -delete"}
{"English":"Print the average round trip time of 5 pings to \"google.com\" from OSX","Bash":"ping -c 5 google.com | grep \"round-trip\" | cut -f 5 -d \"\/\""}
{"English":"Search for all files with either \"sitesearch\" or \"demo\" in their path names","Bash":"find . | grep -i demo | grep -i sitesearch"}
{"English":"Find all files\/directories with 644 permission in entire file system","Bash":"find \/ -perm 644"}
{"English":"Remove all files from the current directory tree whose names end in \"~\"","Bash":"find -iname '*~' | xargs rm"}
{"English":"Gets IP address of 'en1' network interface.","Bash":"my_ip=$(ifconfig en1 | grep 'inet addr' | awk '{print $2}' | cut -d: -f 2)"}
{"English":"Search for the regex 'pattern_to_search' in all files under '\/directory\/containing\/files' and show the matched lines as well as the file names","Bash":"find \/directory\/containing\/files -type f -exec grep -H 'pattern_to_search' {} +"}
{"English":"find all directories with the name \"lib64\" in the usr folder and replace space with ':'","Bash":"find \/usr -name lib64 -type d|paste -s -d:"}
{"English":"Find all symbolic links under '\/some\/directory' tree","Bash":"find \/some\/directory -type l -print"}
{"English":"Find all *.texi files in \/usr\/local\/doc","Bash":"find \/usr\/local\/doc -name '*.texi'"}
{"English":"Prints what day it was 222 days ago","Bash":"date --date=\"222 days ago\" +\"%d\""}
{"English":"find all pdf files in the current folder","Bash":"find . -name \u201c*.pdf\u201d -print"}
{"English":"display all the .sh scripts in the folder \/usr","Bash":"find \/usr -name '*.sh'"}
{"English":"Replace the first occurrence of \"foo\" with \"bar\" on every line in .txt files from the current directory tree","Bash":"find . -type f -name '*.txt' | xargs --replace=FILE sed --in-place 's\/foo\/baz\/' FILE"}
{"English":"Recursively finds all *.txt files and prints strings with \"text_pattern\" ignoring text distincts.","Bash":"find . -name \"*.txt\" | xargs grep -i \"text_pattern\""}
{"English":"Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter","Bash":"find \"$GIVEN_DIR\" -type d -mindepth 1 -print0"}
{"English":"Find all .js files in the $d directory tree whose pathnames do not contain whitespaces","Bash":"find $d -name '*.js' | grep -v \" \""}
{"English":"find all \".flac\" files in current folder starting with \"cmn-\"","Bash":"find . -name 'cmn-*.flac'"}
{"English":"Find files smaller than 40 blocks skipping directories on other file systems","Bash":"find . -size -40 -xdev -print"}
{"English":"Print \/some\/dir\/ if it's empty","Bash":"find \/some\/dir\/ -maxdepth 0 -empty"}
{"English":"SSH into \"$NAME\" as user \"${USERNAME}\" using key file \"${KEYDIR}\/${KEY}.pem\", automatically add the host to list of known hosts and execute \"${COMMANDS}\"","Bash":"ssh -o \"StrictHostKeyChecking no\" -i ${KEYDIR}\/${KEY}.pem ${USERNAME}@$NAME \"${COMMANDS}\""}
{"English":"search for the word error in all the xml files in the current folder","Bash":"find . -name \"*.xml\" -exec grep \"ERROR\" \/dev\/null '{}' \\+"}
{"English":"find all configuration files in a folder","Bash":"find \/home\/pat -iname \"*.conf\""}
{"English":"Find all *.dbf files\/directories in entire file system","Bash":"find \/ -name \"*.dbf\""}
{"English":"Find all *.txt files\/directories under your home directory","Bash":"find ~ -name \"*.txt\" -print"}
{"English":"Change all files with no user under \"\/var\/www\" to have owner \"root\" and group \"apache\"","Bash":"sudo find \/var\/www -nouser -exec chown root:apache {} \\;"}
{"English":"find all the directories starting with the name \"someNamePrefix\" which have not been modified in the last 10 days and force delete them","Bash":"find \/somePath -type d -name \u2018someNamePrefix*\u2019 -mtime +10 -print | xargs rm -rf ;"}
{"English":"display all the empty files in the entire file system","Bash":"find \/ -size 0 -print"}
{"English":"Connect to \"$USER_AT_HOST\" using connection sharing on \"$SSHSOCKET\" and request the master to exit","Bash":"ssh -S \"$SSHSOCKET\" -O exit \"$USER_AT_HOST\""}
{"English":"find all the html files in the current folder which have not been modified in the last 7 days","Bash":"find . -mtime +7 -name \"*.html\" -print"}
{"English":"Find recursively regular files in the current directory tree","Bash":"find . -type f -print"}
{"English":"Print lines in the sorted contents of \"file2\" that are not in the sorted contents of \"file1\"","Bash":"comm -13 <(sort file1) <(sort file2)"}
{"English":"Print position number of day '9' in fourth line of calendar output for September, 2009.","Bash":"cal 09 2009 | awk '{day=\"9\"; if (NR==4) {col=index($0,day); print col } }'"}
{"English":"Find files\/directories under current directory without descending into it","Bash":"find -maxdepth 0"}
{"English":"Reversibly sorts content of the '${TMP}\/${SCRIPT_NAME}.pid' file, comparing human readable numbers in file strings.","Bash":"cat ${TMP}\/${SCRIPT_NAME}.pid|sort -rh;"}
{"English":"find directories in the folder \/usr\/spool\/uucp","Bash":"find \/usr\/spool\/uucp -type d -print"}
{"English":"Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours","Bash":"find $LOGDIR -type d -mtime -1 -exec compress -r {} \\;"}
{"English":"Rename all files in current directory to lowerase, overwriting any existing files.","Bash":"rename -f 'y\/A-Z\/a-z\/' *"}
{"English":"Save 'echo whatever you \"want your\" command to be' in history","Bash":"history -s 'echo whatever you \"want your\" command to be'"}
{"English":"Print unique lines of \"a\" and \"b\"","Bash":"comm -3 a b"}
{"English":"Add cron lists from \"file1\" and \"file2\" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.","Bash":"cat file1 file2 | crontab"}
{"English":"Find regular files readable by the world","Bash":"find . -perm -g=r -type f -exec ls -l {} \\;"}
{"English":"Find all files under current directory and set read permission for group and other for these files","Bash":"find . -type f -print0 | xargs -0 chmod go+r"}
{"English":"Find files larger than 100MB in \/var\/www and exclude files with \/download\/ in their path from the output","Bash":"find \/var\/www\/ -type f -name \"*\" -size +100M -exec du -h '{}' \\;|grep -v \/download\/"}
{"English":"Print source of the file system containing $path.","Bash":"df -P $path | tail -1 | cut -d' ' -f 1"}
{"English":"find all files in the current folder which have been modified after \/etc\/passwd","Bash":"find -newer \/etc\/passwd"}
{"English":"Find all $1 files\/directories under current directory and enter into the parent directory of the first one found","Bash":"cd $(dirname $(find . -name $1 | sed 1q))"}
{"English":"find all the regular\/normal files in the current folder and do not search in the sub directories","Bash":"find . -maxdepth 1 -type f"}
{"English":"find all \".flac\" files starting with \"cmn-\" and search for files having CJK characters using unicodes","Bash":"find . -name 'cmn-*.flac' -print | grep -P '[\\x4e00-\\x9fa5]'"}
{"English":"Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).","Bash":"find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}
{"English":"Go to \/the\/project\/root\/\/data, which in most filesystems\/operating systems will be the same as cd \/the\/project\/root\/data","Bash":"cd \/the\/project\/root\/\/data"}
{"English":"Find files\/directories named blah under current directory","Bash":"find .\/ -name blah"}
{"English":"Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.","Bash":"join -t, -o 1.1,1.2,2.3 -a1 in1 in2"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn |xargs rm -rf"}
{"English":"Find all files\/directories under '\/usr\/local' containing 'blast' (case insensitive) in their names","Bash":"find \/usr\/local -iname \"*blast*\""}
{"English":"Find all Executable files","Bash":"find \/ -perm \/a=x"}
{"English":"display a long listing of all the files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime -1 -ls"}
{"English":"recursively delete, without prompting, directories under \/data\/bin\/test, that are older than 10 days and where the name starts with a number","Bash":"find \/data\/bin\/test -type d -mtime +10 -name \"[0-9]*\" -exec rm -rf {} \\;"}
{"English":"Sets shell options 'globstar', 'dotglob' and 'nullglob'.","Bash":"shopt -s globstar nullglob dotglob"}
{"English":"Split \"mybigfile.txt\" into files of at most 200000 lines each","Bash":"split -l 200000 mybigfile.txt"}
{"English":"Read a line from standard input into variable \"REPLY\" with prompt \"> $line (Press Enter to continue)\"","Bash":"read -p \"> $line (Press Enter to continue)\""}
{"English":"Convert all characters in standard input to lower case","Bash":"sed 's\/.*\/\\L&\/'"}
{"English":"Shows MAC address of network interface eth0.","Bash":"ifconfig eth0 | grep HWaddr |cut -dH -f2|cut -d\\  -f2"}
{"English":"search files in the folder \/home which have been modified after \/tmp\/after and before \/tmp\/before","Bash":"find \/home\/ -type f -newer \/tmp\/after -not -newer \/tmp\/before"}
{"English":"display all the files in the current folder except those whose name is \"PERSONAL\"","Bash":"find . -name PERSONAL -prune -o -print"}
{"English":"Delete empty files and print their names","Bash":"find . -empty -delete -print"}
{"English":"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","Bash":"find $1 -path \/proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;"}
{"English":"run ls command on files found","Bash":"find . -name \"*.pl\" -exec ls -ld {} \\;"}
{"English":"Silently and recursively change the ownership of all files in the current directory to \"www-data\"","Bash":"sudo chown -Rf www-data *"}
{"English":"Unzip and merge all \"small-*.gz\" files into files of 2000000 lines","Bash":"zcat small-*.gz | split -d -l2000000 -a 3 - large_"}
{"English":"find all the files that are modified in the last 1 day","Bash":"find  -mtime -1"}
{"English":"display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.","Bash":"find . -perm 777 -a -mtime 0 -a -print"}
{"English":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" -exec ls -lrt {} + | awk '{print $9}'"}
{"English":"Calculate the md5 sum of the output of \"du -csxb \/path\" and compare it against the md5 sum saved in \"file\"","Bash":"du -csxb \/path | md5sum -c file"}
{"English":"Perform a white space safe search for all files\/directories under current directory","Bash":"find . -print0 | xargs -0"}
{"English":"Correct permissions for files in the web directory","Bash":"find \/your\/webdir -type f | xargs chmod 644"}
{"English":"display all the files on the current folder excluding those that are present in the folder \".\/src\/emacs\"","Bash":"find . -path .\/src\/emacs -prune -o -print"}
{"English":"Find files named \"blabla\" in the current directory tree and print the number of lines in each of them","Bash":"find .\/ -name \"blabla\" -exec wc -l {} ;"}
{"English":"Find and print the full pathname of all PDF files in the current directory and its sub-directories.","Bash":"find . -name \"*.pdf\" -print"}
{"English":"Search for 'pattern_to_search' in all regular files with '.txt' extension under '\/directory\/containing\/files' and show the matched lines along with filenames","Bash":"find \/directory\/containing\/files -type f -name \"*.txt\" -exec grep -H 'pattern_to_search' {} +"}
{"English":"Find the password file between sub-directory level 2 and 4","Bash":"find -mindepth 3 -maxdepth 5 -name passwd"}
{"English":"find all the files in the file system whcih have been modified in the last 1 day","Bash":"find \/ -mtime -1"}
{"English":"Lists all subdirectories in current directory with a trailing slash","Bash":"ls -d .\/*\/                     ### more reliable BSD ls"}
{"English":"use regex with find command","Bash":"find . -regextype posix-egrep -regex '\\.\/[a-f0-9\\-]{36}\\.jpg'"}
{"English":"Find all files in the current directory tree whose names are \".DS_STORE\"","Bash":"find . -name \".DS_STORE\""}
{"English":"Mount image \"test\" to loop device \"\/dev\/loop0\"","Bash":"sudo mount -o loop \/dev\/loop0 test"}
{"English":"Start 'top' to monitor all processes with the default settings.","Bash":"top"}
{"English":"Format \"$line\" as a table","Bash":"echo \"$line\" | column -t"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -depth -name .svn -exec rm -fr {} \\;"}
{"English":"Move all *.php~ (case insensitive) files under current directory to \/mydir","Bash":"find . -iname \"*.php~\" -exec mv {} \/mydir \\;"}
{"English":"Report available space on the file system containing \/tmp in kilobytes.","Bash":"df -k \/tmp | tail -1 | tr -s ' ' | cut -d' ' -f4"}
{"English":"Save standard input to variable \"myVar\"","Bash":"myVar=$(tee)"}
{"English":"Count the number of unique file extensions in the current directory tree","Bash":"find . -type f | sed -e 's\/.*\\.\/\/' | sed -e 's\/.*\\\/\/\/' | sort | uniq -c | sort -rn"}
{"English":"Search for all files owned by user www-data that are not larger than 100kb","Bash":"find -user www-data -not -size +100k"}
{"English":"Remove all files from the current directory tree whose names contain whitespaces","Bash":"find . -name \"* *\" -exec rm -f {} \\;"}
{"English":"kill all active jobs","Bash":"jobs -p | xargs kill -9"}
{"English":"Identify CMS version\/releases accross all your Drupal websites","Bash":"find \/var\/www\/vhosts\/*\/httpdocs\/ -type f -iwholename \"*\/modules\/system\/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}
{"English":"Find all fonts (in '\/usr\/local\/fonts') that belong to the user 'warwick'","Bash":"find \/usr\/local\/fonts -user warwick"}
{"English":"Find all files\/directories named 'foo.rb' under current directory tree","Bash":"find . -name foo.rb"}
{"English":"List all environment variables whose name or value contains current user's login name.","Bash":"env | sed -n \/\"$USERNAME\"\/p"}
{"English":"Remove all libEGL* files from the current directory tree","Bash":"find . -name libEGL* | xargs rm -f"}
{"English":"Add execute permission to all files ending in \".sh\"","Bash":"chmod +x *.sh"}
{"English":"display all the text files  in the current folder","Bash":"find . -name \"*.txt\" -print"}
{"English":"find all text files in user\/directory\/ which have been modified today and display the last line of these files","Bash":"find \/user\/directory\/ -name \"*txt\" -mtime 0 -type f -printf '%p: ' -exec tail -1 {} \\;"}
{"English":"search for the file \"process.txt\" in the current folder (case insensitive search)","Bash":"find . -iname 'process.txt' -print"}
{"English":"List all files in the \/myfiles directory tree","Bash":"find \/myfiles -exec ls -l {} ;"}
{"English":"find all the files in the current directory whose size is equal to exactly 126MB.","Bash":"find . -size 126M"}
{"English":"Print which files differ in \"dir_one\" and \"dir_two\" recursively and sort the output","Bash":"diff -qr dir_one dir_two | sort"}
{"English":"Find all *.txt (case insensitive) files of user root under \/ directory and show a few lines of output from the beginning","Bash":"find \/ -user root -iname \"*.txt\" | head"}
{"English":"Find all files\/directories with permission $permissions under $directory directory tree","Bash":"find \"$directory\" -perm \"$permissions\""}
{"English":"Find all files in the current directory \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 and its sub-directories with the optional constraints of \u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 and\/or \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.","Bash":"find \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 [\u043e\u043f\u0446\u0438\u044f_\u043f\u043e\u0438\u0441\u043a\u0430] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435] [\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435]"}
{"English":"Recursively change ownership of \"\/usr\/lib\/node_modules\/\" to the current user","Bash":"sudo chown -R $(whoami) \/usr\/lib\/node_modules\/"}
{"English":"search for a shell script in the current folder and display the current folder path but search from the sub directories","Bash":"find . -name onlyme.sh -execdir pwd \\;"}
{"English":"Get a recursive file list of directory $dir","Bash":"find \"$dir\" -type f"}
{"English":"Gives the primary group of $USERNAME.","Bash":"groups $USERNAME | cut -d\\  -f 1"}
{"English":"Search everywhere for directories named `root'","Bash":"find \/ -type d -name root"}
{"English":"find all files and directories that have been modified in the last seven days","Bash":"find . -mtime -7"}
{"English":"find all the files in the current directory which are bigger than 1000MB","Bash":"find . -size +1000M"}
{"English":"Search the .py files residing in the current directory tree for \"something\"","Bash":"find . -name \"*.py\" -type f -exec grep \"something\" {} \\;"}
{"English":"Set the 'xtrace' shell option","Bash":"set -o xtrace"}
{"English":"Get a detailed list of all files on the system larger than 10MB","Bash":"find \/ -size +10M -printf \u201c%12s %t %h\/%fn\u201d"}
{"English":"Find all mysong.ogg files\/directories under your home directory","Bash":"find $HOME -name 'mysong.ogg'"}
{"English":"Find files created in the last minute; works on Mac OS X","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"List file information of the full path of command \"c++\"","Bash":"ls -ald `which c++`"}
{"English":"Isolate first comma-delimited field of each line in \"file\", discard consecutive duplicates, and search \"file\" for first matching occurrence of that field.","Bash":"cut -d, -f1 file | uniq | xargs -I{} grep -m 1 \"{}\" file"}
{"English":"Immediately terminate all processes whose command or arguments match \"myProcessName\"","Bash":"ps -ef | grep myProcessName | grep -v grep | awk '{print $2}' | xargs kill -9"}
{"English":"Find all files of the user with UID=1000","Bash":"find -user 1000"}
{"English":"find all the files in the home folder which have been modified in the last 30 minutes","Bash":"find $HOME -mmin -30"}
{"English":"Execute awk command '{ ...}' on compressed file \"FILE\"","Bash":"zcat FILE | awk '{ ...}'"}
{"English":"Counts lines in each *.cpp, *.c, *.h file.","Bash":"wc -l `find . -type f \\( -name \"*.cpp\" -o -name \"*.c\" -o -name \"*.h\" \\) -print`"}
{"English":"Reports count of characters in the value of ${FOO} variable as follows:  \"length(FOO)==<counted number of characters>\"","Bash":"echo -e \"length(FOO)==$(echo -ne \"${FOO}\" | wc -m)\""}
{"English":"List the current directory recursively ignoring the \"dir1\" subdirectory","Bash":"find . -path .\/dir1\\*  -o -print"}
{"English":"search for the word \"nutshell\" or \"Nutshell\" in all the files in the folder book","Bash":"find \/book -print | xargs grep '[Nn] utshell'"}
{"English":"Tmux configuration to enable mouse support within tmux","Bash":"set -g mouse on"}
{"English":"Write current directory listing to standard output and to \"files.txt\"","Bash":"ls |& tee files.txt"}
{"English":"Gets list of IP addresses of all network interfaces.","Bash":"ifconfig | sed -En 's\/127.0.0.1\/\/;s\/.*inet (addr:)?(([0-9]*\\.){3}[0-9]*).*\/\\2\/p'"}
{"English":"find all PDFs owned by user \u201cseamstress\u201d","Bash":"find \/ -user seamstress -iname \u201c*.pdf\u201d"}
{"English":"Find all files\/directories under '\/var\/tmp' directory tree that belong to a user with user id 1000","Bash":"find \/var\/tmp -uid 1000"}
{"English":"find all the empty files and folders in your system","Bash":"find \/ -empty"}
{"English":"Search the current directory tree for files whose names are not \"a.txt\"","Bash":"find . ! -name \"a.txt\" -print"}
{"English":"Count the number of areas that differ in \"file1\" and \"file2\" with 0 lines of unified context","Bash":"diff -U 0 file1 file2 | grep ^@ | wc -l"}
{"English":"find all text files which have extra extensions in the current folder","Bash":"find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print"}
{"English":"Search all directories starting from the root directory for \"filename\"","Bash":"find \/ -iname \"filename\""}
{"English":"Gets a current job back to the foreground.","Bash":"fg"}
{"English":"Find all \/path\/to\/check\/* regular files without descending into any directory","Bash":"find \/path\/to\/check\/* -maxdepth 0 -type f"}
{"English":"find all files in the file system which belong to no user or which have no user","Bash":"find \/ -nouser"}
{"English":"search for the files in the current folder which begin with the word \"kt\" followed by a digit","Bash":"find . -name 'kt[0-9] '"}
{"English":"find all the regular\/normal files in the current folder which belong to the user \"sedlav\"","Bash":"find . -user sedlav -type f"}
{"English":"Open a session-less connection to 'host' as user 'user' in master mode with a socket \"\/tmp\/%r@%h:%p\" to enable connection sharing","Bash":"ssh user@host -M -S \/tmp\/%r@%h:%p -N"}
{"English":"Split the first 100 lines of \"datafile\" into files with at most 1700 bytes each preserving lines","Bash":"sed 100q datafile | split -C 1700 -"}
{"English":"Find all executable files under {} and reverse sort them","Bash":"find {} -type f -depth 1 -perm +0111 | sort -r"}
{"English":"Print only second from the end field from slash-separated string in file 'datafile'","Bash":"cat datafile | rev | cut -d '\/' -f 2 | rev"}
{"English":"Save the absolute path of the current script to variable \"SELF\"","Bash":"SELF=`readlink \/proc\/$$\/fd\/255`"}
{"English":"Find all *.py files\/directories under current directory","Bash":"find . -name *.py"}
{"English":"Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory","Bash":"find {} -name 'upvoter-*' -type f -or -type l -maxdepth 1 -perm +111"}
{"English":"List file contents of compressed file 'compressed.tar.gz'","Bash":"gzip -l compressed.tar.gz"}
{"English":"Search the home directory tree for files modified less than 7 days ago","Bash":"find $HOME -mtime -7"}
{"English":"Find absolute path of command with PID \"$pid\"","Bash":"readlink -f `ls --dereference \/proc\/$pid\/exe`"}
{"English":"Split \"complete.out\" into files with at most \"$lines_per_file\" lines each","Bash":"split --lines $lines_per_file complete.out"}
{"English":"display all the files in the current directory excluding those that are in the 'secret' directory","Bash":"find . -name 'secret' -prune -o -print"}
{"English":"Find files that end in \".gz\" and execute \"awk -F, '$1 ~ \/F$\/'\" on their unzipped contents","Bash":"find . -maxdepth 1 -name \\*.gz -print0 | xargs -0 zcat | awk -F, '$1 ~ \/F$\/'"}
{"English":"Sort the lines of the file 'temp.txt' and change it in-place","Bash":"sort temp.txt -otemp.txt"}
{"English":"Change the permissions of every directory in the current directory and all files and directories within them to 700","Bash":"find . -maxdepth 1 -type d -exec chmod -R 700 {} \\;"}
{"English":"Print permissions of every directory in the current directory tree","Bash":"tree -p -d"}
{"English":"Filter \/path\/to\/logfile for any lines containing the specified date, paging interactively through the output.","Bash":"grep 'Nov 12 2012' \/path\/to\/logfile | less"}
{"English":"create a gzip of all the files in the current folder excluding the already gzipped files","Bash":"gzip `find . \\! -name '*.gz' -print`"}
{"English":"SSH in server 'server' as user 'user' with X11 forwarding disabled","Bash":"ssh -x user@server"}
{"English":"find the type of all the regular\/normal files in the current folder","Bash":"find . -type f | xargs file"}
{"English":"Find files belonging to the given owner","Bash":"find \/path\/to\/search -user owner"}
{"English":"Creates temporary folder within a $mnt_dir folder and saves path to it in a 'rsync_src' variable.","Bash":"rsync_src=`mktemp -d -p $mnt_dir`"}
{"English":"find all the normal\/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them","Bash":"find . -type f -mtime -1 -exec ls -l {} \\;"}
{"English":"Print numbers from 1 to 5 without separating spaces","Bash":"seq 5 | awk '{printf \"%s\", $0} END {print \"\"}'"}
{"English":"Rename file \"edited_blah.tmp\" to \"\/etc\/blah\"","Bash":"sudo mv edited_blah.tmp \/etc\/blah"}
{"English":"Recursively find the latest modified file in the current directory","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}
{"English":"search for a word in all the regular files in the current folder without traversing the sub directories .","Bash":"find -maxdepth 1 -type f | xargs grep -F 'example'"}
{"English":"Find all *shp* files\/directories under current directory and move them to ..\/shp_all\/","Bash":"find . -name \"*shp*\" -exec mv {} ..\/shp_all\/ \\;"}
{"English":"List all *.txt files\/directories under current directory","Bash":"find . -name \"*.txt\" -print"}
{"English":"find all the foo.txt files in the current folder and move them to another directory","Bash":"find . -name \"foo.txt\" | awk '{ print \"mv \"$0\" ~\/bar\/\" | \"sh\" }'"}
{"English":"Find all .java files starting from the current folder","Bash":"find . -name \"*.java\""}
{"English":"Display compter's hostname","Bash":"echo `uname -a | awk '{print $2}'`"}
{"English":"Find all SGID set files","Bash":"find \/ -perm \/g=s"}
{"English":"Find all files\/directories under \/home\/baumerf\/public_html\/ that were modified less than 60 minutes ago excluding error_log files\/directories","Bash":"find \/home\/baumerf\/public_html\/ -mmin -60 -not -name error_log"}
{"English":"Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago","Bash":"find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30"}
{"English":"Find all directories under and below directory \"folder_name\", and change their permissions to 775","Bash":"find folder_name -type d -exec chmod 775 \u2018{}\u2019 \\;"}
{"English":"Find all directories under \/path\/to\/Dir and set their permission to 755","Bash":"sudo find \/path\/to\/Dir -type d -print0 | xargs -0 sudo chmod 755"}
{"English":"display all the files having spaces in the current folder","Bash":"find . -name \"filename including space\" -print0"}
{"English":"Hash hostnames in user's known hosts file.","Bash":"ssh-keygen -Hf ~\/.ssh\/known_hosts"}
{"English":"use regex with find command","Bash":"find . * | grep -P \"[a-f0-9\\-]{36}\\.jpg\""}
{"English":"Find files in the \"dir\" directory tree whose names are 33 characters in length","Bash":"find dir -name '?????????????????????????????????'"}
{"English":"Make directories \"$@\" and replace \"mkdir: created directory \" with \"$USER created folder \" in the output","Bash":"mkdir \"$@\" |sed -e\"s\/mkdir: created directory \/$USER created folder \/\""}
{"English":"Print \"I am USER and the program named ls is in LS_PATH\" where \"USER\" is the current user's user name and \"LS_PATH\" is the full path of the command \"ls\"","Bash":"echo I am $(whoami) and the program named ls is in $(which ls)."}
{"English":"Find all empty directories under \/tmp","Bash":"find \/tmp -type d -empty"}
{"English":"Print summary of new\/missing files, and which files differ between dir1 and dir2.","Bash":"diff -q dir1 dir2"}
{"English":"Check if a drive is mounted to nfs","Bash":"mount |grep nfs"}
{"English":"Find all files\/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory","Bash":"find -mindepth 10 -iname $TARGET"}
{"English":"find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder","Bash":"find . -name \"*.txt\" -type f -daystart -mtime -4 -mtime +0|xargs -i cp {} \/home\/ozuma\/tmp"}
{"English":"remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.","Bash":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}
{"English":"List all files in the current directory tree that were last modified more than 60 minutes ago","Bash":"find -mmin +60"}
{"English":"Prints date of first Tuesday in January, 2015","Bash":"cal 01 2015 | sed -n '1,2b;\/^.\\{6\\} \\{0,1\\}\\([0-9]\\{1,2\\}\\) .*\/ {s\/\/0\\1\/;s\/.*\\([0-9]\\{2\\}\\)$\/\\1\/p;q;}'"}
{"English":"display all the files in the folder \/mp3-collection which are bigger than 10MB or which start with the name \"Metallica\"","Bash":"find \/mp3-collection -name 'Metallica*' -or -size +10000k"}
{"English":"looks for all files larger than 10 megabytes (10485760 bytes) within \/home","Bash":"find \/home -type f -size +10485760c -print"}
{"English":"Print the given file name's extensions.","Bash":"echo \"$NAME\" | cut -d'.' -f2-"}
{"English":"Sort all directory names matching folder_* and go to the last one.","Bash":"cd $(find . -maxdepth 1 -type d -name \"folder_*\" | sort -t_ -k2 -n -r | head -1)"}
{"English":"Remove all *.tmp files from the \/tmp directory tree","Bash":"find \/tmp -name \"*.tmp\" -print0 | xargs -0 rm"}
{"English":"Search the current directory tree for files and directories whose names begin with \"pro\"","Bash":"find . -name pro\\*"}
{"English":"Find .rmv files in the .\/root directory recursively and copy them to directory \/copy\/to\/here","Bash":"find root -name '*.rmv' -type f -exec cp --parents \"{}\" \/copy\/to\/here \\;"}
{"English":"display all regular\/normal files in the folder \/Users\/david\/Desktop\/","Bash":"find \/Users\/david\/Desktop\/-type f"}
{"English":"Execute \"cat \/tmp\/iostat.running\" every 10 seconds","Bash":"watch -n10 cat \/tmp\/iostat.running"}
{"English":"Prints the first N bytes of file.txt","Bash":"head -c N file.txt"}
{"English":"Delete all files in the current directory tree whose names end with ~","Bash":"find . -name \"*~\" -delete"}
{"English":"Find all files\/directories named 'top' in the entire filesystem","Bash":"find \/ -name top"}
{"English":"Show a listing of files not modified in over 20 days or not accessed in over 40 days","Bash":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}
{"English":"Prints long listing of file 'file.ext'.","Bash":"ls -al file.ext"}
{"English":"find all files in the current folder which have not been accessed in the last 30 days in the current folder","Bash":"find . -atime +30 -print"}
{"English":"Print environment variable \"IFS\" and its value","Bash":"set | grep ^IFS="}
{"English":"Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files","Bash":"find .git -type f -print0 | xargs -0 sed -i 's\/subdomainB\\.example\\.com\/subdomainA.example.com\/g'"}
{"English":"display all the empty files in current folder","Bash":"find . -empty"}
{"English":"Read a single character from standard input with prompt \"Are you sure? (y\/n) \"","Bash":"read -p \"Are you sure? (y\/n) \" -n 1"}
{"English":"Recursively change the owner of all \"*.txt\" files under \"\/mydir\" to \"root\"","Bash":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}
{"English":"Show all of the .conf files in Pat's user folder and subdirectories using the less pager","Bash":"find \/home\/pat -iname \"*.conf\" | less"}
{"English":"Recursively change the owner and group of \"subdir1\" to \"user1\"","Bash":"chown user1:user1 -R subdir1"}
{"English":"Find all *.m4a files under \/home\/family\/Music directory","Bash":"find  \/home\/family\/Music -type f -name '*.m4a' -print0"}
{"English":"Print a welcome message with the current user's user name","Bash":"echo -ne \"Welcome `whoami`!\\n\""}
{"English":"Merge lines from files \"file1\", \"file2\", \"file3\", \"file4\", \"file5\", replace \"\\t\" with \" \\t\", and format the \"\\t\" delimited result as a table","Bash":"paste file{1,2,3,4} | sed -e 's\/\\t\/ \\t\/g' | column -t -s$'\\t'"}
{"English":"Find regular non-hidden files containing 'some text' in their names","Bash":"find . -not -path '*\/\\.*' -type f -name '*some text*'"}
{"English":"Recursively copy all files and folders in the current directory excluding \"exclude_pattern\" to \"\/to\/where\/\"","Bash":"rsync -r --verbose --exclude 'exclude_pattern' .\/* \/to\/where\/"}
{"English":"Converts all windows line endings to unix line endings","Bash":"find $(pwd) -type f | xargs -I xxx sed -i 's\/\\r\/\/g' xxx"}
{"English":"Finds IP addresses of all network interfaces.","Bash":"ifconfig | sed -n 's\/.*inet addr:\\([0-9.]\\+\\)\\s.*\/\\1\/p'"}
{"English":"get the git user access","Bash":"su git"}
{"English":"Print summary of new\/missing files, and which files differ between dir_one and dir_two, sorted alphabetically.","Bash":"diff -qr dir_one dir_two | sort"}
{"English":"Change directory to the real path of the current working directory of process \"$PID\"","Bash":"cd $(readlink \/proc\/$PID\/cwd)"}
{"English":"List all .jpg files in the home directory tree in a fast way","Bash":"find . -name \"*.jpg\" -exec ls {} +"}
{"English":"Get the sizes (and total size) of all files under dir2 directory","Bash":"find dir2 ! -type d |xargs wc -c"}
{"English":"List all files\/directories under current directory using comma (,) as the delimiter for different fields in the output","Bash":"find . -ls|awk 'BEGIN{OFS=\",\"}$1=$1'"}
{"English":"Remove trailing white spaces from all *.py files under dir directory (ignoring .git path) and keep backups of the originals","Bash":"find dir -not -path '.git' -iname '*.py' -print0 | xargs -0 sed --in-place=.bak 's\/[[:space:]]*$\/\/'."}
{"English":"Print each line that is found only once in \"file1\" and \"file2\" combined","Bash":"sort file1 file2 | uniq -u"}
{"English":"Saves calendar of $month, $year in the 'cal' variable.","Bash":"cal=$(echo $(cal \"$month\" \"$year\"))"}
{"English":"Get the total sizes of all files under current directory","Bash":"find . -type f -printf '%p %s\\n'  | awk '{sum+=$NF}END{print sum}'"}
{"English":"search the file \"myfile.txt\" in home folder","Bash":"find \"$HOME\/\" -name myfile.txt -print"}
{"English":"Identify CMS version\/releases accross all your Wordpress websites","Bash":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/wp-includes\/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}
{"English":"Print file information of command \"studio\"","Bash":"ls -l \"$( which studio )\""}
{"English":"Find all directories named \"0\" in the current directory tree and create a tar archive of their RS* subdirectories","Bash":"find . -type d -name \"0\" -execdir tar -cvf filename.tar RS* \\;"}
{"English":"Removes all files like 'A*.pdf' from current folder without prompting.","Bash":"rm -f A*.pdf"}
{"English":"Compress every file in the current directory tree that matches \"*cache.html\" and keep the original file","Bash":"find . -type f -name \"*cache.html\" -exec gzip -k {} \\;"}
{"English":"change the permission of all the directories to 755 in the current folder","Bash":"find -type d -exec chmod 755 {} \\;"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}
{"English":"Search \/var for files matching regular expression '.*\/tmp\/.*[0-9]*.file'","Bash":"find \/var -regex '.*\/tmp\/.*[0-9]*.file'"}
{"English":"Remove all *.swp files under current directory ensuring white space safety","Bash":"find . -name \"*.swp\" -print0|xargs -0 rm"}
{"English":"Find all files\/directories under \/home\/foo\/public_html\/ that were modified less than 60 minutes ago","Bash":"grep ! error_log | find \/home\/foo\/public_html\/ -mmin -60"}
{"English":"search for the directory \"ora10\" in the entire file system","Bash":"find \/ -type d -name \"ora10\""}
{"English":"Find all files in the directory $directory or below with the permissions specificed by $permissions.","Bash":"find \"$directory\" -perm \"$permissions\""}
{"English":"Delete everything in the current directory","Bash":"find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf"}
{"English":"Find all files in the `sourceDir' directory tree","Bash":"find sourceDir -mindepth 1"}
{"English":"Create a symbolic link named \"$HOME\/bin\/\" to \"$HOME\/downloads\/fnord\"","Bash":"ln -s $HOME\/downloads\/fnord $HOME\/bin\/"}
{"English":"Save the physical current working directory to variable \"END_ABS\"","Bash":"END_ABS=`pwd -P`"}
{"English":"Prints current directory name","Bash":"pwd | grep -o \"\\w*-*$\""}
{"English":"Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2","Bash":"join -t, <(sort file1) <(sort file2)"}
{"English":"Read yesterday's date with format \"%a %d\/%m\/%Y\" into variable \"dt\" in a subshell","Bash":"date --date yesterday \"+%a %d\/%m\/%Y\" | read dt"}
{"English":"find the ten biggest files","Bash":"find \/home -type f -exec du -s {} \\; | sort -r -k1,1n | head"}
{"English":"find all js files which path neither .\/dir1 nor .\/dir2","Bash":"find . -name '*.js' -not \\( -path \".\/dir1\" -o -path \".\/dir2\/*\" \\)"}
{"English":"Write \"deb blah ... blah\" to standard output and append to \"\/etc\/apt\/sources.list\" as root","Bash":"echo 'deb blah ... blah' | sudo tee --append \/etc\/apt\/sources.list"}
{"English":"Find all files\/directories that contain the string literal '$VERSION' in their names under current directory tree","Bash":"find . -name '*$VERSION*'"}
{"English":"display all the directories in the current folder","Bash":"find . -type d -print"}
{"English":"force delete all the core files in the home folder","Bash":"find $HOME -name core -exec rm -f {} \\;"}
{"English":"show all the \".flac\" files in the current folder and do not search in the sub directories","Bash":"find . -maxdepth 1 -type f -name '*.flac'"}
{"English":"kill all background jobs","Bash":"jobs -p | xargs kill"}
{"English":"Create symbolic links in the current directory for all files under \"bar1\" that are not directories and do not end in \".cc\"","Bash":"find bar1 -name '*foo*' -not -type d -not -name '*.cc' -exec ln -s $PWD\/'{}' bar2\/ \\;"}
{"English":"Search the current directory recursively for regular files last accessed 2 days ago","Bash":"find . type -f -atime 2"}
{"English":"Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths","Bash":"find . -type f -ctime -3 -printf \"%C@ %p\\n\" | sort | tail -n 5 | sed 's\/[^ ]* \\(.*\\)\/\\1\/'"}
{"English":"Remount \"\/system\" with read only permission","Bash":"mount -o remount,ro \/system"}
{"English":"Set permissions to 600 for regular files under var\/","Bash":"find var\/ -type f -exec chmod 600 {} \\;"}
{"English":"Create a symbolic link named \"$1\/link\" to the existing full and real path of \"$2\"","Bash":"ln -s \"$(readlink -e \"$2\")\" \"$1\/link\""}
{"English":"find all the files in the current directory ending with \".i\"","Bash":"find . -name \".*\\.i\""}
{"English":"Find files\/directories that have not been modified in the last one day in directories or files taken from the glob pattern '\/tmp\/test\/*'","Bash":"find \/tmp\/test\/* -daystart -mtime +1"}
{"English":"Removes all files but 5 newest ones from current folder.","Bash":"ls -tp | grep -v '\/$' | tail -n +6 | xargs -I {} rm -- {}"}
{"English":"Find all files under $dir","Bash":"find $dir -type f"}
{"English":"find all the files in the file system which have been changed 1 minute ago.","Bash":"find \/ -newerct '1\tminute ago' -print"}
{"English":"Find directories named `doc' in \/usr and below","Bash":"find \/usr -name doc -type d"}
{"English":"Find all .txt files under the current directory and below","Bash":"find -name \\*.txt"}
{"English":"display all file in the home folder except \".c\" files","Bash":"find $HOME -not -iname \"*.c\" -print"}
{"English":"Display the contents of \"text\"","Bash":"cat text"}
{"English":"Print line, word and byte count for each file recursively and also show the total counts","Bash":"wc `find`"}
{"English":"find all js files which path does not contain .\/node_modules\/* nor '.\/vendor\/*\"","Bash":"find -name '*.js' -not -path '.\/node_modules\/*' -not -path '.\/vendor\/*'"}
{"English":"Recursively change the owner and group of \"~\/.ssh\/\" to \"dev_user\"","Bash":"chown \"dev_user\".\"dev_user\" -R ~\/.ssh\/"}
{"English":"Print right aligned numbers from 11 to 24","Bash":"yes '' | nl -ba | sed -n -e 11,24p -e 24q"}
{"English":"Make directories to \"$2\" as needed","Bash":"mkdir -p $2"}
{"English":"Print calendar for February, March and April of year 2009 side-by-side","Bash":"paste <(cal 2 2009) <(cal 3 2009) <(cal 4 2009)"}
{"English":"List all files in \/home\/bozo\/projects directory tree that were modified exactly one day ago.","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.","Bash":"find . -iname foo -type d"}
{"English":"Force delete all files in the temp folder which have not been accesses in the last 240 hours","Bash":"find \/tmp\/* -atime +10 -exec rm -f {} \\;"}
{"English":"Delete all files throughout the entire filesystem that are no longer owned by a valid user.","Bash":"find \/ -nouser | xargs -0 rm"}
{"English":"find case-insentive example.com file, and whole dose not contain beta","Bash":"find -iname example.com | grep -v beta"}
{"English":"Search for \" 840\" in history","Bash":"history | grep \" 840\""}
{"English":"Prints full path to files in a current folder.","Bash":"ls -d -1 $PWD\/**"}
{"English":"Display inputfile all on one line (replace newlines by spaces)","Bash":"awk '{printf \"%s \", $0}' inputfile"}
{"English":"Split \"\/usr\/bin\/cat\" into 10000 files of about equal size","Bash":"split -n 10000 \/usr\/bin\/cat"}
{"English":"search for word linux in all the regular\/normal files in the folder mail.","Bash":"find ~\/mail -type f | xargs grep \"Linux\""}
{"English":"display all the directories in the current folder","Bash":"find . -type d"}
{"English":"Print numbers from 1 to 10 with 2 values per line","Bash":"seq 10 | sed 'N;s\/\\n\/ \/'"}
{"English":"Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: \"length(FOO_NO_WHITESPACE)==<counted number of characters>\"","Bash":"echo -e \"length(FOO_NO_WHITESPACE)==$(echo -ne \"${FOO_NO_WHITESPACE}\" | wc -m)\""}
{"English":"Allow anyone to run command \"Xvfb\" as the owner of \"Xvfb\"","Bash":"sudo chmod u+s `which Xvfb`"}
{"English":"display a long listing of all the normal\/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )","Bash":"find . -type f -print0 | xargs -0 ls -l"}
{"English":"Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable","Bash":"timestamp=`date --rfc-3339=seconds`"}
{"English":"find all files that names are game","Bash":"find \/ -name game"}
{"English":"Calculate md5 checksum of $line and save to variable 'md5'","Bash":"md5=$(echo \"$line\"|md5sum)"}
{"English":"change the permission of all directories in current folder to 755.","Bash":"find . -type d -exec chmod 755 {} \\;"}
{"English":"Find all *.css files under $DIR and print the lines matching the regex '\\.ExampleClass.{\/,\/}' from those files","Bash":"find ${DIR} -type f -name \"*.css\" -exec sed -n '\/\\.ExampleClass.{\/,\/}\/p' \\{\\} \\+"}
{"English":"Find all *.csv files under \/foo\/bar and move them to some_dir","Bash":"find \/foot\/bar\/ -name '*.csv' -print0 | xargs -0 mv -t some_dir"}
{"English":"search for the folder .dummy and remove it from the folder \"Test folder\"","Bash":"find \"Test Folder\" -type d -name '.dummy' -delete"}
{"English":"find md5sum of content from \"www.google.com\"","Bash":"curl -s www.google.com | md5"}
{"English":"Save in QUEUE_PIDS variable only pid numbers that stored in $NEW_PIDS variable","Bash":"QUEUE_PIDS=$(comm -23 <(echo \"$NEW_PIDS\" | sort -u) <(echo \"$LIMITED_PIDS\" | sort -u) | grep -v '^$')"}
{"English":"display all the files in the folder \/home which do not belong to the group test","Bash":"find \/home ! -group test"}
{"English":"Update the archive '2009.tar' with the files from the data\/ directory tree that match pattern 'filepattern-*2009*'","Bash":"find data\/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar"}
{"English":"Remove all files that contain the word GUI in entire file system","Bash":"find \/ -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}
{"English":"delete all the text files in the current folder.","Bash":"find . -type f -name \"*.txt\" -exec rm -f {} \\;"}
{"English":"find all the empty directories in the current folder and all its sub directories too","Bash":"find . -depth -empty -type d"}
{"English":"Give a long listing of all the  *.pl files (Perl files) beneath the current directory.","Bash":"find . -name \"*.pl\" -exec ls -ld {} \\;"}
{"English":"search for the file \"myfile\" in the current folder and display all errors apart from permission denied error","Bash":"find . -name myfile |& grep -v 'Permission denied'"}
{"English":"Search the \/mnt\/raid\/upload directory tree for files that have not been modified within the last 5 days","Bash":"find \/mnt\/raid\/upload -mtime +5 -print"}
{"English":"Find all lines matching \"$USER\" in \"file\" and number the output","Bash":"grep  $USER file |nl"}
{"English":"Compare each file in \"repos1\/\" and \"repos2\/\", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context","Bash":"diff -ENwbur repos1\/ repos2\/"}
{"English":"Read the history file $HISTFILE and append the contents to the history list","Bash":"history -r \"$HISTFILE\"     #Alternative: exec bash"}
{"English":"display all the files in the kat folder","Bash":"find kat -printf \"%f\\n\""}
{"English":"Go to directory named \"~\" (not home directory)","Bash":"cd `echo -n \"~\"`"}
{"English":"Find all *.css files under \/starting\/directory and print filenames and the lines matching the regex '\\.ExampleClass' from those files","Bash":"find \/starting\/directory -type f -name '*.css' | xargs -ti grep '\\.ExampleClass' {}"}
{"English":"Find all files\/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2'","Bash":"find . -name '*.what_to_find' | grep -v exludeddir1 | grep -v excludeddir2"}
{"English":"find all the files in the current folder which have been changed in the last 60 minutes","Bash":"find . -cmin -60"}
{"English":"display the version of find command","Bash":"find --version"}
{"English":"Prints what year it was 222 days ago","Bash":"date --date=\"222 days ago\" +\"%Y\""}
{"English":"List all *.jpg files\/directories in entire file system","Bash":"find \/ -name \"*.jpg\" -print"}
{"English":"Prefix all files and directories in the current directory with \"Unix_\"","Bash":"ls | xargs -I {} mv {} Unix_{}"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn -delete"}
{"English":"Display name and value of 'variable' if it exists.","Bash":"env | grep '^variable='"}
{"English":"Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files","Bash":"find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's\/toreplace\/replaced\/g'"}
{"English":"Find all files under $dir directory","Bash":"find \"$dir\" -type f"}
{"English":"Search for all files with the same inode number 41525360","Bash":"find . -follow -inum 41525360"}
{"English":"Split the contents of \"file1 file2 ... file40000\" into 1445 files in a round robin fashion with prefix \"outputprefix\" and numeric suffixes","Bash":"cat file1 file2 ... file40000 | split -n r\/1445 -d - outputprefix"}
{"English":"Remount \"\/dev\/stl12\" on \"\/system\" as read and write","Bash":"mount -o rw,remount \/dev\/stl12 \/system"}
{"English":"Find all files in \/dir1 and print only the filenames (not paths)","Bash":"find \/dir1 -type f -printf \"%f\\n\""}
{"English":"find files in home directory which are modified yesterday","Bash":"find ~\/ -daystart -type f -mtime 1"}
{"English":"delete all the text files from the current folder after user confirmation","Bash":"find . -name \"*.txt\" -ok rm {} \\;"}
{"English":"Find *.html files in the \/usr\/src\/linux directory tree","Bash":"find \/usr\/src\/linux -name \"*.html\""}
{"English":"Mount \"ntfs-3g\" filesystem \"\/dev\/mapper\/myvolume\" on \"\/media\/volume\"","Bash":"mount -t ntfs-3g \/dev\/mapper\/myvolume \/media\/volume"}
{"English":"Replace all newlines from the contents of \"file\" except the last with spaces","Bash":"sed ':a;N;$!ba;s\/\\n\/ \/g' file"}
{"English":"List subdirectories in the current directory","Bash":"find . -maxdepth 1 -type d -exec ls -ld \"{}\" \\;"}
{"English":"Find all files under current directory matching the regex '.*\\(\\(error\\|access\\)\\(_log\\)?\\|mod_jk\\.log\\)\\.[0-9]+' in their paths","Bash":"find -type f -regex '.*\\(\\(error\\|access\\)\\(_log\\)?\\|mod_jk\\.log\\)\\.[0-9]+'"}
{"English":"download a file \"http:\/\/download.oracle.com\/otn-pub\/java\/jce\/8\/jce_policy-8.zip\" using cookies \"oraclelicense=accept-securebackup-cookie\"","Bash":"curl -L -C - -b \"oraclelicense=accept-securebackup-cookie\" -O http:\/\/download.oracle.com\/otn-pub\/java\/jce\/8\/jce_policy-8.zip"}
{"English":"Print position number of day '9' in fourth line of calendar output for September, 2009.","Bash":"cal 09 2009 | awk 'BEGIN{day=\"9\"}; NR==4 {col=index($0,day); print col }'"}
{"English":"Prints process tree of a process having id $ID with parent processes.","Bash":"pstree -s $ID"}
{"English":"Change the timestamp of symbolic link \"somesymlink\" to current date\/time","Bash":"touch -h somesymlink"}
{"English":"Print the average time of 4 ping requests to \"www.stackoverflow.com\"","Bash":"ping -c 4 www.stackoverflow.com | awk -F '\/' 'END {print $5}'"}
{"English":"Find all files and directories starting from the current directory","Bash":"find ."}
{"English":"replaces the last occurrence of 'a' with 'c'","Bash":"tac | sed '0,\/a\/ s\/a\/c\/' | tac"}
{"English":"Find all empty files under a certain path","Bash":"find \/tmp -type f -empty"}
{"English":"Print the list of files from the \"\/zu\/durchsuchender\/Ordner\" directory tree whose names begin with \"beispieldatei\" and which contain string \"Beispielinhalt\"","Bash":"find \"\/zu\/durchsuchender\/Ordner\" -name \"beispieldatei*\" -print0 | xargs -0 grep -l \"Beispielinhalt\""}
{"English":"Find all directories under and below \/root that match pattern \"*linux*\", case insensitive","Bash":"find  \/root -type d -iname \"*linux*\""}
{"English":"find all the files in the home folder which are bigger than 2MB and zip them","Bash":"find ~ -size +2000000c -regex '.*[^gz]' -exec gzip '{}' ';'"}
{"English":"List all files in \/home\/bozo\/projects directory tree that were modified exactly one day ago","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"Calculate the md5 sum of hex byte 61","Bash":"echo -n -e '\\x61' | md5sum"}
{"English":"Search the current directory tree for files without \"test\" in their path names","Bash":"find . -not -regex \".*test.*\""}
{"English":"Finds strings with text \"searched-string\" recursively in all files of current folder and prints names of files with matched strings.","Bash":"grep -r -l \"foo\" ."}
{"English":"Find files\/directories under current directory that are modified exactly one hour ago","Bash":"find . -mtime 1"}
{"English":"Show the list of files that are owned by user wnj or are newer than file `ttt'","Bash":"find \/ \\( -newer ttt -or -user wnj \\) -print"}
{"English":"Execute \"ls -l data.temp\" every 2 seconds","Bash":"watch ls -l data.temp"}
{"English":"Write contents of \"\/sys\/kernel\/debug\/tracing\/trace_pipe\" to standard output and to \"tracelog.txt\" executing as a root user","Bash":"sudo cat \/sys\/kernel\/debug\/tracing\/trace_pipe | tee tracelog.txt"}
{"English":"Check whether current terminal is opened in a screen session.","Bash":"pstree --show-parents -p $$ | head -n 1 | sed 's\/\\(.*\\)+.*\/\\1\/' | grep screen | wc -l"}
{"English":"Print file system disk space usage in human readable format of the root filesystem","Bash":"df -h \/"}
{"English":"Print all file\/directory names with white space safety under the \/proc directory","Bash":"find \/proc -print0 | xargs -0"}
{"English":"Find files under \/some\/path that are not executable","Bash":"find \/some\/path -type f ! -perm -111 -ls"}
{"English":"Finds IP addresses of all network interfaces.","Bash":"ifconfig | grep -v '127.0.0.1' | sed -n 's\/.*inet addr:\\([0-9.]\\+\\)\\s.*\/\\1\/p'"}
{"English":"Find directories that have \"755\" permissions and modify them to have \"700\" permissions","Bash":"find . -type d -perm 755 -exec chmod 700 {} \\;"}
{"English":"Search all .py files in the current directory tree for \"some_function\"","Bash":"find . -name \\*.py | xargs grep some_function"}
{"English":"Find all files matching the pattern \"${pattern}\" in their name and execute ${my_command} for each of them with the file path as argument","Bash":"find ${directory} -name \"${pattern}\" -print0 | xargs -0 ${my_command}"}
{"English":"search for all text files in the folder \/home","Bash":"find \/home -name *.txt"}
{"English":"delete all the empty files in the current directory","Bash":"find . -empty -exec rm {}\\;"}
{"English":"Change owner to \"root\" and group to \"wheel\" of \"bin\"","Bash":"sudo chown root:wheel bin"}
{"English":"Set permissions of command \"node\" to 755","Bash":"sudo chmod 755 $(which node)"}
{"English":"Calculate the md5sum of the executable file of command \"gcc\"","Bash":"md5sum $(which gcc)"}
{"English":"Find all files larger than 20000k","Bash":"find \/ -type f -size +20000k"}
{"English":"Print \"\/tmp\/myfile\" starting at line 11","Bash":"tail -n +11 \/tmp\/myfile"}
{"English":"Find all .gz archives in the current directory tree and check if they are valid","Bash":"find \"*.gz\" -exec gunzip -vt \"{}\" +"}
{"English":"List files smaller than 9kB residing in the current directory and below","Bash":"find . -size -9k"}
{"English":"Set the read bit for \"other\" on all *rc.conf files in the current directory tree","Bash":"find . -name \"*rc.conf\" -exec chmod o+r '{}' \\;"}
{"English":"display all the regular\/normal files in the current folder that are not accessed in the last 10 minutes","Bash":"find . -type f -amin +10"}
{"English":"Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today","Bash":"less `find -maxdepth 1 -type f -daystart -mtime -1`"}
{"English":"Find all *.axvw files\/directories under current directory","Bash":"find . -name '*.axvw'"}
{"English":"Add content of \"filename\" to the existing cron jobs of user \"user\", without removing the previously existing cron jobs.","Bash":"crontab -l -u user | cat - filename | crontab -u user -"}
{"English":"Find files with 002 permission under \/tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found","Bash":"find \/tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'"}
{"English":"Delete all regular files under current directory","Bash":"find . -type f -print0 | xargs -0 \/bin\/rm"}
{"English":"Output all lines that have a common first colon-separated field in files 'selection2.txt' and 'selection1.txt' by displaying the common (first) field of each line, followed by the extra fields in both lines.","Bash":"join -t: selection2.txt selection1.txt"}
{"English":"Find all files\/directories under current directory and print their paths","Bash":"find . -exec echo {} ';'"}
{"English":"change the permissions of all the regular\/normal files to 664 in the current folder","Bash":"find . -type f -exec chmod 664 {} \\;"}
{"English":"Find files\/directories named 'sar' under '\/usr', '\/bin', '\/sbin' and '\/opt' directory tree","Bash":"find \/usr \/bin \/sbin \/opt -name sar"}
{"English":"Find the files that have \"644\" permissions and modify them to have \"664\" permissions","Bash":"find . -type f -perm 644 -exec chmod 664 {} \\;"}
{"English":"find all the normal\/regular files in the current directory and search for the word mail and display the file names","Bash":"find . -type f -exec grep -il mail"}
{"English":"Find all php files in current directory and delete lines matching the regex '<\\?php \\\/\\*\\*\\\/eval(base64_decode(.*));.*\\?>' in those files","Bash":"find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php \/\\*\\*\/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '\/<\\?php \\\/\\*\\*\\\/eval(base64_decode(.*));.*\\?>\/d' {} \\;"}
{"English":"Find all files that are set user ID to root","Bash":"find . -user root -perm -4000 -print"}
{"English":"display all the files in the current folder which have been modified in the last 24 hours excluding all directories","Bash":"find . \\( -type d ! -name . -prune \\) -o \\( -mtime -1 -print \\)"}
{"English":"Find files in entire file system that are writable by group or other","Bash":"find \/ -perm \/g+w,o+w"}
{"English":"List all regular files in entire file system","Bash":"find \/ -type f -exec echo {} \\;"}
{"English":"Displays a tree of all process alongside their command line arguments.","Bash":"pstree -a"}
{"English":"Count the number of lines in \"\/etc\/fstab\"","Bash":"cat \/etc\/fstab | wc -l"}
{"English":"Search the .java files from the current directory tree for TODO lines","Bash":"find . -name \"*.java\" -exec grep -Hin TODO {} \\;"}
{"English":"Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.","Bash":"fn=$(mktemp -u -t 'XXXXXX')"}
{"English":"Removes 'latest' folder if empty.","Bash":"rmdir latest"}
{"English":"Display inputfile all on one line (replace newlines by spaces)","Bash":"awk '{printf \"%s \", $0} END {printf \"\\n\"}' inputfile"}
{"English":"Find all directories under \/home\/username\/public_html\/sites\/all\/themes and set their permission to 750","Bash":"find \/home\/username\/public_html\/sites\/all\/themes -type d -exec chmod 750 {} +"}
{"English":"Change permissions of all files ending \".php\" under the current directory to 755 and print a count of modified files","Bash":"find . -name \"*.php\" -exec chmod 755 {} + -printf '.' | wc -c"}
{"English":"Search the current directory recursively for regular files last changed 2 days ago","Bash":"find . type -f -ctime 2"}
{"English":"Set the 'pipefail' shell variable causing bash to return true only if all commands in a pipeline return true.","Bash":"set -o pipefail"}
{"English":"Recursively finds all \"file_pattern_name\" files and folders and prints strings with \"pattern\", searching through found folders recursively.","Bash":"find .\/ -name \"file_pattern_name\"  -exec grep -r \"pattern\" {} \\;"}
{"English":"Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place","Bash":"find . -type f -exec sed -i \"s\/1\\.2\\.3\\.4\/5.6.7.8\/g\" {} \\"}
{"English":"Finds recursively all files in '\/path\/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.","Bash":"grep --exclude-dir={dir1,dir2,*.dst} -rnw '\/path\/to\/somewhere\/' -e \"pattern\""}
{"English":"Infinitely ping every host listed in \"file-of-ips\" with at most 50 processes at once","Bash":"cat file-of-ips | xargs -n 1 -I ^ -P 50 ping ^"}
{"English":"Print 'file' file, splitting lines into pieces with no more that 3 words in each one.","Bash":"cat file | xargs -n3"}
{"English":"Recursively change the owner of all files in \"testproject\/\" to \"ftpuser\"","Bash":"chown ftpuser testproject\/ -R"}
{"English":"search for all mp3 files in the folder \/home\/you which have been accessed exactly 10*24 hours ago","Bash":"find \/home\/you -iname \"*.mp3\" -atime 10 -type -f"}
{"English":"List all files\/directories under current directory using comma (,) as the delimiter for different fields in the output","Bash":"find . -ls | awk '{printf( \"%s,%s,%s,%s,%s,%s,%s,%s %s %s,%s\\n\", $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11 )}'"}
{"English":"search for the file foo.txt in the entire file system","Bash":"find \/ -name foo.txt"}
{"English":"Descend into every directory under \/etc and print the file\/directory names with relative paths","Bash":"find \/etc -execdir echo \"{}\" ';'"}
{"English":"Find all files\/directories with '.in' extension in the directory $directory and its subdirectories","Bash":"du -a $directory | awk '{print $2}' | grep '\\.in$'"}
{"English":"Find all files under \"\/path\" that do not contain a \".\" and append \".jpg\" to their file name","Bash":"find \/path -type f -not -name \"*.*\" -print0 | xargs -0 rename 's\/(.)$\/$1.jpg\/'"}
{"English":"create directory dir","Bash":"mkdir -p dir"}
{"English":"Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier, host name, and trailing slash, of the form http:\/\/example.com\/","Bash":"sed -n 's;\\(http:\/\/[^\/]*\/\\).*;\\1;p'"}
{"English":"create an archive using pbzip2 as a compress program","Bash":"tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 \/DIR_TO_ZIP\/"}
{"English":"Search the current directory recursively for files containing \"string\"","Bash":"find . -type f -exec grep -l 'string' {} \\;"}
{"English":"Find all files with the SUID bit set, starting from \/","Bash":"find \/ -perm -u+s"}
{"English":"search for a word in all the php files in the current folder and display the count of all matching lines.","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\; | wc -l"}
{"English":"Remove symbolic links and get absolute path of \"${the_stuff_you_test}\" and save to variable \"DIR_PATH\"","Bash":"DIR_PATH=`readlink -f \"${the_stuff_you_test}\"`"}
{"English":"Print and delete all directories named 'work' under '\/usr\/ports\/' directory tree","Bash":"find \/usr\/ports\/ -name work -type d -print -exec rm -rf {} \\;"}
{"English":"Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields.","Bash":"paste <(uniq -f3 file | cut -f1,2) <(tac file | uniq -f3 | tac | cut -f3-)"}
{"English":"Search current directory for any directory named \"config\" and go to first match found.","Bash":"cd \"$(find . -name config -type d | sed 1q)\""}
{"English":"Search the home directory tree for files last modified more than a year ago","Bash":"find $HOME -mtime +365"}
{"English":"Find all files under \/somefolder matching the pattern expanded by $FILE_PATTERN in thier names","Bash":"find \/somefolder -type f -name $FILE_PATTERN"}
{"English":"Search for first match of the regex 're' in all *.coffee files under current directory","Bash":"find . -name '*.coffee' -exec awk '\/re\/ {print;exit}' {} \\;"}
{"English":"Archive all \".txt\" files in the current directory to \"\/path\/to\/dest\" keeping partially transferred files","Bash":"rsync -aP --include=*\/ --include=*.txt --exclude=* . \/path\/to\/dest"}
{"English":"Find all PHP files in the current directory recursively and search them for string \"$test\" with 8 simultaneous processes","Bash":"find . -name \\*.php -type f -print0 | xargs -0 -n1 -P8 grep -Hn '$test'"}
{"English":"start from current directory, skip the directory src\/emacs and print it then skip all files and directories under it, and print the names of the other files found","Bash":"find . -wholename '.\/src\/emacs' -prune , -print"}
{"English":"Find and print the names of all files found in the current directory and all of its sub-directories.","Bash":"find . -print"}
{"English":"List subdirectories in the current directory","Bash":"find . -maxdepth 1 -type d -print0 | xargs -0 ls -d"}
{"English":"Search the \/path directory tree for regular files","Bash":"find \/path -type f"}
{"English":"Creates path as current folder path and folder that contains $0 file, and saves result in 'script_dir' variable.","Bash":"set script_dir = `pwd`\/`dirname $0`"}
{"English":"Find all httpd.conf files in entire file system","Bash":"find \/ -name httpd.conf"}
{"English":"Gets IP addresses of all active network interfaces on host.","Bash":"ifconfig | awk -F':' '\/inet addr\/&&!\/127.0.0.1\/{split($2,_,\" \");print _[1]}'"}
{"English":"Set variable \"finalName\" to the second-to-last slash-separated path component of variable \"path\"","Bash":"finalName=$(basename -- \"$(dirname -- \"$path\")\")"}
{"English":"Search the current directory tree for symbolic links to files matching pattern '*\/test*'","Bash":"find -P . -lname '*\/test*'"}
{"English":"find all the files that have been modified in the last 12 hours","Bash":"find .\/ -mtime -0.5"}
{"English":"Page through the contents of file 'file_name', positioning the view at the first occurrence of regular expression 'regex'.","Bash":"less -p regex file_name"}
{"English":"find all the files ending with undo in the current folder and calculate the total size of these files","Bash":"find . -name \"*.undo\" -ls | awk '{total += $7} END {print total}'"}
{"English":"Get the total sizes of all files under current directory","Bash":"find path -type f -printf '%s\\n' | awk '{sum += $1} END {print sum}'"}
{"English":"Remove ESC key bind","Bash":"bind -r '\\e'"}
{"English":"Recursively change owner and group to \"$JBOSS_AS_USER\" of \"$JBOSS_AS_DIR\/\"","Bash":"chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR\/"}
{"English":"Find symlinks in the current directory tree","Bash":"find . -type l | xargs ls -ld"}
{"English":"Gets IP addresses of all active network interfaces.","Bash":"ifconfig | grep -oP \"(?<=inet addr:).*?(?=  Bcast)\""}
{"English":"SSH into user@server and run command ${SSH_COMMAND}","Bash":"ssh user@server \"${SSH_COMMAND}\""}
{"English":"find all directories named build under the current directory","Bash":"find . -type d -name build"}
{"English":"find StringBuffer in all *.java files, ignoring case","Bash":"find . -type f -name \"*.java\" -exec grep -il string {} \\;"}
{"English":"Print a NULL-separated list of all hidden regular files from the home directory","Bash":"find $HOME -maxdepth 1 -type f -name '.*' -print0"}
{"English":"Find all directories name nasa in the current directory and below.","Bash":"find . -name nasa -type d"}
{"English":"find all files in the current folder with the permission 777 and modify the permissions as 755.","Bash":"find . -type f -perm 777 -exec chmod 755 {} \\;"}
{"English":"find all the files that have been modified exactly 2 days ago","Bash":"find -mtime 2"}
{"English":"Print the first 5 decompressed lines of compressed file \"$line\"","Bash":"zcat \"$line\" | head -n5"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f -print0 | xargs -0 ls -ltr | tail -n 1"}
{"English":"Find all *.ini files","Bash":"find . -name *.ini"}
{"English":"Write \"error\" to standard output","Bash":"echo \"error\" | tee"}
{"English":"Set permissions of all directories under \"\/path\/to\/base\/dir\" to 755","Bash":"chmod 755 $(find \/path\/to\/base\/dir -type d)"}
{"English":"Output lines 16224 to 16482 of 'file', not recommended with large files that contain many lines after the ones needed.","Bash":"awk 'NR==16224, NR==16482' file"}
{"English":"Print common lines in files \"set1\" and \"set2\"","Bash":"comm -12 <(sort set1) <(sort set2)"}
{"English":"create a tar of all png & jpg images in the current folder","Bash":"find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}
{"English":"Recursively changes group ownership of everything within a '\/path\/to\/repo' to 'GROUP'.","Bash":"chgrp -R GROUP \/path\/to\/repo"}
{"English":"find all files with the first letter \u201ce\u201d or \u201cf\u201d and last one x in \/usr\/bin directory:","Bash":"find \/usr\/bin -name [ef]*x"}
{"English":"Print \"test=hello world\"","Bash":"echo \"hello world\" | echo test=$(cat)"}
{"English":"Find all files in the current directory recursively with \"linkin park\" in their names and copy them to \/Users\/tommye\/Desktop\/LP","Bash":"find . -type f -iname \"*linkin park*\" -exec cp -r {} \/Users\/tommye\/Desktop\/LP \\;"}
{"English":"Create ssh tunnel through \"genja.org\" connecting localhost port 4444 to \"raptor.lan\" port 22","Bash":"ssh -L 4444:raptor.lan:22 genja.org"}
{"English":"Query SRV records for domain '_kerberos._udp.foo.com'","Bash":"dig -t SRV _kerberos._udp.foo.com"}
{"English":"Print list of files that are only in directory \/dir1 and not their sub directories and only their file names.","Bash":"diff -q \/dir1 \/dir2 | grep \/dir1 | grep -E \"^Only in*\" | sed -n 's\/[^:]*: \/\/p'"}
{"English":"Copy \"some_file_name\" to \"destination_directory\" and change ownership to \"someuser:somegroup\"","Bash":"echo 'some_file_name' | cpio -p --owner someuser:somegroup destination_directory"}
{"English":"display all files in current folder which have not been modified in the last 60 minutes","Bash":"find -mmin +60"}
{"English":"Print numbers from 1 to 10 with 2 values per line","Bash":"seq 10 | paste -sd\" \\n\" -"}
{"English":"Display differences between directories dir1 and dir2.","Bash":"diff -r dir1 dir2"}
{"English":"Send ping requests to hostname specified by variable \"c\" for 1 second.","Bash":"ping -w 1 $c"}
{"English":"change the permissions of all the files ending with \"fits\" in the folder \"\/store\/01\"","Bash":"find \/store\/01 -name \"*.fits\" -exec chmod -x+r {} \\; \\"}
{"English":"Find *.tex files in the current directory tree that contain text \"documentclass\"","Bash":"find . -type f -name *.tex -print0 | xargs -0 grep -l 'documentclass'"}
{"English":"Search the current directory recursively for regular files last accessed more than 2 minutes ago","Bash":"find . type -f -amin +2"}
{"English":"Gets MAC address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep -Eo ..\\(\\:..\\){5}"}
{"English":"Format the contents of \"[file]\" in a neat table","Bash":"column -t [file]"}
{"English":"display a long listing of all the files in the current folder","Bash":"find . \u2014 type f -exec ls -1 {} \\;"}
{"English":"Find files and directories newer than CompareFile under current directory","Bash":"find . -newer CompareFile -print"}
{"English":"Finds name of a current month and saves it in a 'month' variable.","Bash":"month=$(cal | head -1 | grep -oP \"[A-Za-z]+\")"}
{"English":"Find all *.txt files under current directory and print their timestamps and paths","Bash":"find . -name \"*.txt\" -printf \"%T+ %p\\n\""}
{"English":"Find all CSS files that do something with HTML ID #content","Bash":"find . -name \"*.css\" -exec grep -l \"#content\" {} \\;"}
{"English":"Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed","Bash":"find . -name \"*.php\" -exec chmod 755 {} \\; -exec \/bin\/echo {} \\; | wc -l"}
{"English":"Recursively remove all \"*.txt\" files and answer \"n\" to any prompt","Bash":"yes n | rm -r *.txt"}
{"English":"Determine if user \"$USER\" is logged in","Bash":"who | grep $USER"}
{"English":"Find directories in the current directory tree whose names are 33 characters in length","Bash":"find . -type d -name \"?????????????????????????????????\""}
{"English":"Remove all regular files from the current directory tree whose names do not end with \"ignore1\" or \"ignore2\"","Bash":"find . -type f -not -name '*ignore1' -not -name '*ignore2' | xargs rm"}
{"English":"Find all directories under htdocs directory and set their permission to 775","Bash":"find htdocs -type d -exec chmod 775 {} +"}
{"English":"Format tab separated fields in \"FILE\" as a table","Bash":"column -t -s $'\\t' FILE"}
{"English":"Find all build* directories under \/var\/www\/html\/ and reverse sort them","Bash":"find \/var\/www\/html\/ -type d -name \"build*\" | sort -r"}
{"English":"Split standard input into files of at most 1000 lines each","Bash":"split"}
{"English":"Find all files\/directories under '\/var\/log' directory tree that bave been modified today (from the start of the day)","Bash":"find \/var\/log -daystart -mtime 0"}
{"English":"Count line numbers on files and record each count along with individual file name.","Bash":"find \/home\/my_dir -name '*.txt' | xargs grep -c ^.*"}
{"English":"Save a list of all the files\/directories under current directory tree to a file named 'foo'","Bash":"find . -fprint foo"}
{"English":"Display what flags mount points are mounted with","Bash":"mount -l"}
{"English":"Find all files\/directories named 'fprintf.c' under '\/usr\/src' directory tree","Bash":"find \/usr\/src -name fprintf.c"}
{"English":"Delete all empty directories in minimum 2 levels down the root directory","Bash":"find root -mindepth 2 -type d -empty -delete"}
{"English":"View history using \"less\"","Bash":"history | less"}
{"English":"Find all or single file called FindCommandExamples.txt under \/ directory of owner root","Bash":"find \/ -user root -name FindCommandExamples.txt"}
{"English":"remove all core dump files from user's home directory","Bash":"find ~\/ -name 'core*' -exec rm {} \\;"}
{"English":"find all the php files in the current folder (discards any directory which has an extension of \".php\")","Bash":"find . -name \\*.php -type f"}
{"English":"Recursively copies '..\/include\/gtest' directory to '~\/usr\/gtest\/include\/'.","Bash":"cp -r ..\/include\/gtest ~\/usr\/gtest\/include\/"}
{"English":"Display mime type of file specified by variable \"file\"","Bash":"file -ib \"$file\""}
{"English":"Find all files ignoring hidden files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files","Bash":"find . -not -path '*\/\\.*' -type f -print0 | xargs -0 sed -i 's\/subdomainA\\.example\\.com\/subdomainB.example.com\/g'"}
{"English":"Gets MAC address of eth0 network interface.","Bash":"ifconfig eth0 | grep -Eoi [:0-9A-F:]{2}\\(\\:[:0-9A-F:]{2}\\){5}"}
{"English":"search for all Scala files under the current directory that contain the string null","Bash":"find . -type f -name \"*.scala\" -exec grep -B5 -A10 'null' {} \\;"}
{"English":"Show the list of directories in the \/mnt\/raid directory tree","Bash":"find \/mnt\/raid -type d -print"}
{"English":"display all the configuration files in the etc folder","Bash":"find \/etc -name '*.conf'"}
{"English":"Return 0 if file system is mounted on '\/full\/path'","Bash":"df \/full\/path | grep -q \/full\/path"}
{"English":"Print lines 16225 to 16482 in file \"file\"","Bash":"cat file | head -n 16482 | tail -n 258"}
{"English":"Find all files in the \/var\/tmp directory tree with uid=1000","Bash":"find \/var\/tmp -uid 1000"}
{"English":"find all files that names are dir-name-here","Bash":"find \/ -name \"dir-name-here\""}
{"English":"Deletes empty folder 'nonsense_dir'.","Bash":"rmdir nonsense_dir"}
{"English":"Print each logged in user's username and full name","Bash":"finger -l | grep \"Name:\" | tr -s ' ' | cut -d \" \" -f 2,4- | sort | uniq"}
{"English":"Run script $2 on remote host $1 using interpreter $INTERPRETER with pseudo-terminal allocation","Bash":"cat $2 | grep -v \"#\" | ssh -t $1 $INTERPRETER"}
{"English":"Display total apparent size of a file","Bash":"du -sb"}
{"English":"display all the text files in current folder","Bash":"find . -name \"*.txt\" -printf \"%f\\n\""}
{"English":"Find all *.log files under path\/","Bash":"find path\/ -name \"*.log\""}
{"English":"prints a number stored among text in $filename","Bash":"echo $filename | egrep -o '[[:digit:]]{5}' | head -n1"}
{"English":"Find .txt files on the system whose size is greater than 12000 bytes","Bash":"find \/ -name \"*.txt\" -size +12000c"}
{"English":"search for the file \"file_name\" in the folder \/path","Bash":"find \/path -name file_name"}
{"English":"Change the user and group of all files and directories under \/var\/www to www-data:www-data","Bash":"find \/var\/www -print0 | xargs -0 chown www-data:www-data"}
{"English":"Archive showing progress \"sourcefolder\" to \"\/destinationfolder\" excluding \"thefoldertoexclude\"","Bash":"rsync -av --progress sourcefolder \/destinationfolder --exclude thefoldertoexclude"}
{"English":"Change permissions to 644 of multiple regular files with permissions 755","Bash":"find . -type f -perm 755 -exec chmod 644 {} \\;"}
{"English":"Find all $2 files in $1 path excluding \/proc and search for the regex expanded by $3 in those files","Bash":"find $1 -path \/proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;"}
{"English":"Print lines in file 'filename' that do not match the regex 'pattern'","Bash":"grep -v 'pattern' filename"}
{"English":"Changes group ownership of 'public' to 'pub'.","Bash":"chgrp pub public"}
{"English":"display all the files in the current folder that end with \".ksh\"","Bash":"find . -name \"*.ksh\" -prune"}
{"English":"change owner of the file process to user root","Bash":"sudo chown root process"}
{"English":"Print a minimal set of differences between files in directories \"a\" and \"b\", ignore the first 3 lines of output, and print any line starting with \"-\" with the first character removed","Bash":"diff -dbU0 a b | tail -n +4 | grep ^- | cut -c2-"}
{"English":"Find directory \"your\/dir\" if it is empty","Bash":"find your\/dir -prune -empty -type d"}
{"English":"Extract host name part from URL.","Bash":"echo \"$url\" | cut -d'\/' -f3"}
{"English":"Set variable OS to the name of the operating system, ie. \"Linux\"","Bash":"OS=`uname -s`"}
{"English":"Prints the length and contents of the longest line in filename","Bash":"cat filename | awk '{print length, $0}'|sort -nr|head -1"}
{"English":"Search for files in your home directory which have been modified in the last twenty-four hours","Bash":"find $HOME  -mtime 0"}
{"English":"Decompress \"\/file\/address\/file.tar.gz\" to standard output","Bash":"gzip -dc \/file\/address\/file.tar.gz"}
{"English":"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output","Bash":"find . -type f -exec grep -i California {} \\; -print | wc -l"}
{"English":"Print the type of the current shell","Bash":"echo $(cat \/proc\/$$\/cmdline)"}
{"English":"Set permissions to ug=rwx,o= for directories inside the .\/default\/files tree","Bash":"find .\/default\/files -type d -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"find all the text files in the folder \/home\/calvin and do not search beyond 2 levels","Bash":"find \/home\/calvin\/ -maxdepth 2  -name \u201c*.txt\u201d"}
{"English":"Find all files\/directories under current directory that were modified later than \/reference\/file","Bash":"find . -newer \/reference\/file"}
{"English":"Find all directories in maximum 2 levels down the \/tmp directory","Bash":"find \/tmp -maxdepth 2 -mindepth 1 -type d"}
{"English":"Verbosely compresses all files on fifth and sixth depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*\/*\/*\/*"}
{"English":"Find files in entire file system with at least 644 permissions","Bash":"find \/ -perm -u+rw,g+r,o+r"}
{"English":"Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.","Bash":"find . -atime +7 -o -size +20480 -print"}
{"English":"List all regular files under current directory ensuring white space safety","Bash":"find . -type f -print0 | xargs -0 -n 1"}
{"English":"find all the directories with the name \"uploads\" in current folder","Bash":"find . -type d -name 'uploads'"}
{"English":"find all the files in the entire file system that have been changed exactly  60 days  and display ten files","Bash":"find \/ -cmin -60 | head"}
{"English":"Gets IP address of 'en1' network interface.","Bash":"ifconfig en1 | awk '{ print $2}' | grep -E -o \"([0-9]{1,3}[\\.]){3}[0-9]{1,3}\""}
{"English":"list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.","Bash":"find . ! -readable -prune"}
{"English":"Search the system for files named \"findcommandexamples.txt\", ignoring the case","Bash":"find  \/ -iname findcommandexamples.txt"}
{"English":"find all the files and folder that were created in 2012 on Friday of every month","Bash":"find \/ -daystart -mtime +41 -mtime -408 \\   -printf \"%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h\/%f\\n\" | awk '($7==\"Fri\"){print}'"}
{"English":"Saves folder path where target of symbolic link $file file is located in 'base' variable.","Bash":"base=$(dirname $(readlink $file))"}
{"English":"Search the current directory tree for symlinks whose contents match pattern \"*sysdep.c\"","Bash":"find . -lname '*sysdep.c'"}
{"English":"List all regular files in the current directory tree","Bash":"find . -type f -print0 | xargs -0 ls -l"}
{"English":"List all variables (names and values) whose name or value contains X.","Bash":"env | grep \".*X.*\""}
{"English":"Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.","Bash":"ssh-keygen -t rsa -C \"$APP\" -N \"$SSHKEYPASS\" -f ~\/.ssh\/id_rsa"}
{"English":"Find all files under current directory and show their file information","Bash":"find . -type f | xargs file"}
{"English":"find all the directories in the current directory which dont have the execute permission.","Bash":"find -type d ! -perm -111"}
{"English":"Remove all directories in and below the current directory","Bash":"find \\! -name . -type d -print0 | xargs -0 rmdir"}
{"English":"Create a copy of the current working directory structure in the usr\/project directory,","Bash":"find . -type d -print|sed 's@^@\/usr\/project\/@'|xargs mkdir"}
{"English":"Set permissions to 700 for directories under media\/","Bash":"find media\/ -type d -exec chmod 700 {} \\;"}
{"English":"Saves listing of a current folder in 'OUTPUT' variable.","Bash":"OUTPUT=\"$(ls -1)\""}
{"English":"Find directories in the current directory tree that were modified within the last 24 hours and move them to \/path\/to\/target-dir","Bash":"find . -depth -type d -mtime 0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Search the \/myfiles directory tree for regular files with at least these permissions: 647","Bash":"find \/myfiles -type f -perm -647"}
{"English":"Archive all files (not directories) in \"folder1\" to \"copy_of_folder1\" specifying to include files info.txt and data.zip","Bash":"rsync -a -f\"+ info.txt\" -f\"+ data.zip\" -f'-! *\/' folder1\/ copy_of_folder1\/"}
{"English":"list all regular files which path is not dir1 or dir2","Bash":"find ! -path \"dir1\" ! -path \"dir2\" -type f"}
{"English":"Search the files from the current directory tree for \"foo\"","Bash":"find . -exec grep foo {} +"}
{"English":"Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable","Bash":"full_backup_dir=$(find . -depth \\( -wholename \\.\/\\.\\* \\) -prune -o -mtime -1 -print)"}
{"English":"Find all files in current directory excluding hidden files and put the output into full_backup_dir variable","Bash":"full_backup_dir=$(find . -depth '(' -wholename '.\/.*' ')' -prune -o -print)"}
{"English":"Search the current directory tree for regular files that were modified $FTIME days ago","Bash":"find . -type f -mtime $FTIME"}
{"English":"List all directories found in the current directory and below.","Bash":"find . -type d"}
{"English":"find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces","Bash":"find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}
{"English":"Locate all .txt files in and below the current directory","Bash":"find . -name \"*.txt\""}
{"English":"Creates temporary file and saves path to it in a 'tmpfile' variable.","Bash":"tmpfile=`mktemp`"}
{"English":"Remove files under current directory with inode number $inum","Bash":"find . -inum $inum -exec rm {} \\;"}
{"English":"delete all text files from current folder","Bash":"find . -type f ! -iname \"*.txt\" -delete"}
{"English":"Find all files that are set group ID to staff","Bash":"find . -group staff -perm -2000 -print"}
{"English":"search for a function in all python files in the current folder","Bash":"find . -name '*.py' | xargs grep some_function"}
{"English":"Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.","Bash":"find . -name '*.js' -exec grep -i 'string to search for' {} \\; -print"}
{"English":"Display the biggest file sizes only","Bash":"find -type f -exec du -Sh {} + | sort -rh | head -n 5"}
{"English":"Returns unsuccessful exit code on each found file like '*tests*' within current directory.","Bash":"find . -name '*tests*' -print -exec false \\;"}
{"English":"Make directories to file \"\/full\/path\/to\/file.txt\" as needed","Bash":"mkdir -p `dirname \/full\/path\/to\/file.txt`"}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find -path \"*\/test\" -type d -delete"}
{"English":"Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.","Bash":"set | more"}
{"English":"Open a local SSH port on 1080 for application-level port forwarding","Bash":"ssh -D1080 root@localhost -g"}
{"English":"Remove all subdirectories of the current directory, except for \"bar\", \"foo\", \"a\", and \"b\"","Bash":"find . -maxdepth 1 -type d \\( ! -name \"bar\" -a ! -name \"foo\" -a ! -name \"a\" -a ! -name \"b\" \\) -delete"}
{"English":"Finds strings matching pattern '^fields=\\\\\\|^var=' in a 'set' output.","Bash":"set | grep ^fields=\\\\\\|^var="}
{"English":"Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones","Bash":"comm <(sort f1.txt) <(sort f2.txt)"}
{"English":"Find files\/directories that is under group 'root' or have no group and set their group to 'apache'","Bash":"find \/var\/www -group root -o -nogroup -print0 | xargs -0 chown :apache"}
{"English":"Execute all arguments to a shell script and write the output to console and \"$FILE\"","Bash":"$@ | tee $FILE"}
{"English":"change the owner of all the files in the file system which belong to the user with the uid 999","Bash":"find \/ -user 999 -exec chown NEWUSER {} \\;"}
{"English":"recall the second argument from a previous command by pressing alt-shift-y","Bash":"bind '\"\\eY\": \"\\e2\\e.\"'"}
{"English":"File 'mydatafile' has a number on each line, display the sum of these numbers.","Bash":"awk '{s+=$1} END {print s}' mydatafile"}
{"English":"change permissions for directories in the entire file system","Bash":"chmod 751 `find .\/ -type d -print`"}
{"English":"Read a line from standard input with a timeout of 10 seconds","Bash":"read -t 10"}
{"English":"Delete all files\/directories named 'file' under current directory tree","Bash":"find -name file -delete"}
{"English":"Search the current directory tree for *.c and *.asm files, ignoring the case","Bash":"find . -type f \\( -iname \"*.c\" -or -iname \"*.asm\" \\)"}
{"English":"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","Bash":"find $1 -name \"$2\" | grep -v '\/proc' | xargs grep -Hn \"$3\" {} \\;"}
{"English":"Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one","Bash":"echo -e \"$(TZ=GMT+30 date +%Y-%m-%d)\\n$(TZ=GMT+20 date +%Y-%m-%d)\" | grep -v $(date +%Y-%m-%d) | tail -1"}
{"English":"Force create a symbolic link without dereferencing named \"mylink\" to \"dir2\"","Bash":"ln -nsf dir2 mylink"}
{"English":"Get a detailed listing of all symbolic links in \/usr\/bin starting with \"z\"","Bash":"find \/usr\/bin  -type l  -name \"z*\" -exec ls  -l {} \\;"}
{"English":"Creates temporary folder and saves path to it in 'td' variable.","Bash":"td=$( mktemp -d )"}
{"English":"Print unique lines in sorted file \"A\" when compared to sorted files \"B\", \"C\", and \"D\"","Bash":"comm -2 -3 A B | comm -2 -3 - C | comm -2 -3 - D"}
{"English":"Replace all non-punctuation characters with newlines from standard input","Bash":"tr -sc '[:punct:]' '\\n'"}
{"English":"display all the java, xml and action scripts (.as) files in a directory","Bash":"find dir1 -type f -a \\( -name \"*.java\" -o -name \"*.as\" -o -name \"*.xml\" \\)"}
{"English":"Find all 400 permission files under \/data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755","Bash":"find \/data -type f -perm 400 -exec echo Modifying {} \\; -exec chmod 755 {} \\;"}
{"English":"Find all regular files under $FOLDER directory tree that start with '\".' and end with '\"' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE","Bash":"find ${FOLDER} -type f ! -name \\\".*\\\" -mtime -${RETENTION} | egrep -vf ${SKIP_FILE}"}
{"English":"Search the files from the current directory tree for \"foo\"","Bash":"find . -exec grep -l foo {} \\;"}
{"English":"Report file systems inode usage.","Bash":"df -i"}
{"English":"List files in directory \"one\" that exist in directory \"two\"","Bash":"sort <(ls one) <(ls two) | uniq -d"}
{"English":"Find the 5 largest regular files in the current directory and below.","Bash":"find -type f -exec du -Sh {} + | sort -rh | head -n 5"}
{"English":"Prints information about user $euids currently on machine and its processes, without printing header.","Bash":"w -h $euids"}
{"English":"find all the files in the current directory that have the word \"lib\" in them","Bash":"find . -wholename '\/lib*'"}
{"English":"Starts new tmux session, assuming the terminal supports 256 colours.","Bash":"tmux -2"}
{"English":"display all files in the folder \/usr and its sub directory(do not search beyond the sub directory)","Bash":"find \/usr -maxdepth 1 -print"}
{"English":"Find all directories under \/path\/to\/dir and change their permission to 755","Bash":"find \/path\/to\/dir -type d -exec chmod 755 {} +"}
{"English":"Creates temporary file in TMPDIR folder or \/tmp\/ if TMPDIR is not defined, named by template ${tempname}.XXXXXX, and saves path to new file in  a TMPPS_PREFIX variable.","Bash":"TMPPS_PREFIX=$(mktemp \"${TMPDIR:-\/tmp\/}${tempname}.XXXXXX\")"}
{"English":"display all the directories in the folder \/path\/to\/dest except tmp and cache directories","Bash":"find \/path\/to\/dest -type d \\( ! -name tmp \\) -o \\( ! -name cache \\) -print"}
{"English":"search for a word in all the files in the current directory","Bash":"find . | xargs grep 'chrome'"}
{"English":"Find files associated with an inode","Bash":"find . -inum 968746 -print"}
{"English":"Find all files\/directories owned by user 'michel' under current directory","Bash":"find -user michel"}
{"English":"Find files in the current directory tree whose size is 24000 bytes","Bash":"find . -size 24000c"}
{"English":"Print all user names and terminals of users who are logged in","Bash":"who | awk '{ print $1, $2 }'"}
{"English":"find all files & dircetiry in current directory which  have .tmp extension and delete them .","Bash":"find . -type f -name \"*.tmp\"  -exec rm -rf {} \\;"}
{"English":"Request NS record for com. domain, receiving only authoritative answers","Bash":"dig NS +aaonly com."}
{"English":"search for all the regular files in the current folder and display the contents","Bash":"find . -type f -exec cat {} \\;"}
{"English":"Display all lines containing PROBES in the current kernel's compile-time config file.","Bash":"grep PROBES \/boot\/config-$(uname -r)"}
{"English":"Find all sample* files\/directories under current directory and print 'program {}-out {}' where {} will expand to file paths","Bash":"find . -name \"sample*\" | xargs -i echo program {}-out {}"}
{"English":"Return the list of files named \"filename\" that are 50 megabytes or larger","Bash":"find \/ -size +50M -iname \"filename\""}
{"English":"Find files with 002 permission in entire file system with the null character as the delimiter","Bash":"find \/ -type f -perm -002 -print0"}
{"English":"Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the .\/C directory and below","Bash":"find .\/C -name \"*.c\" | xargs -n1  echo cp xyz.c"}
{"English":"Find all directories in the current one recursively which have the write bit set for \"other\"","Bash":"find . -type d -perm -o=w"}
{"English":"Write \"127.0.0.1 ad.doubleclick.net\" to the console and append to \"\/etc\/hosts\" as root","Bash":"echo 127.0.0.1 ad.doubleclick.net | sudo tee -a \/etc\/hosts"}
{"English":"Print the unique lines from standard input preserving the order they appear","Bash":"nl -n ln | sort -u -k 2| sort -k 1n | cut -f 2-"}
{"English":"Find all *.mp3 files in entire file system greater than 10MB and delete them","Bash":"find \/ -type f -name *.mp3 -size +10M -exec rm {} \\;"}
{"English":"Determine the user associated with stdin","Bash":"who -m"}
{"English":"Find all directories under current directory whose names are 33 characters long","Bash":"find . -type d -name \"?????????????????????????????????\""}
{"English":"Search \"whatyousearchfor\" in history and print 3 lines before and 4 lines after","Bash":"history | grep -A 4 -B 3 whatyousearchfor"}
{"English":"Save the FQDN host name of the system in variable \"hnd\"","Bash":"hnd=$(hostname -f)"}
{"English":"Search the current directory and directories below for .sql files","Bash":"find . -name \\*.sql"}
{"English":"Change the user to daisy for directories and subdirectories owned by harry","Bash":"find . -type d -user harry -exec chown daisy {} \\;"}
{"English":"Find all directories with space in their names under current directory and rename them by replacing all spaces with _","Bash":"find -name \"* *\" -type d | rename 's\/ \/_\/g'"}
{"English":"Find and show all files on the system that are larger than 900 MB","Bash":"find \/ -size +900M"}
{"English":"Print only lines from 'file1.txt' that not present in 'file2.txt' and beginning with 'Q'","Bash":"cat file1.txt | grep -Fvf file2.txt | grep '^Q'"}
{"English":"Search for .pdf files","Bash":"find \/ -name '*.pdf'"}
{"English":"Find files in the current directory and below that are 2000 kB in size","Bash":"find . -size 2000k -print"}
{"English":"Print the contents of \"xx.sh\"","Bash":"cat xx.sh"}
{"English":"Find all files modified less than 5 minutes ago, and page interactively through the output.","Bash":"find -cmin -5 | less -R"}
{"English":"Find \"*201512*\" regular files in \/home\/myhome\/data\/ARCHIVE\/ and move them to \/home\/myhome\/ARCHIVE\/TempFolder\/","Bash":"find \/home\/myhome\/data\/ARCHIVE\/. -name . -o -type d -prune -o -name '*201512*' -print | xargs -i mv {} \/home\/myhome\/ARCHIVE\/TempFolder\/."}
{"English":"filter output of bind -p by regex","Bash":"bind -p | grep -a forward"}
{"English":"Find all Subscription.java files\/directories under current directory and enter into the parent directory of the first one found","Bash":"cd `find . -name Subscription.java | xargs dirname`"}
{"English":"Find files\/directories with inode number '212042' under '\/var' directory tree without traversing other devices\/partitions","Bash":"find -x \/var -inum 212042"}
{"English":"check readline bindings for \"\\x61\"","Bash":"bind -p | grep $'\"\\x61\"'"}
{"English":"Print numbers from 1 to the number in variable \"$1\"","Bash":"seq $1"}
{"English":"Force delete all the regular\/normal files in the current folder and do not search in the sub folders","Bash":"find . -maxdepth 1 -type f -exec rm -f {} \\;"}
{"English":"Find all directories under current directory and change their permission to 500","Bash":"find . -type d -exec chmod 500 {} \\;"}
{"English":"List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO","Bash":"env | grep '^\\(GO\\|HOME=\\|PATH=\\)'"}
{"English":"find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today","Bash":"find . -name \\? -daystart -mtime +0 -mtime -3"}
{"English":"display all the regular\/normal files in current folder","Bash":"find . -type f -print0"}
{"English":"Find regular files in the current directory tree that have any executable bits set","Bash":"find -L . -type f \\( -perm -u=x -o -perm -g=x -o -perm -o=x \\)"}
{"English":"Find all files\/directories under '\/usr\/share\/doc' directory tree that contain 'readme' (case insensitive) at the beginning of their names","Bash":"find \/usr\/share\/doc -iname readme\\*"}
{"English":"display all the regular\/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )","Bash":"find ~\/ -daystart -type f -mtime 1"}
{"English":"Search the current directory tree for regular files whose names match pattern $x","Bash":"find . -type f -name $x"}
{"English":"Delete the files under the current working directory with inode numbers specified on standard input","Bash":"xargs -n 1 -I '{}' find \"$(pwd)\" -type f -inum '{}' -delete"}
{"English":"Prints a random number between 2000 and 65000","Bash":"seq 2000 65000 | sort -R | head -n 1"}
{"English":"Treat references to unset variables as errors","Bash":"set -o nounset"}
{"English":"Find all 100MB+ files and delete them","Bash":"find \/ -size +100M -exec rm -rf {} \\;"}
{"English":"change the owner and group of all the directories in the current folder and \/home\/admin\/data\/ to admin & admin","Bash":"find . \/home\/admin\/data\/ -type d -exec chown admin.admin {} \\;"}
{"English":"Write the lines appended to \"xxxx\" as it appears to the console and append to \"yyyy\" in the background","Bash":"tail -F xxxx | tee -a yyyy &"}
{"English":"Search for files\/directories which are writable by both their owner and their group","Bash":"find . -perm -g+w,u+w"}
{"English":"Lists all subdirectories in a current folder, removing trailing slash.","Bash":"ls -d *\/ | cut -f1 -d'\/'"}
{"English":"replace the word apple with orange in all the regular\/normal files in the current folder","Bash":"find .\/ -type f -exec sed -i -e 's\/apple\/orange\/g' {} \\;"}
{"English":"List all regular files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 -type f -ls"}
{"English":"Output a CSV file as a formatted table","Bash":"sed 's\/^,\/ ,\/' test2.csv | tr -d \\\" | column -s, -t"}
{"English":"Display machine architecture, ie. x86_64","Bash":"uname -m"}
{"English":"Print the ping time number only of a single request to \"8.8.8.8\"","Bash":"ping -c 1 8.8.8.8 |  awk 'FNR == 2 { print $(NF-1) }' | cut -d'=' -f2"}
{"English":"Search for the string 'foo' in *.html files under \/usr\/src\/linux directory","Bash":"grep foo `find \/usr\/src\/linux -name \"*.html\"`"}
{"English":"search for the files \"foo.txt\" in the current folder","Bash":"find . -name foo.txt"}
{"English":"Find all Makefile's in the current directory tree and look for line 235 in each of them","Bash":"find -type f -name \"Makefile\" -exec awk 'FNR==235 {print FILENAME; print}' {} +"}
{"English":"Find all files on the system that have been modified in the last 10 minutes","Bash":"find \/ -mmin -10"}
{"English":"find all files in the current directory excluding those that end with .js or have the words .min or console in their name","Bash":"find . -type f \\( -name \"*.js\" ! -name \"*-min*\" ! -name \"*console*\" \\)"}
{"English":"find in the entire file system for the file mysql","Bash":"sudo find \/ -name mysql -print"}
{"English":"List all files under current directory with their sizes and paths","Bash":"find . -type f -printf '%s %p\\n'"}
{"English":"Set permissions to 400 for regular files under the current directory","Bash":"find . -type f -exec chmod 400 {} \\;"}
{"English":"Print second section of space-separated data coming from stdin.","Bash":"cut -d\\  -f 2"}
{"English":"Rename all \"thumbs\" directories to \"thumb\" in the current directory tree","Bash":"find . -type d | awk -F'\/' '{print NF, $0}' | sort -k 1 -n -r | awk '{print $2}' | sed 'p;s\/\\(.*\\)thumbs\/\\1thumb\/' | xargs -n2 mv"}
{"English":"show the list of all the files in the current folder which have been modified within the 24 hours","Bash":"find . -mtime 0 -print"}
{"English":"Find files\/directories under current directory and force xargs to print them one by one","Bash":"find . | xargs -n 1 echo"}
{"English":"find file which case-insensitive name is foo in current directory.","Bash":"find . -iname foo"}
{"English":"Changes the group of defined file.","Bash":"chgrp"}
{"English":"display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins","Bash":"find .\/ -name \"*.dat\" -type f -cmin +60 -exec basename {} \\;"}
{"English":"Find all *.log files under path\/ that do not contain \"string that should not occur\"","Bash":"find path\/ -name '*.log' -print0 | xargs -r0 grep -L \"string that should not occur\""}
{"English":"Find the total size of *.jpg files within the directory tree .\/photos\/john_doe","Bash":"find .\/photos\/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$"}
{"English":"display a long list of all the directories which have files ending with \".todo\"","Bash":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n' | xargs ls -l"}
{"English":"Find all files\/directories under current directory that match the case insensitive regex .*\/\\(EA\\|FS\\)_.*","Bash":"find . -iregex '.*\/\\(EA\\|FS\\)_.*'"}
{"English":"Show long listing of current directory by deleting all digits from the output","Bash":"ls -lt | tr -d 0-9"}
{"English":"display all the regular files in the current folder which have the permission 777","Bash":"find . -type f -perm 777"}
{"English":"find in the entire file system for the files which have sticky bit.","Bash":"find \/ -perm 0551"}
{"English":"Prints sequentially listing of a current folder and calendar of a current month.","Bash":"echo `ls` \"`cal`\""}
{"English":"Search all files in the current directory tree whose names contain \".\" for \"SearchString\"","Bash":"find . -name '*.*' -exec grep 'SearchString' {} \/dev\/null \\;"}
{"English":"Find every JavaScript file in the wordpress directory tree","Bash":"find wordpress -name '*js'"}
{"English":"split the result of command \"ping -c 25 google.com | tee \" into pieces per 100000 bytes named as \"\/home\/user\/myLogFile.logNNN\"","Bash":"ping -c 25 google.com | tee >(split -d -b 100000 - \/home\/user\/myLogFile.log)"}
{"English":"Lists all directories in '\/home\/alice\/Documents\/'.","Bash":"ls -d \/home\/alice\/Documents\/*\/"}
{"English":"Creates temporary file and saves path to it in a 'tmpfile' variable.","Bash":"tmpfile=$(mktemp)"}
{"English":"Print the line with most consecutive repeats prefixed with its count from standard input","Bash":"uniq -c | sort -n | tail -n1"}
{"English":"Find all directories under \/home\/mywebsite\/public_html\/sites\/all\/modules and set their permission to 750","Bash":"find \/home\/mywebsite\/public_html\/sites\/all\/modules -type d -exec chmod 750 {} +"}
{"English":"Find all PHP files under current directory that contain only one line","Bash":"find . -type f -name '*.php' -exec grep -Hcm2 $ {} + | sed -n '\/:1$\/{s\/\/\/;p}'"}
{"English":"Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files","Bash":"find .  -type f -name \"CDC*\" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \\;"}
{"English":"Find all files, starting from \/ but ignoring removable media, whose names end with \".rpm\"","Bash":"find \/ -xdev -name \"*.rpm\""}
{"English":"Calculate the md5sum of the executable file of command 'c++'","Bash":"md5sum `which c++`"}
{"English":"display a list of all java or jsp files in the current folders","Bash":"find . \\( -name '*jsp' -o -name '*java' \\) -type f -ls"}
{"English":"Go into the first directory whose name contains 1670","Bash":"cd $(ls -d *\/ | grep 1670)"}
{"English":"Print first word of lines unique for 'file1' file","Bash":"grep -o '^\\S\\+' <(comm file1 file2)"}
{"English":"Recursively copies everything under the 'current' folder to the '.hiddendir' folder.","Bash":"cp * .hiddendir -R"}
{"English":"List all crons in the environment","Bash":"cat \/etc\/passwd | sed 's\/^\\([^:]*\\):.*$\/crontab -u \\1 -l 2>\\&1\/' | grep -v \"no crontab for\" | sh"}
{"English":"searching for all files with the extension mp3","Bash":"find \/ -name *.mp3"}
{"English":"Find all files\/directories under current directory and set their permission to 775","Bash":"find . -type f -exec chmod 775 {} \\;"}
{"English":"Find links to any file that happens to be named `foo.txt'","Bash":"find \/ -lname foo.txt"}
{"English":"Change the owner of all files in \"\/empty_dir\/\" to \"root\" using at most 10 files at a time","Bash":"ls \/empty_dir\/ | xargs -n10 chown root"}
{"English":"Sets shell option 'dotglob'.","Bash":"shopt -s dotglob"}
{"English":"kill a number of background jobs","Bash":"jobs -p | tail -n [number of jobs] | xargs kill"}
{"English":"display all the files ending with .c in the current folder","Bash":"find . -name \\*.c -print0"}
{"English":"Show manual page for the find utility","Bash":"man find"}
{"English":"Find all files which  begin with 'a' or 'b' from current directory downwards and print them.","Bash":"find . -name [ab]* -print"}
{"English":"Find all .java files whose name contains \"Message\"","Bash":"find . -print | grep '.*Message.*\\.java'"}
{"English":"Run the file command on every regular file under current directory","Bash":"find . -type f -exec file '{}' \\;"}
{"English":"compress all the non-compressed  files in the current directory.","Bash":"find . \\! -name \"*.Z\" -exec compress -f {} \\;"}
{"English":"display a long listing of all the xls or csv files in the entire file system","Bash":"find \/ -regex \".*\\.\\(xls\\|csv\\)\""}
{"English":"Find all files\/directories under current directory","Bash":"find -print0 | xargs -0"}
{"English":"find all the mp3 files in the entire file system whose size is bigger than 10MB","Bash":"find \/ -type f -name *.mp3 -size +10M -exec rm {} \\;"}
{"English":"Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory excluding other partitions","Bash":"find \/ -maxdepth 1 -xdev -type f -exec grep -i \"stringtofind\" -l {} \\; -exec sed -i '\/.\/d' {} \\;"}
{"English":"Send two ping requests to \"www.google.com\"","Bash":"ping -c 2 www.google.com"}
{"English":"display all the files in the file system which are changed a minute ago","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"display all files ending with \"ini\" in current folder","Bash":"find . -type f -name '*.ini'"}
{"English":"Search for Subscription.java under current directory, and go to directory containing it.","Bash":"cd \"$(find . -name Subscription.java -printf '%h\\n')\""}
{"English":"display the number of lines in all the \".c\" files in the current folder","Bash":"find . -name \"*.c\" -print0 | xargs -0 wc -l"}
{"English":"Recursively change \"\/usr\/local\" owner to the current user and group to admin","Bash":"sudo chown -R $(whoami):admin \/usr\/local"}
{"English":"find all files in the folder \"myfiles\" which are exactly 5 bytes","Bash":"find \/myfiles -size 5"}
{"English":"find all files in the current directory whose size is 24 or 25 bytes.","Bash":"find . -size -26c -size +23c -print"}
{"English":"Resolve symbolic link of path of \"python2.7\"","Bash":"readlink $(which python2.7)"}
{"English":"Find all the files under \/tmp directory and show a few lines of output from the beginning","Bash":"find \/tmp  | head"}
{"English":"find all directories in the current directory","Bash":"find . -type d"}
{"English":"Print the output of history without line numbers","Bash":"history | sed 's\/^[ ]*[0-9]\\+[ ]*\/\/'"}
{"English":"Calculate the md5 sum of \"a\"","Bash":"echo \"a\" | md5sum"}
{"English":"Print command with PID 11383","Bash":"ps | egrep 11383 | tr -s ' ' | cut -d ' ' -f 4"}
{"English":"Search the current directory tree for all regular files matching pattern \"*.rb\"","Bash":"find . -name \"*.rb\" -type f"}
{"English":"Move all hidden files in \"\/path\/subfolder\/\" to \"\/path\/\"","Bash":"mv \/path\/subfolder\/.* \/path\/"}
{"English":"Find files that do not have a listing in the \/etc\/passwd or \/etc\/group in the file system","Bash":"find \/ -nouser -o  -nogroup"}
{"English":"Set permissions to 644 for all regular files under the current directory tree that have permissions 755","Bash":"find . -type f -perm 755 -exec chmod 644 {} \\;"}
{"English":"Remove everything in a current folder without prompting.","Bash":"find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf"}
{"English":"Save the logical current working directory to variable \"basedir\"","Bash":"basedir=$(pwd -L)"}
{"English":"Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}\/${i}\/incoming directory","Bash":"find ${userdir}\/${i}\/incoming -mtime +2 -type f -size +200557600c -ls"}
{"English":"Remount \"\/home\/evgeny\" with the \"suid\" flag set","Bash":"sudo mount -i -o remount,suid \/home\/evgeny"}
{"English":"Find files readable only by the group","Bash":"find . -perm g=r -type f -exec ls -l {} \\;"}
{"English":"Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .","Bash":"find . -name \"*.txt\" -exec echo {} \\; -exec grep banana {} \\;"}
{"English":"Split \"infile\" into 2 files of about equal size","Bash":"split -n2 infile"}
{"English":"change the permissions of the directories from 777 to 755 in the folder \"\/var\/www\/html\"","Bash":"find \/var\/www\/html -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"find the path of a specfic video file in the current directory","Bash":"find . -name foo.mp4 | sed 's|\/[^\/]*$||'"}
{"English":"find all regular\/normal files in the folder \"myfiles\" which have read and write permission to the other users","Bash":"find \/myfiles -type f -perm -o+rw"}
{"English":"Mount all filesystems in \/etc\/fstab","Bash":"sudo mount -a"}
{"English":"Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt.","Bash":"join -v1 success.txt fail.txt"}
{"English":"Find files\/directories named<filetype> under current directory which were accessed less than 5 days ago","Bash":"find -name \"<filetype>\" -atime -5"}
{"English":"Add '.avi' extension to all files\/directories with '.mkv' extension under '\/volume1\/uploads' directory tree","Bash":"find \/volume1\/uploads -name \"*.mkv\" -exec mv \\{\\} \\{\\}.avi \\;"}
{"English":"Force create a symbolic link named \"$lines\" to \"$c\" without dereferencing \"$lines\"","Bash":"ln -sfn \"$c\" \"$lines\""}
{"English":"find all empty files in the current directory ( empty file = size 0 bytes )","Bash":"find . -size 0"}
{"English":"List all files under the current working directory tree","Bash":"find $(pwd)\/ -type f"}
{"English":"Finds matched text in defined path recursively, but not follows symlinks.","Bash":"grep -r \"string to be searched\"  \/path\/to\/dir"}
{"English":"find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"\/p\/\".","Bash":"find -mindepth 3 -type d -path '*\/p\/*' -prune -o -name c -print"}
{"English":"Find all files in entire file system which are larger than 20000KB","Bash":"find \/ -type f -size +20000k"}
{"English":"Enables shell option 'nocasematch'.","Bash":"shopt -s nocasematch"}
{"English":"Print each logged in user's full name","Bash":"finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq"}
{"English":"Unzip and untar \"file.tar.gz\"","Bash":"zcat file.tar.gz |tar x"}
{"English":"Search for \"CONFIG_64BIT\" in gzip compressed file \"\/proc\/config.gz\"","Bash":"zcat \/proc\/config.gz | grep CONFIG_64BIT"}
{"English":"Recursively change ownership of \"~\/.npm\" to the current user","Bash":"sudo chown -R `whoami` ~\/.npm"}
{"English":"long list al the files in the current directory which have all the permissions","Bash":"find . -perm 777 -type f -exec ls -l {} \\;"}
{"English":"Prints the day of last Friday in a current month.","Bash":"cal | awk '$6{date=$6}END{print date}'"}
{"English":"Find and list all files on your current directory and show a few lines of output from the beginning","Bash":"find | head"}
{"English":"Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis","Bash":"find -maxdepth 1 -type f -exec md5sum {} \\; | sed 's\/[^(]*(\\([^)]*\\)) =\/\\1\/'"}
{"English":"Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.","Bash":"find . -name \"a\" -type d | xargs rmdir"}
{"English":"find all the cpp(C++ source files), java, header files in the current directory","Bash":"find . -name *.cpp -o -name *.h -o -name *.java"}
{"English":"Find all .zip files in the current directory tree","Bash":"find . -depth -name *.zip"}
{"English":"Create an empty file with a carriage return character in its name.","Bash":"touch $'Icon\\r'"}
{"English":"display all the regular\/normal files in current folder","Bash":"find . -type f -name \\*"}
{"English":"Print all files\/directories under ... directory by terminating their paths with a null character","Bash":"find ... -print0"}
{"English":"Prints the Nth line of output from 'ls -1'","Bash":"ls -1 | tail -n +N | head -n1"}
{"English":"split processed content of the file temp into pieces per 1 line named \"tempNNN\" with numeric suffix","Bash":"sed 's\/3d3d\/\\n&\/2g' temp | split -dl1 - temp"}
{"English":"Find all .tmp files under and below the \/tmp\/ directory and remove them","Bash":"find \/tmp -name \"*.tmp\"| xargs rm"}
{"English":"find and delete all the empty directories in the current folder and all its sub directories too","Bash":"find . -depth -empty -type d -delete"}
{"English":"Find all files under current directory that were modified more than 1 day ago","Bash":"find -mtime +1"}
{"English":"Print the size for every *.ogg file found under the home directory","Bash":"find $HOME -name '*.ogg' -type f -exec du -h '{}' \\;"}
{"English":"Save the system host name into variable \"HOST\"","Bash":"HOST=$(hostname)"}
{"English":"search for the files which contain the word start in their name excluding search in .\/proc, .\/sys, .\/run folders","Bash":"find . -path .\/proc -prune -or -path .\/sys -prune -or -path .\/run -prune  -or -iname '*start*' -print"}
{"English":"change owner and group of the file dir1 to user root and group  specialusers","Bash":"chown root:specialusers dir1"}
{"English":"Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string \"99966\" in their names","Bash":"find YOUR_STARTING_DIRECTORY -type d -name \"*99966*\" -print"}
{"English":"display all the files in the current folder which start with either \"fileA_\" or \"fileB_\"","Bash":"find . -name 'fileA_*' -o -name 'fileB_*'"}
{"English":"display all jpg files in the current folder","Bash":"find -iname \"*.jpg\""}
{"English":"find all of the files that are readable","Bash":"find \/ -readable"}
{"English":"change the owner of all the files in folder \/u\/netinst to netinst","Bash":"find \/u\/netinst -print | xargs chown netinst"}
{"English":"Search for all files named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.","Bash":"find . -iname foo -type f"}
{"English":"Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from \"${@:3}\" array slice","Bash":"diff \"${@:3}\" <(sort \"$1\") <(sort \"$2\")"}
{"English":"search for all the regular\/normal mp3 files in the file system and move them to the folder \/mnt\/mp3","Bash":"find \/ -iname \"*.mp3\" -type f | xargs -I '{}' mv {} \/mnt\/mp3"}
{"English":"On host \"server_b\", connect as ssh user \"user\" and copy \"\/my_folder\/my_file.xml\" to directory \"\/my_new_folder\/\".","Bash":"scp user@server_b:\/my_folder\/my_file.xml user@server_b:\/my_new_folder\/"}
{"English":"Display a dump of \"file\" as floating point values of double size","Bash":"od -t fD file"}
{"English":"Display differences between list of files in \/bin and \/usr\/bin.","Bash":"diff <(ls \/bin) <(ls \/usr\/bin)"}
{"English":"Take first text field from file 'file.txt' as a domain name and get short A record for this one.","Bash":"cut -d' ' -f1 file.txt | xargs dig +short"}
{"English":"Dump \"filename\" as 2 byte wide hexadecimal and printable characters","Bash":"od -xc filename"}
{"English":"find all the files in the entire file system that have been accessed in the last 60 days ago","Bash":"find \/ -amin -60"}
{"English":"change the permissions of all the regular\/normal files in the folder \"\/path\/to\/someDirectory\" to 644","Bash":"sudo find \/path\/to\/someDirectory -type f -print0 | xargs -0 sudo chmod 644"}
{"English":"Print DISPLAY of \"orschiro\" user","Bash":"who | awk -F '[()]' '\/orschiro\/{print $(NF-1)}' | grep -v orschiro | uniq"}
{"English":"Saves printed calendar for $month, $year in positional variables.","Bash":"set `cal $month $year`"}
{"English":"Recursively change owner and group of \"\/usr\/local\/rvm\/gems\/ruby-2.0.0-p481\/\" to the current user","Bash":"sudo chown $(whoami):$(whoami) \/usr\/local\/rvm\/gems\/ruby-2.0.0-p481\/ -R"}
{"English":"Recursively finds all files and prints only names of files that contain \"word\" and suppressing error messages .","Bash":"find . | xargs grep 'word' -sl"}
{"English":"find files in current folder ending with \".c\" or \".h\" or \".ch\" and search for a word in these files and enable color highlighting of the matched text","Bash":"find . -name \"*.[ch]\" -exec grep --color -aHn \"e\" {} \\;"}
{"English":"search for the word \"search-pattern\" in all the regular\/normal files in the current folder and display the matched file name","Bash":"find . -type f | xargs grep -l \"search-pattern\""}
{"English":"File \"files.txt\" contains a list of files, copy all files listed to host \"remote\", connecting as ssh user \"user\", and copying the files to this user's home directory - this will not work with files\/directory names containing spaces.","Bash":"cat files.txt | xargs scp user@remote:"}
{"English":"Print the list of files in directory \/tmp\/a1 recursively","Bash":"find \/tmp\/a1"}
{"English":"Set variable 'vara' to 3","Bash":"source <(echo vara=3)"}
{"English":"find all the text files in the home folder","Bash":"find ~ -name \"*.txt\" \u2014 print"}
{"English":"Print concatenated content of all files ending with '.foo' under the current folder","Bash":"cat `find . -name '*.foo' -print`"}
{"English":"Find all files\/drectories under '\/u\/bill' directory tree that have been accessed in the last 2 to 6 minutes","Bash":"find \/u\/bill -amin +2 -amin -6"}
{"English":"Find all *.ogg (case insensitive) files\/directories in entire file system","Bash":"sudo find \/ -iname '*.ogg'"}
{"English":"Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.","Bash":"find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}
{"English":"Mount \"\/path\/to\/device\" on \"\/path\/to\/mount\/location\" as a loop back device","Bash":"mount \/path\/to\/device \/path\/to\/mount\/location -o loop"}
{"English":"Make directories to \"x\/p\/q\" as needed","Bash":"mkdir -p x\/p\/q"}
{"English":"find all the files in the current folder and display adding quotations to each file","Bash":"find . -exec echo -n '\"{}\" ' \\;"}
{"English":"Prints folder where current script is located","Bash":"echo \"dirname: `dirname $0`\""}
{"English":"Look for SGID files and directories","Bash":"find \/ -perm \/g=s"}
{"English":"Count total number of lines in all files below current directory.","Bash":"find . -type f -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}
{"English":"Locate logo.gif in the \/var\/www directory tree","Bash":"find \/var\/www -name logo.gif"}
{"English":"create symbolic links in directory \"\/usr\/local\/symlinks \" to all files located in directiry \"incoming\" and that have been modified earlier then 5 days and owned by user \"nr\"","Bash":"find \/incoming -mtime -5 -user nr -exec ln -s '{}' \/usr\/local\/symlinks ';'"}
{"English":"Save the contents of \"numbers.txt\" to variable \"f\"","Bash":"f=$(cat numbers.txt)"}
{"English":"Find all directories in the \/path\/to\/base\/dir tree","Bash":"find \/path\/to\/base\/dir -type d"}
{"English":"Get the number of regular files in the directory given as the bash script argument $1","Bash":"find $1 -type f | wc -l"}
{"English":"Format time string @$TIMESTAMP according to default time format","Bash":"date -d @$TIMESTAMP"}
{"English":"Find all files named 'Makefile' in the \/usr\/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR","Bash":"find \/usr\/ports\/ -name Makefile -exec grep ^USE_RC_SUBR '{}' '+' | wc -l"}
{"English":"Search the directory $path recursively for regular files with the given $extension","Bash":"find $path -type f -name \"*.$extension\""}
{"English":"List all cron jobs which contain \"word\".","Bash":"crontab -l | grep 'word'"}
{"English":"Delete files containing whitespaces without recursion","Bash":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \\;"}
{"English":"find all the files in the file system which have been accessed in the last 1 day","Bash":"find \/ -atime -1"}
{"English":"Print the second line of output of \"ls -l\"","Bash":"ls -l | tail -n +2 | head -n1"}
{"English":"Find all symlinks under current directory","Bash":"find . -type l"}
{"English":"Find all files under current directory","Bash":"find -type f"}
{"English":"Display all lines in 'file' containing 'something', pausing for user input after each page.","Bash":"grep something file | more"}
{"English":"Find all directories under \/path\/to\/base\/dir and change their permission to 755","Bash":"chmod 755 $(find \/path\/to\/base\/dir -type d)"}
{"English":"Calculate the md5 sum of the md5 sum of all the files sorted under \"$path\"","Bash":"find \"$path\" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"}
{"English":"Prints long listing of \"$dir\/$file\" file.","Bash":"ls -l -- \"$dir\/$file\""}
{"English":"Find all regular files recursively in the current directory","Bash":"find . -type f"}
{"English":"Copy all .png files from the home directory tree to imagesdir\/","Bash":"find ~\/ -name *.png -exec cp {} imagesdir \\;"}
{"English":"Remove all text files in the home directory with confirmation","Bash":"find $HOME\/. -name *.txt -ok rm {} \\;"}
{"English":"Print variable \"$OPTARG\" \"$opt\" times","Bash":"yes \"$OPTARG\" | head -$opt"}
{"English":"Counts total lines in all *.php files in the current directory recursively","Bash":"find . -name '*.php' -type f | xargs cat | wc -l"}
{"English":"Save hexadecimal byte 10 in binary file \"file.moi\" to variable \"day\"","Bash":"day=$(od -t x1 --skip-bytes=9 --read-bytes=1 file.moi | head -1 | awk '{print $2}')"}
{"English":"Find all files under current directory","Bash":"find . -type f"}
{"English":"Find \".c\" and \".h\" files in the current directory tree and print lines containing \"#include\"","Bash":"tree -if | grep \\\\.[ch]\\\\b | xargs -n 1 grep -H \"#include\""}
{"English":"Find all ES* and FS_* files under current directory","Bash":"find . -type f \\( -iname \"ES*\" -o -iname \"FS_*\" \\)"}
{"English":"find all the files which end with \".deb\" and display their base name (strip the extension)","Bash":"find . -name '*.deb' -exec basename {} \\;"}
{"English":"List the drive of each \"\/dev\/\" disk mount point","Bash":"mount | grep '^\/dev\/' | sed -E 's\/([^ ]*) on ([^ ]*) .*\/\"\\2\" is located on \"\\1\"\/'"}
{"English":"Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'","Bash":"ssh -f -N -L localhost:12345:otherHost:12345   otherUser@otherHost"}
{"English":"Move all files from the `sourceDir' directory tree to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir"}
{"English":"display all files in the current folder along with their last accessed timestamps","Bash":"find . -printf \"%h\/%f : dernier acc\u00e8s le %AA %Ad %AB %AY \u00e0 %AH:%AM:%AS\\n\""}
{"English":"Find all *.c files in \/usr\/src bigger than 100k","Bash":"find \/usr\/src -name '*.c' -size +100k -print"}
{"English":"Save directory \"..\/..\/lib\" relative to the executable \"gcc\" to variable \"libdir\"","Bash":"libdir=$(dirname $(dirname $(which gcc)))\/lib"}
{"English":"Removes only lowest level subfolders from current directory tree (folders without files and another folders within).","Bash":"find . -type d | xargs rmdir"}
{"English":"Check if the directory tree whose name is given as variable $somedir contains no regular files","Bash":"find \"$somedir\" -type f -exec echo Found unexpected file {} \\;"}
{"English":"prints last part of a logfile since timestamp 423","Bash":"tac file.log | awk '{ if ($1 >= 423) print; else exit; }' | tac"}
{"English":"Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'","Bash":"tac file | awk '\/pattern\/{print;exit}1' | tac"}
{"English":"Find all empty directories in the current one and delete them","Bash":"find . -type d -maxdepth 1 -empty -delete"}
{"English":"Print \"hello\" followed by the current user name","Bash":"echo hello `whoami`"}
{"English":"Find all aliencoders.[0-9]+ files under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -type f -name \"aliencoders.[0-9]+\""}
{"English":"display the number of lines in all the files in the current folder","Bash":"find . -name '*' | xargs wc -l"}
{"English":"Save the FQDN host name of the system in variable \"fhost\"","Bash":"fhost=`hostname -f`"}
{"English":"Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -exec sed -i 's\/[:space:]+$\/\/' \\{} \\;  -exec sed -i 's\/\\r\\n$\/\\n\/' \\{} \\;"}
{"English":"Finds the folder where temporary files would be written to.","Bash":"dirname $(mktemp -u -t tmp.XXXXXXXXXX)"}
{"English":"Return the depth of the current directory tree","Bash":"find . -type d -printf '%d:%p\\n' | sort -n | tail -1"}
{"English":"Find all files under \/path\/to\/dir that were modified less than 7 days ago with null character as the delimiter","Bash":"find \/path\/to\/dir -type f -mtime -7 -print0"}
{"English":"Extract, sort and print only group names from \/etc\/group.","Bash":"cut -d: -f1 \/etc\/group | sort"}
{"English":"Change the ownership of all aluno1's files in the current directory and below to aluno2","Bash":"find . -user aluno1 -exec chown aluno2 {}"}
{"English":"Search the files under and below \/directory\/containing\/files for \"text to search\"","Bash":"find \/directory\/containing\/files -type f -print0 | xargs -0 grep \"text to search\""}
{"English":"Print new line separated numbers from \"001\" to \"100\"","Bash":"yes | nl -ba | tr ' ' 0 | sed 100q | cut -b 4-6"}
{"English":"Find and uncompress all files in the current directory tree ending in \".csv.gz\"","Bash":"find . -name '*.csv.gz' -exec gzip -d {} \\;"}
{"English":"Find all files\/directories in entire file system that are owned by \"syslog\" user","Bash":"find \/ -user syslog"}
{"English":"Count total number of lines in all *.txt file in cuuent directory .","Bash":"find .  -type f  -name '*.txt' -exec wc -l {} \\; | awk '{total += $1} END{print total}'"}
{"English":"Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}","Bash":"find ${INPUT}\/ -name \"*.pdf\" -exec mv '{}' '{}'.marker ${OUTPUT} \\;"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn -exec rm -rf {} \\;"}
{"English":"find all php files in the folder  \/var\/www\/","Bash":"find \/var\/www\/ -type f -iname \"*.php\" -print"}
{"English":"Print the names of all files in \/some\/directory and its subdirectories recursively whose MIME type is video","Bash":"find \/some\/directory -type f -exec file -N -i -- {} + | sed -n 's!: video\/[^:]*$!!p'"}
{"English":"find all the files in the file system which have not been modified in the last 100*24 hours","Bash":"find \/ -mtime +100 -print"}
{"English":"Find regular files under '\/somefolder' directory tree satisfying the options\/conditions\/operations provided in ${ARGS[@]} array with find command","Bash":"find \/somefolder -type f '(' \"${ARGS[@]}\" ')'"}
{"English":"find all the empty directories in the current folder","Bash":"find . -type d -empty"}
{"English":"display a long listing of all the files that begin with the name \"Metallica\" in the entire file system","Bash":"find \/ -name 'Metallica*' -exec ls -l {} \\;"}
{"English":"Search the 'tmp' directory for .mp3 files","Bash":"find tmp -maxdepth 1 -name '*.mp3'"}
{"English":"search for regular\/normal file with the name \"myfile\" in the entire file system","Bash":"find \/ -name myfile -type f -print"}
{"English":"Keep the last 4 ASCII characters (bytes) of a string.","Bash":"echo \"0a.00.1 usb controller some text device 4dc9\" | rev | cut -b1-4 | rev"}
{"English":"Display the sizes and filepaths of all files\/directories sorted in descending order of size","Bash":"du -a -h --max-depth=1 | sort -hr"}
{"English":"search for files having python in filename","Bash":"find \/ -iname '*python*'"}
{"English":"Enables shell option 'compat31'.","Bash":"shopt -s compat31"}
{"English":"Count non-blank lines in a file 'foo.c'","Bash":"sed '\/^\\s*$\/d' foo.c | wc -l"}
{"English":"Recursively copies all files in the current directory but ones with 'c' in name to the home directory.","Bash":"cp -r `ls -A | grep -v \"c\"` $HOME\/"}
{"English":"Find *.c and *.sh files","Bash":"find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}
{"English":"split compressed content of the directory \/home into pieces per 4000 mb named as  \"\/media\/DRIVENAME\/BACKUPNAME.tgz.NNN\"","Bash":"tar --one-file-system -czv \/home | split -b 4000m - \/media\/DRIVENAME\/BACKUPNAME.tgz"}
{"English":"Move all files and directories in the current directory to \"\/foo\"","Bash":"mv * \/foo"}
{"English":"display the file name and creation month of top 11 files in the entire file system","Bash":"find \/ -type f -printf \"\\n%Ab %p\" | head -n 11"}
{"English":"Print only common strings in content of files 'file1.sorted' and 'file2.sorted'","Bash":"comm -1 -2 file1.sorted file2.sorted"}
{"English":"Find all files that belong to user root","Bash":"find \/ -user root"}
{"English":"returns a list of  files modification newer than poop","Bash":"find . -mnewer poop"}
{"English":"remove all the \"core\" files in the current folder which have not been changed in the last 4 days.","Bash":"find . -name core -ctime +4 -exec \/bin\/rm -f {} \\;"}
{"English":"Search for all zero-byte files and move them to the \/tmp\/zerobyte folder","Bash":"find test -type f  -size 0 -exec mv {} \/tmp\/zerobyte \\;"}
{"English":"Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago","Bash":"find $OUTPUTDIR -type f -mtime +7 -delete"}
{"English":"Find all files\/directories in entire file system more than 700 Megabytes","Bash":"find \/ -size +700M"}
{"English":"Split \"$1\" into files of at most \"$2\" or default 10000 using a numeric suffix of length 6","Bash":"split -l ${2:-10000} -d -a 6 \"$1\""}
{"English":"display all the users in the current folder which do not belong to the user root","Bash":"find . ! -user root"}
{"English":"Print the last 10 lines of the file '\/var\/log\/syslog'","Bash":"tail \/var\/log\/syslog"}
{"English":"Find executable files","Bash":"find . -perm -100 -print"}
{"English":"Read a line from standard input with prompt \"Enter your age:\\n\"","Bash":"read -p $'Enter your age:\\n'"}
{"English":"List all directories and subdirectories","Bash":"find . -type d"}
{"English":"Read a line from standard input into variable \"ENTERED_PASSWORD\" without echoing the input","Bash":"read -s ENTERED_PASSWORD"}
{"English":"Save a comma separated list of all directories under current directory tree to variable 'FOLDER'","Bash":"FOLDERS=$(find . -type d -print0 | tr '\\0' ',')"}
{"English":"display all the jpg images in current folder","Bash":"find . -type f -iregex '.*\\.jpe?g'"}
{"English":"display all the directories in the current folder and create a skeleton of make directory commands with all these folders","Bash":"find -type d|sed -r '\/^.$\/{s:.:#!\/bin\/bash:};{s\/^\\.\/mkdir -p &\/}'"}
{"English":"Append history lines from this session to the history list","Bash":"history -a"}
{"English":"find all the cpp files in current folder","Bash":"find -name \"*.cpp\""}
{"English":"Add read and execute permission to command \"node\"","Bash":"sudo chmod +rx $(which node)"}
{"English":"Find all files named 'new' under current directory tree and display their contents","Bash":"find . -name new -print -exec cat {} +"}
{"English":"Find all files under \/somefolder matching the case insensitive regex '\\(.*error.*\\)\\|\\(^second.*\\log$\\)\\|\\(.*FFPC\\.log$\\)' in their paths","Bash":"find \/somefolder -type f | grep -i '\\(.*error.*\\)\\|\\(^second.*\\log$\\)\\|\\(.*FFPC\\.log$\\)'"}
{"English":"Takes folder path from string '\/path\/to\/copy\/file\/to\/is\/very\/deep\/there' and created it with all parents.","Bash":"mkdir -p `dirname \/path\/to\/copy\/file\/to\/is\/very\/deep\/there` \\"}
{"English":"find all the files in the current folder with the name \"test-a\" and move them to the folder test-10","Bash":"find ~ -type f -name test-a -exec mv {} test-10 \\;"}
{"English":"Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'","Bash":"tac file | sed '\/pattern\/q' | tac"}
{"English":"Print the files in the current directory as a list of comma separated values","Bash":"ls -1 | tr '\\n' ',' | sed 's\/,$\/\\n\/'"}
{"English":"Read a single character from standard input with prompt \"Is this a good question (y\/n)?\" and save the response to variable \"answer\"","Bash":"read -n 1 -p \"Is this a good question (y\/n)? \" answer"}
{"English":"Remove containing directories and suffix \".wiki\" from specified path, output the result.","Bash":"basename \/home\/jsmith\/base.wiki .wiki"}
{"English":"Search for 'magic' in all regular files under current directory tree","Bash":"find . -type f | xargs grep \"magic\""}
{"English":"Find largest file in linux with find command","Bash":"find . -type f -printf \"%s\\t%p\\n\" | sort -n | tail -1"}
{"English":"Search $MYGROUP in \/etc\/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'","Bash":"MYUSERS=`grep $MYGROUP \/etc\/group | cut -d \":\" -f4| tr \",\" \"\\n\"`"}
{"English":"Find all files under \/path and below executable by `group' or `other'","Bash":"find \/path -perm \/011"}
{"English":"Sort \"some_data\" by the first and second \";\" delimited entries and stabilizing the sort","Bash":"sort -k1,1 -k2,2 -t';' --stable some_data"}
{"English":"display all normal\/regular files in the folder \"pathfolder\"","Bash":"find pathfolder -type f"}
{"English":"Find all files\/directories following symlinks under \/path\/to\/dir\/* paths and print the timestamp in YmdHMS format along with their paths","Bash":"find -L \/path\/to\/dir\/* -printf \"%TY%Tm%Td%TH%TM%TS|%p\\n\""}
{"English":"run ls command on *.pl files","Bash":"find . -name \"*.pl\" -exec ls -ld {} \\;"}
{"English":"Find all files\/directories under current directory tree excluding files\/directories with name 'query_to_avoid'","Bash":"find -not -name \"query_to_avoid\""}
{"English":"Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.","Bash":"find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm '{}' +"}
{"English":"find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.","Bash":"find \/home\/pankaj -maxdepth 1 -cmin -5 -type f"}
{"English":"extract \"backup.tar.gz\" with verbose output","Bash":"tar -xzvf backup.tar.gz"}
{"English":"Disable jobs running in their own process group in the shell","Bash":"set +m"}
{"English":"search for all the files in the folder \/usr\/bin which have not been accessed in the last 100*24 hours","Bash":"find \/usr\/bin -type f -atime +100"}
{"English":"Search the \"your\/dir\" directory for empty subdirectories","Bash":"find your\/dir -mindepth 1 -prune -empty"}
{"English":"Silently read a single character from standard input into variable \"key\" without backslash escapes and using the prompt $'Press any key to continue...\\n'","Bash":"read -rsp $'Press any key to continue...\\n' -n 1 key"}
{"English":"find for xml files in current folder using regular expressions","Bash":"find .\/ -regex \"cmn-.*[\\x4e00-\\x9fa5]*\\.xml\""}
{"English":"find all the text files in the current folder","Bash":"find . \u2014 name \"*.txt\" \u2014 print"}
{"English":"Prefix all files and directories in the current directory with \"unix_\"","Bash":"ls | xargs -i mv {} unix_{}"}
{"English":"Print the time to ping \"8.8.8.8\" followed by a time stamp if the ping is greater than 58","Bash":"ping 8.8.8.8 | awk '{split($7,a,\"[=.]\");if (a[2]>58) print a[2], strftime()}'"}
{"English":"Read a line of standard input in an interactive shell","Bash":"read -e"}
{"English":"change the permissions of al the directories in the current folder","Bash":"sudo find . -type d -exec chmod 755 {} +"}
{"English":"find all the zip files in the current folder","Bash":"find . -type f -name '*.zip'"}
{"English":"Search the \/var\/www\/ tree for files owned by root or unknown group and change their group to 'apache'","Bash":"find \/var\/www -group root -o -nogroup -print0 | xargs -0 chown :apache"}
{"English":"Get the disk space used by all *.txt (case insensitive) files\/directories under folder 1 and folder2","Bash":"find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1"}
{"English":"list all files in \/home\/bozo\/projects directory tree that were modified within the last day","Bash":"find \/home\/bozo\/projects -mtime -1"}
{"English":"Find all files in the current directory tree with size bigger than 5 MB and sort them by size","Bash":"find .\/ -size +5M -type f | xargs -r ls -Ssh"}
{"English":"Print information of the process running the current script as the current user","Bash":"ps -ef | grep $0 | grep $(whoami)"}
{"English":"Find all files that were modified later than ordinary_file in the current directory and its sub-directories.","Bash":"find -newer ordinary_file"}
{"English":"Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune -o -name CVS -prune \\) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d \":\" -f1"}
{"English":"View lines 116 through 120 of history","Bash":"history | head -n 120 | tail -n 5"}
{"English":"display the number of lines in all the php files in the current folder","Bash":"find -name '*php' | xargs cat | wc -l"}
{"English":"Search for lines that have zero or more whitespace characters before \"http:\/\/\" and number the uniquely sorted output","Bash":"grep '^[[:space:]]*http:\/\/' | sort -u | nl"}
{"English":"find regular  file named foo.txt under root \/ directory.","Bash":"find \/ -name foo.txt -type f"}
{"English":"List all files under current directory matching the regex '.*\\(c\\|h\\|cpp\\)'","Bash":"find . -type f -regex '.*\\(c\\|h\\|cpp\\)' -exec ls {} \\;"}
{"English":"Find all directories starting from \/ that have permissions 777","Bash":"find \/ -type d -perm 0777"}
{"English":"find all the files in the current folder which have executable permission to all the users and display the ten files","Bash":"find . -perm \/a=x | head"}
{"English":"find all regex \".\/[a-f0-9\\-]\\{36\\}\\.jpg\" files","Bash":"find . -regex \".\/[a-f0-9\\-]\\{36\\}\\.jpg\""}
{"English":"Save the short host name appended with \".mysqldb\" in variable \"DBPREFIX\"","Bash":"DBPREFIX=\"$(hostname -s).mysqldb\""}
{"English":"remove all the files in the current working directory which have a specifc inode number","Bash":"find . -inum $inum -exec rm {} \\;"}
{"English":"Locating large files (> 100 MB) in \/home\/ for 'cleaning'","Bash":"find \/home -type f -size +100M -delete"}
{"English":"Search for all .html files in directory \"www\" and output only the basename (without containing path) of each.","Bash":"find www -name \\*.html -type f -exec basename {} \\;"}
{"English":"Clears terminal screen.","Bash":"echo `clear`"}
{"English":"Change permissions of all regular files in the ~\/dir_data directory tree in accordance with mode `a-x,u+w'","Bash":"find ~\/dir_data -type f -exec chmod a-x,u+w {} \\;"}
{"English":"Find all broken symlinks under current directory","Bash":"find . -type l -xtype l"}
{"English":"Copy all files in the current directory except those containing 'Music' to '\/target_directory'.","Bash":"cp `ls | grep -v Music` \/target_directory"}
{"English":"extract \"passwd.tar.gz\" with verbose output","Bash":"tar -xvzf passwd.tar.gz"}
{"English":"Interpret \/etc\/bashrc in the current shell, ignoring lines that contain \"mesg\".","Bash":"source <(grep -v \"mesg\" \/etc\/bashrc)"}
{"English":"Remove all empty regular files under the current directory and below","Bash":"find .\/ -type f -empty -print0 | xargs -0 rm"}
{"English":"Prints shell option 'globstar' with indication of its status.","Bash":"shopt -p globstar"}
{"English":"Read line from file descriptor 4 and store received input in 'line' variable","Bash":"read -u 4 line"}
{"English":"Finds all the log* files in \/myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.","Bash":"find \/myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \\;"}
{"English":"Search all .java files residing in the current directory tree and modified at least 7 days ago for string \"swt\"","Bash":"find . -name '*.java' -mtime +7 -print0 | xargs -0 grep 'swt'"}
{"English":"Create a symolic link in \"\/usr\/local\/bin\/\" to \"\/Applications\/Sublime\\ Text\\ 2.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"ln -s \/Applications\/Sublime\\ Text\\ 2.app\/Contents\/SharedSupport\/bin\/subl \/usr\/local\/bin\/"}
{"English":"Move all files from \"src\/test\/\" to \"dest\" displaying progress","Bash":"rsync -a --progress --remove-source-files src\/test\/ dest"}
{"English":"force remove all the directories with the name logs in the folder \/var\/www","Bash":"find \/var\/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \\;"}
{"English":"Archive the list of 1st level subdirectories in \/fss\/fin to \/fss\/fi\/outfile.tar.gz","Bash":"tar -czf \/fss\/fi\/outfile.tar.gz `find \/fss\/fin -d 1 -type d -name \"*\" -print`"}
{"English":"Find all files\/directories named orm.properties in entire file system","Bash":"sudo find \/ -name \"orm.properties\""}
{"English":"Save the \"Pictures\" directory in the current user's home directory on the directory stack","Bash":"pushd \/home\/`whoami`\/Pictures"}
{"English":"display all files in the current folder which end with extension \"myfile\" followed by one digit or two digits","Bash":"find . -\\( -name \"myfile[0-9][0-9]\" -o -name \"myfile[0-9]\" \\)"}
{"English":"Execute \"awk -F, '$1 ~ \/F$\/'\" on contents of \"file.gz\"","Bash":"zcat file.gz | awk -F, '$1 ~ \/F$\/'"}
{"English":"For each line of colon-separated information in files 'empsal' and 'empname' whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal.","Bash":"join -j 1 -t : -o 2.1,2.2,2.4,1.3 <(sort empsal) <(sort empname)"}
{"English":"find all hidden files in the current folder which have been modified after profile file","Bash":"find . -type f -name \".*\" -newer .cshrc -print"}
{"English":"searches through the \/usr directory for the regular  file named 'Chapter1*'","Bash":"find \/usr -name \"Chapter*\" -type f"}
{"English":"Removes all listed folders with content in sudo mode.","Bash":"sudo rm -rf \/usr\/local\/bin\/npm \/usr\/local\/share\/man\/man1\/node* \/usr\/local\/lib\/dtrace\/node.d ~\/.npm ~\/.node-gyp \/opt\/local\/bin\/node opt\/local\/include\/node \/opt\/local\/lib\/node_modules"}
{"English":"find the file \"filename.txt\" in the usr folder","Bash":"find \/usr -name filename.txt -print"}
{"English":"Print \"$somedir is empty\" if $somedir is empty","Bash":"find \"$somedir\" -maxdepth 0 -empty -exec echo {} is empty. \\;"}
{"English":"Gets IP address of 'en1' network interface.","Bash":"ifconfig en1 | sed -n '\/inet addr\/s\/.*addr.\\([^ ]*\\) .*\/\\1\/p'"}
{"English":"Determine DISPLAY variable for the session when logged in via SSH","Bash":"who am i | awk '{print $5}' | sed 's\/[()]\/\/g' | cut -f1 -d \".\" | sed 's\/-\/.\/g'"}
{"English":"Find all files named \"something\" in the current folder and below and run them through the ls -l command in a one batch.","Bash":"find . -name something | xargs -0 ls"}
{"English":"Search the current directory tree for files whose names end in \"rb\" or \"js\" and which contain string \"matchNameHere\"","Bash":"find . -regextype posix-ergep -regex \".*(rb|js)$\" -exec grep -l matchNameHere {} \\;"}
{"English":"replace the word foo to bar in the current folder in all the regular\/normal files which have execute permission  (does not update the file)","Bash":"find . -type f -executable -exec sed -i 's\/foo\/bar\/g' {} +"}
{"English":"Find all .php files starting from the root directory \/","Bash":"find \/ -name \"*.php\""}
{"English":"Keep only the last two hyphen-separated sections of \"abc-def-ghi-jkl\"","Bash":"echo \"abc-def-ghi-jkl\" | rev | cut -d- -f-2 | rev"}
{"English":"dispaly a long listing of all the files in the current folder which have been modified in the last 14 days","Bash":"find . -mtime -14 -ls"}
{"English":"Numerically sort file \"temp.txt\" by the second \"-\" separated value of each line ordered from highest value to least value","Bash":"tac temp.txt | sort -k2,2 -r -u"}
{"English":"Set 644 permission to all regular files under \/path","Bash":"find \/path -type f -exec chmod 644 {} +;"}
{"English":"Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours","Bash":"find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}
{"English":"Remove all .txt files in and below the current directory","Bash":"find . -name \"*.txt\" -exec rm {} +"}
{"English":"prints the names of all files in the directory tree rooted in \/usr\/src whose name ends with \u2018.c\u2019 and that are larger than 100 Kilobytes.","Bash":"find \/usr\/src -name '*.c' -size +100k -print"}
{"English":"Decompress \"path\/to\/test\/file.gz\" to standard output and save all lines matching \"my regex\" and not matching \"other regex\" to files with a 1000000 line limit","Bash":"gzip -dc path\/to\/test\/file.gz | grep -P 'my regex' | grep -vP 'other regex' | split -dl1000000 - file"}
{"English":"Force decompress all files into '\/etc'","Bash":"gzip -d --force * \/etc"}
{"English":"Edit current user's cron job list with editor specified by EDITOR environment variable, or default \/usr\/bin\/editor if EDITOR is not set.","Bash":"crontab -e"}
{"English":"Removes files 'junk1', 'junk2', 'junk3'.","Bash":"rm junk1 junk2 junk3"}
{"English":"Move the directory named \"some-dir\" and residing under the current one to x\/","Bash":"find .\/ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x\/"}
{"English":"Search the current directory tree for files that are less than 50kb","Bash":"find . -size -50k"}
{"English":"Remove sequence like '\\xEF\\xBB\\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.","Bash":"find . -iname *.js -type f -exec sed 's\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;"}
{"English":"Recursively find the latest modified file in the current directory and print the modification time and filename","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \" | sed 's\/.*\/\"&\"\/' | xargs ls -l"}
{"English":"Recursively finds all '*.pdf' files in a current folder and removes them.","Bash":"find . -name '*.pdf' -exec rm {} +"}
{"English":"Remount \"\/\" with read and write permission","Bash":"mount \/ -o remount,rw"}
{"English":"Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones","Bash":"comm <(sort -n f1.txt) <(sort -n f2.txt)"}
{"English":"Save a list of all 755 permission files\/directories under $dir directory tree to the variable 'files'","Bash":"files=\"$(find $dir -perm 755)\""}
{"English":"Find all *.gz files in the current directory and decompress them using gunzip","Bash":"find . -name '*.gz' -print0 | xargs -0 gunzip"}
{"English":"Find all files matching \"abc*\" in the current directory and append a column with \"OK\"","Bash":"find . -name 'abc*' -exec echo {}' OK' \\; | column -t"}
{"English":"Copy the owner and group from \"file.txt\" to \"$tempfile\"","Bash":"chown --reference=file.txt -- \"$tempfile\""}
{"English":"search for the file \"process.txt\" in the entire file system (case insensitive search)","Bash":"find \/ -iname 'process.txt' -print"}
{"English":"Gets MAC address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}
{"English":"search for all the files in the folder \/data\/images which are modified after \/tmp\/foo","Bash":"find \/data\/images -newer \/tmp\/foo"}
{"English":"Remove all empty sub-directories under current directory","Bash":"find . -depth  -type d  -empty -exec rmdir {} \\;"}
{"English":"List files in \"dir1\" that are not in \"dir2\"","Bash":"comm -23 <(ls dir1 |sort) <(ls dir2|sort)"}
{"English":"find all the files in the folder \/usr\/bin which have been modified in the last 10 days","Bash":"find \/usr\/bin -type f -mtime -10"}
{"English":"Removes all empty folders under current folder.","Bash":"find . -type d -exec rmdir {}\\;"}
{"English":"Find all files\/directores under '\/usr\/local' directory tree that contain the word 'blast' in their names","Bash":"find \/usr\/local -name \"*blast*\""}
{"English":"Find all directories named 'mydir' under 'local' and '\/tmp' directory tree","Bash":"find local \/tmp -name mydir -type d -print"}
{"English":"Delete all hidden files under $some_directory","Bash":"find \"$some_directory\" -type f -name '.*' | xargs rm"}
{"English":"Calculate a list of duplicate md5 sum hashes for all the \".java\" files in the current directory","Bash":"md5sum *.java | awk '{print $1}' | sort | uniq -d"}
{"English":"Find all files residing in \/home\/dm\/Video or below that were changed less than 7 days ago","Bash":"find \/home\/dm\/Video -mtime -7"}
{"English":"Creates temporary folder in a TMPDIR folder or \/tmp folder if TMPDIR doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in 'mydir' variable.","Bash":"mydir=$(mktemp -d \"${TMPDIR:-\/tmp\/}$(basename $0).XXXXXXXXXXXX\")"}
{"English":"Move all *.php~ (case insensitive) files under current directory to \/mydir","Bash":"find . -iname \"*.php~\" -exec mv \"{}\" \/mydir +;"}
{"English":"Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME\/Library\/Safari\/Icons directory tree","Bash":"find $HOME\/Library\/Safari\/Icons -type f -atime +30 -name \"*.cache\" -print -delete"}
{"English":"Remount \"\/media\/Working\/\" with a umask of 000","Bash":"mount \/media\/Working\/ -oremount,umask=000"}
{"English":"Rename all files matching \"access.log.<number>.gz\" incrementing <number>.","Bash":"find -name 'access.log.*.gz' | sort -Vr | rename 's\/(\\d+)\/$1+1\/ge'"}
{"English":"Find all regular files under .\/Desktop directory","Bash":"find .\/Desktop -type f"}
{"English":"Count the occurrence of 2 in the string '1 1 2 2 2 5'","Bash":"echo \"1 1 2 2 2 5\" | tr ' ' $'\\n' | grep -c 2"}
{"English":"Look for directory `Cookbook'","Bash":"find -name Cookbook -type d"}
{"English":"Creates temporary folder and saves path to it in a 'tempd' variable.","Bash":"tempd=`mktemp -d`"}
{"English":"Find all regular files that contain 'linux' (case insensitive) in their names under '\/root' directory tree","Bash":"find  \/root -type f -iname \"*linux*\""}
{"English":"Find all *.py files\/directories under current directory","Bash":"find . -name \\*.py -print"}
{"English":"Save the system load average for the past 1 minute of the currently logged in user to variable 'proc_load_average'","Bash":"proc_load_average=$(w | head -1 | cut -d\" \" -f12 | cut -d\",\" -f1-2 | tr ',' '.')"}
{"English":"display all the files in the usr folder which have been modified after Feburary 1st","Bash":"find \/usr -newermt \"Feb 1\""}
{"English":"Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html'","Bash":"find . -type f -inum 31467125 -exec mv {} new_name.html \\;"}
{"English":"Create tar.gz files older than one day logs","Bash":"find \/home\/testuser\/log\/ -mtime +1 | xargs  tar -czvPf  \/opt\/older_log_$(date +%F).tar.gz"}
{"English":"Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune -o -name CVS -prune \\) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d \":\" -f1"}
{"English":"Find all files that have the SUID bit set","Bash":"find \/ -perm -u+s -print"}
{"English":"Search for regular files of the grooup 'users' in the file system","Bash":"find \/  -type f -group users"}
{"English":"find  directory which case-insensitive name is too in currect directory","Bash":"find . -iname foo -type d"}
{"English":"change the permissions of all the regular\/normal files to 644 in the folder \/home\/nobody\/public_html","Bash":"find \/home\/nobody\/public_html -type f -exec chmod 644 {} \\;"}
{"English":"search for all the jpg files in the folder \"\/mnt\/hda1\/zdjecia\/test1\/\" and copy these files to the folder  \/mnt\/hda1\/test\/<same name as the found file>","Bash":"find \/mnt\/hda1\/zdjecia\/test1\/ -iname \u201c*.jpg\u201d -type f -exec cp {} -rv \/mnt\/hda1\/test{} \u2018;\u2019"}
{"English":"Print file system disk space usage in posix and human readable format, format as a table","Bash":"df -Ph | column -t"}
{"English":"Replace all colons (':') with newlines in $list and search for the first match to the regex \"^$removepat\\$\" where $removepat is a variable and save the result to variable 'removestr'","Bash":"removestr=$(echo \"$list\" | tr \":\" \"\\n\" | grep -m 1 \"^$removepat\\$\")"}
{"English":"List all non-hidden files in ~\/junk","Bash":"find ~\/junk   -name \"*\" -exec ls -l {} \\;"}
{"English":"find all the zip files in the current folder and create a tar ball of these zip files","Bash":"find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find -name '*.txt'"}
{"English":"Find all *.txt and *.json files","Bash":"find . -type f \\( -name \"*.txt\" -o -name \"*.json\" \\)"}
{"English":"search for al cpp files in current folder and display distinct parent directory of these files in sorted order","Bash":"find . -name \"*.cpp\" -exec dirname {} + | sort -u"}
{"English":"recursively change owner and group of the directory \/your\/directory\/to\/fuel\/ and all files into it to user and group nginx","Bash":"chown nginx:nginx \/your\/directory\/to\/fuel\/ -R"}
{"English":"ssh into \"ssh.myhost.net\" as user \"myusername\" and run command \"mkdir -p $2\"","Bash":"ssh myusername@ssh.myhost.net \"mkdir -p $2\""}
{"English":"display all the \"C\" files in the current folder","Bash":"find . -name \"*.c\""}
{"English":"Gets MAC address of 'eth0' network interface.","Bash":"ifconfig eth0 | head -n1 | tr -s ' ' | cut -d' ' -f5"}
{"English":"Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation","Bash":"find ~\/ -atime +100 -exec rm -i {} ;"}
{"English":"Find files which are more than 2 days old under  ${userdir}\/${i}\/incoming directory","Bash":"find ${userdir}\/${i}\/incoming -mtime +2 -type f -ls"}
{"English":"print all PIDs of stopped processes","Bash":"jobs -sl | awk '{print $2}'"}
{"English":"Delete all __temp__* files\/directories under current directory tree","Bash":"find . -depth -name '__temp__*' -exec rm -rf '{}' \\;"}
{"English":"Find all 15MB files in entire file system","Bash":"find \/ -size 15M"}
{"English":"Move \"tobecopied\/tobeexcluded\" to the current directory","Bash":"mv tobecopied\/tobeexcluded ."}
{"English":"Copy all files below the current directory whose names contain \"foobar\" (case-insensitive) to directory foo\/bar\/ in user's home directory.","Bash":"find . -iname \"*foobar*\" -exec cp \"{}\" ~\/foo\/bar \\;"}
{"English":"search for all the rpm files in the file system which reside in the same partition as that of the root","Bash":"find \/ -xdev -name \"*.rpm\""}
{"English":"Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended","Bash":"tree -afispugD --inodes | awk '{FS=\".\/\"; ORS=\"\"; printf(\"%-60s%s\\n\",$NF,$0)}'"}
{"English":"Print the full path directory name of each \"file.ext\" found under the current directory","Bash":"find . -name \"file.ext\" -execdir pwd ';'"}
{"English":"display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word \"kt\" followed by a digit","Bash":"find . -path '.\/kt[0-9] '"}
{"English":"print all files in the directories except the .\/src\/emacs directory","Bash":"find . -wholename '.\/src\/emacs' -prune -o -print"}
{"English":"split the first 100 lines of the file \"datafile\" per lines with size 1700 bytes","Bash":"sed 100q datafile | split -C 1700 -"}
{"English":"Print the sizes and names of all TXT files from the current directory tree","Bash":"find . -iname \"*.txt\" -exec du -b {} +"}
{"English":"Find all symbolic links starting from the current directory and list them","Bash":"find . -type l -ls"}
{"English":"find files in \/u\/bill directory which are access an 2 to 6 minutes ago","Bash":"find \/u\/bill -amin +2 -amin -6"}
{"English":"Print unique lines of \"second-file-sorted.txt\" compared to \"first-file-sorted.txt\"","Bash":"comm -23 second-file-sorted.txt first-file-sorted.txt"}
{"English":"create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months)","Bash":"find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar"}
{"English":"Show what content owned by root has been modified within the last day","Bash":"find \/etc\/ -user root -mtime 1"}
{"English":"change user and group of the file \/usr\/bin\/aws to user amzadm and group root","Bash":"chown amzadm.root  \/usr\/bin\/aws"}
{"English":"find all the directories in the current folder and replace the","Bash":"find -type d|sed -r '\/^.$\/{s:.:#!\/bin\/bash:};{s\/^\\.\/mkdir -p &\/}'"}
{"English":"Prints Kb size of all top-level files and folders in a current folder in descending order.","Bash":"du -ks * | sort -n -r"}
{"English":"Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE\/","Bash":"find -name '*.ISOLATE.quantifier.txt' -maxdepth 1 -exec mv {} ISOLATE\/ +"}
{"English":"Execute \/usr\/bin\/find with $* arguments where current directory is the first argument","Bash":"\/usr\/bin\/find .\/ $*"}
{"English":"Change permissions for all PHP files under the current directory tree to 755","Bash":"find . -name \"*.php\" -exec chmod 755 {} \\;"}
{"English":"Set up a remote port forward from port 10022 on host \"server\" to port 22 on localhost","Bash":"ssh -R 10022:localhost:22 device@server"}
{"English":"Find the core files and  remove them","Bash":"find . -name \u201ccore\u201d -exec rm -f {} \\;"}
{"English":"Search all .c files from the current directory tree for \"keyword\", ignoring the case","Bash":"find . -name \"*.c\" -exec grep -i \"keyword\" {} \";\""}
{"English":"create a md5sum for all the instances of the file MyCProgram.c in current folder","Bash":"find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}
{"English":"Saves list of logged in users in system together with 'USER' header in the 'b' variable.","Bash":"b=`w|cut -d' ' -f1`;"}
{"English":"Find all the files whose name is tecmint.txt","Bash":"find . -name tecmint.txt"}
{"English":"Send each byte in \"\/home\/cscape\/Desktop\/file\" to awk script \"x.awk\"","Bash":"fold -1 \/home\/cscape\/Desktop\/file  | awk -f x.awk"}
{"English":"Print file information of command \"studio\"","Bash":"which studio | xargs ls -l"}
{"English":"display all the hidden files in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search\/ -name \".*\" -print"}
{"English":"Give the location of every hard link to file1 in the \/home directory tree","Bash":"find \/home -xdev -samefile file1 | xargs ls -l"}
{"English":"find all the files in the root folder which have been modified in the last 24 hours and print them","Bash":"find \/ -mtime -1 -print"}
{"English":"Find all files under current directory and change their permission to 644","Bash":"find . -type f -exec chmod 644 {} \\;"}
{"English":"Remove junk files modified more than 31 days ago recursively","Bash":"find \/path\/to\/junk\/files -type f -mtime +31 -exec rm -f {} \\;"}
{"English":"display list of all the files in the current directory","Bash":"find | xargs ls"}
{"English":"Forcefully delete all files in the current directory that begin with spam-","Bash":"find . -name 'spam-*' | xargs rm"}
{"English":"Change onwer to \"root\" and group to \"wheel\" of \"com.xxxx.adbind.plist\"","Bash":"sudo chown root:wheel com.xxxx.adbind.plist"}
{"English":"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files\/directories under current directory","Bash":"find .\/ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'"}
{"English":"search for a word in all the php files in the current folder and display the matching lines.","Bash":"find . -name \\*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'"}
{"English":"Find SGID files","Bash":"find \/ -perm +2000"}
{"English":"display all the \".sh\" files in the current folder","Bash":"find -name *.sh"}
{"English":"Creates temporary file with name formatted like '.script.XXXXXX' in '\/tmp\/' folder and saves path to it in 'script2' variable.","Bash":"script2=`mktemp \/tmp\/.script.XXXXXX`;"}
{"English":"change the permission of all php files in current folder","Bash":"find . -name \"*.php\" -exec chmod 755 {} \\;"}
{"English":"Search the current directory tree for executable regular files","Bash":"find . -executable -type f"}
{"English":"Locates bzip2 command in a system.","Bash":"which bzip2"}
{"English":"Count the number of .gz files in directory tree \/home\/user1\/data1\/2012\/mainDir","Bash":"find \/home\/user1\/data1\/2012\/mainDir -name '*.gz' | wc -l"}
{"English":"Finds IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep 'inet addr:' | awk '{print $2}' | awk -F ':' '{print $2}'"}
{"English":"Print linux group names on multiple lines instead of single line output","Bash":"groups | tr \\  \\\\n"}
{"English":"Find all build* directories under current directory and reverse sort them","Bash":"find . -type d -name \"build*\" | sort -r"}
{"English":"Search the current directory recursively for files writable for `others'","Bash":"find . -perm -o+w"}
{"English":"display all the files in the entire file system which are bigger than 10MB","Bash":"find \/ -size +10000k"}
{"English":"Print the base name of the current working directory","Bash":"echo \"$(basename $(pwd))\""}
{"English":"Search the \/dir directory tree for files whose names match regular expression '.*2015.*\\(album.*\\|picture.*\\)'","Bash":"find \/dir -regex '.*2015.*\\(album.*\\|picture.*\\)'"}
{"English":"List absolute path of files in the current directory","Bash":"ls -1 | xargs readlink -f"}
{"English":"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","Bash":"find dir1 dir2 dir3 -type f -name \"*.java\" -exec grep -il 'foo' {} \\;"}
{"English":"Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\", using at most 1000000 characters per command.","Bash":"find . -name \"*_test.rb\" | xargs -s 1000000 rename s\/_test\/_spec\/"}
{"English":"Prints process tree for each process owned by user 'username'.","Bash":"ps -aux |  awk '\/^username\/{print $2}' | xargs pstree"}
{"English":"Find all files\/directories under current directory and print their paths","Bash":"find . -exec echo {} \\+"}
{"English":"Find all files\/directories named file in 2 and 3 levels down the current directory","Bash":"find -mindepth 2 -maxdepth 3 -name file"}
{"English":"Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1","Bash":"rsync --recursive --prune-empty-dirs --include=\"*.txt\" --filter=\"-! *\/\" dir_1 copy_of_dir_1"}
{"English":"Find all .mp3 files with more than 10MB and delete them","Bash":"find \/ -type f -name *.mp3 -size +10M -exec rm {} \\;"}
{"English":"Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the files from the current directory tree, keeping a backup copy of every touched file","Bash":"find . -type f -print0 | xargs -0 sed -i.bak -e \"s\/HOGE\/MOGA\/\""}
{"English":"Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning","Bash":"find . -perm 0644 | head"}
{"English":"Search for the system host name in \"\/etc\/hosts\" and print the IP address in the first awk field","Bash":"more \/etc\/hosts | grep `hostname` | awk '{print $1}'"}
{"English":"Find all files that are modified in last 3 days","Bash":"find . -type f -mtime -3"}
{"English":"Ungzip and untar all files matching \"www-backup.tar.*\"","Bash":"cat www-backup.tar.*|gunzip -c |tar xvf -"}
{"English":"Force create a symbolic link named \"$*\" to the canonical absolute path of \"$1\"","Bash":"ln -sf \"$(readlink -f \"$1\")\" \"$*\""}
{"English":"Count the number of files in the directory trees whose pathnames match pattern '\/dev\/sd*[a-z]'","Bash":"find \/dev\/sd*[a-z] | wc -l"}
{"English":"Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.","Bash":"find .\/ -type f -name '*.r*' -delete -printf \"%h\\0\" | xargs -0 rmdir"}
{"English":"Search for files\/directories with a case insensitive .txt extension in entire file system","Bash":"find \/ -iname '*.txt'"}
{"English":"Copy directory hierarchy from \"$sourceDir\" to \"$targetDir\"","Bash":"find \"$sourceDir\" -type d | sed -e \"s?$sourceDir?$targetDir?\" | xargs mkdir -p"}
{"English":"find file named foo.txt under root \/ directory.","Bash":"find \/ -name foo.txt"}
{"English":"Search the .c files residing in the Lib\/ directory tree for lines beginning with \"PyErr\"","Bash":"find Lib\/ -name '*.c' -print0 | xargs -0 grep ^PyErr"}
{"English":"create a symbolic link named \"www\" to file \"www1\"","Bash":"ln -s www1 www"}
{"English":"Find file `foo.bar' and delete it","Bash":"find \/home -name foo.bar -type f -exec rm -f \"{}\" ';'"}
{"English":"Find all files named 'foo' under current directory tree without descending into directories named 'foo'","Bash":"find . -name foo -type d -prune -o -name foo -print"}
{"English":"search for mp3 files in the folder \/mp3collection which are smaller than 5MB","Bash":"find \/mp3collection -name '*.mp3' -size -5000k"}
{"English":"Run the find command with all shell positional arguments","Bash":"`which find` \"$@\" -print0;"}
{"English":"List all non-empty files under under current directory","Bash":"find . -type f ! -size 0"}
{"English":"Find all broken symlinks in maximum 1 level down the $path directory","Bash":"find -L $path -maxdepth 1 -type l"}
{"English":"print readline bindings that use key code '\\\\e\\\\C-k'","Bash":"bind -P | grep '\\\\e\\\\C-k'"}
{"English":"Change permissions to 0755 for all directories in the \/path directory tree","Bash":"find \/path -type d -exec chmod 0755 \"{}\" \\;"}
{"English":"Change ownership of \"\/data\/db\" to the current user","Bash":"sudo chown `whoami` \/data\/db"}
{"English":"Find all regular files under $DIR directory tree with \".$TYPE\" extension (case insensitive) where $TYPE expands in the current shell","Bash":"find $DIR -type f -iname \"*.$TYPE\""}
{"English":"gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt","Bash":"head -5 tst.txt | tail -1 |cut -c 5-8"}
{"English":"Print base name of the file name without all extensions.","Bash":"basename \"$FILE\" | cut -d'.' -f-1"}
{"English":"Find all image.pdf files\/directories under .\/polkadots with null character as the delimiter","Bash":"find .\/polkadots -name \"image.pdf\" -print0"}
{"English":"Report file system disk space usage in human readable format","Bash":"df -h"}
{"English":"Find files under \/usr that are newer than the first file `FirstFile'","Bash":"find \/usr -newer \/usr\/FirstFile -print"}
{"English":"Find root's Ruby files accessed in the last two minutes","Bash":"find \/apps\/ -user root -type f -amin -2 -name *.rb"}
{"English":"Move \"$PHANTOM_JS\" to \"\/usr\/local\/share\" directory","Bash":"sudo mv $PHANTOM_JS \/usr\/local\/share"}
{"English":"search for a file \"file\" in current folder and if the file is found quit !","Bash":"find -name file -quit"}
{"English":"Save small letter short day name of the week to variable 'DayOfWeek'","Bash":"DayOfWeek=`date +%a |tr A-Z a-z`"}
{"English":"Print the first 10 files or directories found in the current directory tree by `find'","Bash":"find | head"}
{"English":"Print symlink resolved script file name","Bash":"echo $(basename $(readlink -nf $0))"}
{"English":"Find all files on the system whose names are 'composer.json' and search them for \"drush\"","Bash":"find \/ -name composer.json -exec grep -n drush {} \/dev\/null \\;"}
{"English":"Remount the root file system with read and write permission","Bash":"mount -o rw,remount -t rootfs \/"}
{"English":"Open a ssh connection to \"user@host\" with a control socket \"\/tmp\/%r@%h:%p\"","Bash":"ssh user@host -S \/tmp\/%r@%h:%p"}
{"English":"Print each line in parallel in files \"tmp\/sample-XXX.tim\" and \"tmp\/sample-XXX.log\"","Bash":"paste tmp\/sample-XXXX.{tim,log}"}
{"English":"Save the absolute path of the current script to variable \"SELF\"","Bash":"script=\"`readlink -f \"${BASH_SOURCE[0]}\"`\""}
{"English":"find md5sum of 'string to be hashed'","Bash":"echo 'string to be hashed' | md5"}
{"English":"Sort \":\" delimited lines in \"test.txt\" by the first and third field preserving only unique lines","Bash":"sort -u -t : -k 1,1 -k 3,3 test.txt"}
{"English":"Compute the mean average of the word count of *.txt files in the home directory","Bash":"find ~\/ -name '*.txt' -print0 | xargs -0 wc -w | awk 'END { print $1\/(NR-1) }'"}
{"English":"Find all files in the current directory tree whose names end with the suffix \".keep.$1\", where $1 is the first command line argument, and remove that suffix","Bash":"find . -type f -name \"*.keep.$1\" -print0 | xargs -0 rename \"s\/\\.keep\\.$1$\/\/\""}
{"English":"Print the list of files in the current directory tree skipping SVN files","Bash":"find . -type d -name .svn -prune -o -print"}
{"English":"display all the files in the file system which are smaller than 20 bytes","Bash":"find \/ -size 20"}
{"English":"Find all files\/directories named 'document' in the root filesystem partition","Bash":"find \/ -xdev -name document -print"}
{"English":"Display all lines containing UTRACE in the current kernel's compile-time config file.","Bash":"grep UTRACE \/boot\/config-$(uname -r)"}
{"English":"Finds strings with text \"text\" in all files named \"string to be searched\" recursively in a current folder.","Bash":"find . -name \"string to be searched\" -exec grep \"text\" \"{}\" \\;"}
{"English":"Rename all files in current directory to lowerase.","Bash":"rename 'y\/A-Z\/a-z\/' *"}
{"English":"find all the normal\/regular files in the folder main-directory","Bash":"find main-directory -type f"}
{"English":"Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???'","Bash":"find . -type f -name \"*.???\" | awk -F. '{print $NF}' | sort -u"}
{"English":"Make 3 directories named \"~\/Labs\/lab4a\/folder\" followed by the number 1, 2, or 3","Bash":"mkdir ~\/Labs\/lab4a\/folder{1,2,3}"}
{"English":"find all the files ending with jpg in current folder and display their count ( case insensitive )","Bash":"find .\/ -iname '*.jpg' -type f | wc -l"}
{"English":"Print yesterday's date information in \"%a %d\/%m\/%Y\" format","Bash":"date -d \"-1 days\" +\"%a %d\/%m\/%Y\""}
{"English":"Print the date formatted with \"%a %x %X\" followed by the host name","Bash":"echo `date +\"%a %x %X\"` `hostname`"}
{"English":"Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago","Bash":"find -daystart -mtime +0"}
{"English":"Save the list of all .py files under and below the current directory that contain \"something\" in their pathnames to output.txt","Bash":"find . -name '*.py' | tee output.txt | xargs grep 'something'"}
{"English":"Find all \/home\/folder1\/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names","Bash":"find \/home\/folder1\/*.txt -type f | awk -F '.txt' '{printf \"ln -s %s %s_CUSTOM_TEXT.txt\\n\", $0, $1}' | sh"}
{"English":"Set read, write and execute permission for all (owner, group, other) for the files\/directories in foldername directory tree","Bash":"sudo find foldername -exec chmod a+rwx {} \";\""}
{"English":"Search \/etc for files modified within the last day","Bash":"find \/etc -type f -ctime -1"}
{"English":"search  in current directory downwards all files whose status has changed more then 7  days ago","Bash":"find .  -ctime +7 -print"}
{"English":"Find all files named `file1' starting from \/","Bash":"find \/ -name file1"}
{"English":"Delete all files (files, directories, links, pipes...) named 'core' under current directory","Bash":"find . -name \"core\" -exec rm -f {} \\;"}
{"English":"Find all *.c files under and below the current directory that contain \"hogehoge\"","Bash":"find . -name \\*.c | xargs grep hogehoge"}
{"English":"Search the current directory recursively for files containing \"needle text\"","Bash":"find . -type f | xargs grep -I \"needle text\""}
{"English":"Delete all hidden files in the directory tree given as variable $FOLDER","Bash":"find $FOLDER -name \".*\" -delete"}
{"English":"Find all directories under \/directory-path and change their permission to 2755","Bash":"find \/directory-path  -type d -exec sudo chmod 2775 {} +"}
{"English":"List all *.txt files\/directories under \/etc","Bash":"find \/etc -name \"*.txt\" -exec ls -l {} \\;"}
{"English":"find all the files older than 30 days","Bash":"find \/tmp -mtime +30 -print"}
{"English":"Recursively copies '$1' directory to '$2' directory.","Bash":"cp -r $1 $2"}
{"English":"display all the regular files in the current folder that are bigger than 10KB","Bash":"find . -type f -size +10k"}
{"English":"Mount \"ext4\" filesystem \"\/dev\/xvdf\" on \"\/vol\"","Bash":"sudo mount \/dev\/xvdf \/vol -t ext4"}
{"English":"find md5sum of 401","Bash":"yosemite$ echo -n 401 | md5"}
{"English":"Search the \/home\/weedly directory tree for regular files named myfile","Bash":"find \/home\/weedly -name myfile -type f -print"}
{"English":"Go back to last directory.","Bash":"cd -"}
{"English":"get md5sum of an iso file without displaying the filename, save value to 'md5' variable","Bash":"md5=`md5sum ${my_iso_file} | awk '{ print $1 }'`"}
{"English":"Search \/path\/to\/your\/directory for *.avi and *.flv files","Bash":"find \/path\/to\/your\/directory -regex '.*\\.\\(avi\\|flv\\)'"}
{"English":"Find all the files that were modified more than one day ago","Bash":"find . -mtime +1"}
{"English":"Send at most 3 ping requests to \"8.8.8.8\" with a timeout of 3 seconds on interface \"eth9\"","Bash":"ping 8.8.8.8 -I eth9 -c 3 -w 3"}
{"English":"Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself","Bash":"tar -czvf my_directory.tar.gz -C my_directory ."}
{"English":"Save the md5 sum hash of \"${my_iso_file}\" to variable \"md5\"","Bash":"md5=`md5sum ${my_iso_file} | awk '{ print $1 }'`"}
{"English":"Find all files\/directories under \/myfiles that were modified 2 days ago","Bash":"find \/myfiles -mtime 2"}
{"English":"Find all *shp* directories under current directory and move their contents to ..\/shp_all\/","Bash":"mv $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq)\/* ..\/shp_all\/"}
{"English":"Remove all tmp\/*.mp3 files","Bash":"find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs rm"}
{"English":"display a long listing of all regular files  in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 -type f | xargs ls -l"}
{"English":"Find all files\/directories with name pattern $nombre that are at most 2 levels down the $DIR_TEMPORAL and $DIR_DESCARGA directories and show only the file names (without parent path) appended with '.torrent'","Bash":"find \"$DIR_TEMPORAL\" \"$DIR_DESCARGA\" -maxdepth 2 -name \"$nombre\" -printf '%f.torrent\\n'"}
{"English":"Report file system containing \/tmp disk usage in kilobytes.","Bash":"df -k \/tmp"}
{"English":"Read a single line from standard input and save to variable \"line\"","Bash":"read line"}
{"English":"Removes all files from current folder but 5 newest ones.","Bash":"ls -C1 -t| awk 'NR>5'|xargs rm"}
{"English":"Print continuous lines of 100 random characters either \".\" or \" \"","Bash":"cat \/dev\/urandom | tr -dc '. ' | fold -w 100"}
{"English":"find all the symbolic links in the current folder that are broken","Bash":"find . -xtype l"}
{"English":"Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '\/home\/u20806\/public_html'","Bash":"find \/home\/u20806\/public_html -maxdepth 1 -mmin +25 -type f -name \"*.txt\" -delete"}
{"English":"Report file system containing path-to-file disk usage human-readable.","Bash":"df -h path-to-file"}
{"English":"display all the files in the current folder for the files which have been accessed in the last 24 hours","Bash":"find . -type f -atime -1"}
{"English":"Move server.log to 'logs' directory with new name as the current date formatted as \"%Y%m%d%H%M\" and with '.log' extension","Bash":"mv server.log logs\/$(date -d \"today\" +\"%Y%m%d%H%M\").log"}
{"English":"Find all files that have been modified in the last seven days.","Bash":"find . -mtime -7 -type f"}
{"English":"Report file systems disk usage in 1GB blocks.","Bash":"df -BG"}
{"English":"find all the files in the current folder which are smaller than 9MB","Bash":"find . -size -9k"}
{"English":"Print flow of random data, showing all non-printing characters","Bash":"cat -v \/dev\/urandom"}
{"English":"Find all files\/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep","Bash":"find . -mindepth 1 -name 'onlyme*'"}
{"English":"find all the files in the entire filesystem which belong to the user root and display the ten files.","Bash":"find \/ -user root | head"}
{"English":"Find all files owned by the user daniel in the current directory and below.","Bash":"find . -user daniel"}
{"English":"Find all *.xml.bz2 files under current directory","Bash":"find . -name \\*.xml.bz2"}
{"English":"Copy and always overwrite all files in \"\/zzz\/zzz\" to \"\/xxx\/xxx\"","Bash":"yes | cp -rf \/zzz\/zzz\/* \/xxx\/xxx"}
{"English":"Split \"bigfile\" into files of at most 1000 lines each with prefix \"\/lots\/of\/little\/files\/here\"","Bash":"split bigfile \/lots\/of\/little\/files\/here"}
{"English":"Output \"file.txt\", omitting all containing directories \"some\/unknown\/amoutn\/of\/sub\/folder\/\"","Bash":"basename \"some\/unknown\/amount\/of\/sub\/folder\/file.txt\""}
{"English":"Remove all \"core\" regular files in the \/tmp\/ directory tree","Bash":"find \/tmp -name core -type f -print | xargs \/bin\/rm -f"}
{"English":"Print the list of files in the current directory tree skipping Git files","Bash":"find . -path '.\/.git' -prune -o -type f"}
{"English":"Change the ownership of all files in the current directory tree from root to www-data","Bash":"find -user root -exec chown www-data {} \\;"}
{"English":"Output the specified path removing all containing directories and the .txt suffix, in this case \"filename\".","Bash":"basename \/path\/to\/dir\/filename.txt .txt"}
{"English":"find all normal\/regular files in current folder and replace a word in all these files","Bash":"find . -type f -print0 | xargs -0 sed -i '' 's\/2013\/2012\/g'"}
{"English":"Generates a randomly sorted list of numbers from 1 to 10.","Bash":"seq 1 10 | sort -R | tee \/tmp\/lst |cat <(cat \/tmp\/lst) <(echo '-------') \\ <(tac)"}
{"English":"display all the regular\/normal files in the entire file system","Bash":"find \/ -type f -exec echo {} \\;"}
{"English":"find files with pattern` '*.h' and print comparison between file and \/tmp\/master directory","Bash":"find . -name '*.h' -execdir diff -u '{}' \/tmp\/master ';'"}
{"English":"Recursively removes all files and folders named '.svn' in a current folder.","Bash":"find . -name .svn |xargs rm -rf"}
{"English":"Find files and directories whose owner is daniel","Bash":"find . -user daniel"}
{"English":"Archive \"\/top\/a\/b\/c\/d\" to host \"remote\" using relative path names","Bash":"rsync -a --relative \/top\/a\/b\/c\/d remote:\/"}
{"English":"Unzip and extract \"*\\(userAgent=[^=]*\\) [^ =]\\+=.*\" from \"input.gz\"","Bash":"zcat input.gz | sed -n 's\/.*\\(userAgent=[^=]*\\) [^ =]\\+=.*\/\\1\/p'"}
{"English":"Find and uncompress all files in the current directory tree ending in \".csv.gz\"","Bash":"find . -name '*.csv.gz' -print0 | xargs -0 -n1 gzip -d"}
{"English":"Print out the names of all directories in mydir recursively","Bash":"find mydir -type d"}
{"English":"Search the current directory recursively for regular files last accessed less than 2 days ago","Bash":"find . type -f -atime -2"}
{"English":"Remove all files in the current directory tree that have the name \"abc.xxx\"","Bash":"find . -name abc.xxx -exec rm {} \\;"}
{"English":"Find a 400 permission file under \/data directory","Bash":"find \/data -type f -perm 400 -print -quit"}
{"English":"Find user daniel's files of type jpeg","Bash":"find . -user daniel -type f -name *.jpg"}
{"English":"Use the output of \"ping google.com\" as input to awk script \"packet_loss.awk\"","Bash":"ping google.com | awk -f packet_loss.awk"}
{"English":"Search for 'text' in all regular files under current directory tree","Bash":"find . -type f -exec grep \"text\" {} \/dev\/null \\;"}
{"English":"Finds strings having text \"searched-string\" in all files recursively in a current folder.","Bash":"find . | xargs grep \"searched-string\""}
{"English":"Find all files\/directories under '\/usr\/share\/data' directory tree that match the posix extended regex \".*\/20140624.*\" in their paths and save the list to '\/home\/user\/txt-files\/data-as-of-20140624.txt'","Bash":"find \/usr\/share\/data -regextype posix-extended -regex \".*\/20140624.*\" -fprint \/home\/user\/txt-files\/data-as-of-20140624.txt"}
{"English":"change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command","Bash":"find . -name \"*.php\" -exec chmod 755 {} +"}
{"English":"Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with \"autumn\".","Bash":"find . -user daniel -type f -name *.jpg ! -name autumn*"}
{"English":"Print full path of command \"programname\"","Bash":"which programname"}
{"English":"find symbolic links with pattern` '*sysdep.c'","Bash":"find . -lname '*sysdep.c'"}
{"English":"Move each of the directories in \/path\/to\/folders\/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","Bash":"find \/path\/to\/folders\/* -type d  -exec mv {} {}.mbox \\; -exec mkdir {}.mbox\/Messages \\; -exec sh -c \"mv {}.mbox\/*.emlx {}.mbox\/Messages\" \\;"}
{"English":"List the directory paths of all file.ext files under present working directory","Bash":"find `pwd` -name \"file.ext\" -exec dirname {} \\;"}
{"English":"For each item in array \"alpha\", display the basename, that is the part following the last slash, or the whole item if no slash is present.","Bash":"basename -a \"${alpha[@]}\""}
{"English":"Request changing the passphrase of key file \"private.key\"","Bash":"ssh-keygen -pf private.key"}
{"English":"Recursively add \".jpg\" to all files without an extension in the directory tree \"\/path\"","Bash":"find \/path -type f -not -name \"*.*\" -exec mv \"{}\" \"{}\".jpg \\;"}
{"English":"Find all empty files under \/tmp","Bash":"find \/tmp -type f -empty"}
{"English":"Search for regular files of the user bluher in the file system","Bash":"find \/ -type f -user bluher -exec ls -ls {}  \\;"}
{"English":"Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods","Bash":"find \/ \\( -name tmp -o -name '*.xx' \\) -atime +7 -exec rm {} \\;"}
{"English":"Searches the manual page names and descriptions","Bash":"apropos"}
{"English":"Copy all \".php\" files in \"projects\/\" directory tree to \"copy\/\" preserving directory hierarchy","Bash":"find projects\/ -name '*.php' -print | cpio -pdm copy\/"}
{"English":"Show who is logged on","Bash":"who"}
{"English":"recursively change owner of the directory and all files into it to user  nobody","Bash":"chown -R nobody upload_directory"}
{"English":"Output two lines of \"-tcp\"","Bash":"yes -- \"-tcp\" | head -n 2"}
{"English":"find all the files starting with \"config\" in the folder Symfony","Bash":"find Symfony -name '*config*';"}
{"English":"Find all the files which are modified in last 1 hour in entire file system","Bash":"find \/ -mmin -60"}
{"English":"Copy all files matching \"*.sh\" in \"$from\/*\" to \"root@$host:\/home\/tmp\/\" compressing data during transmission","Bash":"rsync -zvr --include=\"*.sh\" --exclude=\"*\" $from\/*  root@$host:\/home\/tmp\/"}
{"English":"Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under \/home\/www and below","Bash":"find \/home\/www -type f -print0 | xargs -0 sed -i 's\/subdomainA.example.com\/subdomainB.example.com\/g'"}
{"English":"Search the *.code files from the current directory tree for string 'pattern'","Bash":"find . -name '*.code' -exec grep -H 'pattern' {} +"}
{"English":"SSH into \"hostname\" on port 22 as user \"myName\"","Bash":"ssh -l myName -p 22 hostname"}
{"English":"display the version of find command","Bash":"find -version"}
{"English":"Synchronize \"\/path\/to\/dir_a\" with files in \"\/path\/to\/dir_b\/\" if the files are newer","Bash":"rsync -rtuv \/path\/to\/dir_b\/* \/path\/to\/dir_a"}
{"English":"Pipe the output of ls into \"read var\" in its separate process","Bash":"ls | read var"}
{"English":"Search the current directory tree for files containing \"sh\" in their names","Bash":"find . -name \"*sh*\""}
{"English":"Remove the last 2 tab-separated fields of each line in file pointed to by filename","Bash":"cat $filename | rev | cut -c 3- | rev"}
{"English":"Clears the terminal screen.","Bash":"clear"}
{"English":"list all *.java files under the src directory","Bash":"find src -name \"*.java\""}
{"English":"replace a word in all the regular\/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)","Bash":"find . -type f -print0 | xargs -0 sed -i 's\/Application\/whatever\/g'"}
{"English":"Make directory \"dirname\" with permissions set to 777","Bash":"mkdir -m 777 dirname"}
{"English":"Print characters 2 through 4 of \"abcdefg\"","Bash":"echo 'abcdefg'|tail -c +2|head -c 3"}
{"English":"Recursively move all files in \"\/path\/to\/srcdir\" to \"dest\/\"","Bash":"find \/path\/to\/srcdir -type f -print0 | xargs -0 -i% mv % dest\/"}
{"English":"Change to the directory containing the \"oracle\" executable","Bash":"cd \"$(dirname \"$(which oracle)\")\""}
{"English":"Find all directories in the current directory tree excluding hidden directories and create them in \"..\/demo_bkp\"","Bash":"find . -not -path \\*\/.\\* -type d -exec mkdir -p -- ..\/demo_bkp\/{} \\;"}
{"English":"Find all files under .\/lib\/app and sort them","Bash":"find .\/lib\/app -type f | sort"}
{"English":"Search for the string \"ERROR\" in all XML files in the current working directory tree","Bash":"find . -name \"*.xml\" -exec grep \"ERROR\" \/dev\/null '{}' \\+"}
{"English":"Find all *text files\/directories under current directory","Bash":"find -name \"*text\""}
{"English":"For each line in 'file', print \"result = \" followed by the line backwards.","Bash":"awk '{print \"result =\",$0}' <(rev file)"}
{"English":"Search the current directory tree for *.conf and *.txt files","Bash":"find . -type f \\( -name \"*.conf\" -or -name \"*.txt\" \\) -print"}
{"English":"Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.","Bash":"echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f1"}
{"English":"Print second section of space-separated data from text file \"a\".","Bash":"cut \"-d \" -f2 a"}
{"English":"display a list of all the files  in the home folder which have been modified today","Bash":"find ~ -type f -mtime 0 -ls"}
{"English":"Find all files under \/home\/username\/public_html\/themes and set their permission to 640","Bash":"find \/home\/username\/public_html\/themes -type f -exec chmod 640 {} +"}
{"English":"List the MD5 digest of all files under \"teste1\" and \"teste2\" sorted alphabetically","Bash":"find teste1 teste2 -type f -exec md5 -r {} \\; | sort"}
{"English":"Print the most recently modified file","Bash":"ls -1tr * | tail -1"}
{"English":"Remove regular files whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$' from the current directory tree","Bash":"find -type f |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | xargs rm"}
{"English":"Print each character in \"orange\" on a new line","Bash":"echo orange | fold -w 1"}
{"English":"copy a files from one folder to all the folder in the \/raid which have an extension local_sd_customize.","Bash":"find \/raid -type d -name \".local_sd_customize\" -ok cp \/raid\/04d\/MCAD-apps\/I_Custom\/SD_custom\/site_sd_customize\/user_filer_project_dirs {} \\;"}
{"English":"list all the \".ksh\" files in the current directory","Bash":"find . -ls -name \"*.ksh\""}
{"English":"Format time string @1267619929 according to default time format","Bash":"date -d @1267619929"}
{"English":"change owner of the files into directory \"\/mydir\" with \".txt\" extension to user root","Bash":"find \/mydir -type f -name \"*.txt\" -print0 | xargs -0 chown root $(mktemp)"}
{"English":"display the type of all the regular\/normal files in the entire file system","Bash":"find \/ -type f -print | xargs file"}
{"English":"find all the files in the \/usr folder that have been modified after the file \/usr\/FirstFile.","Bash":"find \/usr -newer \/usr\/FirstFile -print"}
{"English":"display all the files in the current folder which end with \".bash\"","Bash":"find . -name \"*.bash\""}
{"English":"Prints full path to files with dot in name in a current folder.","Bash":"ls -d -1 $PWD\/*.*"}
{"English":"Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set","Bash":"find \/ -type f -user root -perm -4000 -exec ls -l {} \\;"}
{"English":"Search the current directory tree for files whose names do not end in \".exe\" and \".dll\"","Bash":"find . -not -name \"*.exe\" -not -name \"*.dll\" -type f"}
{"English":"Unzip all \".gz\" files in the current directory tree to their respective directories","Bash":"find . -name \"*.gz\" -execdir gunzip '{}' \\;"}
{"English":"display a long listing of all images with the name \"articles\" in the current folder","Bash":"find . -iname \"Articles.jpg\" -exec ls -l {} \\;"}
{"English":"display all files in the current folder along with their last access timestamps","Bash":"find . -printf \"%h\/%f : dernier acc\u00e8s le %Ac\\n\""}
{"English":"Exit the shell on the first error encountered","Bash":"set -e"}
{"English":"Saves hostname that matches ${ip_address} in 'host' variable, without trailing dot.","Bash":"host=$(dig +short -x \"${ip_address}\" | sed 's\/\\.$\/\/g')"}
{"English":"list all CSS files under the current directory","Bash":"find . -type f -name \"*.css\""}
{"English":"insert \"e\" when it's pressed","Bash":"bind '\"e\":self-insert'"}
{"English":"Remove all .php files in the \/var\/www\/ directory","Bash":"find \/var\/www\/*.php -type f -exec rm {} \\;"}
{"English":"find the \"MyCProgram.c\" file (case insensitive find) under the current directory","Bash":"find -iname \"MyCProgram.c\""}
{"English":"display all directories in the folder \"\/myfiles\"","Bash":"find \/myfiles -type d"}
{"English":"Removes 55, adds a 10-digit line number, and rearranges the date for each line in \"input\"","Bash":"nl -nrz -w10 -s\\; input | sed -r 's\/55\/\/; s\/([0-9]{2})-([0-9]{2})-([0-9]{4})\/\\3\\2\\1\/'"}
{"English":"Show filename and filetype description of all PHP files in current directory whose name or filetype description includes \"UTF\"","Bash":"file *.php | grep UTF"}
{"English":"find all the normal\/regular files in the folder \"pathfolder\" which are 2 levels deep, excluding all hidden files and display the count","Bash":"find pathfolder -mindepth 2 -maxdepth 2 -type f -not -path '*\/\\.*' | wc -l"}
{"English":"Create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2","Bash":"mkdir -p directory{1..3}\/subdirectory{1..3}\/subsubdirectory{1..2}"}
{"English":"Find all files starting from \/ that belong to user1","Bash":"find \/ -user user1"}
{"English":"Find all files\/directories under $dir directory","Bash":"find \"$dir\""}
{"English":"change the group of all directories in the current folder","Bash":"find . -type d -exec chgrp usergroup {} \\;"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find . -name '*.txt'"}
{"English":"Print the full path of a file under the current working directory with inode number specified on standard input","Bash":"xargs -n 1 -I '{}' find \"$(pwd)\" -type f -inum '{}' -print"}
{"English":"Recursively finds all '*.pdf' files in a current folder and removes them.","Bash":"find . -name \"*.pdf\" -exec rm {} \\;"}
{"English":"Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file.","Bash":"join -a1 -a2 <(sed s\/^Gene\/00ne\/ S43.txt | sort) <(sed s\/^Gene\/00ne\/ S44.txt | sort) | column -t | sed s\/^00ne\/Gene\/"}
{"English":"sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )","Bash":"find \/ -type f -printf \"\\n%AD %AT %p\" | head -n 11 | sort -k1.8n -k1.1nr -k1"}
{"English":"Copy all directories recursively from \"source\/\" to \"destination\/\" excluding all files","Bash":"rsync -a -f\"+ *\/\" -f\"- *\" source\/ destination\/"}
{"English":"Calculates process depth of process with id $processid, and stores it in a 'depth' variable.","Bash":"depth=$(pstree -sA $processid | head -n1 | sed -e 's#-+-.*#---foobar#' -e 's#---*#\\n#g' -eq | wc -l)"}
{"English":"Time stamp every ping request to 8.8.8.8 in Unix epoch format","Bash":"ping -D -n -O -i1 -W1 8.8.8.8"}
{"English":"Find all *.mp4 files under \/working","Bash":"find \/working -type f -name '*.mp4'"}
{"English":"Find all directories under and below \/home\/admin\/public_html\/, and change their permissions to 755","Bash":"find \/home\/admin\/public_html\/ -type d -exec chmod 755 {} \\;"}
{"English":"Find files in the current directory tree that were accessed within the last 60 minutes","Bash":"find . -amin -60"}
{"English":"change the owner and group of all the normal\/regular files in the current folder and \/home\/admin\/data\/ to admin & admin","Bash":"find . \/home\/admin\/data\/ -type f -exec chown admin.admin {} \\;"}
{"English":"Write \"foo\" to the real path of the current command's standard input","Bash":"echo foo | readlink \/proc\/self\/fd\/1"}
{"English":"Creates temporary directory with name formatted like .daemonXXXXXXX in \/tmp\/ folder, and saves path to it in 'TMPDIR' variable.","Bash":"TMPDIR=$(mktemp -p \/tmp -d .daemonXXXXXXX)"}
{"English":"Copy the current directory tree to '\/path\/to\/destination\/dir' preserving permissions, timestamp and ownership","Bash":"find . | cpio -pdumv \/path\/to\/destination\/dir"}
{"English":"display all the normal\/regular files in the current folder which are empty","Bash":"find . -type f -empty"}
{"English":"display all the files in the file system which are present in nfs system","Bash":"find \/ -fstype nfs -print"}
{"English":"Find all directories under $1\/.hg and set their SGID bit","Bash":"find \"$1\"\/.hg -type d -print0 | xargs chmod g+s"}
{"English":"Calculate md5 checksum of theDirname","Bash":"cpio -i -e theDirname | md5sum"}
{"English":"Print each line in \"file1.txt\" that is not found in \"file2.txt\"","Bash":"sort file1.txt file2.txt file2.txt | uniq -u"}
{"English":"Display only mimetype of myfile.txt, without the filename.","Bash":"file -bi myfile.txt"}
{"English":"list all java file that StringBuff in context.","Bash":"find . -type f -name \"*.java\" -exec grep -l StringBuffer {} \\;"}
{"English":"delete all files in the home directory which ahve the name core in them","Bash":"find ~\/ -name 'core*' -exec rm {} \\;"}
{"English":"Perform case-insensitive search for file `TeSt123.txt' on the system","Bash":"find \/ -iname TeSt123.txt"}
{"English":"Create intermediate directories foo and bar as required and directory foo\/bar\/baz","Bash":"mkdir -p foo\/bar\/baz"}
{"English":"Extract any line in \"file1\" or \"file2\" which does not appear in the other","Bash":"comm -3 <(sort file1) <(sort file2)"}
{"English":"find all files in the home folder that are modified in the last 7 days","Bash":"find $HOME -mtime -7"}
{"English":"Search all regular files in the current directory tree for \"string\"","Bash":"find . -type f -exec grep string {} \\;"}
{"English":"Numerically sort file \"file.dat\" by the second word of each line and output from greatest value to least value","Bash":"sort -nrk 2,2 file.dat"}
{"English":"Print last 10 commands in history","Bash":"history 10"}
{"English":"Read standard input and replace any repeated characters except spaces with a single instance","Bash":"tr -cs '[:space:]'"}
{"English":"find all the jpg files in current folder and sort them","Bash":"find . -type f|grep -i \"\\.jpg$\" |sort"}
{"English":"Show manual of the find utility","Bash":"man find"}
{"English":"Show the subdirectories of the current directory","Bash":"find . -maxdepth 1 -type d -print | xargs echo Directories:"}
{"English":"create a backup of all the files in the current folder to the floppy and save the file list in the file \/tmp\/BACKUP.LOG","Bash":"find . -cpio \/dev\/fd0 -print | tee \/tmp\/BACKUP.LOG"}
{"English":"Send 4 ping requests to host \"google.comz\", displaying only the summary info after the last request completed.","Bash":"ping -c 4 -q google.comz"}
{"English":"display all files  expect directories in the current folder","Bash":"find . ! \u2014 type d -print"}
{"English":"delete all files in $DIR that have not been accessed in at least 5 days","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"list *.pdf, *.bmp and *.txt files under the \/home\/user\/Desktop directory.","Bash":"find \/home\/user\/Desktop -name '*.pdf' -o -name '*.txt' -o -name '*.bmp'"}
{"English":"Find all regular files 1 level down the $dir directory","Bash":"find $dir -maxdepth 1 -type f"}
{"English":"Find all OGG files in the home directory that are at most 20 megabytes in size","Bash":"find $HOME -iname '*.ogg' ! -size +20M"}
{"English":"Find all files\/directories under '\/usr\/share\/doc' directory tree whose name start with 'README'","Bash":"find \/usr\/share\/doc -name README\\*"}
{"English":"Find files\/directories modified within the last hour under current directory","Bash":"find . -mtime -1"}
{"English":"recursively delete, without prompting, directories under \/data\/bin\/test, that are older than 10 days and where the name starts with a number","Bash":"find \/data\/bin\/test -type d -mtime +10 -name '[0-9]*' -print | xargs rm -rf ;"}
{"English":"search for files which are writable by both their owner and their group","Bash":"find . -perm -g+w,u+w"}
{"English":"display all files in the current folder expect text files","Bash":"find . -name \"*.txt\" -prune -o -print"}
{"English":"display all the files in the file system excluding all the \".c\" files","Bash":"find \/ \\! -name \"*.c\" -print"}
{"English":"Search the files in the current directory tree that are named \"string to be searched\" for \"text\"","Bash":"find . -name \"string to be searched\" -exec grep \"text\" \"{}\" \\;"}
{"English":"Search directory \/Users\/david\/Desktop\/ recursively for regular files","Bash":"find \/Users\/david\/Desktop\/ -type f"}
{"English":"Prepend the reverse history number as negative values to the output of the history command with arguments \"$@\"","Bash":"history \"$@\" | tac | nl | tac | sed 's\/^\\( *\\)\\([0-9]\\)\/\\1-\\2\/'"}
{"English":"Find files that were modified more than 7 days ago and archive them","Bash":"find . -type f -mtime +7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}
{"English":"find all the files in the entire file system that have been modified exactly  50 days ago","Bash":"find \/ -mtime 50"}
{"English":"Shows status of a shell option 'nullglob'.","Bash":"shopt nullglob"}
{"English":"find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension","Bash":"find . -iregex \".\/[^\/]+\\.dat\" -type f -cmin +60 -exec basename {} \\;"}
{"English":"Rename all .html files to .txt","Bash":"rename 's\/\\.html$\/\\.txt\/' *.html"}
{"English":"display all the files in the entire file system which have set uid bit set.","Bash":"find \/ -perm -u+s -print"}
{"English":"list all the drectories present in the current directory and do not search in the sub directories.","Bash":"find -maxdepth 1 -type d"}
{"English":"Search for files\/directories named 'fileName.txt' under '\/path\/to\/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths","Bash":"find \/path\/to\/folder -path \"*\/ignored_directory\" -prune -o -name fileName.txt -print"}
{"English":"Find all executable files","Bash":"find \/ -perm \/a=x"}
{"English":"Find all directories under \/myfiles directory","Bash":"find \/myfiles -type d"}
{"English":"display all the ip addresses in all the files that are present in \/etc folder","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"Wrap each line in \"longline\" to a maximum of 30 characters","Bash":"fold -w30 longline"}
{"English":"find all files under the \/etc directory and display IP address patterns in them","Bash":"find \/etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' \\ | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}
{"English":"Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.","Bash":"awk 'NR==16224, NR==16482-1; NR==16482 {print; exit}' file"}
{"English":"Print every two lines in \"file\" on a single line separated by a space","Bash":"cat file | paste -d' ' - -"}
{"English":"Search the first 300 commands in history containing \"scp\" and ending in \"important\"","Bash":"history 300 | grep scp | grep important$"}
{"English":"Copies file 'test' to each of directories like '.\/fs*\/*'.","Bash":"echo .\/fs*\/* | xargs -n 1 cp test"}
{"English":"Extracts single file 'filename' from bzip2-compressed tarball archive.tbz.","Bash":"bzip2 -dc archive.tbz | tar xvf - filename"}
{"English":"List all .jpg files in the home directory tree","Bash":"find . -name \"*.jpg\" -exec ls {} \\;"}
{"English":"Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them","Bash":"find MyApp.app -name Headers -type d -delete"}
{"English":"Find all files\/directories startring with 'onlyme' in their names under current directory without going into sub-directories","Bash":"find . -maxdepth 1 -name 'onlyme*'"}
{"English":"Find all broken symlinks under \/path\/to\/search directory","Bash":"find \/path\/to\/search -xtype l"}
{"English":"Interpret in the current shell all lines in config.sh which contain the word \"marker\"","Bash":"source <( grep \"marker\" config.sh )"}
{"English":"Find all files\/directories under minimum 2 level down the current directory and set their permission to 700","Bash":"find . -mindepth 2 | xargs chmod 700"}
{"English":"Remove all a.out, *.o, and core files under the current directory","Bash":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}
{"English":"Sources script incl.sh in the folder where current running script is located","Bash":"source \"$( dirname \"${BASH_SOURCE[0]}\" )\/incl.sh\""}
{"English":"Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory","Bash":"find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's\/jpg$\/jpeg\/i' {} +"}
{"English":"Find all SUID set files in the file system","Bash":"find \/ -perm \/u=s"}
{"English":"search for the file filename in the entire file system","Bash":"find \/ -name filename"}
{"English":"Read a line from standard input into variable \"prompt\" with the prompt \"Are you sure you want to continue? <y\/N> \"","Bash":"read -p \"Are you sure you want to continue? <y\/N> \" prompt"}
{"English":"find all files ending with \"js.compiled\" in current folder and rename them.","Bash":"find . -name \"*.js.compiled\" -exec rename -v 's\/\\.compiled$\/\/' {} +"}
{"English":"Recursively copy \"\/path\/to\/data\/myappdata\/*.txt\" to \"user@host:\/remote\/path\/to\/data\/myappdata\/\"","Bash":"rsync -rvv \/path\/to\/data\/myappdata\/*.txt user@host:\/remote\/path\/to\/data\/myappdata\/"}
{"English":"Find all executable files under current directory and reverse sort them","Bash":"find . -perm -111 -type f | sort -r"}
{"English":"find files in root directory that names are game","Bash":"find \/ -name game"}
{"English":"Prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs.","Bash":"crontab"}
{"English":"Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.","Bash":"find . -name \"*.txt\" \\( -exec echo {} \\; -o -exec true \\; \\) -exec grep banana {} \\;"}
{"English":"Prints long listing of top ten most memory using processes in a system.","Bash":"ps -e -orss=,args= | sort -nr | head"}
{"English":"Create a symbolic lnk named \"$1\/link\" to \"$dir\"","Bash":"ln -s \"$dir\" \"$1\/link\""}
{"English":"Find recursively all files matching pattern 'file??' in the xargstest\/ directory and print a sorted list of them","Bash":"find xargstest\/ -name 'file??' | sort"}
{"English":"Page through the contents of 'input_file_name' hexdumped with space-separated 2-byte units.","Bash":"od -xcb input_file_name | less"}
{"English":"Remove newline characters from \"file.txt\"","Bash":"paste -sd \"\" file.txt"}
{"English":"find all the files in the current folder and display those that are not present in the list \"file.lst\"","Bash":"find . | grep -vf file.lst"}
{"English":"find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.","Bash":"find $LOGDIR -type d -mtime +5 -exec rm -f {} \\;"}
{"English":"Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed","Bash":"file_changed=$(find . -depth \\( -wholename \\.\/\\.\\* \\) -prune -o -mtime -1 -print | cpio -oav)"}
{"English":"find all the text files in the folder \/home\/calvin which are atleast below 2 levels","Bash":"find \/home\/calvin\/ -mindepth 2  -name \u201c*.txt\u201d"}
{"English":"Prints total count of lines of all *.py files in a current folder and subfolders.","Bash":"find . -name \"*.py\" -exec wc -l {} \\; | awk '{ SUM += $0} END { print SUM }'"}
{"English":"find all the png files in the current folder which are present in the pattern list search .txt","Bash":"find . -name '*.png' | grep -f search.txt"}
{"English":"Check if content of all top-level *.txt files in the current directory contain only unique lines","Bash":"cat *.txt | sort | sort -u -c"}
{"English":"Find all directories under \/path\/to\/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension","Bash":"find \/path\/to\/dir -mindepth 1 -maxdepth 1 -type d -execdir sudo tar -zcpvf {}.tar.gz {} \\;"}
{"English":"Print only the number of lines in file \"$f\"","Bash":"wc -l $f | tr -s ' ' | cut -d ' ' -f 1"}
{"English":"Recursively changes group ownership of everything within current folder to 'git'.","Bash":"chgrp -R git .\/"}
{"English":"search for text files in the current folder which have write access to others","Bash":"find . -type f \\( -iname \"*.txt\" -and -perm -o=w \\)"}
{"English":"Display the last colon-separated field of variable 'var'","Bash":"echo \"$var\" | rev | cut -d: -f1 | rev"}
{"English":"display all the files only in the path \".\/sr*sc\"","Bash":"find . -path \".\/sr*sc\""}
{"English":"Find all files under maximum 1 level down the .\/subfolder and .\/subfolder\/*\/  paths","Bash":"find .\/subfolder .\/subfolder\/*\/ -maxdepth 1 -type f"}
{"English":"List root's regular files with permissions 4000","Bash":"find \/ -type f -user root -perm -4000 -exec ls -l {} \\;"}
{"English":"Find all 777 permission directories under current directory and  set permissions to 755","Bash":"find . -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"removes the 4th-from to 6th-from last lines in file","Bash":"tac filename | sed 4,6d | tac"}
{"English":"Delete all files in the \/myDir directory tree that were last modfied 7 days ago","Bash":"find \/myDir -mindepth 1 -mtime 7 -exec rm -rf {} \\;"}
{"English":"find all the files in the current folder which do not have the read permission","Bash":"find . -type f ! -perm -444"}
{"English":"Print history with the first field removed","Bash":"history | awk '{sub($1, \"\"); sub(\/^[ \\t]+\/, \"\"); print}'"}
{"English":"Dump \"input_file\" as a 2 byte hexadecimal, character, and octal value and view the contents in \"less\"","Bash":"od -xcb input_file_name | less"}
{"English":"change the permissions of all regular\/normal files in the current directory","Bash":"find . -type f | xargs chmod 664"}
{"English":"Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago","Bash":"find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}
{"English":"Find all hard links to file1 under \/home directory","Bash":"find \/home -xdev -samefile file1"}
{"English":"replaces the last occurrence of 'a' with 'c'","Bash":"tac infile.txt | sed \"s\/a\/c\/; ta ; b ; :a ; N ; ba\" | tac"}
{"English":"Find all *.ogg files under the home directory ignoring the case","Bash":"find $HOME -iname '*.ogg'"}
{"English":"replaces the last occurrence of 'a' with 'c' in file","Bash":"tac file | sed '\/a\/ {s\/\/c\/; :loop; n; b loop}' | tac"}
{"English":"Display a long listing of all regular files with 0777 permission under current directory tree","Bash":"find . -perm 0777 -type f -exec ls -l {} \\;"}
{"English":"Find all files\/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others","Bash":"find \/ -perm \/222"}
{"English":"Display differences between directories dir1 and dir2, treating absent files as empty.","Bash":"diff -Naur dir1\/ dir2\/"}
{"English":"Remove files from the home directory tree that were last accessed more than 100 days ago","Bash":"find ~ -atime +100 -delete"}
{"English":"find all files which name contain 'foo' and path is not dir1 or dir2","Bash":"find ! -path \"dir1\" ! -path \"dir2\" -name \"*foo*\""}
{"English":"Print the path to the pipe created for process substitution","Bash":"echo <(true)"}
{"English":"find the type & description of all the regular\/normal files in the home folder","Bash":"find \/home -type f -print0 | xargs -0 file"}
{"English":"Split standard input into files with at most 75 lines each","Bash":"split --lines=75"}
{"English":"Compare \"file1\" and \"file2\" line by line with 3 lines of unified context","Bash":"diff -u file1 file2"}
{"English":"create directory backup","Bash":"mkdir backup"}
{"English":"Subtract all columns in \"File2\" from \"File1\" except the first","Bash":"awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1 | rev | column -t | rev"}
{"English":"Create intermediate directories \"full\", \"path\" as required and directory \"to\"","Bash":"mkdir -p `dirname \/full\/path\/to\/file.txt`"}
{"English":"Find all regular files with name pattern $filename under $fileloc directory tree","Bash":"find \"$fileloc\" -type f -prune -name \"$filename\" -print"}
{"English":"Print the MD5 message digest of \"\/path\/to\/destination\/file\"","Bash":"md5sum \/path\/to\/destination\/file"}
{"English":"Print lines 347340107 through 347340206 in \"filename\"","Bash":"tail -n +347340107 filename | head -n 100"}
{"English":"Print the most repeated line in \"list2.txt\" that exists in \"list1.txt\" prefixed by the number of occurrences","Bash":"grep -Ff list1.txt list2.txt | sort | uniq -c | sort -n | tail -n1"}
{"English":"Copies file 'file.txt' to each top-level directory in the current directory.","Bash":"ls -d *\/ | xargs -iA cp file.txt A"}
{"English":"Print second field from semicolon-seprated line $string.","Bash":"echo $string | cut -d';' -f2"}
{"English":"Delete the oldest file with '.tgz' or '.gz' extension under '\/home\/backups' directory tree","Bash":"ls -tr $(find \/home\/backups -name '*.gz' -o -name '*.tgz')|head -1|xargs rm -f"}
{"English":"search for the files \"foo.txt\" in the current folder and rename it to foo.xml","Bash":"find -name foo.txt -execdir rename 's\/\\.txt$\/.xml\/' '{}' ';'"}
{"English":"Make sure the file \".bash_profile\" exists in current directory, update its timestamp to current date\/time.","Bash":"touch .bash_profile"}
{"English":"Removes all files from current folder but 5 newest ones, filtering out directories from initial search.","Bash":"ls -tp | grep -v '\/$' | tail -n +6 | xargs -d '\\n' rm --"}
{"English":"find not case sensitive all directories that names are 'apt' and display details","Bash":"find  \/ -type d -iname \"apt\" -ls"}
{"English":"Find files\/directories named 'file.txt' in the path '\/usr\/lib\/important\/'","Bash":"find \/ -path \/usr\/lib\/important\/*\/file.txt"}
{"English":"Grab the output of \"basename\" (the last slash-separated section of variable \"filename\") and echo it to stdout, which basename would do by default anyway.","Bash":"echo `basename \"$filename\"`"}
{"English":"Find all regular files under test directory","Bash":"find test -type f"}
{"English":"List all regular files in the current directory tree","Bash":"find . -type f | xargs ls -l"}
{"English":"Find files in the current directory tree whose names begin with \"file\" and whose size is 0, and remove them","Bash":"find -name 'file*' -size 0 -delete"}
{"English":"Remove the first 13 characters of each \".txt\" filename in the \"\/tmp\" directory tree and number the output","Bash":"find \/tmp -type f \\( -name '*.txt' \\) |cut -c14- | nl"}
{"English":"Recursively set all permissions under \"\/directory\" to 755","Bash":"chmod -R 755 \/directory"}
{"English":"search for regular files in the current folder which path is not  \".\/.*\" and not \".\/*\/.*\"","Bash":"find .\/ -type f -name \"*\" ! -path \".\/.*\" ! -path \".\/*\/.*\""}
{"English":"Split \"input.txt\" into files of at most 10 bytes each with prefix \"xxx\/split-file\"","Bash":"split -b 10 input.txt xxx\/split-file"}
{"English":"sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days","Bash":"find .  -name \"*.txt\" -type f -daystart -mtime -91 -mtime +2 | xargs cat | sort | uniq"}
{"English":"Find all files\/directories named 'test' under current directory tree","Bash":"find . -name test"}
{"English":"Find all hidden files","Bash":"find \/tmp -type f -name \".*\""}
{"English":"List all *.bak files in the current directory tree","Bash":"find  . -name '*.bak' -ls"}
{"English":"Find all regular files under and below \/somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files","Bash":"find \/somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0"}
{"English":"SSH login in 'middle.example.org' via port 2222 as user 'deviceuser' using a private key file '.\/device_id.pem'","Bash":"ssh -i .\/device_id.pem deviceuser@middle.example.org:2222"}
{"English":"Print out the full path name of \"mypathname\" with dots resolved","Bash":"readlink -ev mypathname"}
{"English":"Search all *.c files from the current directory tree for \"hogehoge\"","Bash":"find . -name \\*.c -print0 | xargs -0 grep hogehoge \/dev\/null"}
{"English":"display the long listing of all files in \/var\/log which were modified 60 days or more ago.","Bash":"find \/var\/log\/ -mtime +60 -type f -exec ls -l {} \\;"}
{"English":"Type unique list of all directories contiaining each file named 'myfile' under the \/home directory","Bash":"find \/home\/ -name 'myfile' -type f | rev | cut -d \"\/\" -f2- | rev | sort -u"}
{"English":"This will remove all files (type f) modified longer than 14 days ago under \/root\/Maildir\/ recursively from there and deeper (mindepth 1","Bash":"find \/root\/Maildir\/ -mindepth 1 -type f -mtime +14 | xargs rm"}
{"English":"Find the unique owners of all the files in the \/bin directory","Bash":"find \/bin -type f -follow | xargs    ls -al | awk ' NF==9 { print $3 }'|sort -u"}
{"English":"find all the text files in the file system and search only in the disk partition of the root.","Bash":"find \/ -mount -name \"*.txt\""}
{"English":"display a long listing of all the xls or csv files in the entire file system","Bash":"find \/ -type f \\( -name \"*.xls\" -o -name \"*.csv\" \\) -exec ls -l {} \\;"}
{"English":"Find all files\/directories named 'foo' under current directory tree without descending into directories named 'foo'","Bash":"find . -name foo -type d -prune -o -name foo"}
{"English":"Find all files\/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory","Bash":"find . -maxdepth 2 -name 'onlyme*'"}
{"English":"Find every directory under \"0001\" and make new directories replacing \"0001\" with \"0002\" at the beginning of their names.","Bash":"find 0001 -type d | sed 's\/^0001\/0002\/g' | xargs mkdir"}
{"English":"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory without descending into other partitions","Bash":"find \/ -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \\;"}
{"English":"Search the \/etc\/apache-perl directory tree for files newer than \/etc\/apache-perl\/httpd.conf","Bash":"find \/etc\/apache-perl -newer \/etc\/apache-perl\/httpd.conf"}
{"English":"Print file system disk space usage in 1 KiB blocks of the current directory's file system","Bash":"df -k ."}
{"English":"Delete all regular files named 'FindCommandExamples.txt' under current directory tree","Bash":"find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}
{"English":"List the full path of each directory in the current working directory","Bash":"tree -dfi -L 1 \"$(pwd)\""}
{"English":"Recursively copy \"dir_a\" to \"dir_b\" and delete any new files in \"dir_b\"","Bash":"rsync -u -r --delete dir_a dir_b"}
{"English":"Search for first match of the regex 're' in all *.coffee files under current directory","Bash":"find . -name \\*.coffee -exec awk '\/re\/ {print;exit}' {} \\;"}
{"English":"Find all empty files in the current directory and delete them","Bash":"find . -empty -maxdepth 1 -exec rm {} \\;"}
{"English":"Removes all empty folders under current path, aged between 'first' and 'last' timestamps.","Bash":"find . -newer first -not -newer last -type d -print0 |  xargs -0 rmdir"}
{"English":"Find all files under the current directory and copy their permissions to the same file in \"..\/version1\"","Bash":"find . -type f | xargs -I {} chmod --reference {} ..\/version1\/{}"}
{"English":"Print content of 'file' file reverted characterwise","Bash":"rev file"}
{"English":"Find all directories under current directory and change their permission to 700","Bash":"find . -type d -exec chmod 700 {} \\;"}
{"English":"display all files in the current directory excluding those that are present in the directories whose name starts with \"efence\" and do not search in the sub directories","Bash":"find * -maxdepth 0 -name \"efence*\" -prune -o -print"}
{"English":"find all the files in the current folder which have been modified in the last one day","Bash":"find . -daystart -mtime -1 -ls"}
{"English":"Uncomment every entry in current user's cron job list which contains \"test.sh\"","Bash":"crontab -l | sed '\/# *\\([^ ][^ ]*  *\\)\\{5\\}[^ ]*test\\.sh\/s\/^# *\/\/' | crontab -"}
{"English":"find all files in the current folder which have only the write permission for the others","Bash":"find . -perm -0002 -print"}
{"English":"Search the current directory tree for all regular non-hidden files except *.o","Bash":"find .\/ -type f -name \"*\" -not -name \"*.o\""}
{"English":"Change directory to the directory containing the \"oracle\" executable","Bash":"cd $(dirname $(which oracle))"}
{"English":"Delete all files beneath the current directory that begin with the letters 'Foo'.","Bash":"find . -type f -name \"Foo*\" -exec rm {} \\;"}
{"English":"Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list","Bash":"find \"$front_element\" -maxdepth 1 -type d -not -path \"$front_element\" -printf '%T@ %p\\n' | sort | awk '{print $2}'"}
{"English":"Print the basename from a colon separated path 'a:b:c:d:e'","Bash":"basename $(echo \"a:b:c:d:e\" | tr ':' '\/')"}
{"English":"Find all files in the \/etc folder that have been modified within the last 30 days and copy them to \/a\/path\/.","Bash":"find \/etc\/ -mtime -30 | xargs -0 cp \/a\/path"}
{"English":"Count the number of lines in \"testfile\" wrapped to fit in a width of \"$COLUMNS\" characters","Bash":"fold -w \"$COLUMNS\" testfile | wc -l"}
{"English":"Delete history entry at offset, defined in first argument of executed script","Bash":"history -d \"$1\""}
{"English":"Search the current directory tree for hidden files","Bash":"find .*"}
{"English":"display all the \".c\" files in the current folder excluding those that are present in all the sub directories","Bash":"find . \\( ! -name . -prune \\) -name \"*.c\" -print"}
{"English":"Print list of all user names who are logged in","Bash":"who | sed -e 's\/[ \\t].*\/\/g'"}
{"English":"Treat each line of \"list-of-entries.txt\" as a value to be put in one cell of the table that \"column\" outputs","Bash":"column list-of-entries.txt"}
{"English":"Find all .less files in the current directory tree","Bash":"find . -name *.less"}
{"English":"delete all the \"wmv\" \"wma\" files in the currnet folder,","Bash":"find . \\( -name '*.wmv' -o -name '*.wma' \\) -exec rm {} \\;"}
{"English":"Find all files\/directories that start with 'test' in their names under current directory tree","Bash":"find . -name 'test*'"}
{"English":"Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen\/window in characters.","Bash":"kill -s WINCH $$"}
{"English":"Set shell option 'checkwinsize'.","Bash":"shopt -s checkwinsize"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f -print0|xargs -0 ls -drt|tail -n 1"}
{"English":"Delete all files under $INTRANETDESTINATION\/monthly directory tree that were modified more than 366 days ago","Bash":"find $INTRANETDESTINATION\/monthly -mtime +366 -exec rm {} \\;"}
{"English":"find CSS files, omitting results containing \"CVS\"","Bash":"find . \\! -path \"*CVS*\" -type f -name \"*.css\""}
{"English":"Find all files\/directories under '\/etc' directory tree that have been modified after '\/etc\/motd'","Bash":"find \/etc -newer \/etc\/motd"}
{"English":"Find all regular non-hidden files in the current directory and its subdirectories","Bash":"find . -not -path '*\/\\.*' -type f \\( ! -iname \".*\" \\)"}
{"English":"Find all files\/directories named 'apt' in the entrie filesystem","Bash":"find  \/ -name \"apt\""}
{"English":"Print number of bytes in $file.","Bash":"cat $file | wc -c"}
{"English":"Find all files in \/home\/kos and below whose names end in \".tmp\"","Bash":"find \/home\/kos -name *.tmp -print"}
{"English":"Replace 'company' with 'newcompany' in all files under current directory","Bash":"find .\/ -type f -exec sed -i 's\/company\/newcompany\/' {} \\;"}
{"English":"List all *.png files\/directories under \/home\/kibab directory","Bash":"find \/home\/kibab -name '*.png' -exec echo '{}' ';'"}
{"English":"Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'","Bash":"cat myfiles_split.tgz_* | tar xz"}
{"English":"display top 11 files along with the last access date for all the files in the file system","Bash":"find \/ -type f -printf \"\\n%AD %AT %p\" | head -n 11"}
{"English":"Find all files\/directories in directories\/files taken from the glob pattern '\/tmp\/test\/*' that were modified within the last day (day counted from today)","Bash":"find \/tmp\/test\/* -daystart -mtime -1"}
{"English":"Write standard input to standard output and to \"foobar.txt\"","Bash":"tee foobar.txt"}
{"English":"find all c, cpp files in current folder","Bash":"find -regex '.*\\.\\(c\\|cpp\\)'"}
{"English":"search for the word bananas in the all the regular\/normal files in the entire file system","Bash":"find \/ -type f -exec grep bananas {} \\; -print"}
{"English":"Compose filepath as folder path where file $SRC is located, and lowercase filename of $SRC file, and save it in 'DST' variable","Bash":"DST=`dirname \"${SRC}\"`\/`basename \"${SRC}\" | tr '[A-Z]' '[a-z]'`"}
{"English":"display list of all the hidden files in the home folder","Bash":"find $HOME -name \".*\" -ls"}
{"English":"Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.","Bash":"find . -depth -name .svn -exec rm -fr {} \\;"}
{"English":"dispaly a long listig of all the files in the current folder which are bigger than 100KB","Bash":"find . -size +100000 -ls"}
{"English":"Format output of 'file' content to columns with wide not less than 80 pixels","Bash":"cat file | column -c 80"}
{"English":"Search the current directory tree for files modified less than 5 days ago","Bash":"find . -mtime -5"}
{"English":"Remove lines matching \"kpt#\" from \"data.txt\" and add left-justified line numbers","Bash":"grep -v 'kpt#' data.txt | nl -nln"}
{"English":"find all the files in the current directory which have been modified in the  last 6 days.","Bash":"find . -atime +6"}
{"English":"Search the current directory recursively for the largest files","Bash":"find . -type f -printf '%20s %p\\n' | sort -n | cut -b22- | tr '\\n' '\\000' | xargs -0 ls -laSr"}
{"English":"Remove files cart4, cart5, cart6 in directory ~\/junk","Bash":"find ~\/junk  -name 'cart[4-6]' -exec rm {}  \\;"}
{"English":"Recursively find the latest modified file in the current directory and print the modification time and filename","Bash":"find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\\n'| sort -n | tail -n1"}
{"English":"Find all files which belong to user lal and change their ownership to ravi","Bash":"find \/ -user lal -exec chown ravi {} \\;"}
{"English":"Add a line number to every line in \"long-file\"","Bash":"nl -ba long-file \\"}
{"English":"Find all directories whose name is root in \/ directory","Bash":"find \/ -type d -name root"}
{"English":"Find all *.p[lm] files under \/users\/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents","Bash":"find \/users\/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'"}
{"English":"Execute \"${MD5}\" on all files found under \"${1}\", numerically sort the results, and save to variable \"DATA\"","Bash":"DATA=$( find \"${1}\" -type f -exec ${MD5} {} ';' | sort -n )"}
{"English":"Find all *.txt files\/directories under your home directory","Bash":"find ~\/ -name '*.txt'"}
{"English":"Generates temporary file name with full path by template 'fifo.XXXXXX' and saves it to variable 'fifo_name'","Bash":"fifo_name=$(mktemp -u -t fifo.XXXXXX)"}
{"English":"List characters from standard input showing backslash escapes for non-displayables","Bash":"od -cvAnone -w1"}
{"English":"List all files that have not been read in thirty days or more","Bash":"find . -type f -atime +30 -print"}
{"English":"Return a list of files newer than file poop","Bash":"find . -mnewer poop"}
{"English":"Mount remote \"smbfs\" filesystem \"\/\/username@server\/share\" on \"\/users\/username\/smb\/share\" as soft","Bash":"mount -t smbfs -o soft \/\/username@server\/share \/users\/username\/smb\/share"}
{"English":"Find symlinks under and below the \"test\" directory and replace them with the content of the linked files","Bash":"find test -type l -exec cp {} {}.tmp$$ \\; -exec mv {}.tmp$$ {} \\;"}
{"English":"Search for all files in the \/home directory tree that have the same inode number","Bash":"find \/home -xdev -inum 2655341"}
{"English":"list any files modified since \/bin\/sh was last modified","Bash":"find . -newer \/bin\/sh"}
{"English":"Count all files under \"\/DIR\"","Bash":"find \/DIR -type f -print0 | tr -dc '\\0' | wc -c"}
{"English":"Rename \"Tux.png\" to \".Tux.png\"","Bash":"mv Tux.png .Tux.png"}
{"English":"See the word count of every *.txt file in the home directory","Bash":"find ~\/ -name '*.txt' -print0 | xargs -0 wc -w"}
{"English":"search for all files ending with \".mkv\" in current folder","Bash":"find \/volume1\/uploads -name \"*.mkv\""}
{"English":"Search the .VER files from the current directory tree for Perl regular expression \"Model-Manufacturer:.\\n.\"","Bash":"find . -name \"*.VER\" -exec grep -P 'Model-Manufacturer:.\\n.' '{}' ';' -print"}
{"English":"delete all the empty files in the current directory only if they are ok and the user has the permission to delete them","Bash":"find . -empty -ok rm {}\\;"}
{"English":"Show file type information for all regular files under '\/home' directory tree","Bash":"find \/home -type f -exec file {} \\;"}
{"English":"forcibly change owner to all files and directories in current directory to user www-data","Bash":"sudo chown -Rf www-data *"}
{"English":"Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension","Bash":"find . -type f | sed -e 's\/.*\\.\/\/' | sed -e 's\/.*\\\/\/\/' | sort | uniq -c | sort -rn"}
{"English":"find  files which full path name is \/tmpfoo\/bar under \/tmp\/foo directory and print","Bash":"find \/tmp\/foo -path \/tmp\/foo\/bar -print \/tmp\/foo\/bar"}
{"English":"Print the first line of output after alphabetically sorting the file \"set\"","Bash":"head -1 <(sort set)"}
{"English":"Search for environmental variables with \"HIST\" in their name or contents","Bash":"set | grep HIST"}
{"English":"Find all files in \/home\/user\/ that were created or changed 10 minutes ago","Bash":"find \/home\/user\/ -cmin 10 -print"}
{"English":"Count the number of files in the current directory and below","Bash":"find . -type d -exec basename {} \\; | wc \u2013l"}
{"English":"Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories","Bash":"find . -inum 211028 -exec mv {} newname.dir \\;"}
{"English":"Search for the string 'device' in all regular files in the entire filesystem","Bash":"find \/ -type f -print | xargs grep \"device\""}
{"English":"Remove files under current directory that contains white space in their name","Bash":"find . -name \"* *\" -exec rm -f {} \\;"}
{"English":"Print argument \"$1\" \"$number\" times","Bash":"yes $1 | head -$number"}
{"English":"Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.","Bash":"find \/ -type f -exec grep -l \"text-to-find-here\" {} \\;"}
{"English":"Move all directories from the `sourceDir' directory tree to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -type d  -print0 | xargs -0 mv --target-directory=destDir"}
{"English":"Read standard input until a null character is found and save the result in variable \"f2\"","Bash":"read -r -d $'\\0' f2"}
{"English":"Set 644 permission to all regular files under current directory","Bash":"chmod 644 `find -type f`"}
{"English":"Convert the first 16 characters in \"\/dev\/random\" to a single hexadecimal value","Bash":"head \/dev\/random -c16 | od -tx1 -w16 | head -n1 | cut -d' ' -f2- | tr -d ' '"}
{"English":"List all .c and .h files in the current directory tree that contain \"thing\"","Bash":"find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"}
{"English":"recursively change owner of the directory ~\/.npm to the current user","Bash":"sudo chown -R $(whoami) ~\/.npm"}
{"English":"Create a compressed archive from \"www\" and split the contents into files of at most 1073741824 bytes and use prefix \"www-backup.tar.\"","Bash":"tar czf - www|split -b 1073741824 - www-backup.tar."}
{"English":"display all the c files and the header files in the path \/some\/dir and do not search in sub directories","Bash":"find \/some\/dir -maxdepth 1 \\( -name '*.c' -o -name '*.h' \\) -print"}
{"English":"Prints list of folders containing '.git', searching recursively from a current folder.","Bash":"find . -name '.git' | xargs -n 1 dirname"}
{"English":"Recursively print all files and directories in the current directory tree","Bash":"tree ."}
{"English":"Generate a random 32 ASCII character password from \/dev\/urandom and save it to variable 'pass'","Bash":"pass=$(LC_CTYPE=C < \/dev\/urandom tr -cd [:graph:] | tr -d '\\n' | fold -w 32 | head -n 1)"}
{"English":"Find all files in the current directory tree and count them","Bash":"find | wc -l"}
{"English":"search in the current folder for the file with the name \"test\" ( case insensitive search )","Bash":"find . -iname test"}
{"English":"List the largest file in long list format of all the files under the current directory","Bash":"find . -type f -ls | sort -nrk7 | head -1 #unformatted"}
{"English":"Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames","Bash":"find . -name * | xargs grep -iH \"string\""}
{"English":"Find all 400 permission files under \/data directory and print 'Modifying ' appended with file path for each of them","Bash":"find \/data -type f -perm 400 -exec echo Modifying {} \\;"}
{"English":"search for a word in all the files in the current directory (case insensitive search)","Bash":"find . -type f -exec grep 'needle' {} \\;"}
{"English":"Find all files under \/path\/to\/base\/dir and change their permission to 644","Bash":"find \/path\/to\/base\/dir -type f -print0 | xargs -0 chmod 644"}
{"English":"Gets MAC addresses of all IP4 network interfaces.","Bash":"ifconfig -a | awk '\/^[a-z]\/ { iface=$1; mac=$NF; next } \/inet addr:\/ { print mac }' | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'"}
{"English":"Display permissions, user, group, and full path for each file in the current directory tree as a list","Bash":"tree -p -u -g -f -i"}
{"English":"Search the system for files and directories owned by user `admin'","Bash":"find \/ -user admin -print"}
{"English":"Replaces any occurences of '*favicon.ico*' in any subfolder with file '\/root\/favicon.ico'.","Bash":"find . | grep favicon\\.ico | xargs -n 1 cp -f \/root\/favicon.ico"}
{"English":"Print the names and sizes of regular files residing in the \"tmp\" directory tree","Bash":"find tmp -type f -printf \"f %s %p\\n\" | awk '{sub(\/^[^ ]+ +[^ ]\/,sprintf(\"%s %10d\",$1,$2))}1'"}
{"English":"find all the word press configuration php files in the folder \/var\/www and do not search beyond two levels","Bash":"find \/var\/www\/ -name wp-config.php -maxdepth 2"}
{"English":"Print unique lines in sorted \"file1\" compared to sorted file \"file2\"","Bash":"comm -23 file1 file2"}
{"English":"Print the first 2 lines of tree's help message by redirecting it from standard error to standard output","Bash":"tree --help |& head -n2"}
{"English":"Modify and rewrite 'file' replacing all instances of \"foo\" with \"bar\"","Bash":"sed -i 's\/foo\/bar\/g' file"}
{"English":"Change to folder where the oracle binary is.","Bash":"cd $(dirname $(which oracle))"}
{"English":"unsafed rm all file which name start with '#'","Bash":"find \/ -name '#*' -atime +7 -print | xargs rm"}
{"English":"Attempt to connect as root via ssh to host \"IP\" and copy \/root\/K to local machine, passing option \"StrictHostKeyChecking=no\" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.","Bash":"scp -o StrictHostKeyChecking=no root@IP:\/root\/K"}
{"English":"Find all *.ps files under $STARTDIR","Bash":"find $STARTDIR -name '*.ps' -print"}
{"English":"find all the backup files in the current folder and delete them","Bash":"find . -type f -name \u201cFILE-TO-FIND\u201d -delete;"}
{"English":"Set variable \"extract_dir\" to list of top-level directories and files contained in tar archive specified by variable FILE.","Bash":"extract_dir=$(tar -tf $FILE | cut -d\/ -f1 | uniq)"}
{"English":"Sort strings of 'test.txt' file by second from the end field","Bash":"rev   test.txt | sort  -k2 | rev"}
{"English":"Find only files under \/etc with the size of 100k-150k","Bash":"find \/etc -size +100k -size -150k"}
{"English":"Find files larger than 50k","Bash":"find . -size +50k"}
{"English":"Print appended data in \"file\" that match \"my_pattern\"","Bash":"tail -f file | grep --line-buffered my_pattern"}
{"English":"Remove any file containing string \"GUI\"","Bash":"find \/ -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f"}
{"English":"find all the files ending with \".coffee\" in the current folder and search for the words \"re\" in each line","Bash":"find . -name \\*.coffee -exec grep -m1 -i 're' {} \\;"}
{"English":"find all the php files","Bash":"find -name '*.php'"}
{"English":"Join columns in \"file1\" and \"file2\" if their first field matches and format the output as a table","Bash":"join file1 file2 | column -t"}
{"English":"display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins","Bash":"find . -prune -name \"*.dat\"  -type f -cmin +60 |xargs -i basename {} \\;"}
{"English":"change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner","Bash":"find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner"}
{"English":"Archive \"\/home\/abc\/*\" to \"\/mnt\/windowsabc\" with human readable output","Bash":"rsync -avh \/home\/abc\/* \/mnt\/windowsabc"}
{"English":"Search for line 111 in file \"active_record.rb\" with 2 lines of context","Bash":"nl -ba  -nln  active_record.rb  | grep -C 2 '^111 '"}
{"English":"Find all files named \"file.ext\" in the current directory tree and print the path names of the directories they are in","Bash":"find . -name \"file.ext\" -execdir pwd ';'"}
{"English":"display all the files  in the current folder which have colon in their name","Bash":"find . -name \"*:*\""}
{"English":"split content of the file inputfile except lines started with \"^t:\" into pieces per 200 lines","Bash":"cat inputfile | grep \"^t\\:\" | split -l 200"}
{"English":"Search the files from directory tree \"dirname\" for string \"foo\"","Bash":"find dirname -exec grep foo {} +"}
{"English":"Find all files on the system that are larger than 600 MB","Bash":"find \/ -size +600M -print"}
{"English":"change the permission of all the rpm files in the entire file system to 755","Bash":"find \/ -name *.rpm -exec chmod 755 '{}' \\;"}
{"English":"Identify CMS version\/releases accross all your PHPBB installations","Bash":"find \/home\/*\/public_html\/ -type f -wholename *includes\/constants.php -exec grep -H \"PHPBB_VERSION\" {} \\;"}
{"English":"Search the .sh files in the current directory tree for string \"ksh\"","Bash":"find . -name \"*.sh\" | xargs grep \"ksh\""}
{"English":"list all javascipts file which whole name does not contain excludeddir","Bash":"find . -name '*.js' | grep -v excludeddir"}
{"English":"Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\\S+ )*\\S+', and saves them in $match variable, each matched part on a separate line.","Bash":"match=$(echo \"${line}\" | egrep -o 'run-parts (-{1,2}\\S+ )*\\S+')"}
{"English":"list broken symbolic links under \"somedir\"","Bash":"find \"somedir\" -type l -print0 | xargs -r0 file | grep \"broken symbolic\" | sed -e 's\/^\\|: *broken symbolic.*$\/\"\/g'"}
{"English":"Remove from the current directory tree all the regular files which have a dot in their names and contain string \"<img-name>-<width:integer>x<height:integer>.<file-ext> syntax\"","Bash":"find . -name \"*.*\" -type f -exec grep -l '<img-name>-<width:integer>x<height:integer>.<file-ext> syntax' {} \\; | xargs rm -f"}
{"English":"Check if \"\\[$VLABEL\\]\" is mounted and save the result in variable \"AMV\"","Bash":"AMV=$(mount -l | grep \"\\[$VLABEL\\]\")"}
{"English":"Find every file under the directory \/home owned by the user joe.","Bash":"find \/home -user joe"}
{"English":"Add \"prefix\" to every non-blank line in \"file.txt\"","Bash":"nl -s prefix file.txt | cut -c7-"}
{"English":"List each unique character in \"file\" prefixed by number of occurrences","Bash":"grep -o . file | sort | uniq -c"}
{"English":"Find all files\/directories under \/myfiles following symlinks if needed","Bash":"find -L \/myfiles"}
{"English":"Remove all files in the \/myfiles directory tree that were accessed at least 30 days ago","Bash":"find \/myfiles -atime +30 -exec rm {} ;"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f | sed 's\/.*\/\"&\"\/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1"}
{"English":"Search the current directory tree for regular files that contain \"string\"","Bash":"find . -type f -print0 | xargs -0 grep string"}
{"English":"Print a list of all duplicate case insensitive file paths in the current directory tree","Bash":"find . | sort -f | uniq -i -d"}
{"English":"Copy all files in current directory that do not match *\/not-from-here\/* in their names to \/dest","Bash":"find . -type f -not -iname '*\/not-from-here\/*' -exec cp '{}' '\/dest\/{}' ';'"}
{"English":"search for all the regular files that have been changed in the last 48 hours and sync these to another folder","Bash":"find \/my\/source\/directory -ctime -2 -type f -printf \"%P\\n\" | xargs -IFILE rsync -avR \/my\/.\/source\/directory\/FILE \/my\/dest\/directory\/"}
{"English":"Recursively change the group ownership to \"laravel\" in \".\/storage\"","Bash":"sudo chown -R :laravel .\/storage"}
{"English":"Use 'less' to nicely display control characters from the outupt of 'grep'.","Bash":"grep -b -o $'\\x0c' filename | less"}
{"English":"Recursively copies everything from '\/source\/path\/*' to the '\/destination\/path\/', preserving from overwriting existing files, and printing info message on each operation.","Bash":"cp -Rvn \/source\/path\/* \/destination\/path\/"}
{"English":"Find all files under \/home\/myfolder that match the regex 'abc.*def.*ghi' in their contents","Bash":"find \/home\/myfolder -type f -print0 | xargs -0 grep -l -E 'abc.*def.*ghi'"}
{"English":"Recursively set all permissions under \"\/opt\/lampp\/htdocs\" to 755","Bash":"sudo chmod 755 -R \/opt\/lampp\/htdocs"}
{"English":"Print IP addresses of the current host","Bash":"hostname -I|cut -d\" \" -f 1"}
{"English":"find all directories that names are 'project.images' and display details","Bash":"find  \/ -type d -name \"project.images\" -ls"}
{"English":"Move all files and directories in the current directory to \"somewhere\/\"","Bash":"mv `ls` somewhere\/"}
{"English":"Calculate md5 sum of empty string","Bash":"echo -n \"\" | md5sum"}
{"English":"find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.","Bash":"find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"}
{"English":"kill group leader","Bash":"kill `jobs -lp`"}
{"English":"search for files which are writable by either their owner or their group","Bash":"find . -perm \/220"}
{"English":"Search the current directory tree for regular .mkv files","Bash":"find . -type f -name \"*.mkv\""}
{"English":"Removes all files from current folder but 5 newest ones.","Bash":"find . -maxdepth 1 -type f -printf '%T@ %p\\0' | sort -r -z -n | awk 'BEGIN { RS=\"\\0\"; ORS=\"\\0\"; FS=\"\" } NR > 5 { sub(\"^[0-9]*(.[0-9]*)? \", \"\"); print }' | xargs -0 rm -f"}
{"English":"Print working directory separated by newlines instead of forward slashes","Bash":"pwd | tr '\/' '\\n'"}
{"English":"Recursively removes all files like '*.pyc' in a current folder.","Bash":"find . -name '*.pyc' -print0 | xargs -0 rm"}
{"English":"View the man page of find","Bash":"man find"}
{"English":"Set timestamp of old_file.dat to specified timestamp.","Bash":"touch -t 200510071138 old_file.dat"}
{"English":"Saves logged in users names in 'tmp' variable.","Bash":"tmp=$(w | awk '{print $1}')"}
{"English":"Silently read a single character into variable \"REPLY\"","Bash":"read -n1 -s"}
{"English":"Print a list of JPG files residing in the current directory tree","Bash":"find . -name \u201c*.jpg\u201d"}
{"English":"Find all files recursively starting from \/ that have been modified in the past 30 minutes and list them","Bash":"find \/ -mmin -30 -ls"}
{"English":"Reports count of characters in the value of ${FOO_NO_EXTERNAL_SPACE} variable as follows:  \"length(FOO_NO_EXTERNAL_SPACE)==<counted number of characters>\"","Bash":"echo -e \"length(FOO_NO_EXTERNAL_SPACE)==$(echo -ne \"${FOO_NO_EXTERNAL_SPACE}\" | wc -m)\""}
{"English":"To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:","Bash":"find .  -maxdepth 1 -type d -iname \".[^.]*\" -print0 | xargs -I {} -0 rm -rvf \"{}\""}
{"English":"Make directory \"foo\" and do not cause an error if it exists","Bash":"mkdir -p foo"}
{"English":"Forcibly removes all files like '*.bak' and '*~'","Bash":"rm -f *.bak *~"}
{"English":"Remove all empty directories under the current directory and below","Bash":"find .\/ -type d -size 0c -print | xargs rmdir"}
{"English":"Find all  'custlist*' files under current directory","Bash":"find . -name custlist\\*"}
{"English":"Find all directories under dir whose names are 33 characters long","Bash":"find dir -name '?????????????????????????????????'"}
{"English":"Counts number of processors and saves in variable NUMCPU.","Bash":"NUMCPU=$(grep $'^processor\\t*:' \/proc\/cpuinfo |wc -l)"}
{"English":"Push the current directory path to the dirs stack","Bash":"pushd `pwd`"}
{"English":"Strips two last sections from the path $pathname, and prints basename of the rest part.","Bash":"echo $(basename $(dirname $(dirname $pathname)))"}
{"English":"Split the output of \"tar [your params]\" into files of at most 500 MiB in size and use prefix \"output_prefix\"","Bash":"tar [your params] |split -b 500m - output_prefix"}
{"English":"Find files on the system modified more than 90 minutes ago","Bash":"find \/ -mmin +90"}
{"English":"Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with \"no-match\", and output the second field from standard input and the second and third field from file1.txt","Bash":"join -t, -o 1.2,2.2,2.3 -a 1 -e 'no-match' - <(sort file1.txt)"}
{"English":"find all the files that are modified in the last 1 day","Bash":"find -mtime +0 -mtime -1"}
{"English":"Find files named core in or below the directory \/tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.","Bash":"find \/tmp -name core -type f -print | xargs \/bin\/rm -f"}
{"English":"Execute awk script \"script.awk\" that exists in \"$PATH\" with argument \"arg1\"","Bash":"awk -f `which script.awk` arg1"}
{"English":"Execute \"ls -l\" every 0.5 seconds","Bash":"watch -n 0.5 ls -l"}
{"English":"Search for \"ifconfig\" in the output of \"history\" and print 5 lines that precede and follow","Bash":"history | grep -C 5 ifconfig"}
{"English":"Prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself.","Bash":"echo \"$(dirname $(readlink -e $F))\/$(basename $F)\""}
{"English":"Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory","Bash":"find \"$musicdir\" -type f -print | egrep -i '\\.(mp3|aif*|m4p|wav|flac)$'"}
{"English":"Search directory trees \/usr\/share\/doc, \/usr\/doc, and \/usr\/locale\/doc for files named 'instr.txt'","Bash":"find \/usr\/share\/doc \/usr\/doc \/usr\/locale\/doc -name instr.txt"}
{"English":"Rename all .png files, changing the string \"_h.png\" into \"_half.png\".","Bash":"rename 's\/_h.png\/_half.png\/' *.png"}
{"English":"Display all files in a folder","Bash":"find \/usr\/X11\/man\/man5 -print"}
{"English":"Print the names of all the files from directory tree ~\/some\/directory whose names end in \"rb\"","Bash":"find ~\/some\/directory -name \"*rb\" -exec basename {} \\;"}
{"English":"Print input \"your, text, here\" formatted to fit 70 characters per line breaking at spaces","Bash":"echo 'your, text, here' | fold -sw 70"}
{"English":"Print out the names and types of all files in the current directory tree","Bash":"find . -printf \"%y %p\\n\""}
{"English":"Count the number of files named 'job.history' under '\/data\/SpoolIn' directory tree that match 'FAIL' in their contents","Bash":"find \/data\/SpoolIn -name job.history -exec grep -l FAIL {} \\; | wc -l"}
{"English":"find all the core files in the temp folder and force delete them","Bash":"find \/tmp -name core -type f -print | xargs \/bin\/rm -f"}
{"English":"Report file system containing path to the current working directory inodes usage.","Bash":"df -i $PWD"}
{"English":"search for the file centos in \/usr folder ( case insenstive search )","Bash":"find \/usr -iname centos"}
{"English":"Replace all spaces with underscores in directory names under current directory.","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename 's\/ \/_\/g' \"{}\" \\;"}
{"English":"Search the \"test1\" directory recursively for regular files named \"textfile.txt\"","Bash":"find test1 -type f -name 'textfile.txt' -print"}
{"English":"display all the regular files in current folder","Bash":"find . -type f"}
{"English":"Run 'otherscript.sh' script with all environment variables specified in the file 'xxxx'","Bash":"env `cat xxxx` otherscript.sh"}
{"English":"download contents from \"https:\/\/raw.github.com\/creationix\/nvm\/master\/install.sh\" and execute","Bash":"curl https:\/\/raw.github.com\/creationix\/nvm\/master\/install.sh | sh"}
{"English":"Locate all the hard links of file `passwd'","Bash":"find \/ -samefile passwd"}
{"English":"Find all SUID set files","Bash":"find \/ -perm \/u=s"}
{"English":"find all directories in the current directory which have the name foo and do not have the extension \"bar\"","Bash":"find . -name '*foo*' ! -name '*.bar' -type d -print"}
{"English":"Find all files you have modified in the last two days","Bash":"find ~ -type f -mtime -2"}
{"English":"Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.","Bash":"find ~\/ -type f -exec grep -H 'text-to-find-here' {} \\;"}
{"English":"Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them","Bash":"find . -perm 0644 | head"}
{"English":"Read hexadecimal bytes from device \"\/dev\/midi1\"","Bash":"od -vtx1 \/dev\/midi1"}
{"English":"Create all directories in the path specified by variable $javaUsrLib as super user","Bash":"sudo mkdir -p $javaUsrLib"}
{"English":"Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.","Bash":"find . -perm 040 -type f -exec ls -l {} \\;"}
{"English":"display list of all the files in the current directory (print0 handles file names with newlines or spaces)","Bash":"find -print0 | xargs -0 ls"}
{"English":"Search the current directory tree for files and directories whose names do not end in \"exe\" and \"dll\"","Bash":"find . | grep -v '(dll|exe)$'"}
{"English":"find all the files in the entire file system that have been modified exactly 7 days before which end with \"conf\"","Bash":"find \/ -name \"*conf\" -mtime 7"}
{"English":"display all the files in the current folder","Bash":"find . | xargs echo"}
{"English":"Search in current directory downwards all files whose owner is aa1 and grop is grp .","Bash":"find .  \\( -user aa1 - group grp \\) -print"}
{"English":"Find all regular files whose names contain \"@\" in directory tree ~\/$folder","Bash":"find ~\/$folder -name \"*@*\" -type f -print0"}
{"English":"Find all files\/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others","Bash":"find \/ -perm \/a+w"}
{"English":"Read a single character from standard input with prompt \"Is this a good question (y\/n)? \" and timeout of 3 seconds and save the response to variable \"answer\"","Bash":"read -t 3 -n 1 -p \"Is this a good question (y\/n)? \" answer"}
{"English":"Delete all files with '.old' extension under current directory tree","Bash":"find . -name \u201c*.old\u201d -print | xargs rm"}
{"English":"Search for files only that end with .php and look for the string $test inside those files","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\;"}
{"English":"Find all directories named CVS, and deletes them and their contents.","Bash":"find . -type d -name CVS -exec rm -r {} \\;"}
{"English":"Find all files\/directories in entire file system that have  \"write\" bit set for either the owner, the group, or others","Bash":"find \/ -perm \/u+w,g+w,o+w"}
{"English":"Print all lines in file that do not match \"pattern\"","Bash":"sed -n '\/pattern\/!p' file"}
{"English":"Recursively copy all directories in \"\/path\/to\/source\" to \"\/path\/to\/dest\/\" preserving directory hierarchy","Bash":"find \/path\/to\/source -type d | cpio -pd \/path\/to\/dest\/"}
{"English":"delete all the empty in the current folder do not search in sub directories","Bash":"find . -maxdepth 1 -type d -empty -exec rm {} \\;"}
{"English":"List the 10 largest files or directories and their sizes under (and including) \"\/var\"","Bash":"du -a \/var | sort -n -r | head -n 10"}
{"English":"Prints random line from file $FILE.","Bash":"sort --random-sort $FILE | head -n 1"}
{"English":"Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago","Bash":"find \/home\/u20806\/public_html -maxdepth 1 -mmin +5 -type f -name \"*.txt\" ! -name \"robots.txt\" -delete"}
{"English":"Recursively copy all regular files below current directory to directory \/tmp on hostname, connecting as ssh user matching current username on local host.","Bash":"find . -type f -exec scp {} hostname:\/tmp\/{} \\;"}
{"English":"Search the current directory tree for files whose names end in \"rb\" or \"js\"","Bash":"find . -regextype posix-egrep -regex \".*(rb|js)$\""}
{"English":"Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.","Bash":"find . -perm -g=r -type f -exec ls -l {} \\;"}
{"English":"find all the directories  with the name \"c\" in the current folder which are at least 3 levels deep and which are not present in the path \"\/p\/\".","Bash":"find -mindepth 3 -type d ! -path '*\/p\/*' -name c -print"}
{"English":"find files which do not have all permissions to all the users in the current directory","Bash":"find . -type f ! -perm 777 | head"}
{"English":"Save the current working directory and the directory name of the current script to variable \"DIR\"","Bash":"DIR=`pwd`\/`dirname $0`"}
{"English":"Split \"randn20M.csv\" into files of at most 5000000 lines each with prefix \"_tmp\"","Bash":"split -l5000000 randn20M.csv '_tmp';"}
{"English":"delete a hard link and create a symbolic link to file named \"$link\"","Bash":"ln -sf \"$(readlink -f \"$link\")\" \"$link\""}
{"English":"find all foo.bar files in the entire file system and which are present in the same partition as root.","Bash":"find \/ -name foo.bar -print -xdev"}
{"English":"Find any file that has \"disc\" somewhere in its name in the current directory and all of its sub-directories.","Bash":"find . -name *disc*"}
{"English":"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"","Bash":"find . -iname .svn -print | xargs rm -rf"}
{"English":"sleep for 1 second","Bash":"sleep 1"}
{"English":"Find all 400 permission files under \/data directory and change their permission to 755","Bash":"find \/data -type f -perm 400 -print | xargs chmod 755"}
{"English":"Print your\/dir if it's empty","Bash":"find \"your\/dir\" -prune -empty"}
{"English":"Copy \"src\/prog.js\" and \"images\/icon.jpg\" to \"\/tmp\/package\" keeping relative path names","Bash":"rsync -R src\/prog.js images\/icon.jpg \/tmp\/package"}
{"English":"find all regular files which have been modified in the last 48 hours in home folder","Bash":"find ~ -type f -mtime -2"}
{"English":"display all files in the current folder with the name test excluding those that are present folder test","Bash":"find . -name test -prune -o -print"}
{"English":"Print the name of \"file1\" if this file is newer than \"file2\"","Bash":"find file1 -prune -newer file2"}
{"English":"Make directories \"project\/{lib\/ext,bin,src,doc\/{html,info,pdf},demo\/stat\/a}\" as needed and do not cause an error if it exists","Bash":"mkdir -p project\/{lib\/ext,bin,src,doc\/{html,info,pdf},demo\/stat\/a}"}
{"English":"Extract protocol and host name from URL.","Bash":"echo \"$url\" | cut -d'\/' -f1-3"}
{"English":"Make DNS lookup requests for domain list in file '\/path\/to\/host-list.txt'","Bash":"dig -f \/path\/to\/host-list.txt"}
{"English":"print the names of all of the unstripped binaries in the \/usr\/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable","Bash":"find \/usr\/local -type f -perm \/a=x | xargs file |  grep 'not stripped' | cut -d: -f1"}
{"English":"Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file","Bash":"find . -name \\*.sql -not -samefile $oldest_to_keep -not -newer $oldest_to_keep"}
{"English":"search for the word \"slrn\" in all the files in the folder $HOME\/html\/andrews-corner","Bash":"find $HOME\/html\/andrews-corner -exec grep -q 'slrn' '{}' \\; -print"}
{"English":"find all the files in the current folder which have the name net or comm in them","Bash":"find . -regex '.*\\(net\\|comm\\).*'"}
{"English":"Recursively finds strings like \"texthere\"  in all \"*.txt\" files of a current folder.","Bash":"grep -r --include \"*.txt\" texthere ."}
{"English":"Find all files, folders, symlinks, etc matching pattern \"*.php\" in the current directory recursively","Bash":"find . -name \\*.php"}
{"English":"display all scala files in the directory \"src\/main\"","Bash":"find . -type f -path \"*src\/main\/*\\.scala\""}
{"English":"Change the ownership of \"\/home\/bob\" to \"root\"","Bash":"sudo chown root \/home\/bob"}
{"English":"Find all files under current directory and search for 'something' in those files","Bash":"find . -print | xargs grep something"}
{"English":"keep only read access to all the files in a directory.","Bash":"find \/path\/to\/dir ! -perm 0644 -exec chmod 0644 {} \\;"}
{"English":"Read one character from standard input into variable 'c'","Bash":"read -n 1 c"}
{"English":"Move all *.mp4 files from directory \/foo\/bar and its subdirectories to \/some\/path","Bash":"find \/foo\/bar -name '*.mp4' -print0 | xargs -0 mv -t \/some\/path {}"}
{"English":"Format file \"list-of-entries.txt\" with no column delimiter","Bash":"column -t -s '' list-of-entries.txt"}
{"English":"Find all files\/directories with 755 permission under current directory tree","Bash":"find .\/ -perm 755"}
{"English":"Delete all files and directories","Bash":"find -delete"}
{"English":"Print the current default full path of the \"java\" executable","Bash":"echo \"The current default java is $(readlink --canonicalize `which java`)\""}
{"English":"Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*","Bash":"find \"$root\" -name \".[a-z]*\" -prune -o -type d -printf '%p:'"}
{"English":"Search for the regex '^ERROR' in all *.log files under current directory","Bash":"find . -name \"*.log\" -exec egrep -l '^ERROR' {} \\;"}
{"English":"Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: \"length(FOO_NO_LEAD_SPACE)==<counted number of characters>\"","Bash":"echo -e \"length(FOO_NO_LEAD_SPACE)==$(echo -ne \"${FOO_NO_LEAD_SPACE}\" | wc -m)\""}
{"English":"List all files and sub directories including hidden files in the current directory tree","Bash":"tree -af"}
{"English":"Attempt to connect as root via ssh to host whose IP address or hostname is specified by environment variable IPADDRESS - this will normally fail because ssh servers normally don't accept root logins.","Bash":"scp -rp \"DAILY_TEST_FOLDER\" \"root@${IPADDRESS}:\/home\/root\/\""}
{"English":"Change permissions to 500 for all regular files under and below the current directory","Bash":"find . -type f -exec chmod 500 {} ';'"}
{"English":"search for *.log files starting from \/ (root) and only in the current file system","Bash":"find \/ -xdev -name \"*.log\""}
{"English":"display all the java script files in a folder","Bash":"find src\/js -name '*.js'"}
{"English":"Save the user name of the current user to variable \"x\"","Bash":"x=$(whoami)"}
{"English":"Make directories and parents as needed for each unique second \"&\" delimited field with \" \", \",\", and \":\" removed in \"filetypes.txt\"","Bash":"mkdir -p `cut -f2 -d\"&\" filetypes.txt | sed 's\/[ ,:]\/\/g' | sort -u`"}
{"English":"Search the file system for regular files whose names are shorter than 25 characters","Bash":"find \/ -type f | egrep '.*\/.{1,24}$'"}
{"English":"Change directory to the user's home directory","Bash":"cd"}
{"English":"remove all the files in the current folder which have not been modified in the last 10 days","Bash":"find . -mtime +10 | xargs rm"}
{"English":"Search for the regex ... in the manual of the find command","Bash":"man find | grep ..."}
{"English":"display all the files in the file system which belong to the user with the id 1005","Bash":"find \/ -uid 1005"}
{"English":"Find all the files\/directories under user's home directory that do not belong to the user $USER","Bash":"find ~ ! -user ${USER}"}
{"English":"Copy the directory hierarchy from \"original\" to \"new\"","Bash":"find original -type d -exec mkdir new\/{} \\;"}
{"English":"Search \"inputfile\" for lines starting with \"t:\" and group the results in files with at most 200 lines each","Bash":"cat inputfile | grep \"^t\\:\" | split -l 200"}
{"English":"Find all files with the name \"MyProgram.c\" in the current directory and its sub-directories while ignoring the case of the file name.","Bash":"find -iname \"MyCProgram.c\""}
{"English":"Find all files\/directories under .. directory and copy them to ~\/foo\/bar","Bash":"find .. -exec cp -t ~\/foo\/bar -- {} +"}
{"English":"display long list of all the files in the folder \/home\/peter which belong to no user and change the owner,group of all these files (after user confirmation) to \"peter\",\"peter\"","Bash":"find \/home\/peter -nouser -exec ls -l {} \\; -ok chown peter.peter {} \\;"}
{"English":"display all the regular files in current folder excluding all the directories and all the sub directories having \"normal\" in their name","Bash":"find . \\( \\( -path \"\\.?.*\" -type d \\) -o -path \"*normal*\" \\) -prune -o \\( -type f \\) -print"}
{"English":"display all the text files in the home folder","Bash":"find \/home -name \"*.txt\""}
{"English":"List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.","Bash":"find . -perm \/111 -type f | sed 's#^.\/##' | sort | diff -u .gitignore -"}
{"English":"Go to directory \/cygdrive\/c\/Program Files (x86) using quotes to escape special characters","Bash":"cd \"\/cygdrive\/c\/Program Files (x86)\""}
{"English":"Find all hidden regular files starting from the current directory","Bash":"find . -type f -name \".*\""}
{"English":"display all the files ending with \".user\" in \/var\/adm\/logs\/morelogs\/ and excluding all regular files","Bash":"find \/var\/adm\/logs\/morelogs\/* -type f -prune -name \"*.user\" -print"}
{"English":"search for the file \"myletter.doc\" in the home folder","Bash":"find ~ -name myletter.doc -print"}
{"English":"Search the directories given as arguments to the Bash script for files whose name is not \"ss\"","Bash":"find $@ -not -name ss"}
{"English":"find *.gif files under the currently directory and sub-directories and list them using the ls command","Bash":"find . -name *.gif -exec ls {} \\;"}
{"English":"find all the files in the entire file system that start with the word top and have 3 letters next to it.","Bash":"find \/ -name 'top???'"}
{"English":"find all the regular\/normal files in the current folder and rename them to html files","Bash":"find main-directory -type f -exec mv -v '{}' '{}'.html \\;"}
{"English":"Find all *blue* files\/directories under \/myfiles","Bash":"find \/myfiles -name '*blue*'"}
{"English":"Search the current directory tree for regular files that were accessed $FTIME days ago","Bash":"find . -type f -atime $FTIME"}
{"English":"List regular files in current directory with read, write and execute permission for all users and also show the permissions","Bash":"find . -type f  -perm a=rwx -exec ls -l {} \\;"}
{"English":"display all the files in the current folder","Bash":"find ."}
{"English":"Find all files whose owner is `user1'","Bash":"find \/ -user user1"}
{"English":"unzip and search for a word in all the jar files in the current folder and display the matched file name","Bash":"find . -iname '*.jar' -printf \"unzip -c %p | grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\\n\" | sh"}
{"English":"Forcibly create symbolic links in target directory \"~\/staging\" for all files located in directory \"~\/mirror\"","Bash":"ln --force --target-directory=~\/staging ~\/mirror\/*"}
{"English":"find all the files in the current folder which have a set uid set","Bash":"find . -perm -4000 -print"}
{"English":"Find all .txt files in the \/home\/user1 directory tree and copy them to \/home\/backup","Bash":"find \/home\/user1 -name '*.txt' | xargs cp -av --target-directory=\/home\/backup\/ --parents"}
{"English":"Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names","Bash":"find ${DIRECTORY} -type f -print | sed -e 's@^.*\/@@' | grep '[aeiouyAEIOUY]' | wc -l"}
{"English":"find all the regular\/normal files in the \/path folder and delete them","Bash":"find \/path -type f -delete"}
{"English":"Print received input to the terminal","Bash":"tee"}
{"English":"Print the paths of the directories from the paths expanded by the glob pattern \/path\/to\/directory\/*","Bash":"find \/path\/to\/directory\/* -maxdepth 0 -type d"}
{"English":"Append the current date to variable 'LBUFFER'","Bash":"LBUFFER+=\"$(date)\""}
{"English":"Split \"system.log\" into files of at most 10 MiB in size with a numeric suffix and prefix \"system_split.log\"","Bash":"split -b 10M -d  system.log system_split.log"}
{"English":"Print lines in the sorted contents of \"file1\" that are not in the sorted contents of \"file2\"","Bash":"comm -23 <(sort file1) <(sort file2)"}
{"English":"Save the user name in all capitals of the current user to variable \"v\"","Bash":"v=$(whoami | awk '{print toupper($0)}')"}
{"English":"Delete in the background all files in \/var\/tmp\/stuff1 and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff1 -mtime +90 -delete &"}
{"English":"Display only first and second dot-separated numbers of kernel version, ie. 4.4","Bash":"uname -r | sed 's\/\\([0-9]\\+\\.[0-9]\\+\\)\\..*\/\\1\/'"}
{"English":"display all the doc files in the current folder ( files ending with \".doc\" )","Bash":"find . -name '*.doc'"}
{"English":"Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded","Bash":"find \"${searchpath}\" -type f -print0 | xargs -0 grep -l -E \"${string1}.*${string2}.*${string3}\""}
{"English":"Run \".\/configure\" with a new environment variable CC set to the full path of the command 'cc'","Bash":"CC=$(which cc) .\/configure"}
{"English":"Saves file sctipt.sh size in 'size' variable.","Bash":"size=`cat script.sh | wc -c`"}
{"English":"Locate symbolic links in \/usr and below","Bash":"find \/usr -type l"}
{"English":"Enables 'globstar' (recursive globbing) shell option.","Bash":"shopt -s globstar"}
{"English":"use find -exec with multiple commands","Bash":"find . -name \"*.txt\" -exec echo {} \\; -exec grep banana {} \\;"}
{"English":"find all files in current folder which are bigger than 270MB and less than 300MB","Bash":"find . -size +270M -size -300M"}
{"English":"remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names","Bash":"find -name \"*.txt\" -print0 | xargs -0 rm"}
{"English":"Save IP address of your SSH session in variable \"WORKSTATION\"","Bash":"WORKSTATION=`who -m|awk '{print $5}'|sed 's\/[()]\/\/g'`"}
{"English":"Delete current cron job list, and use those in yourFile.text","Bash":"crontab yourFile.text"}
{"English":"Search the current directory tree for executable files","Bash":"find . -type f -executable -print"}
{"English":"Set the host name to the contents of \"\/etc\/hostname\"","Bash":"hostname $(cat \/etc\/hostname)"}
{"English":"Delete all broken symbolic links under '\/usr\/ports\/packages' directory tree","Bash":"find -L \/usr\/ports\/packages -type l -exec rm -- {}\t+"}
{"English":"Find all regular *.css files","Bash":"find . -type f -name \"*.css\""}
{"English":"Copy the current directory tree to \"newdirpathname\" preserving directory hierarchy","Bash":"find .\/ -depth -print | cpio -pvd newdirpathname"}
{"English":"Display standard input as octal bytes","Bash":"cat | od -b"}
{"English":"Find directory \"your\/dir\" if it is empty","Bash":"find your\/dir -prune -empty"}
{"English":"Compresses file 'example.log' keeping original file in place.","Bash":"bzip2 -k example.log"}
{"English":"Find all the files named 'vimrc' anywhere on the system","Bash":"find \/ -name vimrc"}
{"English":"Print equal lines in compressed files \"number.txt\" and \"xxx.txt\"","Bash":"comm -12 <(zcat number.txt.gz) <(zcat xxx.txt.gz)"}
{"English":"find all files in the file system which have been accessed in the last 24 hours","Bash":"find \/ -atime 0"}
{"English":"Search for all .mp3 files in the \/mnt\/usb directory tree","Bash":"find \/mnt\/usb -name  \"*.mp3\" -print"}
{"English":"Find files matching an exact set of permissions","Bash":"find \/ -perm 644"}
{"English":"Search the \/usr\/bin directory tree for regular files modified or created less than 10 days ago","Bash":"find \/usr\/bin -type f -mtime -10"}
{"English":"Force create a hard link named '\/home\/user\/Musik\/youtube converted\/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3' with target '\/home\/user\/Musik\/mix-2012-13\/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3'","Bash":"ln -f '\/home\/user\/Musik\/mix-2012-13\/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3' '\/home\/user\/Musik\/youtube converted\/aesthesys~ I Am Free, That Is Why I'\"'\"'m Lost..mp3'"}
{"English":"Save all entries that are wrapped around with opening and closing square brackets in file 'FILENAME' to variable 'var'","Bash":"var=`egrep -o '\\[.*\\]' FILENAME | tr -d ][`"}
{"English":"Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .","Bash":"find . \\( -user aa1 -o -name myfile \\) -print"}
{"English":"search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them","Bash":"find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total\/1024}'"}
{"English":"Do a dry run of renaming file extension '.andnav' to '.tile' for all files\/directories under current directory tree","Bash":"find . -name \"*.andnav\" | rename -vn \"s\/\\.andnav$\/.tile\/\""}
{"English":"Find files containing string \"#!\/bin\/ksh\" and append their names and matching strings to \/tmp\/allfiles","Bash":"find . -type f -execdir \/usr\/bin\/grep -iH '#!\/bin\/ksh' {} \\; | tee \/tmp\/allfiles"}
{"English":"Delete all hidden files\/directories under $some_directory including $some_directory","Bash":"find $some_directory '.*' -delete"}
{"English":"Print a colon-separated list of all directories from the ~\/code directory tree, except hidden ones","Bash":"find ~\/code -type d -name '[^\\.]*' | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"display all the symbolic links in the current folder","Bash":"find .\/ -type l"}
{"English":"Read a line from standard input with prompt \"Enter your choice: \" and save response to variable \"choice\"","Bash":"read -p \"Enter your choice: \" choice"}
{"English":"find all the log files in the file system which are present in the current partition","Bash":"find \/ -xdev -name \"*.log\""}
{"English":"Move all hidden files in \"wordpress\" to the current directory","Bash":"mv wordpress\/.* ."}
{"English":"Find all xx* files\/directories excluding 'xxx' files\/directories under your home directory","Bash":"find ~ -name 'xx*' -and -not -name 'xxx'"}
{"English":"Search all regular files in the current directory tree for \"string\"","Bash":"find . -type f | xargs -d '\\n' grep string"}
{"English":"Display the sizes and filepaths of all files\/directories with '.undo' extension under current directory tree","Bash":"find -name *.undo -print0 | du -hc --files0-from=-"}
{"English":"Search the current directory recursively for regular files last changed more than 2 days ago","Bash":"find . type -f -ctime +2"}
{"English":"Remove regular files whose names match Perl regular expression '\\w+-\\d+x\\d+\\.\\w+$' from the current directory tree","Bash":"find -type f  |  grep -P '\\w+-\\d+x\\d+\\.\\w+$' | sed -re 's\/(\\s)\/\\\\\\1\/g' | xargs rm"}
{"English":"Print the top 10 commands with their use count","Bash":"history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head"}
{"English":"Print the current user's mail file in \"\/var\/spool\/mail\"","Bash":"cat \/var\/spool\/mail\/`whoami`"}
{"English":"Find all .sql files in the current directory recursively and print their path names separated by zeroes","Bash":"find . -name '*.sql' -print0"}
{"English":"Print short DNS lookup for each domain name in a file 'list'","Bash":"dig +short -f list"}
{"English":"create directories mnt and point","Bash":"mkdir mnt point"}
{"English":"Print file type of the executable file of command \"foo\"","Bash":"file $(which foo)"}
{"English":"Replace \"foo\" with \"bar\" in all files in the current directory tree except hidden ones","Bash":"find . -type f -not -name \u201c.*\u201d -print | xargs sed -i \u2018s\/foo\/bar\/g\u2019"}
{"English":"change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file","Bash":"find -gid 1000 -exec chown -h :username {} \\;"}
{"English":"Find all files under \/home\/username\/public_html\/sites\/all\/themes and set their permission to 640","Bash":"find \/home\/username\/public_html\/sites\/all\/themes -type f -exec chmod 640 {} +"}
{"English":"find the regular\/normal file \"myfile\" in the folder \/root","Bash":"find \/root\/ -name myfile -type f"}
{"English":"Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.","Bash":"echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f2"}
{"English":"Search for files that were accessed less than 5 days ago.","Bash":"find -atime -5"}
{"English":"Display the last slash-separated part of path, in this case \"example\".","Bash":"basename \/usr\/local\/svn\/repos\/example"}
{"English":"generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.","Bash":"find . -type f -not -name \"*.html\""}
{"English":"Make directories as needed in \"dest\" for every directory found under \"src\/\"","Bash":"find src\/ -type d -exec mkdir -p dest\/{} \\;"}
{"English":"Find all files and directories whose names end in \".rpm\", ignoring removable media, such as cdrom, floppy, etc.","Bash":"find \/ -xdev -name \\*.rpm"}
{"English":"Saves list of logged in users in system together with 'USER' header in the 'a' variable.","Bash":"a=`w|cut -d' ' -f1`;"}
{"English":"search for all the regular\/normal files  in the \/etc folder which have been modified in the last 24 hours","Bash":"find \/etc\/ -type f -mtime -1"}
{"English":"display ten files in the tmp directory","Bash":"find \/tmp  | head"}
{"English":"find all the files in the current folder which are bigger than 9MB","Bash":"find . -size +9M"}
{"English":"Search directory tree $DIR for *.txt files","Bash":"find \"$DIR\" -name \\*.txt"}
{"English":"download contents of a website \"http:\/\/example.com\/\"","Bash":"curl http:\/\/example.com\/"}
{"English":"display all the files in current folder which have been accessed in the last 15 days","Bash":"find . -atime -15"}
{"English":"Search subdirectory `Linux' in the current directory for file `teste.tex'","Bash":"find -path '.\/Linux\/*' -name teste.tex"}
{"English":"Delete all '-' character from $1 and save the resultant string to variable 'COLUMN'","Bash":"COLUMN=`echo $1 | tr -d -`"}
{"English":"Recursively removes all files like '*.xyz' in a current folder.","Bash":"find . -name \\*.xyz -exec rm {} \\;"}
{"English":"Print a time stamp for each successful ping to \"host\"","Bash":"ping host | awk '{if($0 ~ \/bytes from\/){print strftime()\"|\"$0}else print}'"}
{"English":"Archive the entire file system into tarfile.tar.bz2","Bash":"find \/ -print0 | xargs -0 tar cjf tarfile.tar.bz2"}
{"English":"list all active jobs and its IDs","Bash":"jobs -l"}
{"English":"Search for \"whatever\" in all files under \/dir directory ensuring white space safety in filenames","Bash":"find \/dir -type f -print0 | xargs -0i cat {} | grep whatever"}
{"English":"Report root file system disk usage human-readable.","Bash":"df -h \/"}
{"English":"Print the average time of 4 ping requests to \"www.stackoverflow.com\"","Bash":"ping -c 4 www.stackoverflow.com | sed '$!d;s|.*\/\\([0-9.]*\\)\/.*|\\1|'"}
{"English":"Make directories \"a\/b\/c\" as needed without causing an error if it exists","Bash":"mkdir -p a\/b\/c"}
{"English":"Check if the file \"somelink\" links to exists","Bash":"ls `readlink somelink`"}
{"English":"create a tar.gz compress file with all the jpg files in the entire file system","Bash":"find \/ -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz"}
{"English":"display all the files in the home folder that have been modified in the last 24 hours","Bash":"find $HOME -mtime -1"}
{"English":"find all .bak files in or below the current directory and move them to ~\/.old.files directory:","Bash":"find . -name \"*.sh\" -print0 | xargs -0 -I {} mv {} ~\/back.scripts"}
{"English":"create directory \/path\/to\/destination","Bash":"mkdir \/path\/to\/destination"}
{"English":"Make \"file.sh\" executable","Bash":"chmod +x file.sh"}
{"English":"Print the boot time in standard date format","Bash":"who -b | awk '{$1=\"\"; $2=\"\"; print $0}' | date -f -"}
{"English":"Add \"Line of text here\" on top of each *.py files under current directory","Bash":"find . -name \\*.py -print0 | xargs -0 sed -i '1a Line of text here'"}
{"English":"Print \"on\" to standard output and to files matching \"\/sys\/bus\/usb\/devices\/usb*\/power\/level\"","Bash":"echo \"on\" | tee \/sys\/bus\/usb\/devices\/usb*\/power\/level"}
{"English":"Display a sorted count of all the characters in \"filename\"","Bash":"fold -w1 filename | sort | uniq -c | sort -nr"}
{"English":"Find all regular files in the \"$dir\" directory","Bash":"find $dir -maxdepth 1 -type f"}
{"English":"Replace all occurrence of \"subdomainA.example.com\" with \"subdomainB.example.com\" in all files under \/home\/www and below","Bash":"find \/home\/www\/ -type f -exec sed -i 's\/subdomainA\\.example.com\/subdomainB.example.com\/g' {} +"}
{"English":"Remove all vmware-*.log files\/directories under current directory","Bash":"find . -name vmware-*.log | xargs -i rm -rf {}"}
{"English":"Find all symbolic links in the current directory tree","Bash":"find -type l"}
{"English":"Search for the regex \"\\$wp_version =\" in all the regular files that end with '\/wp-includes\/version.php' (case insensitive) in their paths in directories\/files taken from the glob pattern '\/var\/www\/vhosts\/*\/httpdocs' and show the matched lines along with the file names","Bash":"find \/var\/www\/vhosts\/*\/httpdocs -type f -iwholename \"*\/wp-includes\/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}
{"English":"Search for all files newer than file \/tmp\/t1 but not newer than file \/tmp\/t2","Bash":"find \/ -newer \/tmp\/t1 -and -not -newer \/tmp\/t2"}
{"English":"display the three smallest files by size in a folder.","Bash":"find \/etc\/ -type f -exec ls -s {} + | sort -n | head -3"}
{"English":"Extract number from $filename of the form \"something_12345_else\" and set the variable \"number\" to this number.","Bash":"number=$(echo $filename | awk -F _ '{ print $2 }')"}
{"English":"search for all the perl files in the folder \/nas\/projects\/mgmt\/scripts\/perl which have been modified 8-10 days ago.","Bash":"find \/nas\/projects\/mgmt\/scripts\/perl -mtime 8 -mtime -10 -daystart -iname \"*.pl\""}
{"English":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option","Bash":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1 -exec ls -ld {} \\;"}
{"English":"find all the files that have been modified today","Bash":"find \/tmp\/test\/* -mtime +0"}
{"English":"find all normal\/regular files in the entire file system having the word \"filename\" in their name.","Bash":"find \/ -type f -iname \"filename\""}
{"English":"Search the Movies folder in the user's home directory for files larger than 1024 megabytes in size.","Bash":"find ~\/Movies\/ -size +1024M"}
{"English":"Format output of \"mount\" as a table","Bash":"mount | column -t"}
{"English":"Find all files\/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found","Bash":"find \/var\/log\/crashes -name app-\\*\\.log -mmin -5 -print | head -n 1"}
{"English":"Compress $file file using gzip","Bash":"gzip \"$file\""}
{"English":"create a compressed archive with files newer than 1st of January 2014, 18:00:00.","Bash":"tar -N '2014-02-01 18:00:00' -jcvf archive.tar.bz2 files"}
{"English":"Exclude directory from find . command","Bash":"find ! -path \"dir1\" -iname \"*.mp3\""}
{"English":"Forcefully remove files *~important-file","Bash":"rm -rf *~important-file"}
{"English":"search for the regular\/normal file 'myfile' in the folder \/root excluding those that are present in the \/root\/work directory","Bash":"find \/root\/ -path '\/root\/work' -prune -o -name myfile -type f -print"}
{"English":"Execute \"ls\" every second","Bash":"watch -n 1 ls"}
{"English":"Delete all empty directories in the current directory tree","Bash":"find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +"}
{"English":"Simulate a full login","Bash":"su -"}
{"English":"Find the file in the current directory tree with inode number $inum and delete it","Bash":"find . -inum $inum -exec rm {} \\;"}
{"English":"List all files\/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names","Bash":"find . -regextype posix-egrep -regex \".+\\.(c|cpp|h)$\" | xargs -n 1 ls"}
{"English":"Find all *.plist files\/directories under current directory","Bash":"find .\/ -name \"*.plist\""}
{"English":"Find directories that are directly under \/home\/user\/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days","Bash":"find \/home\/user\/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -execdir echo \"It seems that {} wasn't modified during last 30 days\" ';'"}
{"English":"search for the regular\/normal file \"myfile\" in the current folder excluding search in the paths of \"work\" and \"home\" sub directories","Bash":"find .  \\( -name work -o -name home \\)  -prune -o -name myfile -type f -print"}
{"English":"Concatenate with a space every other line in \"input.txt\"","Bash":"paste -s -d' \\n' input.txt"}
{"English":"Find files ending in \"f\"","Bash":"find .  -path '*f'"}
{"English":"Gets IP addresses of all network interfaces.","Bash":"ifconfig | grep ad.*Bc | cut -d: -f2 | awk '{ print $1}'"}
{"English":"find all empty files","Bash":"find \/ -empty"}
{"English":"Print source directory of bash script","Bash":"dirname \"$(readlink -f \"$0\")\""}
{"English":"Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix \"temp_file_ and numeric suffixes","Bash":"split -l20 ADDRESSS_FILE temp_file_"}
{"English":"Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error","Bash":"set -eu"}
{"English":"search all the files in the folder \"myfiles\" which have the word \"blue\" in their name","Bash":"find \/myfiles -name '*blue*'"}
{"English":"change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name","Bash":"find . -type d -print0 | xargs -0 chmod 2775"}
{"English":"Count the number of lines in every regular .rb file in the current directory tree","Bash":"find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;"}
{"English":"Print lines that only unique ones in 'set1' and 'set2' files","Bash":"cat <(grep -vxF -f set1 set2) <(grep -vxF -f set2 set1)"}
{"English":"find all the empty in the current folder do not search in sub directories","Bash":"find . -maxdepth 1 -type d -empty"}
{"English":"Find files named core in or below the directory \/tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.","Bash":"find \/tmp -name core -type f -print0 | xargs -0 \/bin\/rm -f"}
{"English":"change the permissions of all regular\/normal files in the current directory","Bash":"find . -type f -exec chmod 664 {} \\;"}
{"English":"search all jpg images in current folder and rename them","Bash":"find . -type f -name \"*.jpg\" -print0 | xargs -0 rename \"s\/Image_200x200_(\\d{3})\/img\/\""}
{"English":"find all the files in the file system that belong to the user www","Bash":"find \/ -user www -print"}
{"English":"Print all files on the system owned by group `name_of_group'","Bash":"find \/ -group name_of_group"}
{"English":"Make directories a, b, c, ..., z under path2 as needed.","Bash":"mkdir -p path2\/{a..z}"}
{"English":"Delete all __temp__* files\/directories under current directory tree","Bash":"find . -name __temp__* -exec rm -rf '{}' \\;"}
{"English":"find all the text files that have modified in the last 2 days and not modified today","Bash":"find . -name \"*.txt\" -type f -daystart -mtime +0 -mtime -2"}
{"English":"find all the files in the home folder which are less than 42 Bytes","Bash":"find \/ -size 42"}
{"English":"Show logged in users with idle time of each one","Bash":"w | tr -s \" \" | cut -d\" \" -f1,5 | tail -n+3"}
{"English":"Remove files in current directory according to the filenames found in ~\/clang+llvm-3.3\/bin\/","Bash":"find ~\/clang+llvm-3.3\/bin\/ -type f -exec basename {} \\; | xargs rm"}
{"English":"Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago","Bash":"find $backup_path\/* -name *.sql -mtime +30 -exec rm {} \\;"}
{"English":"Print the absolute path of \"$path\"","Bash":"readlink -f \"$path\""}
{"English":"Display detailed usage help of the 'cp' (copy) command.","Bash":"cp --help"}
{"English":"find all the files in the home folder which have not been modified in the last 1 year.","Bash":"find $HOME -mtime +365"}
{"English":"Searches for 'something' in a large file and prints the matching line","Bash":"grep -n 'something' HUGEFILE | head -n 1"}
{"English":"Search \"input.txt\" for regex patterns only matching those listed in \"ignore.txt\", list the unique lines and prefix with the number of occurrences","Bash":"grep -of ignore.txt input.txt | sort | uniq -c"}
{"English":"delete all the tmp files ( files with the extension tmp ) in the \/tmp folder","Bash":"find \/tmp -name \"*.tmp\" | xargs rm"}
{"English":"Search the .log files in the current directory tree for string \"The SAS System\"","Bash":"find `pwd` -name \"*.log\" -exec grep \"The SAS System\" {} \\;"}
{"English":"Make directory \"TestProject\"","Bash":"mkdir TestProject"}
{"English":"Create symlinks to all  \/home\/folder1\/*.txt files with the same name in current directory","Bash":"find \/home\/folder1\/*.txt -type f -exec ln -s {} \\;"}
{"English":"Find all directories starting from the current directory","Bash":"find . -type d"}
{"English":"Read a line of standard input into variable \"input_cmd\" with prompt \"command : \"","Bash":"read -p \"command : \" input_cmd"}
{"English":"Report file system containing the current directory disk usage","Bash":"df ."}
{"English":"Remove the \"^M\" characters from all *.ext files under \/home directory","Bash":"find \/home -type f -name \"*.ext\" -exec sed -i -e \"s\/\\x0D$\/\/g\" {} \\;"}
{"English":"Set permissions to 700 for directories under var\/","Bash":"find var\/ -type d -exec chmod 700 {} \\;"}
{"English":"Find files in the current directory tree of size between 700k and 1000k","Bash":"find . \\( -size +700k -and -size -1000k \\)"}
{"English":"Resolve all symlinks in path to \"firefox\" binary if it exists in path, resulting in absolute path with no symlinks.","Bash":"readlink -f $(which firefox)"}
{"English":"SSH into host \"$1\" using key file \"\/path\/to\/ssh\/secret\/key\" and execute command \"$2\"","Bash":"ssh -i \/path\/to\/ssh\/secret\/key $1 $2"}
{"English":"Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$'","Bash":"find . -\\( -name \"myfile[0-9][0-9]\" -o -name \"myfile[0-9]\" \\)"}
{"English":"find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces","Bash":"find . -type f -name \"*.pl\" -print0"}
{"English":"Search the home directory for files accessed more than 10 days ago","Bash":"find ~\/ -atime +10"}
{"English":"find all the regular\/normal files in the folder \/travelphotos which are bigger than 200KB and which do not have the word \"2015\" in their name","Bash":"find \/travelphotos -type f -size +200k -not -iname \"*2015*\""}
{"English":"find all files in current folder having the name pattern \"some_pattern\" and move them to the folder target_location (GNU VERSION)","Bash":"find . -name some_pattern -print0 | xargs -0 -i mv {} target_location"}
{"English":"Display non-hidden files in the current directory with the given output format","Bash":"find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\\n'"}
{"English":"Find all files owned by group `root' in the current directory tree and change their user to `temp'","Bash":"find . -group root -print | xargs chown temp"}
{"English":"Find all files\/directories under current directory tree whose paths match the regex 'filename-regex.\\*\\.html'","Bash":"find . -regex filename-regex.\\*\\.html"}
{"English":"display all normal\/regular files or directories in the folder \"$ORIG_DIR\"","Bash":"find \"$ORIG_DIR\" -name \"*\" -type d -o -name \"*\" -type f"}
{"English":"Move all directories in the current directory tree that have been modified in the last day to \"\/path\/to\/target-dir\"","Bash":"find . -depth -type d -mtime 0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Display inputfile all on one line (replace newlines by spaces)","Bash":"awk '{printf \"%s|\", $0} END {printf \"\\n\"}' inputfile"}
{"English":"Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames","Bash":"find . -name \\*.html -exec grep -H string-to-find {} \\;"}
{"English":"Print pathname of a file that is connected to the standard output of the command \"yes\"","Bash":"echo <(yes)"}
{"English":"List the number of occurrences of each unique character in \"The quick brown fox jumps over the lazy dog\" sorted from most frequent to least frequent","Bash":"echo \"The quick brown fox jumps over the lazy dog\" | grep -o . | sort | uniq -c | sort -nr"}
{"English":"Delete all files\/directories taken by the glob pattern * except the ones with the name 'b'","Bash":"find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf '{}' ';'"}
{"English":"Remove files named \"core\" from the \/work directory tree and write their names to \/dev\/stderr (the standard error","Bash":"find \/work \\( -fprint \/dev\/stderr \\) , \\( -name 'core' -exec rm {} \\; \\)"}
{"English":"Change permissions of directory \"\/home\/sshtunnel\/\" to 555","Bash":"chmod 555 \/home\/sshtunnel\/"}
{"English":"Delete all .bam files in the current directory tree","Bash":"find . -name \"*.bam\" | xargs rm"}
{"English":"List *.txt files under current directory that have 'mystring' in their name","Bash":"find . -name *.txt | egrep mystring"}
{"English":"Find all directories in the current directory tree that are not accessible by all","Bash":"find -type d ! -perm -111"}
{"English":"search for all the files in current folder which start with \"file2015-0\" and move them to another folder","Bash":"find . -name \"file2015-0*\" -exec mv {} .. \\;"}
{"English":"Display the entire file system in a tree-like format","Bash":"tree \/"}
{"English":"Copy file in current directory of local host to host \"remote\", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.","Bash":"scp -C file remote:"}
{"English":"display long listing of all the symbolic links in the current folder","Bash":"find . -type l -exec ls -l {} \\;"}
{"English":"Find all *foo files\/directories under current directory","Bash":"find . -name '*foo'"}
{"English":"Execute \"script.awk\" on \"file\" and format the output as a table","Bash":"awk -f script.awk file{,} | column -t"}
{"English":"Find all files in the current directory tree that are not newer than some_file","Bash":"find . ! -newer some_file"}
{"English":"Find the largest original \".gz\" file in the current directory tree","Bash":"find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1"}
{"English":"Remove all .txt files in and below the current directory","Bash":"find . -name \"*.txt\" -exec rm {} \\;"}
{"English":"ssh into \"hostname\" as user \"buck\"","Bash":"ssh buck@hostname"}
{"English":"Remount \"\/path\/to\/chroot\/jail\/usr\/bin\" as read only","Bash":"mount -o remount,ro \/path\/to\/chroot\/jail\/usr\/bin"}
{"English":"Find directory \"\/some\/dir\" if it is empty","Bash":"find \/some\/dir\/ -maxdepth 0 -empty"}
{"English":"Find every file under the directory \/usr ending in \".stat\".","Bash":"find \/usr -name *stat"}
{"English":"Remove all *bak files under current directory with confirmation prompt","Bash":"find . -name '*bak' -exec rm -i {} \\;"}
{"English":"Search for directory foo ignoring case","Bash":"find . -iname foo -type d"}
{"English":"Copy all *.mp3 files under the current directory to \/tmp\/MusicFiles\/","Bash":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;"}
{"English":"Save a comma separated list of all $MY_DIRECTORY\/*\/ directories to variable 'FOLDER'","Bash":"FOLDERS=`ls -dm $MY_DIRECTORY\/*\/ | tr -d ' '`"}
{"English":"Search for the regex \"+\\S\\+\" in file 'in.txt' and print the matches by replacing newlines with comma (',')","Bash":"grep -o \"+\\S\\+\" in.txt | tr '\\n' ','"}
{"English":"find all regular files  then display the number of occurrences of banana without lines not proper end","Bash":"find . -type f -print0| xargs -0 grep -c banana| grep -v \":0$\""}
{"English":"Remove last two underscore-delimited fields and following characters in \"t1_t2_t3_tn1_tn2.sh\" keeping only \"t1_t2_t3\"","Bash":"echo t1_t2_t3_tn1_tn2.sh | rev | cut -d_ -f3- | rev"}
{"English":"find all the files in the current folder which have been modified in the 10 minutes ago","Bash":"find -mmin +15 -mmin -25"}
{"English":"Recursively copy \/path\/foo on host \"prod\" to local directory \"\/home\/user\/Desktop\", connecting as ssh username corresponding to local username.","Bash":"scp -r prod:\/path\/foo \/home\/user\/Desktop"}
{"English":"Read a line from standard input into variable \"YESNO\" ignoring backslash escapes and using the prompt \"$(echo $@) ? [y\/N] \"","Bash":"read -r -p \"$(echo $@) ? [y\/N] \" YESNO"}
{"English":"Change permissions of \".git\/hooks\/prepare-commit-msg\" to 777","Bash":"sudo chmod 777 .git\/hooks\/prepare-commit-msg"}
{"English":"Copy the 3 specified files to \/tmp\/package, preserving\/creating directory structure of each file as specified on command line.","Bash":"cp --parents src\/prog.js images\/icon.jpg \/tmp\/package"}
{"English":"Find all the files\/directories under '\/usr\/local' directory tree which have been modified within the last day","Bash":"find \/usr\/local -mtime -1"}
{"English":"Find recursively all empty directories in the current directory","Bash":"find -type d -empty"}
{"English":"Replace \",\" with \"\\r\\n\" in \"a,b\"","Bash":"echo \"a,b\"|sed 's\/,\/\\r\\n\/'"}
{"English":"find foo, Foo, FOo, FOO, etc., but only files","Bash":"find . -iname foo -type f"}
{"English":"Search for files\/directories that are readable for everybody, have at least one write bit set but are not executable for anybody","Bash":"find . -perm -444 -perm \/222 ! -perm \/111"}
{"English":"search for all the files in the current folder which are bigger than 10KB and display them biggest file","Bash":"find . -size +10k -exec ls -ls {} \\+ | sort -n | tail -1"}
{"English":"Print yesterday's date","Bash":"date -j -v-1d"}
{"English":"Locate files with user permissions rwx owned by my_user","Bash":"find . -user my_user -perm -u+rwx"}
{"English":"Find all file which have more the 2 hard link","Bash":"find .  -type f -links +2 -exec ls -lrt {} \\;"}
{"English":"create an archive using pbzip2 as a compress program","Bash":"tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 paths_to_archive"}
{"English":"Find files and directories with group id 1003","Bash":"find . -gid 1003"}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | grep -oP '(?<= inet addr:)[^ ]+'"}
{"English":"delete all the tmp files ( files with the extension tmp ) in the \/tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.","Bash":"find \/tmp -name \"*.tmp\" -print0 | xargs -0 rm   find \/tmp -name \"*.tmp\" -print0 | xargs -0 rm"}
{"English":"files all files which expect directories and display count of them","Bash":"find \/usr\/share \\! -type d wc -l"}
{"English":"Find all files on smbfs mounts and print its information and file type","Bash":"find $(mount -t smbfs | awk '{print $3}') -mount -type f -ls -execdir file {} \\;"}
{"English":"Move all files from the `sourceDir' directory tree to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -exec mv \"{}\" --target-directory=destDir \\;"}
{"English":"Add \"execute\" to the permissions of all directories in the home directory tree","Bash":"find ~ -type d -exec chmod +x {} \\;"}
{"English":"find all the text files in the current folder starting with \"somefiles-\"","Bash":"find . -name \"somefiles-*-.txt\" -type f"}
{"English":"Find <fileName> files\/directories under current directory","Bash":"find -name \"<fileName>\""}
{"English":"Find all files under \/myfiles with 647 permission","Bash":"find \/myfiles -type f -perm -647"}
{"English":"Numerically sort standard input by the second word of each line and output from greatest value to least value","Bash":"sort -nrk 2,2"}
{"English":"Change user to \"amzadm\" and group to \"root\" of \"\/usr\/bin\/aws\"","Bash":"chown amzadm.root  \/usr\/bin\/aws"}
{"English":"search for files in current folder using regular expressions","Bash":"find .\/ -regex '.*\\..*'"}
{"English":"Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '\/home\/www' directory tree and modify them in-place","Bash":"find \/home\/www -type f -name '*.cpp'  -exec sed -i 's\/previousword\/newword\/g' '{}' \\;"}
{"English":"Copies '[MacVim_source_folder]\/src\/MacVim\/mvim' to the  '\/usr\/local\/bin', printing info message on each operation.","Bash":"cp -v [MacVim_source_folder]\/src\/MacVim\/mvim \/usr\/local\/bin"}
{"English":"Search directory tree $DIR for *.txt files","Bash":"find \"${DIR}\" -name \"*.txt\""}
{"English":"Find users whose names begin with \"ab\" or whose terminal from which they are logged in ends with \"1\"","Bash":"who | grep -e '^ab' -e '1$'"}
{"English":"Trim leading and trailing whitespace from variable 'var'.","Bash":"var=`echo $var | awk '{gsub(\/^ +| +$\/,\"\")}1'`"}
{"English":"Find all regular files under current directory tree that were accessed $FTIME days ago","Bash":"find . -type f -atime $FTIME"}
{"English":"Copies all files like \"*FooBar*\" under the current directory to the '~\/foobar' directory.","Bash":"find . -name '*FooBar*' -exec cp -t ~\/foobar -- {} +"}
{"English":"Forcibly create symlink named as '\/cygdrive\/c\/Users\/Mic\/mypics' to the directory '\/cygdrive\/c\/Users\/Mic\/Desktop\/PENDING - Pics\/'","Bash":"ln -sf '\/cygdrive\/c\/Users\/Mic\/Desktop\/PENDING - Pics\/' '\/cygdrive\/c\/Users\/Mic\/mypics'"}
{"English":"Prepend date to ping output to google.com","Bash":"ping google.com | xargs -L 1 -I '{}' date '+%+: {}'"}
{"English":"Execute \/usr\/bin\/find with $* arguments","Bash":"\/usr\/bin\/find $*"}
{"English":"Prints newline, word, and byte count for each *.py in a current folder.","Bash":"wc *.py"}
{"English":"Request MX record of 'example.com' domain, and filter out all comment strings","Bash":"dig mx example.com | grep -v '^;' | grep example.com"}
{"English":"Pass a wildcard to scp by escaping it: copy all files with names starting with \"files\" in directory \"\/location\" on host \"server\" to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files.","Bash":"scp -vp me@server:\/location\/files\\*"}
{"English":"Find all *.txt files under the current directory whose names are not \"File.txt\"","Bash":"find . -maxdepth 1 -type f -name '*.txt' -not -name File.txt"}
{"English":"search for all the regular\/normal mp3 files in the file system and move them to the folder \/mnt\/mp3","Bash":"find \/ -iname \"*.mp3\" -type f -print0 | xargs -0 -I '{}' \/bin\/mv \"{}\" \/mnt\/mp3\/"}
{"English":"Decompress and extract 'archive.tar.gz' into '\/destination'","Bash":"gzip -dc archive.tar.gz | tar -xf - -C \/destination"}
{"English":"Save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable 'totalLineCnt'","Bash":"totalLineCnt=$(cat \"$file\" | grep \"$filter\" | grep -v \"$nfilter\" | wc -l | grep -o '^[0-9]\\+');"}
{"English":"Find not-executable files under \/home\/www","Bash":"find \/home\/www\/ ! -executable"}
{"English":"display all the files in the current folder expect perl shell and python fiels","Bash":"find . -not -name \"*.pl\" -not -name \"*.sh\" -not -name \"*.py\""}
{"English":"Find all duplicate \".jar\" files in the current directory tree","Bash":"find . -type f -printf \"%f\\n\" -name \"*.jar\" | sort -f | uniq -i -d"}
{"English":"search for all the files with the name \"dummy\" in the current folder","Bash":"find -type f -name dummy"}
{"English":"Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '\/tmp\/command_cache.' and save the rsultant string to variable FILE","Bash":"FILE=\"\/tmp\/command_cache.`echo -n \"$KEY\" | md5sum | cut -c -10`\""}
{"English":"Search for all files in the current directory recursively whose names contain \"linkin park\", ignoring the case","Bash":"find . -iname \"*linkin park*\""}
{"English":"Change the permission to 644 for all files under current directory","Bash":"find . -type f | xargs chmod -v 644"}
{"English":"Remove all *.bak and *.backup files that were accessed last time more than 30 days ago","Bash":"find . \\( -name '*.bak' -o -name *.backup \\) -type f -atime +30 -exec rm '{}' ';'"}
{"English":"Remove duplicate lines in \"file_name\" and print the output on stdout","Bash":"awk '{print(NR\"\\t\"$0)}' file_name | sort -t$'\\t' -k2,2 | uniq -u --skip-fields 1 | sort -k1,1 -t$'\\t' | cut -f2 -d$'\\t'"}
{"English":"Find all regular files that were modified more than 60 days ago under '\/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps","Bash":"find \/path-to-directory -type f -mtime +60 -printf \"%T@ %p\\n\" | sort"}
{"English":"display all the \".c\" files in the current directory","Bash":"find . -name \\*.c -print"}
{"English":"Numerically sort file \"files\" by the second \"-\" separated value of each line ordered from least value to highest value","Bash":"tac files | sort -t- -k2,2 -n"}
{"English":"Count number of A records of domain '$domain' on nameserver '$server' and save value in 'result' variable","Bash":"result=\"$(dig +short @\"$server\" \"$domain\" | wc -l)\""}
{"English":"Search for files whose size is between 100 kilobytes and 500 kilobytes","Bash":"find . -size +100k -a -size -500k"}
{"English":"Fix permissions for a group of files with given extension","Bash":"find \/usr\/local -name \"*.html\" -type f -exec chmod 644 {} \\;"}
{"English":"View contents of files matching \"\/usr\/share\/doc\/mysql-server-5.0\/changelog*.gz\" in \"less\"","Bash":"zcat \/usr\/share\/doc\/mysql-server-5.0\/changelog*.gz | less"}
{"English":"Change permissions to 755 for all subdirectories of the current directory","Bash":"find . -type d -print | sed -e 's\/^\/\"\/' -e 's\/$\/\"\/' | xargs chmod 755"}
{"English":"Print 3 space separated '%'","Bash":"echo $(yes % | head -n3)"}
{"English":"Find all files under \/home\/mywebsite\/public_html\/sites\/all\/modules and set their permission to 640","Bash":"find \/home\/mywebsite\/public_html\/sites\/all\/modules -type f -exec chmod 640 {} +"}
{"English":"Find all directories in entire file system which are larger than 50KB","Bash":"find \/ -type d -size +50k"}
{"English":"find non-hidden files (ones that do not start with the period \".\" chartacter) that were are modified in the last 15 minutes.","Bash":"find . -mmin -15 \\( ! -regex \".*\/\\..*\" \\)"}
{"English":"Find files\/directories under current directory that matches '.\/projects\/insanewebproject' in their paths","Bash":"find -ipath '.\/projects\/insanewebproject'"}
{"English":"Finds recursively all files in '\/path\/' that contain 'pattern', and prints matched strings with string number and file name.","Bash":"grep -rnw '\/path\/' -e 'pattern'"}
{"English":"Display the contents of \/var\/log\/syslog one page at a time, pausing for user interaction between each.","Bash":"more \/var\/log\/syslog"}
{"English":"Find all 'test' directories in the current directory tree and remove them","Bash":"find -type d -a -name test|xargs rm -r"}
{"English":"Search the \/Path directory tree for files matching pattern \"file_name*\"","Bash":"find \/Path -name \"file_name*\""}
{"English":"List all files\/directories under current directory","Bash":"find . -ls"}
{"English":"Stores system load average number in the 'proc_load_average' variable.","Bash":"proc_load_average=`w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.'`"}
{"English":"Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name","Bash":"find . -print -name SCCS -prune"}
{"English":"Search the current directory recursively for text files containing at least one character","Bash":"find . -type f -exec grep -Iq . {} \\; -and -print"}
{"English":"Convert all characters in \"$a\" to upper case and save to variable \"b\"","Bash":"b=`echo \"$a\" | sed 's\/.\/\\U&\/g'`"}
{"English":"Create tar archive \"foo.tar\" and copy all files from directory tree \/tmp\/a1 to it","Bash":"find \/tmp\/a1 | xargs tar cvf foo.tar"}
{"English":"display all the files in the current folder that have been modified in the last 24 hours","Bash":"find  -mtime -1"}
{"English":"Add a line number to every line in \"infile\"","Bash":"nl -ba infile"}
{"English":"Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'.","Bash":"ifconfig eth0:fakenfs 192.0.2.55 netmask 255.255.255.255"}
{"English":"Change all \"JPG\" filename suffixes in current directory to \"jpeg\".","Bash":"rename -v 's\/\\.JPG\/\\.jpeg\/' *.JPG"}
{"English":"Compress all *.img files using bzip2","Bash":"find .\/ -name \"*.img\" -exec bzip2 -v {} \\;"}
{"English":"Find all files under current directory that were modified more than 7 days ago and delete them","Bash":"find . -type f -mtime +7 -print0 | xargs    -0 rm"}
{"English":"display all files in the file system which are bigger than 50MB and having size \"filename\" in them","Bash":"find \/ -size +50M -iname \"filename\""}
{"English":"Find files\/directories named 'document' in the entire filesystem and in the directory tree '\/usr' even if it's in a different partition without traversing to other devices\/partitions","Bash":"find \/ \/usr -xdev -name document -print"}
{"English":"Insert \"|\" every 30 characters in file \"longline\"","Bash":"fold -w30 longline | tr '\\n' '|' | sed 's\/|$\/\\n\/'"}
{"English":"Print the last white space separated field of every line in \"file.txt\" as a \", \" separated list","Bash":"awk '{print $NF}' file.txt | paste -sd, | sed 's\/,\/, \/g'"}
{"English":"Copy \"\/home\/username\/path\/on\/server\/\" to \"username@your.ip.address.here:\/Users\/username\/path\/on\/machine\/\" and convert encoding from UTF-8 to UTF-8-MAC","Bash":"rsync --iconv=UTF-8,UTF-8-MAC \/home\/username\/path\/on\/server\/ 'username@your.ip.address.here:\/Users\/username\/path\/on\/machine\/'"}
{"English":"Find broken links","Bash":"find \/ -type l -print0 | xargs -0 file | grep broken"}
{"English":"Search folder \/home\/ABCD\/ recursively for regular files","Bash":"find \/home\/ABCD\/ -type f -print"}
{"English":"Find all directories under mydir","Bash":"find mydir -type d"}
{"English":"Find all directories in current directory without going into sub-directories","Bash":"find . -type d -maxdepth 1"}
{"English":"Copy the directory structure in \"src\/\" to \"dest\/\" with empty files","Bash":"find src\/ -type d -exec mkdir -p dest\/{} \\; -o -type f -exec touch dest\/{} \\;"}
{"English":"Remove all *.log files from the current directory tree","Bash":"find .\/ -name '*.log' -print0 | xargs -0 rm"}
{"English":"display all the \".mov\" files in the current folder","Bash":"find . -name \"*.mov\""}
{"English":"find file which name like 'foo.*' in current directory.","Bash":"find . -name \"foo.*\""}
{"English":"search for a word in all the php files in the current folder and display the count of all matching lines.","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\+ | wc -l"}
{"English":"display all the files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime -1"}
{"English":"Archive \"foo\/bar\/baz.c\" to \"remote:\/tmp\/\" preserving the relative path of \"foo\/bar\/baz.c\"","Bash":"rsync -avR foo\/bar\/baz.c remote:\/tmp\/"}
{"English":"Find all the files on the system that have been accessed within the last hour","Bash":"find \/ -amin -60"}
{"English":"Find all *.txt files under current directory that contains the regex 'pattern' and list them with their filenames and matches","Bash":"find . -type f -name '*.txt' -exec egrep pattern {} \/dev\/null \\;"}
{"English":"Archive \"\/path\/to\/files\" to \"\/path\" on host \"user@targethost\" with elevated permission on the remote host","Bash":"rsync -av --rsync-path=\"sudo rsync\" \/path\/to\/files user@targethost:\/path"}
{"English":"Search for all files with either \"sitesearch\" or \"demo\" in their path names","Bash":"find . -ipath '*sitesearch*' -ipath '*demo*'"}
{"English":"Find directories that are directly under \/home\/user\/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days","Bash":"find \/home\/user\/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -printf \"\\t- It seems that %p wasn't modified during last 30 day\\n\""}
{"English":"Creates temporary file in a current folder with name formatted like 'templateXXXXXX', and saves path to it in 'tempfile' variable.","Bash":"tempfile=$(mktemp $(pwd)\/templateXXXXXX)"}
{"English":"Split \"foo.txt\" into files with 1 line each and use a suffix length of 5","Bash":"split --suffix-length=5 --lines=1 foo.txt"}
{"English":"Save the first line of \"$j\" into variable \"k\" in ksh","Bash":"echo $j | read k"}
{"English":"Find all directories named \"D\" in the \"A\" directory tree","Bash":"find A -type d -name 'D'"}
{"English":"Removes empty folder, and hides error message if one is not empty.","Bash":"rmdir --ignore-fail-on-non-empty $newBaseDir\/Data\/NewDataCopy"}
{"English":"Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.","Bash":"cat \/boot\/config-`uname -r` | grep IP_MROUTE"}
{"English":"Write standard input to standard output and file \"\/tmp\/arjhaiX4\"","Bash":"tee \/tmp\/arjhaiX4"}
{"English":"Remount \"\/dev\/stl12\" on \"\/system\" as read only","Bash":"mount -o ro,remount \/dev\/stl12 \/system"}
{"English":"Find all files\/directories under current directory that were modified exactly 30 minutes ago","Bash":"find . -mmin 30"}
{"English":"display list of all the regular\/normal files in the current folder which start with \"my\"","Bash":"find . -name 'my*' -type f -ls"}
{"English":"search for the file \"foobar.txt\" in the folder \"\/home\/mywebsite\"","Bash":"find \/home\/mywebsite -type f -name \"foobar.txt\""}
{"English":"Find and print the names of all files found in the current directory and all of its sub-directories","Bash":"find . -print"}
{"English":"list all the files in the current directory which are of size 0 bytes.","Bash":"find . -empty"}
{"English":"Get a list of directories owned by group ID 100","Bash":"find \/ -type d -gid  100"}
{"English":"Change all files in \"~\" which are owned by the group \"vboxusers\" to be owned by the user group \"kent\"","Bash":"find ~ -group vboxusers -exec chown kent:kent {} \\;"}
{"English":"Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile'","Bash":"tmpfile=$(mktemp $(dirname \"$1\")\/XXXXXX)"}
{"English":"Find regular files in the current directory that are writable by at least somebody","Bash":"find -maxdepth 1 -type f -perm \/222"}
{"English":"find all teh script files in a directory","Bash":"find \/home\/john -name \"*.sh\" -type f -print"}
{"English":"Find all directories under current directory with 755 permission and change their permission to 644","Bash":"find . -perm 755 -exec chmod 644 {} \\;"}
{"English":"Print the list of non-hidden directories in the current directory","Bash":"find -type d -maxdepth 1 ! -name \".*\" -printf \"%f\\n\""}
{"English":"Remove all files except the ones listed in \"MANIFEST\"","Bash":"find -type f -printf %P\\\\n | sort | comm -3 MANIFEST - | xargs rm"}
{"English":"display a long listing of all the directories in the entire file system","Bash":"find \/ -print0 -type d | xargs -0 ls -al"}
{"English":"find all files in the current folder which are of size 0 bytes.","Bash":"find . -type f -empty"}
{"English":"display all normal\/regular files in the folder \"$ORIG_DIR\"","Bash":"find \"$ORIG_DIR\" -name \"*\" -type f"}
{"English":"List all the .c files under the current directory and below in a 3 column format","Bash":"find . -name \"*.c\" | xargs -n3"}
{"English":"Get the disk space used by all *.txt (case insensitive) files\/directories under current directory","Bash":"find . -name \"*.txt\" -print0 |xargs -0 du -ch | tail -n1"}
{"English":"display all the files in the current folder excluding search in the paths containing the folder having the word \"mmm\"","Bash":"find . ! -path *mmm*"}
{"English":"Copy all files and directories in \"\/home\/\" to \"\/newhome\" preserving directory hierarchy and modification time","Bash":"find \/home\/ -maxdepth 1 -print | sudo cpio -pamVd \/newhome"}
{"English":"show all files in \/usr\/tom and display only files ending with \".pl\" or \".pm\"","Bash":"find \/usr\/tom | egrep '*.pl| *.pm'"}
{"English":"update the permission of all the php files in current directory and save the output to a file","Bash":"find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt"}
{"English":"Archive all *.xml files under current directory tree to xml.tar excluding the files that match '\/workspace\/' in their paths","Bash":"find . -name \\*.xml | grep -v \/workspace\/ | tr '\\n' '\\0' | xargs -0 tar -cf xml.tar"}
{"English":"SSH using parameters in $@ in master mode in the background without executing any commands and set the ControlPath to \"$MASTERSOCK\"","Bash":"ssh -o ControlPath=\"$MASTERSOCK\" -MNf \"$@\""}
{"English":"list files found under the current directory ending in \"txt\" or ending in \"html\"","Bash":"find . -name '*.txt' -o -name '*.html'"}
{"English":"split file \"$file into pieces named with 5 character suffix","Bash":"split -a 5 $file"}
{"English":"find all the files in the current folder that have been accessed in today","Bash":"find -atime 0"}
{"English":"display all the php files in the entire file system","Bash":"find \/ -name \"*.php\""}
{"English":"Find all .gif files in the \/var\/www directory tree","Bash":"find \/var\/www -name *.gif"}
{"English":"Find all SGID files","Bash":"find \/ -perm \/g=s"}
{"English":"Find files containing `blah' in their names modified less than 2 days ago, case insensitive","Bash":"find . -iname '*blah*' -mtime -2"}
{"English":"Copies 'libgtest_main.so' and 'libgtest.so' to '\/usr\/lib\/', preserving all attributes, and copying symlinks as symlinks, without following in source files.","Bash":"sudo cp -a libgtest_main.so libgtest.so \/usr\/lib\/"}
{"English":"Show the list of files larger than 100 MB","Bash":"find \/ -size +100M -print"}
{"English":"Find all regular files under and below \/root that match pattern \"*linux*\", case insensitive","Bash":"find \/root -type f -iname \"*linux*\""}
{"English":"Make directory \"alpha_real\"","Bash":"mkdir alpha_real"}
{"English":"Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.","Bash":"pstree | grep MDSImporte | less -SEX"}
{"English":"Remount \"yaffs2\" filesystem \"\/dev\/block\/mtdblk4\" to \"\/system\" as read and write only","Bash":"mount -o rw,remount -t yaffs2 \/dev\/block\/mtdblk4 \/system"}
{"English":"Decompresses each of \"*bz2\" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.","Bash":"find . -name \"*.bz2\" -print0 | xargs -I{} -0 bzip2 -dc {} | cut -f, -d4"}
{"English":"Removes all empty folders under '\/path\/to\/the\/folder' path.","Bash":"find \/path\/to\/the\/folder -depth -type d -print0 | xargs -0 rmdir"}
{"English":"Finds out what groups a given user has.","Bash":"groups user"}
{"English":"Delete all files with indoe number $inum under current directory tree","Bash":"find . -inum $inum -exec rm {} \\;"}
{"English":"display list of all the hidden regular\/normal files in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search\/ -type f -iname \".*\" -ls"}
{"English":"display all the php files in the current folder which do not have the permission 644","Bash":"find . -type f -name \"*.php\" ! -perm 644"}
{"English":"Find files\/directories in entire file system that were accessed in less than a day ago","Bash":"find \/ -atime -1"}
{"English":"For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv","Bash":"join -o 1.1,1.2,1.3,1.4 -t, <(sort file1.csv) <(sort file2.txt)"}
{"English":"Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row","Bash":"awk 'FNR==NR { array[$1]++; next } { n = asorti(array,sort); for (i=1; i<=n; i++) if (sort[i] <= $1 + 10 && sort[i] >= $1 - 10 && $1 != sort[i]) line = (line ? line \",\" : line) sort[i]; print $0, line; line = \"\" }' file.txt{,} | column -t"}
{"English":"find all the files in the folder .home\/calvin which have been modified in th last 45 minutes","Bash":"find \/home\/calvin\/ -mmin -45"}
{"English":"Resolve symbolic link of file \"FILE\" even if the file does not exist","Bash":"readlink -m FILE"}
{"English":"Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them","Bash":"find . -name SCCS -prune -o -print"}
{"English":"Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format","Bash":"find -type f -name \"*.htm\" | sed 's@^.\/@@g;s@\/@-@g' | awk -F'-' '{print $1 \"-\" $2 \"-\" $3 \"-\" substr($4, 5, 2) \"-\" $5}'"}
{"English":"Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.","Bash":"find $LOCATION -print -exec shred $TIMES -u '{}' \\;"}
{"English":"search for all the text files and display the long listing of these files from that directory","Bash":"find . -name \"*.txt\" -execdir ls -la {} \";\""}
{"English":"SSH into \"localhost\" with forced pseudo-terminal allocation, execute \"$heredoc\", and save the output to variable \"REL_DIR\"","Bash":"REL_DIR=\"$(ssh -t localhost \"$heredoc\")\""}
{"English":"wait 2 seconds and then print \"hello\"","Bash":"echo \"hello `sleep 2 &`\""}
{"English":"Create a local SSH tunnel from \"localhost\" port 16379 to \"localhost\" port 6379 using key \"keyfile.rsa\" and disables the interactive shell","Bash":"ssh -i keyfile.rsa -T -N -L 16379:localhost:6379 someuser@somehost"}
{"English":"Find all the files which are changed in last 1 hour","Bash":"find \/ -cmin -60"}
{"English":"Find all directories under $root and replace all newlines with : (colon) in the output","Bash":"find $root -type d | tr '\\n' ':'"}
{"English":"Find x* files\/directories under \/tmp directory whose status was changed less than 1 day ago","Bash":"find \/tmp\/ -ctime -1 -name x*"}
{"English":"Creates temporary folder in TMPDIR (if defined) or in '\/tmp\/', and stores path to created folder in 'tmpdir' variable.","Bash":"tmpdir=$(mktemp -d)"}
{"English":"Search the current working directory tree for files whose names start with \"fileA_\" or \"fileB_\"","Bash":"find . -name 'fileA_*' -o -name 'fileB_*'"}
{"English":"Prints long recursive listing of all content of a root folder, appending output to 'output.file'.","Bash":"ls -lR \/ | tee -a output.file"}
{"English":"Find all *.rb and *.py files\/directories under current directory","Bash":"find . -name \"*.rb\" -or -name \"*.py\""}
{"English":"List and remove all regular files named \"core\" that are larger than 500KB","Bash":"find \/prog -type f -size +1000 -print -name core -exec rm {} \\;"}
{"English":"Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension","Bash":"find -type f -print0 | xargs -0 sed -i .bakup 's\/company\/newcompany\/g'"}
{"English":"List all files\/directories under current directory matching the posix-egrep type regex \".+\\.(c|cpp|h)$\" in their names excluding the paths *\/generated\/* and *\/deploy\/*","Bash":"find . -regextype posix-egrep -regex '.+\\.(c|cpp|h)$' -not -path '*\/generated\/*' -not -path '*\/deploy\/*' -print0 | xargs -0 ls -L1d"}
{"English":"Delete all but the most recent 5 files","Bash":"ls -tr | head -n -5 | xargs rm"}
{"English":"Find all regular files newer than '\/tmp\/$$' (where $$ expands to current process id) under '\/tmefndr\/oravl01' directory tree","Bash":"find \/tmefndr\/oravl01 -type f -newer \/tmp\/$$"}
{"English":"Get files that last had their meta information changed more than 3 days ago","Bash":"find \/ -ctime +3"}
{"English":"Prints running process that has id 'pid' with command line arguments.","Bash":"pstree -a pid"}
{"English":"Find all thumb.png files in the temps\/ directory tree","Bash":"find temps\/ -name \"thumb.png\""}
{"English":"Find directories in the \/path directory tree whose names are 33 characters in length","Bash":"find \/path -type d -printf \"%f\\n\" | awk 'length==33'"}
{"English":"Find all 2*.data files\/directories under jcho directory","Bash":"find jcho -name 2*.data"}
{"English":"search  all block spacial files called backup from \/usr directory downwards and print them .","Bash":"find \/usr -type b -name backup -print"}
{"English":"Delete characters in columns 36 through 40 from the output of \"finger\"","Bash":"finger |  cut --complement -c36-40"}
{"English":"Find all php files under current directory","Bash":"find . -type f -name \"*.php\""}
{"English":"Find files under current directory that are newer than $date_time in regards of modification time","Bash":"find . -type f -newermt \"$date_time\""}
{"English":"Add newline before all 2nd and consequent occurrences of '3d3d' in file 'temp' and write each line from the output to files with prefix 'temp' and numeric suffixes","Bash":"sed 's\/3d3d\/\\n&\/2g' temp | split -dl1 - temp"}
{"English":"Report only total size of file systems in 1T blocks.","Bash":"df --total -BT | tail -n 1 | sed -E 's\/total *([^ ]*).*\/\\1\/'"}
{"English":"find suffix tcl files under all directories started with 'n'","Bash":"find .\/n* -name \"*.tcl\""}
{"English":"display all the normal\/regular files in the current folder","Bash":"find . -type f"}
{"English":"Find files whose pathnames end in \"config\"","Bash":"find .  -path '*\/*config'"}
{"English":"Split \"\/usr\/bin\/gcc\" into 100000 files of about equal size","Bash":"split -n 100000 \/usr\/bin\/gcc"}
{"English":"create and list contents of the archive","Bash":"tar cf - $PWD|tar tvf -"}
{"English":"find all the text files in the entire filesystem which belong to the user root and display the ten files.","Bash":"find \/ -user root -iname \"*.txt\" | head"}
{"English":"Find all files under current directory that were modified less than 1 day ago","Bash":"find -mtime -1"}
{"English":"Print file type of command \"gcc\"","Bash":"file -L `which gcc`"}
{"English":"Print the full path of a 'file.txt' file in the current folder.","Bash":"ls \"`pwd`\/file.txt\""}
{"English":"Print a colon-separated list of all directories from the $root directory tree","Bash":"find $root -type d -printf '%p:'"}
{"English":"display all regular\/normal files in the current folder ending with the word ummy","Bash":"find -type f -name *ummy"}
{"English":"Count the number of files in the directory trees whose pathnames match pattern '\/dev\/sd*[a-z]'","Bash":"find \/dev\/sd*[a-z] -printf . | wc -c"}
{"English":"Print IP addresses of the host name","Bash":"hostname  -i"}
{"English":"Search the entire file hierarchy for files ending in '.old' and delete them.","Bash":"find \/ -name \"*.old\" -exec \/bin\/rm {} \\"}
{"English":"Find all files under \/home that belong to user tecmint","Bash":"find \/home -user tecmint"}
{"English":"Removes all files from current folder but 3 newest ones","Bash":"ls -tQ | tail -n+4 | xargs rm"}
{"English":"Move \"phantomjs-1.8.1-linux-x86_64.tar.bz2\" to \"\/usr\/local\/share\/\" directory","Bash":"sudo mv phantomjs-1.8.1-linux-x86_64.tar.bz2 \/usr\/local\/share\/."}
{"English":"create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search","Bash":"find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;"}
{"English":"Find all files\/directories under current directory with null character as the delimiter","Bash":"find . -print0"}
{"English":"change owner of the file \/home\/bob to user root","Bash":"sudo chown root \/home\/bob"}
{"English":"Delete all files under \/path\/to\/files that are not newer than dummyfile","Bash":"find \/path\/to\/files -type f ! -newer dummyfile -delete"}
{"English":"Search the regular files of the current directory tree for string \"foo\"","Bash":"find .\/ -type f | xargs grep \"foo\""}
{"English":"Display the contents of 'your_file' wrapping lines to maximum 80 characters, and waiting for user interaction after each page.","Bash":"fold -80 your_file | more"}
{"English":"find directory which name is Cookbook under \/users\/al","Bash":"find \/users\/al -name Cookbook -type d"}
{"English":"Search for files with \"sitesearch\" in their names and \"demo\" in their path names","Bash":"find . -iname '*sitesearch*' | grep demo"}
{"English":"Change permissions of all files ending in \".php\" under the current directory to 755 and print a '+' for each file","Bash":"find . -name '*.php' -exec chmod 755 {} \\; -exec echo '+' \\;"}
{"English":"Print line number \"${linenum}\" in file \"$filename\"","Bash":"cat $filename | sed \"${linenum}p;d\";"}
{"English":"Find all files under \/somefolder matching the extended case insensitive regex '\\.\/(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths","Bash":"find -E \/somefolder -type f -iregex '\\.\/(.*\\.error.*|second.*log|.*FFPC\\.log)$'"}
{"English":"Copy a whole directory tree skipping files residing on other files systems to destination_dir","Bash":"find .\/ -mount -depth -print | cpio -pdm \/destination_dir"}
{"English":"Extract any line in sorted file \"A\" that does not appear in \"B\", \"C\", or \"D\"","Bash":"cat B C D | sort | comm -2 -3 A -"}
{"English":"Print the full path prefix for all files in the current directory tree as a list","Bash":"tree -fi"}
{"English":"Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video","Bash":"find ~ -type f -exec file -i {} + | grep video"}
{"English":"Delete all empty subdirectories in and below directory\/","Bash":"find directory -mindepth 1 -type d -empty -delete"}
{"English":"Mount \"ext4\" filesystem \"\/dev\/xvdf1\" on \"\/vol\"","Bash":"sudo mount \/dev\/xvdf1 \/vol -t ext4"}
{"English":"find all symbolic links under \/usr","Bash":"find \/usr -type l"}
{"English":"Find all directories under ~\/code without descending into hidden directories and print them appended with : (colon)","Bash":"find ~\/code -name '.*' -prune -o -type d -printf ':%p'"}
{"English":"Delimit standard input with \":\" and display as a table","Bash":"column -s: -t"}
{"English":"Print the first word followed by the rest of the line formatted to fit in 100 characters for every line in \"input\"","Bash":"sed 's\/\\([^ ]*\\) \/\\1\\n\/' input | fold -w 100"}
{"English":"Change permissions to 644 for all regular files under the \/path\/to\/dir\/ tree","Bash":"find \/path\/to\/dir\/ -type f -print0 | xargs -0 chmod 644"}
{"English":"display list of all the hidden files in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search\/ -name \".*\" -ls"}
{"English":"Find all files under current directory and print only the filenames (not paths)","Bash":"find . -type f -execdir echo '{}' ';'"}
{"English":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" | xargs ls -lrt | awk print '$9'"}
{"English":"Forward port 16186 on hello.com to 8888 on localhost using private key \"privatekeystuffdis88s8dsf8h8hsd8fh8d\" for login","Bash":"ssh -N -i <(echo \"privatekeystuffdis88s8dsf8h8hsd8fh8d\") -R 16186:localhost:8888 hello.com"}
{"English":"find all the text files in the current folder and display their Permissions and size along with their name","Bash":"find . -name \"*.txt\" -printf \"%M %f \\t %s bytes \\t%y\\n\""}
{"English":"Find all files\/directories under current directory that were accessed more than 25 but less than 35 minutes ago","Bash":"find -amin +25 -amin -35"}
{"English":"find all the regular\/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions","Bash":"find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq"}
{"English":"Print numerically sorted list of unique strings from 'ip_addresses' file, with number of occurrences of each string.","Bash":"sort -n ip_addresses.txt | uniq -c"}
{"English":"Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories","Bash":"find .\/ -name \"foo.mp4\" -printf \"%h\\n\""}
{"English":"Copy \"fileName.txt\" to all directories listed in \"allFolders.txt\" - names may not contain spaces.","Bash":"cat allFolders.txt | xargs -n 1 cp fileName.txt"}
{"English":"find all the files in home folder which have been modified in the last 24 hours","Bash":"find $HOME -mtime -1"}
{"English":"Print A record for domain 'domain.' from 8.8.8.8 nameserver","Bash":"dig @8.8.8.8 domain. a"}
{"English":"Find all files whose names end with \"macs\" in and below the current directory","Bash":"find -name '*macs'"}
{"English":"Forward all connections to client localhost 3307 via the SSH tunnel to gateway and then connect to host 1.2.3.4 to port 3306","Bash":"ssh -f user@gateway -L 3307:1.2.3.4:3306 -N"}
{"English":"List the largest file prefixed by its size in bytes of all files under the current directory","Bash":"find . -type f -name '*.gz' -printf '%s %p\\n'|sort -nr|head -n 1"}
{"English":"Find all files\/directories owned by the user 'bob' under '\/home' directory tree","Bash":"find \/home -user bob"}
{"English":"Change to directory listed in file '$HOME\/.lastdir'","Bash":"cd `cat $HOME\/.lastdir`"}
{"English":"Search for \"Stock\" in all *.java files from the current directory tree","Bash":"find . -name \"*.java\" | xargs grep \"Stock\""}
{"English":"Find all *.txt files under \/ and print their sizes and paths","Bash":"find \/ -name '*.txt' -exec du -hc {} \\;"}
{"English":"Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.","Bash":"find . -type f -name \"*.java\" -exec grep -il string {} \\;"}
{"English":"Find files in the \/travelphotos that are greater than 200k in size but do not have \"2015\" anywhere in the file name","Bash":"find \/travelphotos -type f -size +200k -not -iname \"*2015*\""}
{"English":"Find all files under \/somefolder matching the extended regex '\\.\/(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths","Bash":"find -E \/somefolder -type f -regex '\\.\/(.*\\.error.*|second.*log|.*FFPC\\.log)$'"}
{"English":"Search the current directory tree for all files except SVN ones","Bash":"find . -not -iwholename '*.svn*'"}
{"English":"Lists all files in a current folder, separating names with comma.","Bash":"ls -m"}
{"English":"Displays information about all network interfaces in system, including inactive ones.","Bash":"ifconfig -a"}
{"English":"Join data in \"file1\" sorted by the second word of each line with data in \"file2\" sorted by the first word of each line, keeping the same order as it is found in \"file1\"","Bash":"join -1 2 -2 1 <(sort +1 -2 file1) <(sort +0 -1 file2)"}
{"English":"Remove all files whose names begin with \"no-such-thing\" in the \/home\/peter directory tree","Bash":"find \/home\/peter -name no-such-thing* |xargs rm"}
{"English":"Find all *.data files under jcho directory","Bash":"find jcho -name *.data"}
{"English":"finda all the hidden files excluding those having the extension htaccess","Bash":"find . -type f \\( -iname \".*\" ! -iname \".htaccess\" \\)"}
{"English":"Find all files in \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* that are older than 90 days","Bash":"find \/var\/www\/html\/zip\/data\/*\/*\/*\/*\/* -type f -mtime +90"}
{"English":"Find all files under current directory","Bash":"find . -type f -print"}
{"English":"Change the group of \"myfile\" to \"friends\"","Bash":"chown :friends myfile"}
{"English":"Print the IP addresses for the current host name","Bash":"hostname -I | awk '{print $1}'"}
{"English":"Print host name followed by \":\" and the contents of \"\/sys\/block\/sda\/size\"","Bash":"echo \"$(hostname):$(cat \/sys\/block\/sda\/size)\""}
{"English":"List all files and folders in the current working directory","Bash":"ls `pwd`\/*"}
{"English":"Find all the Sticky Bit set files whose permission are 551","Bash":"find \/ -perm 1551"}
{"English":"create directory \".hiddendir\"","Bash":"mkdir .hiddendir"}
{"English":"Print the current working directory without a trailing newline","Bash":"echo -n $(pwd)"}
{"English":"List all *.txt files\/directories under \/etc","Bash":"find \/etc -name \"*.txt\" | xargs -I {} ls -l {}"}
{"English":"Print the last 10 commands in history","Bash":"history | tail -10"}
{"English":"List all nfs mount points on the system","Bash":"mount -l | grep 'type nfs' | sed 's\/.* on \\([^ ]*\\) .*\/\\1\/'"}
{"English":"Delete all .svn files\/directories under current directory","Bash":"find . -name .svn -exec rm -rf '{}' \\;"}
{"English":"Search the current directory recursively for regular files with the read permission set for everybody","Bash":"find -type f ! -perm -444"}
{"English":"Decompress and extract '\/usr\/src\/redhat\/SOURCES\/source-one.tar.gz'","Bash":"gzip -dc \/usr\/src\/redhat\/SOURCES\/source-one.tar.gz | tar -xvvf -"}
{"English":"find files which modification time is  one day ago","Bash":"find . -mtime 1"}
{"English":"Print every three lines of \"file\" as a comma separated line","Bash":"paste -sd',,\\n' file"}
{"English":"search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.","Bash":"var=\"$(find . -name 'gen*.bt2')\""}
{"English":"Search the regular files of the current directory tree for string \"foo\"","Bash":"find . -type f -exec grep \"foo\" '{}' \\;"}
{"English":"Find all *.mp4 files under \/foo\/bar and move them to \/some\/path","Bash":"find \/foot\/bar\/ -name '*.mp4' -exec mv -t \/some\/path {} +"}
{"English":"Display the named characters in \"Test\\rTesting\\r\\nTester\\rTested\"","Bash":"echo -e \"Test\\rTesting\\r\\nTester\\rTested\" | awk '{ print $0; }' | od -a"}
{"English":"Execute \"du -s path\" every 300 seconds","Bash":"watch -n 300 du -s path"}
{"English":"Find all directories in maximum 2 levels down the \/tmp\/test directory","Bash":"find \/tmp\/test\/ -maxdepth 2 -mindepth 1 -type d"}
{"English":"Output line number and lines 200000000 through 200000005 from the infinite input of \"y\"","Bash":"yes | sed -n '200000000,${=;p};200000005q'"}
{"English":"Create symlinks to all  \/home\/folder2\/*.txt files with the same name in current directory","Bash":"find \/home\/folder2\/*.txt -type f -exec ln -s {} \\;"}
{"English":"Search the current directory recursively for regular files last modified more than 2 days ago","Bash":"find . type -f -mtime +2"}
{"English":"Print a sorted list of the subdirectories of ~\/Music","Bash":"find ~\/Music\/ -maxdepth 2 -mindepth 2 -type d | sort"}
{"English":"Try to determine the type of contents in \"myfile\" located in user's home directory.","Bash":"file ~\/myfile"}
{"English":"create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours","Bash":"find \\( -name \"*.htm\" -o -name \"*.html\" \\) -a -ctime -30 -exec ln {} \/var\/www\/obsolete \\;"}
{"English":"find the regular js files which path does not contains '*\/test\/*'  and name does not contains '*-min-*' or '*console*'","Bash":"find . ! -path \"*\/test\/*\" -type f -name \"*.js\" ! -name \"*-min-*\" ! -name \"*console*\""}
{"English":"Find all files whose names begin with 'Makefile' in the \/usr\/ports directory tree and count how many of them contain 'QTDIR'","Bash":"find \/usr\/ports\/ -name Makefile\\* -exec grep -l QTDIR '{}' '+' | wc -l"}
{"English":"Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.","Bash":"path=$(basename $(pwd) | tr 'A-Z' 'a-z' )"}
{"English":"Find all configration files in Home directory & Subtitute permanently in files","Bash":"find $HOME -name \"*.conf\" -exec sed -i 's\/vermin\/pony\/g' {} \\;"}
{"English":"Find all files\/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension","Bash":"find . -regex \".*\/(test)[0-9][0-9]\\.txt\""}
{"English":"Count the total number of lines in all HTML files under \/usr\/src that contain string \"foo\"","Bash":"find \/usr\/src -name \"*.html\" -execdir \/usr\/bin\/grep -H \"foo\" {} ';' | wc -l"}
{"English":"Search the \/path\/to\/dir directory tree for .c files","Bash":"find \/path\/to\/dir -name \\*.c"}
{"English":"create directory dir1","Bash":"mkdir dir1"}
{"English":"Find all .sh files in the current directory tree and remove them","Bash":"find . -name \"*.sh\" -print0 | xargs -0 rm -rf"}
{"English":"Gets domain name from dig reverse lookup and save in variable 'go'.","Bash":"go=$(dig -x 8.8.8.8| awk '\/PTR[[:space:]]\/{print $NF}')"}
{"English":"Rename all *.html files under and below the current directory to *.var","Bash":"find -name '*.html' -print0 | xargs -0 rename 's\/\\.html$\/.var\/'"}
{"English":"Creates temporary folder like '\/tmp\/tardir-XXXXXX' with 6-letter suffix and saves its path in 'tmpdir' variable.","Bash":"tmpdir=$(mktemp -d \/tmp\/tardir-XXXXXX)"}
{"English":"Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago","Bash":"find . -maxdepth 1 -ctime +1 -name file"}
{"English":"Create a symbolic link named \"\/lib\/libc.so.0\" to \"\/lib\/libc.so.6\"","Bash":"ln -s \/lib\/libc.so.6 \/lib\/libc.so.0"}
{"English":"Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx","Bash":"find . -perm a=rwx,g-w,o-w"}
{"English":"Execute \"ps -C java -o pcpu,state,cputime,etimes\" every second","Bash":"watch -n 1 ps -C java -o pcpu,state,cputime,etimes"}
{"English":"Find the largest 10 directories under current directory","Bash":"find . -type d -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}"}
{"English":"Print the login time and user of the first person who logged in","Bash":"who | awk '{print $3 \" \" $4 \" \"$1}' | sort | head -1"}
{"English":"Split \"file.txt\" excluding the first line into files of at most 4 lines each and with a prefix \"split_\"","Bash":"tail -n +2 file.txt | split -l 4 - split_"}
{"English":"Processes all files recursively in \/var\/spool\/cron\/tabs folder and filters out all strings with '#'.","Bash":"grep -v \"#\" -R  \/var\/spool\/cron\/tabs"}
{"English":"Take a file path from standard input and remove it.","Bash":"xargs -I '{}' rm '{}'"}
{"English":"Find all PHP files under current directory that contain only one non-blank line","Bash":"find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} + | sed -n '\/:1$\/{s\/\/\/;p}'"}
{"English":"create a symbolic link named \"\/usr\/bin\/my-editor\" to file \"\/usr\/share\/my-ditor\/my-editor-executable\"","Bash":"ln -s \/usr\/share\/my-ditor\/my-editor-executable \/usr\/bin\/my-editor"}
{"English":"Search the local subdirectory tree of the current working directory and the \/tmp directory tree for directories named mydir","Bash":"find local \/tmp -name mydir -type d -print"}
{"English":"Create a symbolic link in directory \"new\" for each file in \"original\" directory tree","Bash":"find original -type f -exec ln -s {} new\/{} \\;"}
{"English":"Print NS record for domain 'domain.' from 8.8.8.8 nameserver","Bash":"dig @8.8.8.8 domain. ns"}
{"English":"find all the normal\/regualar files in the current folder which have a size of 10KB and display a long listing details of them.","Bash":"find . -type f -size +10000 -exec ls -al {} \\;"}
{"English":"Search the xargstest\/ directory recursively for files matching pattern 'file??'","Bash":"find xargstest\/ -name 'file??'"}
{"English":"change cgi files to mode 755","Bash":"find htdocs cgi-bin -name \"*.cgi\" -type f -exec chmod 755 {} \\;"}
{"English":"Make directory and parents as needed for the directory name of file \"$f\"","Bash":"mkdir -p -- \"$(dirname -- \"$f\")\""}
{"English":"Find all files\/directories that start with 'screen' (case insensitive) in their names under user's home directory tree","Bash":"find ~ -iname \"screen*\""}
{"English":"find all the file which name end with c or h and content contain 'thing'","Bash":"find . -name '*.[ch]' | xargs grep -l thing"}
{"English":"find  files which full path name is foo\/bar under foo directory and print","Bash":"find foo -path \/tmp\/foo\/bar -print"}
{"English":"display all the files in the current folder which have not been modified in the last 7 days and which are not in the list \"file.lst\"","Bash":"find -mtime +7 -print | grep -Fxvf file.lst"}
{"English":"Split \"filename\" into files of at most 200000 lines each","Bash":"split -l 200000 filename"}
{"English":"Look for files whose names begin with letters a-j","Bash":"find  \/ -name \"[a-j]*\" -print"}
{"English":"Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.","Bash":"ifconfig eth0 hw ether 00:80:48:BA:d1:30"}
{"English":"Replace all newlines with spaces in the contents of \"file\"","Bash":"sed -e '{:q;N;s\/\\n\/ \/g;t q}' file"}
{"English":"Find all directories under current directory and set their permission to 775","Bash":"find -type d exec chmod 775 {} +"}
{"English":"find all the html files in the current folder","Bash":"find . -name \"*.html\""}
{"English":"Display a long listing of all directories under '\/nas' directory tree","Bash":"find \/nas -type d -ls"}
{"English":"Find all directories under media\/ directory and change their permission to 700","Bash":"find media\/ -type d -exec chmod 700 {} \\;"}
{"English":"Get a list of all files in the \/home directory tree and their coressponding inode numbers","Bash":"find \/home -type f -printf \"%i@%p\\n\""}
{"English":"Make directories \"foo\/bar\/baz\" as needed and do not cause an error if it exists","Bash":"mkdir -p foo\/bar\/baz"}
{"English":"Find files\/directories under current directory that matches the regex \/path\/to\/something[^\/]*$  in their paths","Bash":"find . | grep -qi \/path\/to\/something[^\/]*$"}
{"English":"create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory","Bash":"find . -depth -print | cpio -o -O \/target\/directory"}
{"English":"find all files under \"\/usr\"","Bash":"find \/usr -print"}
{"English":"Search for files\/directories which have read and write permission for their owner, and group and only read permission for others","Bash":"find . -perm -664"}
{"English":"Locate world-writable files and directories on the system","Bash":"find \/ -path \/proc -prune -o -perm -2 ! -type l -ls"}
{"English":"Find all .java files starting from the current folder","Bash":"find * -name \"*.java\""}
{"English":"Find regular files named core under \/tmp and delete them","Bash":"find \/tmp -name core -type f -print | xargs \/bin\/rm -f"}
{"English":"Change permissions of \"\/usr\/bin\/wget\" to 777","Bash":"chmod 777 \/usr\/bin\/wget"}
{"English":"display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder","Bash":"find . -name test -prune"}
{"English":"Find all directories under current directory and set their permission to 755","Bash":"find -type d exec chmod 755 {} +"}
{"English":"find all files in the current folder that have a single letter in their name and have not been modified today","Bash":"find . -name \\? -mtime +0"}
{"English":"search for a word in all files in a directory","Bash":"find \/directory\/containing\/files -type f -print0 | xargs -0 grep \"test to search\""}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | awk '\/inet \/{sub(\/[^0-9]*\/,\"\"); print $1}'"}
{"English":"Locate all files in the current directory and below that have \"testfile\" in their names regardless of the case","Bash":"find -iname \"*TESTFILE*\""}
{"English":"Copies file 'index.html' to each top-level directory in the current directory.","Bash":"find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html"}
{"English":"Find files in the \/var\/log folder which were modified between 60 minutes and 10 minutes ago","Bash":"find \/var\/log\/ -mmin -60 -mmin +10"}
{"English":"find all CSS files under currenty directory and use sed to edit them","Bash":"find . -name \"*.css\" -exec sed -i -r 's\/#(FF0000|F00)\\b\/#0F0\/' {} \\;"}
{"English":"display all text, mpg, jpg files  in the folder \/Users\/david\/Desktop","Bash":"find \/Users\/david\/Desktop -type f \\( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \\)"}
{"English":"show all the files  in current directory","Bash":"find ."}
{"English":"Serach for all the files starting with grep in man pages","Bash":"find \/usr\/share\/man\/ -regex grep.*"}
{"English":"Creates temporary file with appended suffix '.cmd' and saves path to it in 'LGT_TEMP_FILE' variable.","Bash":"LGT_TEMP_FILE=\"$(mktemp --suffix .cmd)\""}
{"English":"find all the files with the name september ( case insensitive )","Bash":"find -iname september"}
{"English":"SSH into server \"app1\" as the current user","Bash":"ssh app1"}
{"English":"Show current date in \"%Y-%m-%d\" format","Bash":"date \"+%Y-%m-%d\""}
{"English":"create directory \/data\/db","Bash":"sudo mkdir \/data\/db"}
{"English":"Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree","Bash":"find \"$DIR\" -type f -exec grep \"$SEARCH\" {} \\;"}
{"English":"List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~\/src and ~\/bin","Bash":"find . -name bin -prune -o -name src -prune -o -type f -print | xargs egrep -il '^From:.*unique sender'"}
{"English":"Find all socket files in the current directory and its sub-directories.","Bash":"find . -type s"}
{"English":"Archive directory \"symdir\" to \"symdir_output\" preserving symbolic links.","Bash":"rsync symdir\/ symdir_output\/ -a --copy-links -v"}
{"English":"View gzip's help documentation","Bash":"gzip --help | less"}
{"English":"Find all files\/directories under \/home\/baumerf\/public_html\/ that were modified less than 60 minutes ago excluding *.log files\/directories","Bash":"find \/home\/baumerf\/public_html\/ -mmin -60 -not -name \\*.log"}
{"English":"Search in current directory downwards all files whose size is 10 bytes ( Characters ) .","Bash":"find . -size 10c -print"}
{"English":"Find files changed in the last 1 day","Bash":"find . -mtime -1 -type f"}
{"English":"Show all variables whose name or value contains \"PATH\", sorted in reverse alphabetical order.","Bash":"env | uniq | sort -r | grep PATH"}
{"English":"Print the list of all directories under the current directory and below","Bash":"find .\/ -type d -print"}
{"English":"Copy directory structure from directory 'olddir' to 'newdir'","Bash":"find olddir -type d -printf \"newdir\/%P\\0\" | xargs -0 mkdir -p"}
{"English":"set MyVariable to the value of VARIABLE_NAME","Bash":"myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');"}
{"English":"Filters only directories from long file listing of a current directory, and prints their names.","Bash":"ls -l | grep \"^d\" | awk -F\" \" '{print $9}'"}
{"English":"Make directory expanded by $dir variable","Bash":"mkdir $dir"}
{"English":"Find all the files on the system that have been changed within the last hour","Bash":"find \/ -cmin -60"}
{"English":"Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names","Bash":"find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'"}
{"English":"Print line number of each line in \/etc\/passwd file, where current user name is found","Bash":"cat \/etc\/passwd -n | grep `whoami` | cut -f1"}
{"English":"Find files newer than `tmpfile' starting from the current directory","Bash":"find . -newer tmpfile"}
{"English":"Save the full path of command \"f\" to variable \"full_f\"","Bash":"full_f=\"$(which f)\""}
{"English":"Find *.html files in the current directory tree that were modified less than 7 days ago","Bash":"find . -mtime -7 -name \"*.html\" -print"}
{"English":"find all files in the current folder which have not been modified today and whose file name is of length 1","Bash":"find . -name \\? -mtime +0"}
{"English":"Find .rmv files in the current directory recursively","Bash":"find . -name *.rmv"}
{"English":"find all the files with the name \"datainame\" in the file system which are bigger than 50MB","Bash":"find \/ -size +50M -iname \"Dateiname\""}
{"English":"List files larger than 10MB under \/var\/log \/tmp that haven't changed in a month","Bash":"find \/tmp \/var\/tmp -size +30M -mtime 31 -ls"}
{"English":"Show all lines as they are executed and stop at the first command returning nonzero","Bash":"set -ex"}
{"English":"display the count of regular\/normal files in the current folder do not search in sub directories","Bash":"find . -maxdepth 1 -type f |wc -l"}
{"English":"Make directories \"a\", \"b\", \"c\", \"d\", and \"e\"","Bash":"mkdir a b c d e"}
{"English":"Check if \"$file\" contains DOS line endings","Bash":"od -t x2 -N 1000 $file | cut -c8- | egrep -m1 -q ' 0d| 0d|0d$'"}
{"English":"search for the word \"mysql\" in all the files in the current containing the word \"notes\" in their name","Bash":"find . -iname \"*notes*\" | xargs grep -i mysql"}
{"English":"Search for the regex ^catalina in the first line of each file under current directory","Bash":"find -type f | xargs head -v -n 1 | grep -B 1 -A 1 -e '^catalina'"}
{"English":"Recursively copy local file\/directory \"\/copy\/from\/path\" to remote location \"\/copy\/to\/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"\/path\/to\/your\/.pemkey\" instead of the default in ~\/.ssh\/","Bash":"scp -i \/path\/to\/your\/.pemkey -r \/copy\/from\/path user@server:\/copy\/to\/path"}
{"English":"display all the files in the current folder excluding those that are present in the path \".\/etc\"","Bash":"find . ! -wholename \".\/etc*\""}
{"English":"Print TXT record with server`s hostname from nameserver 'server'","Bash":"dig @server hostname.bind ch txt"}
{"English":"find all the files in the current folder and display them in the sorted order of their name","Bash":"find . | sort"}
{"English":"create directory TestProject","Bash":"mkdir TestProject"}
{"English":"all the files that end with .mp3 and end with .jpg","Bash":"find . -name '*.mp3' -name '*.jpg' -print"}
{"English":"search for multiple files in the current folder","Bash":"find . -name photoA.jpg photoB.jpg photoC.jpg"}
{"English":"List all IPV4 addresses found in all files under \/etc directory","Bash":"find \/etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n'  | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}
{"English":"recursively change owner and group of the directory and all files into it to user root and group root","Bash":"chown -R root:root \/var\/lib\/jenkins"}
{"English":"Run 'make -e' with an environment variable 'HOSTNAME' set to the system hostname","Bash":"HOSTNAME=$(hostname) make -e"}
{"English":"Print the file system disk space usage for \"\/dev\/disk0s2\" if exists","Bash":"df | grep \/dev\/disk0s2"}
{"English":"search for the folder .dummy and remove it from the folder \"Test folder\"","Bash":"find \"Test Folder\" -type d -name .dummy -exec rm -rf \\\"{}\\\" \\;"}
{"English":"Search for the regex '->get(\\|#hyphenate' in all files with '.pl' or '.pm' extension under '\/users\/tom' directory tree and only show the filenames","Bash":"find \/users\/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"}
{"English":"Find all files under current directory matching the posix-egrep type regex '^.*\/[a-z][^\/]*$'  in their names","Bash":"find . -regextype posix-egrep -regex '^.*\/[a-z][^\/]*$' -type f"}
{"English":"Prints line count of each file within current directory.","Bash":"find . -type f -print0 | xargs -0L1 wc -l"}
{"English":"Find all *shp* files\/directories under current directory","Bash":"find . -name '*shp*'"}
{"English":"find all the files in the entire file system which have been modified in the last 5 days","Bash":"find \/ -mtime -5 -print"}
{"English":"search for all the files in current folder and display all the file names separated by space","Bash":"find . | paste -sd \" \""}
{"English":"Change the owner to \"user\" and group to \"group\" of files \"file ...\"","Bash":"chown user:group file ..."}
{"English":"display all files in current folder ending with \"~\" or \"#\" using regular expression","Bash":"find -regex \"^.*~$\\|^.*#$\""}
{"English":"Enable history in a script","Bash":"set -o history"}
{"English":"prune all the files in the current directory, only current directory (.) is the output","Bash":"find . -prune"}
{"English":"View history using \"more\"","Bash":"history | more"}
{"English":"Finds recursively all folders in current folder which path not contains \"NameToExclude\" string and removes only ones without files and another folders within.","Bash":"find . -type 'd' | grep -v \"NameToExclude\" | xargs rmdir"}
{"English":"Change the owner of all \".txt\" files in directory tree \"\/mydir\" to \"root\"","Bash":"find \/mydir -type f -name \"*.txt\" -execdir chown root {} ';'"}
{"English":"find all text files in the current folder which have been modified after the file \/tmp\/newerthan","Bash":"find . -name \"*.txt\" -newer \/tmp\/newerthan"}
{"English":"Find all test2.h files under current directory","Bash":"sudo find . -name test2.h"}
{"English":"Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match","Bash":"find project -name '*.php' -type f -print0 | xargs -0 grep -l ireg"}
{"English":"List all files under current directory that are greater than 10000000x512 bytes in size","Bash":"find . -type f -size +10000000 -print|xargs ls -ld|more"}
{"English":"Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the \/ directory without descending into other partitions","Bash":"find \/ -maxdepth 1 -xdev -type f -print -exec grep -i \"stringtofind\" -q {} \\;"}
{"English":"Save absolute path of \"$path\" whose parents exist to variable \"abspath\"","Bash":"abspath=$(readlink -f $path)"}
{"English":"Search for all files newer than file \/tmp\/t","Bash":"find \/ -newer \/tmp\/t"}
{"English":"List each subdirectory name composing the current working directory","Bash":"pwd | cut -f 1- -d\\\/ --output-delimiter=$'\\n'"}
{"English":"Find the directories whose names contain \"New Parts\" at level 3 of the current directory tree and create symlinks to them in \/cygdrive\/c\/Views","Bash":"find -mindepth 3 -maxdepth 3 -type d -name \"*New Parts*\" -exec ln -s -t \/cygdrive\/c\/Views {} \\;"}
{"English":"display a long listing of all the files in the current folder that have been accessed in today from the start of the day","Bash":"find -daystart   -atime 0 -ls"}
{"English":"List environment variable values whose name matches '^\\w*X\\w*'","Bash":"set | grep -P '^\\w*X\\w*(?==)' | grep -oP '(?<==).*'"}
{"English":"find foo, Foo, FOo, FOO, etc., but only dirs","Bash":"find . -iname foo -type d"}
{"English":"find all the files in the current directory that have the word \"bash\" in their name","Bash":"find . -name \"*bash*\""}
{"English":"Remove all files whose names end with \"~\" in the \/home\/peter directory tree","Bash":"find \/home\/peter -name *~ |xargs rm"}
{"English":"Find all *.mp4 files under \/foo\/bar and move them to \/some\/path","Bash":"find \/foo\/bar -name '*.mp4' -print0 | xargs -I{} -0 mv -t \/some\/path {}"}
{"English":"find all text files in current folder; which have been modified exactly 5 days ago","Bash":"find . \u2013name \"*.txt\" \u2013mtime 5"}
{"English":"Append \"\\r\" on each line of file \"input\" and display the printable characters","Bash":"sed 's\/$\/\\r\/g' input |od -c"}
{"English":"Display only first and second dot-separated numbers of kernel version, ie. 4.4","Bash":"uname -r | cut -d. -f1-2"}
{"English":"Read a line of standard input with prompt \"My prompt: \" and save it to variable \"varname\"","Bash":"read -e -p \"My prompt: \" varname"}
{"English":"Print numbers 1 through 10 separated by \":\"","Bash":"yes | head -n10 | grep -n . | cut -d: -f1 | paste -sd:"}
{"English":"Find all files under $musicdir directory","Bash":"find \"$musicdir\" -type f -print"}
{"English":"Find all filenames ending with .c in the current directory tree","Bash":"find -name \"*.c\""}
{"English":"Find 10 most recently changed files in the current directory tree","Bash":"find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}
{"English":"Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian","Bash":"find lib etc debian -name \"*.sh\" -type f | xargs chmod +x"}
{"English":"Brings down network interface eth0.","Bash":"ifconfig eth0 down"}
{"English":"Compresses all files listed in array $*, executing in background.","Bash":"compress $* &"}
{"English":"Remove all Thumbs.db files from the current directory tree","Bash":"find . -name Thumbs.db -exec rm {} \\;"}
{"English":"Sets shell option 'nounset'.","Bash":"shopt -s -o nounset"}
{"English":"Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories","Bash":"find . \\( \\( -name .svn -o -name pdv \\) -type d -prune \\) -o \\( -name '*.[pwi]' -type f -exec grep -i -l \"search for me\" {} + \\)"}
{"English":"Find all .gif and .jpg files in the \/var\/www directory tree","Bash":"find \/var\/www -name *.gif -o -name *.jpg"}
{"English":"find all directories in the current folder and do not search in sub directories","Bash":"find . -type d -maxdepth 1"}
{"English":"Show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.","Bash":"uname -a"}
{"English":"find all the files that have been changed exactly 24 hours ago","Bash":"find . -ctime 1 -type f"}
{"English":"Search the home directory tree for files matching pattern '*.txt'","Bash":"find ~ -name *.txt"}
{"English":"Remove all regular files under $DIR directory tree that were accessed more than 5 days ago","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"Print a listing of the \/usr\/local\/etc\/rc.d directory tree","Bash":"find \/usr\/local\/etc\/rc.d -type f | awk -F\/ '{print $NF}'"}
{"English":"Find all files\/directories under current directory that are greater than 10MB in size","Bash":"find . -size +10M"}
{"English":"Save the user name in upper case of the current user in variable \"v\"","Bash":"v=$(whoami | tr [:lower:] [:upper:])"}
{"English":"List all regular files in and below the home directory that were modified more than 5 years ago","Bash":"find ~ -type f -mtime +1825 |xargs -r ls -l"}
{"English":"ERROR - this is for DOS","Bash":"ping -n 1 %ip% | find \"TTL\""}
{"English":"display a long listing of the files in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 -type f -exec ls -l {} +"}
{"English":"finds all directories named CVS, and deletes them and their contents.","Bash":"find . -type d -name CVS -exec rm -r {} \\;"}
{"English":"search for all tar.gz compress files  in the current folder","Bash":"find -name *.tar.gz"}
{"English":"find all the findme.txt files in the file system","Bash":"find \/ -name findme.txt -type f -print"}
{"English":"Gets list of IP addresses of all network interfaces.","Bash":"ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1'"}
{"English":"display a long list of all the directories which have files ending with \".todo\"","Bash":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n' | uniq | xargs ls -l"}
{"English":"List all functions defined in the shell","Bash":"set | grep \" () $\" | cut -d' ' -f1"}
{"English":"find all the files in the current folder that have been modified in the last 7 days","Bash":"find -mtime -7 -daystart"}
{"English":"Print 2 lines of \"123456789\"","Bash":"yes 123456789 | head -2"}
{"English":"Find all regular files in the current director and set their permissions to '644'.","Bash":"find .\/ -type f -exec chmod 644 {} \\;"}
{"English":"Execute \"ls -l\" on host \"something\" as user \"root\"","Bash":"ssh root@something 'ls -l'"}
{"English":"Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.","Bash":"find .\/ -type f -exec grep -H 'text-to-find-here' {} \\;"}
{"English":"Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in \/ directory","Bash":"find  \/ -iname findcommandexamples.txt"}
{"English":"find all the files in the home folder that have not been modified in the last one year","Bash":"find $HOME -mtime +365"}
{"English":"Finds more than 5 days old files in two directories  and compresses them.","Bash":"find \/home\/folder1 \/home\/folder2 -type f -mtime +5 -exec compress {} \\;"}
{"English":"list all processes with its PIDs","Bash":"jobs -l"}
{"English":"find all the files in the current directory with the name \"wagoneer\" which are in the current device.","Bash":"find . -xdev -name \"wagoneer*\" -print"}
{"English":"Find all the files in file system which are accessed 50 days back","Bash":"find \/ -atime 50"}
{"English":"Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree","Bash":"find . -type f -name \"*.txt\" ! -name README.txt -print"}
{"English":"display all the files in the file system which do not belong to the user \"wnj\" and which are modified before the file \"ttt\"","Bash":"find \/ \\! \\( -newer ttt -user wnj \\) -print"}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find . -name test -type d -exec rm -r {} \\;"}
{"English":"display only the file names of all the files which end with \".deb\"","Bash":"find . -name '*.deb' -printf \"%f\\n\""}
{"English":"List the commands in \/usr\/bin, pausing for user input after each page.","Bash":"more <( ls \/usr\/bin )"}
{"English":"Count all directories under current directory","Bash":"find . -type d -exec ls -dlrt {} \\; | wc --lines"}
{"English":"search for MP3 files in the current folder and subfolders exclude dir1 AND dir2","Bash":"find ! -path \"dir1\" ! -path \"dir2\" -iname \"*.mp3\""}
{"English":"Find all empty directories in the current one and delete them","Bash":"find . -type d -maxdepth 1 -empty -print0 | xargs -0 \/bin\/rmdir"}
{"English":"Change the ownership of \"file.sh\" to \"root\"","Bash":"sudo chown root file.sh"}
{"English":"add read permission to others for the files in the current folder having the name \"rc.conf\" in their name.","Bash":"find . -name \"*rc.conf\" -exec chmod o+r '{}' \\;"}
{"English":"Find all *.jpg files under current directory and print only duplicate names","Bash":"find . -name \\*.jpg -exec basename {} \\; | uniq -d"}
{"English":"Search in the current directory and all sub-directories except .\/D for the file named hi.dat.","Bash":"find . \\( -name D -prune \\) -o -name hi.dat"}
{"English":"Receive input and print it to terminal preceeding with line number","Bash":"cat -n"}
{"English":"Search the \/dir directory tree for files whose names match regular expression '2015.*(album|picture)'","Bash":"find \/dir|egrep '2015.*(album|picture)'"}
{"English":"create directory \/etc\/cron.5minute","Bash":"mkdir \/etc\/cron.5minute"}
{"English":"Print the ping statistics of 4 requests to \"www.google.com\"","Bash":"ping -c4 www.google.com | awk '\/---\/,0'"}
{"English":"find and delete all the files in the entire file system whose size is greater than 100MB.","Bash":"find \/ -size +100M -exec rm -rf {} \\;"}
{"English":"Append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable 'KEY'","Bash":"KEY+=`date -r \"$arg\" +\\ %s`"}
{"English":"search through only the \/usr and \/home directories for any file named Chapter1.txt","Bash":"find \/usr \/home -name Chapter1.txt -type f"}
{"English":"display all the files in the entire file system which begin with \"apache-tomcat\"","Bash":"find \/ -name \"apache-tomcat*\""}
{"English":"find files in the users home directory and for each one, ask the user to confirm to delete the file.","Bash":"find $HOME\/. -name *.txt -ok rm {} \\;"}
{"English":"Find all directories under minimum 1 level down the  $GIVEN_DIR directory","Bash":"find \"$GIVEN_DIR\" -type d -mindepth 1"}
{"English":"Find all files\/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names","Bash":"find \"$STORAGEFOLDER\" -name .todo -printf '%h\\n'"}
{"English":"Display the total count of all the files\/directories with '.old' extension under current directory tree","Bash":"find . -name \u201c*.old\u201d -print | wc -l"}
{"English":"Recursively copies \"$1\" to \"$2\".","Bash":"cp -R \"$1\" \"$2\""}
{"English":"Search the current directory tree for files whose names contain \"bills\"","Bash":"find . -name '*bills*' -print"}
{"English":"Display unique names of logged in users","Bash":"finger | sed 's\/\\t\/ \/' | sed 's\/pts\\\/[0-9]* *[0-9]*\/\/' | awk '{print $2\"\\t(\"$1\")\\t\"$3\" \"$4\" \"$5}' | sort | uniq"}
{"English":"display all files in the current folder which are not empty","Bash":"find . ! -size 0k"}
{"English":"list all js files under currect directory exculde the directory which path contain \"\/path\/to\/search\/exclude_me\" or name isexclude_me_too_anywhere","Bash":"find \/path\/to\/search                    \\   -type d                               \\     \\( -path \/path\/to\/search\/exclude_me \\        -o                               \\        -name exclude_me_too_anywhere    \\      \\)                                 \\     -prune                              \\   -o                                    \\   -type f -name '*\\.js' -print"}
{"English":"Find all files\/directories named orm.properties under  \/eserver6\/share\/system\/config\/cluster directory","Bash":"find \/eserver6\/share\/system\/config\/cluster -name \"orm.properties\""}
{"English":"Find all files\/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages","Bash":"find . -name \"openssl\" | sed '\/Permission denied\/d;'"}
{"English":"Find empty files\/directories under test directory","Bash":"find test -empty"}
{"English":"Find all files\/directories with '.js' extension under current directory tree excluding paths that contain the directory '.\/directory'","Bash":"find -name \"*.js\" -not -path \".\/directory\/*\""}
{"English":"Print a hex dump byte to byte of the output of \"echo Aa\"","Bash":"echo Aa | od -t x1"}
{"English":"List files in the current directory","Bash":"find . \\( -path '.\/*' -prune \\)"}
{"English":"search for text files in the directory \"\/home\/user1\" and copy them to the directory \/home\/backup","Bash":"find \/home\/user1 -name '*.txt' | xargs cp -av --target-directory=\/home\/backup\/ --parents"}
{"English":"Find all executables under \/path directory","Bash":"find \/path -perm \/ugo+x"}
{"English":"Find all files\/directories under \/proc and run ls command on each.","Bash":"find \/proc -exec ls '{}' \\;"}
{"English":"Execute \"ls\" every 2 seconds","Bash":"watch ls"}
{"English":"find all the files in the current directory and search for the word \"pw0\" in them.","Bash":"find . -exec grep -i \"pw0\" {} \\;"}
{"English":"search for a regular\/normal file \"myfile\" in the entire file system excluding the folder in excluded_path","Bash":"find \/ -path excluded_path -prune -o -type f -name myfile -print"}
{"English":"Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches","Bash":"find . -print0 -name '*.coffee'|xargs -0 grep -m1 -ri 're'"}
{"English":"Display the first 32 bytes in \"foo\" as printable characters with 16 characters per line","Bash":"od -c foo |head -2"}
{"English":"Create a symbolic link in \"\/bar\/tmp\/\" for each file in directory \"\/foo\" that does not start with \"runscript\"","Bash":"find \/foo -maxdepth 1 -type f ! -name 'runscript*' -exec ln -s {} \/bar\/tmp\/ \\;"}
{"English":"Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with \/proc in their paths","Bash":"find $1 -name \"$2\" | grep -v '\/proc' | xargs grep -Hn \"$3\" {} \\;"}
{"English":"list regular file which file name is NOT end with '.html' in current directory in current directory","Bash":"find . -type f -not -name \"*.html\""}
{"English":"Move \"file.txt\" to docker container \"$CONTAINER_ID\" in path \"\/var\/lib\/docker\/devicemapper\/mnt\/$CONTAINER_ID\/rootfs\/root\/file.txt\"","Bash":"mv -f file.txt \/var\/lib\/docker\/devicemapper\/mnt\/$CONTAINER_ID\/rootfs\/root\/file.txt"}
{"English":"search for a word in all the files in the current directory","Bash":"find . -exec grep chrome {} \\;"}
{"English":"Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames","Bash":"find . |sed 's,\\(.*\\)\/\\(.*\\)$,\\1\/\\2\\t\\1\/\\L\\2,'|sort|uniq -D -f 1|cut -f 1"}
{"English":"Find writable files in the current directory tree","Bash":"find . -writable"}
{"English":"Recursively set all permissions under \"\/folder\" to 755","Bash":"chmod 755 \/folder -R"}
{"English":"Search all files from the \/tmp directory tree for the string \"search string\"","Bash":"find \/tmp -type f -exec grep 'search string' '{}' \/dev\/null \\+"}
{"English":"display all the log files in the folder \/var\/log, print0 is used to handle files with only spaces in their names or which have newlines in their names","Bash":"find \/var\/log -name \"*.log\" -print0"}
{"English":"List all ~\/bin\/FilesDvorak\/.* (non-recursive) and ~\/.PAST_RC_files\/.* (recursive) files\/directories and take common entries between these two lists","Bash":"comm -12 <(find ~\/bin\/FilesDvorak\/.* -maxdepth 0) <(find ~\/.PAST_RC_files\/.*)"}
{"English":"Display who is logged on and what they are doing","Bash":"w"}
{"English":"find all regex  '\\.\/[a-f0-9\\-]\\{36\\}\\.jpg' files","Bash":"find . -regex '\\.\/[a-f0-9\\-]\\{36\\}\\.jpg'"}
{"English":"Find mysong.ogg anywhere under the home directory","Bash":"find $HOME -name 'mysong.ogg'"}
{"English":"Force create a symbolic link named \"mylink\" with target \"\/apps\/myapps\/new\/link\/target\"","Bash":"ln -f -s \/apps\/myapps\/new\/link\/target mylink"}
{"English":"List first 5 files named 'something' that are found under current directory","Bash":"find . -name something -print | head -n 5"}
{"English":"Find all files in the current directory tree containing \"foo\" in their names","Bash":"find . -print | grep -i foo"}
{"English":"find all files ending with \"js.compiled\" in current folder","Bash":"find . -type f -name \"*.js.compiled\""}
{"English":"Make directories \"$@\" verbosely and replace \"mkdir: created directory \" with \"jar-jar: yea, weesa gotta \" in the output","Bash":"mkdir -v \"$@\" | sed 's\/mkdir: created directory \/jar-jar: yea, weesa gotta \/'"}
{"English":"Remove all files and directories in the current directory by answering with \"y\" to all prompts","Bash":"yes | \/bin\/rm -i *"}
{"English":"Cut off three last symbols from string '1234567890  *'","Bash":"echo '1234567890  *' | rev | cut -c 4- | rev"}
{"English":"Create a symbolic link named \".bash_profile\" to \".bashrc\"","Bash":"ln -s .bashrc .bash_profile"}
{"English":"Print each unique entry in \"ip_addresses\" followed by a count","Bash":"cat ip_addresses | sort | uniq -c | sort -nr | awk '{print $2 \" \" $1}'"}
{"English":"Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory.","Bash":"top -b -d 1 | grep myprocess.exe | tee output.log"}
{"English":"display a long listing of all the directories in the current folder","Bash":"find . -type d -exec ls -algd {} \\;"}
{"English":"Prints long listing of directories '\/tmp', '\/tnt' themselves.","Bash":"ls -ld \/tmp \/tnt"}
{"English":"Mount \"tmpfs\" filesystem to \"\/path\/to\/dir\"","Bash":"mount none -t tmpfs \/path\/to\/dir"}
{"English":"Find all files\/directories matching the regex pattern \".*\\\\.rb$\" under current directory","Bash":"find . -regex \".*\\\\.rb$\""}
{"English":"Print sorted list of unique users logged in followed by a total count","Bash":"who | awk '{ print $1; }' | sort -u | awk '{print $1; u++} END{ print \"users: \" u}'"}
{"English":"move files accessed more than one day ago to directory TMP","Bash":"find . -atime +1 -type f -exec mv {} TMP \\; # mv files older then 1 day to dir TMP"}
{"English":"find all the files in the entire file system that start with top","Bash":"find \/ -name 'top*'"}
{"English":"Find all the files which are accessed in last 1 hour","Bash":"find \/ -amin -60"}
{"English":"For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.","Bash":"join -v1 <(sort file1) <(sort file2)"}
{"English":"Sort and remove duplicate lines in the output of \"finger\"","Bash":"finger | sort -u"}
{"English":"Search the \/root directory recursively for the regular file named \"myfile\" ignoring \"work\" directories","Bash":"find \/root\/ -name 'work' -prune -o -name myfile -type f -print"}
{"English":"Save the current working directory to variable \"CURRENT\"","Bash":"CURRENT=`pwd`"}
{"English":"Find files on the system bigger than 50MB but smaller than 100MB","Bash":"find \/ -type f -size +50M -size -100M"}
{"English":"Find files patching \"pattern\"","Bash":"find . -name \"pattern\" -print"}
{"English":"Search the \/tmp directory tree for files owned by user `ian'","Bash":"find \/tmp -user ian"}
{"English":"display all the configuration files in \"\/etc\" folder along with their last access and modified timestamps","Bash":"find \/etc -name \"*.conf\" -printf \"%f accessed %AF %Ar, modified %TF %Tr\\n\""}
{"English":"Recursively finds and compresses all files in a current folder.","Bash":"find . -type f -exec bzip2 {} +"}
{"English":"Create a symbolic link named the basename of \"$file\" to \"$file\"","Bash":"ln -s $file `basename $file`"}
{"English":"Find out if there are any files on the system owned by user `account'","Bash":"find \/ -path \/proc -prune -o -user account -ls"}
{"English":"Set up a local SSH tunnel from port 80 to port 3000","Bash":"sudo ssh $USERNAME@localhost -L 80:localhost:3000 -N"}
{"English":"Answer \"y\" to all \"Are you sure?\" prompts from command \"cp * \/tmp\"","Bash":"yes | cp * \/tmp"}
{"English":"Find movies over a gigabyte in size","Bash":"find ~\/Movies\/ -size +1024M"}
{"English":"Remove the last 3 characters from 987654321, keeping only 987654","Bash":"echo 987654321 | rev | cut -c 4- | rev"}
{"English":"Find & Substitute Only 2nd Occurrence of a Word Using sed s\/\/2 in all .txt files","Bash":"find . -type f -name \"*.txt\" -exec sed 's\/Linux\/Linux-Unix\/2' thegeekstuff.txt"}
{"English":"Print a sorted list of the extensions of the regular files from the current directory tree","Bash":"find . -type f | sed -e 's\/.*\\.\/\/' | sed -e 's\/.*\\\/\/\/' | sort -u"}
{"English":"Write the output of \"false\" to standard output and to \"\/dev\/null\"","Bash":"false | tee \/dev\/null"}
{"English":"Find files under \/etc\/apache-perl that are modified more recently than \/etc\/apache-perl\/httpd.conf","Bash":"find \/etc\/apache-perl -newer \/etc\/apache-perl\/httpd.conf"}
{"English":"Recursively removes all files like '_*' and '.DS_Store' from \/var\/www\/html\/ folder.","Bash":"rm \/var\/www\/html\/**\/_* \/var\/www\/html\/**\/.DS_Store"}
{"English":"Print all unique file paths under \"dir1\" compared to \"dir2\"","Bash":"comm -23 <(find dir1 | sed 's\/dir1\/\\\/\/'| sort) <(find dir2 | sed 's\/dir2\/\\\/\/'| sort) | sed 's\/^\\\/\/dir1\/'"}
{"English":"find all text files in user\/directory\/ and display the last line","Bash":"find \/user\/directory\/* -name \"*txt\" -mtime 0   -type f -exec awk '{s=$0};END{print FILENAME, \": \",s}' {} \\;"}
{"English":"Receive pattern to search for on the standard input and print only matching part of lines from file 'f.html'","Bash":"cat f.html | grep -o \\"}
{"English":"search for the file test.txt in the folders \/home and \/opt","Bash":"find \/home \/opt -name test.txt"}
{"English":"Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'","Bash":"echo 0a.00.1 usb controller some text device 4dc9 | rev | cut -b1-4 | rev"}
{"English":"SSH with parameters specified in \"$@\" using key file \"~\/.ssh\/gitkey_rsa\"","Bash":"ssh -i ~\/.ssh\/gitkey_rsa \"$@\""}
{"English":"Print the terminal file of the users who are logged in with \"admin\" in their name","Bash":"who |grep -i admin |cut -c10-20"}
{"English":"Counts sum of non-empty lines from all .php files in a current folder.","Bash":"find . -name \"*.php\" | xargs grep -v -c '^$' | awk 'BEGIN {FS=\":\"} { cnt = cnt + $2} END {print cnt}'"}
{"English":"Find all directories whose name is Tecmint in \/ directory","Bash":"find \/ -type d -name Tecmint"}
{"English":"login as user postgres","Bash":"sudo su -l oracle"}
{"English":"Search the current directory tree for all .java files newer than the file build.xml","Bash":"find . -name '*.java' -newer build.xml -print"}
{"English":"display all regular\/normal files in the current folder that were accessed exactly 7*24 hours back","Bash":"find . -type f -atime 7"}
{"English":"Merge files 'text.txt' and 'codes.txt' by outputting any lines whose second field in the first matches the first field in the second.","Bash":"join -1 2 -2 1 text.txt codes.txt"}
{"English":"Find all files\/directories under current directory that were accessed 30 minutes ago","Bash":"find -amin 30"}
{"English":"Find all empty directories under \/tmp and below","Bash":"find \/tmp -type d -empty"}
{"English":"find a.out, *.o and core files under the current directory and sub-directories and delete them.","Bash":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}
{"English":"Decompress ${set1[@]} files with gzip","Bash":"gzip -d ${set1[@]} &"}
{"English":"change group of the file \/tmp\/php_session to group daemon","Bash":"chown -R :daemon \/tmp\/php_session"}
{"English":"Find all files with '.txt' extension under '\/home\/my_dir' dirctory tree and display the number of lines in these files","Bash":"find \/home\/my_dir -name '*.txt' | xargs grep -c ^.*"}
{"English":"find all the directories in the current folder excluding search in the sub directories and create these directories in another path","Bash":"find . -maxdepth 1 -type d | xargs -I X mkdir '\/new\/directory\/X'"}
{"English":"Find all .c, .h files in the current directory tree and search them for string \"expr\"","Bash":"find . -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"Make directorie(s) 'es\/LC_MESSAGES' as needed in the current directory","Bash":"mkdir -p es\/LC_MESSAGES"}
{"English":"Save the UTC date represented by time string $sting2 as the seconds since epoch to variable 'FinalDate'","Bash":"FinalDate=$(date -u -d \"$string2\" +\"%s\")"}
{"English":"Print percentage of the space used on the $FILESYSTEM.","Bash":"df -k $FILESYSTEM | tail -1 | awk '{print $5}'"}
{"English":"display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2","Bash":"find . -type d -regextype posix-egrep -regex '\\.\/processor[0-9]*\/10\\.(1|2)'"}
{"English":"Force delete all files in the current folder","Bash":"find . | xargs -i rm -f \"{}\""}
{"English":"List in detail all *.txt files in the current directory tree, omitting paths .\/Movies\/*, .\/Downloads\/*, and .\/Music\/*","Bash":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\" -ls"}
{"English":"Count the number of files named 'job.history' under '\/data\/SpoolIn' directory tree that match 'FAIL' in their contents","Bash":"find \/data\/SpoolIn -name job.history -exec grep -l FAIL {} \\+ | wc -l"}
{"English":"Find files\/directories under current directory without descending into it","Bash":"find -prune"}
{"English":"Print bash environment variable array \"fields\" and its values","Bash":"set | grep ^fields=\\\\\\|^var="}
{"English":"Delete all *.zip files under current directory that are older than 2 days","Bash":"find . -name \"*.zip\" -mtime +2 orint0 | xargs -0 rm"}
{"English":"list regular file which file name end with '*.c' or '*.sh' in current directory","Bash":"find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}
{"English":"Find all files\/directories under current directory that match the case insensitive glob pattern {EA,FS}_*","Bash":"find . -iname \"{EA,FS}_*\""}
{"English":"Print \"new.txt\" with line numbers prepended","Bash":"cat new.txt  | nl"}
{"English":"read all history lines not already read from the history file","Bash":"history -n"}
{"English":"Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory","Bash":"find . \\( -name *.rb -or -name *.html -or -name *.js -or -name *.coffee -or -name *.css -or -name *.scss -or -name *.erb -or -name *.yml -or -name *.ru \\) -print0 | xargs -0 sed -i '' -E \"s\/[[:space:]]*$\/\/\""}
{"English":"Recursively lists all files in a current folder in long format.","Bash":"ls -ld $(find .)"}
{"English":"Find the passwd file under root and one level down.","Bash":"find -maxdepth 2 -name passwd"}
{"English":"Print the day at 1 day ago in 2 months from now","Bash":"date -d \"$(date -d \"2 months\" +%Y-%m-1) -1 day\" +%a"}
{"English":"Find all directories under 'test' directory tree whose paths match the regex '.*\/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'","Bash":"find test -type d -regex '.*\/course[0-9]\\.[0-9]\\.[0-9]\\.[0-9]$'"}
{"English":"Display differences between a and b side-by-side","Bash":"diff -y a b"}
{"English":"Print content of all files ending with '*.foo' under the current directory","Bash":"cat $(find . -name '*.foo')"}
{"English":"search for all the files in the current folder and sort them in the order of their depth and display the file names","Bash":"find -type d -printf '%d\\t%P\\n' | sort -r -nk1 | cut -f2-"}
{"English":"Saves in 'result' variable list of groups which user $line belongs to, and not matching pattern \"_unknown|sciences|everyone|netaccounts\"","Bash":"result=$(groups \"$line\" | sed 's\/ \/\\n\/g' | egrep -v \"_unknown|sciences|everyone|netaccounts\")"}
{"English":"Find x* files\/directories under \/tmp directory whose status was changed less than 1 day ago and move them to ~\/play","Bash":"find \/tmp\/ -ctime -1 -name \"x*\" | xargs -I '{}' mv '{}' ~\/play\/"}
{"English":"Replace all spaces with underscores in file paths under current directory.","Bash":"find -name \"* *\" -type f | rename 's\/ \/_\/g'"}
{"English":"display all the files in the current folder which do not belong to any user","Bash":"find . -nouser"}
{"English":"switch to user username","Bash":"su username"}
{"English":"change owner and group of the file uid_demo to user and group root","Bash":"sudo chown root:root uid_demo"}
{"English":"display all the files in the current folder","Bash":"find . | awk '{ print \"FILE:\" $0 }'"}
{"English":"Verbosely compresses all files on fourth and fifth depth level keeping original files in place.","Bash":"bzip2 -kv *\/*\/*\/*\/*"}
{"English":"Find all *.jpg files\/directories under current directory","Bash":"find . -name '*.jpg'"}
{"English":"Copies all files under the current folder like \"file.ext\" with \"FooBar\" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.","Bash":"find . -name \"file.ext\"| grep \"FooBar\" | xargs -i cp -p \"{}\" ."}
{"English":"display all the trace files (\".trc\") from the folder $DBA\/$ORACLE_SID\/bdump\/ which have not been accessed in the last 7*24 hours","Bash":"find $DBA\/$ORACLE_SID\/bdump\/*.trc -mtime +7"}
{"English":"Variable PID contains a process ID, send SIGTERM to this process if it exists.","Bash":"kill $PID"}
{"English":"List file contents of compressed file $i","Bash":"gzip -l $i"}
{"English":"Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in file \"index.html\" and make a backup with suffix \".bak\"","Bash":"sed -i.bak s\/STRING_TO_REPLACE\/STRING_TO_REPLACE_IT\/g index.html"}
{"English":"Find regular files named \"expression -and expression\" under and below \/dir\/to\/search\/","Bash":"find \/dir\/to\/search\/ -type f -name 'expression -and expression' -print"}
{"English":"display all empty files in the current folder","Bash":"find . -size 0k"}
{"English":"Search for the pattern '^use strict' in all *.pl files under current directory","Bash":"find . -name '*.pl' | xargs    grep -L '^use strict'"}
{"English":"Find all files\/directories under current directory in maximum 3 levels deep","Bash":"find -maxdepth 3"}
{"English":"Print file names of all files ending with '*.csv' in  '\/home\/ABC\/files\/' directory","Bash":"ls \/home\/ABC\/files\/*.csv | rev | cut -d\/ -f1 | rev"}
{"English":"Report all files starting in the directories \/mydir1 and \/mydir2 larger than 2,000 blocks that have not been accessed in over 30 days","Bash":"find \/mydir1 \/mydir2 -size +2000 -atime +30 -print"}
{"English":"Opens gcc info manual and goes to a node pointed by index entry \"funroll-loops\".","Bash":"info gcc --index-search=funroll-loops"}
{"English":"List all environment variables (name and value) whose name either equals PATH or starts with GOBIN","Bash":"env | grep '^\\(GOBIN\\|PATH=\\)'"}
{"English":"Find all MP3s in the \/home directory tree","Bash":"find \/home -type f -name '*.mp3'"}
{"English":"grep for the last occurrence of text between two tags","Bash":"tac a | grep -m1 -oP '(?<=tag>).*(?=<\/tag>)'"}
{"English":"Find all regular files in the current directory tree and search them for \"example\"","Bash":"find -type f -print0 | xargs -r0 grep -F 'example'"}
{"English":"Find all the files in file system which are changed in last 1 hour","Bash":"find \/ -cmin -60"}
{"English":"Find all *.ogg (case insensitive) files\/directories under your home directory","Bash":"find $HOME -iname '*.ogg'"}
{"English":"Find files\/directories under '\/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time","Bash":"find \/dir -newer yesterday.ref -a \\! -newer today.ref -print"}
{"English":"Find recursively all regular files changed within the last 5 minutes starting from directory b","Bash":"find b -type f -cmin -5"}
{"English":"recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user","Bash":"chown \"dev_user\".\"dev_user\" -R ~\/.ssh\/"}
{"English":"Find all .rpm files and change their permissions to 755","Bash":"find \/ -name *.rpm -exec chmod 755 '{}' \\;"}
{"English":"Get the total size of all files under dir1 directory","Bash":"find dir1 ! -type d -printf \"%s\\n\" | awk '{sum += $1} END{print sum}'"}
{"English":"Find files with group write permission and remove the permission","Bash":"find . -perm -20 -exec chmod g-w {} ;"}
{"English":"Search the \/mnt\/raid\/upload directory tree for files that have been modified within the last 7 days","Bash":"find \/mnt\/raid\/upload -mtime -7 -print"}
{"English":"search all undo files(ending with .undo) in the current folder and calculate the total size of them","Bash":"find -name '*.undo' -exec wc -c {} + | tail -n 1"}
{"English":"Print list of all user names who are logged in","Bash":"who | awk '{ print $1 }'"}
{"English":"Recursively search for all directories containing \"foo\" (case insensitive) under the current directory, renaming them to replace \"foo\" (case insensitive) with \"Bar\"","Bash":"find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +"}
{"English":"display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00","Bash":"find . -daystart -ctime 4 -ls -type f"}
{"English":"find files in the current directory having name \"filename\"","Bash":"find -iname \"filename\""}
{"English":"Archive any files changed in the last day from \"remote_host\" to \"local_dir\"","Bash":"rsync -av remote_host:'$(find logs -type f -ctime -1)' local_dir"}
{"English":"Recursively finds in all folders but \".\/output\/*\" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.","Bash":"find .  \\( ! -path \".\/output\/*\" \\) -a \\( -type f \\) -a \\( ! -name '*.o' \\) -a \\( ! -name '*.swp' \\) | xargs grep -n soc_attach"}
{"English":"Go to directory \/some\/where\/long","Bash":"cd \/some\/where\/long"}
{"English":"Make directories to \"\/my\/other\/path\/here\" as needed","Bash":"mkdir -p \/my\/other\/path\/here"}
{"English":"Search recursively through \/mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.","Bash":"find \/mydir | xargs -I{} basename {}"}
{"English":"Find symbolic links in \/usr\/lib and \/usr\/lib64 to files whose pathnames contain \"libstdc++\"","Bash":"find  \/usr\/lib\/ \/usr\/lib64\/ -lname \"*libstdc++*\""}
{"English":"Create a symbolic link named \"foo\" to \"\/var\/cache\/apt\/archives\/bash_4.3-14ubuntu1_amd64.deb\"","Bash":"ln -s   \/var\/cache\/apt\/archives\/bash_4.3-14ubuntu1_amd64.deb foo"}
{"English":"Sort the contents of file \"ips.txt\", eliminate duplicate entries, and prefix each entry with number of occurrences.","Bash":"sort ips.txt | uniq -c"}
{"English":"Delete all __temp__* directories under maximum 1 level down the current directory tree","Bash":"find . -maxdepth 1 -type d -name '__temp__*' -print0 | xargs -0 rm -rf"}
{"English":"Sort file1 and file2 then display differences between them.","Bash":"diff <(sort file1 -u) <(sort file2 -u)"}
{"English":"Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter","Bash":"find . -name .snapshot -prune -o \\( -type f -mtime 0 -print0 \\)"}
{"English":"display all the files ending with \".foo\" including those that are in the directory \".snapshot\", this is the wrong way of using prune.","Bash":"find . \\( -name .snapshot -prune -o -name '*.foo' \\) -print"}
{"English":"Change the ownership to eva for all files\/directories that belong to the user 'george' in the entire file system without traversing to other devices\/partitions","Bash":"find -x \/ -user george -print0 | xargs -0 chown eva"}
{"English":"Create a symbolic link in the current directory to \"$file\"","Bash":"ln -s \"$file\""}
{"English":"Remove all files in the ~\/backups\/mydatabasename directory recursively that were last modified more than 30 days ago","Bash":"find ~\/backups\/mydatabasename\/* -mtime +30 -exec rm {} \\;"}
{"English":"Read lookup requests from text file '1.txt' and uses them to fetch TXT records.","Bash":"dig TXT -f 1.txt"}
{"English":"Find all file.ext files\/directories under present working directory and print . for each of them","Bash":"find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}
{"English":"Create a new directory \"existing-dir\/new-dir\/\" on host \"node\"","Bash":"rsync \/dev\/null node:existing-dir\/new-dir\/"}
{"English":"Search directory tree \/srv\/${x} for regular files accessed at least 10080 minutes ago, and remove those files","Bash":"find \/srv\/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \\;"}
{"English":"Find all files\/directories under \/myfiles that were accessed more than 30 days ago","Bash":"find \/myfiles -atime +30"}
{"English":"Archive \"\/path\/to\/sfolder\/\" to \"name@remote.server:\/path\/to\/remote\/dfolder\" preserving hard links and compressing the data during transmission","Bash":"rsync -aHvz \/path\/to\/sfolder\/ name@remote.server:\/path\/to\/remote\/dfolder"}
{"English":"List files in the current directory and below except for GIT files","Bash":"find . -not -iwholename '*\/.git\/*'"}
{"English":"Get A record for domain $domain","Bash":"dig -t A $domain"}
{"English":"Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory","Bash":"find ~\/Books -type f -name Waldo"}
{"English":"Find all files under \/path and below writable by `group' or `other'","Bash":"find \/path -perm \/g+w,o+w"}
{"English":"finda ll the files in the current folder that are modified today.","Bash":"find ~ -type f -mtime 0 -ls"}
{"English":"Find files ending in \"*macs\"","Bash":"find -name '*macs'"}
{"English":"Store content of uncompressed file \"$file.fastq\" in variable \"reads\"","Bash":"reads=$(zcat $file.fastq)"}
{"English":"Removes all files from current folder but 5 newest ones.","Bash":"rm `ls -t | awk 'NR>5'`"}
{"English":"find all the regular\/normal files in the current directory which do not have the extension comment and and redirect the output to \/tmp\/list","Bash":"find . -type f \\! -name \"*.Z\" \\! -name \".comment\" -print | tee -a \/tmp\/list"}
{"English":"Search the current directory tree for directories that can be opened by noone","Bash":"find -type d ! -perm -111"}
{"English":"Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\".","Bash":"find . -name \"*_test.rb\" | xargs rename s\/_test\/_spec\/"}
{"English":"Find all PHP files under current directory that contain only one line","Bash":"find -name *.php -print | xargs -L1 awk 'NR>1{exit} END{if(NR==1) print FILENAME}'"}
{"English":"Move all files\/directories under current directory to destDir","Bash":"find sourceDir -print0 | xargs -0 mv -t destDir"}
{"English":"Find all files\/directories under $something directory","Bash":"find $something"}
{"English":"Find all files modified on the 7th of June, 2007, starting from the current directory","Bash":"find . -type f -newermt 2007-06-07 ! -newermt 2007-06-08"}
{"English":"Print the last 10 lines of '\/var\/log\/syslog', printing out any additional data appended to the file","Bash":"tail -f \/var\/log\/syslog"}
{"English":"Find all files under $1 not matching the regex '.*\/\\..*' and execute hashmove on each of them with the file path as its argument","Bash":"find $1 -type f -not -regex '.*\/\\..*' -exec $0 hashmove '{}' \\;"}
{"English":"Decompress \"path\/to\/test\/file.gz\" to standard output and save all lines matching \"my regex\" to files with a 1000000 line limit","Bash":"gzip -dc path\/to\/test\/file.gz | grep -P --regexp='my regex' | split -l1000000"}
{"English":"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago","Bash":"find $LOCATION -name $REQUIRED_FILES -type f -mtime +1 -delete"}
{"English":"Find all files in the current directory tree that match pattern 'a(b*'","Bash":"find . -name 'a(b*' -print"}
{"English":"Clean up all zombie processes by sending SIGTERM signal to their parent process, which requests them to terminate.","Bash":"kill $(ps -A -ostat,ppid | awk '\/[zZ]\/{print $2}')"}
{"English":"Creates temporary file with name formatted like '.script.XXXXXX' in '\/tmp\/' folder and saves path to it in 'script1' variable.","Bash":"script1=`mktemp \/tmp\/.script.XXXXXX`;"}
{"English":"display all the files in the home folder which begin with \"arrow\" and end with \"xbm\"","Bash":"find ~ -name 'arrow*.xbm'"}
{"English":"Print the list of files changed within the last minute","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"Read the first line of output from \"du -s $i\" into variable \"k\" in ksh","Bash":"du -s $i | read k"}
{"English":"Read a line from standard input into variable \"text\" with the prompt \" Enter Here: \"","Bash":"read -p \" Enter Here : \" text"}
{"English":"Set variable value to current kernel release name.","Bash":"value=$(uname -r)"}
{"English":"Prints calendar of April of 2012, and redirects output to 't' file and 'more' pager tool.","Bash":"cal April 2012 | tee t | more"}
{"English":"change the permissions of all the directories in the folder root_dir to 555","Bash":"find root_dir -type d -exec chmod 555 {} \\;"}
{"English":"Display differences between \/destination\/dir\/1 and \/destination\/dir\/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'","Bash":"diff -x '*.foo' -x '*.bar' -x '*.baz' \/destination\/dir\/1 \/destination\/dir\/2"}
{"English":"Read a single character from standard input into variable \"key\" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y\/n) : ' and default value $'Y'","Bash":"read -rp $'Are you sure (Y\/n) : ' -ei $'Y' key"}
{"English":"display all directories in the folder \"PROD\" and do not search in the sub directories","Bash":"find \/PROD -maxdepth 1 -type d"}
{"English":"Find all directories that do not contain \"main.cpp\"","Bash":"diff <(find . -exec readlink -f {} \\; | sed 's\/\\(.*\\)\\\/.*$\/\\1\/' | sort | uniq) <(find . -name main.cpp  -exec readlink -f {} \\; | sed 's\/\\(.*\\)\\\/.*$\/\\1\/' | sort | uniq) | sed -n 's\/< \\(.*\\)\/\\1\/p'"}
{"English":"List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.","Bash":"find .\/in_save\/ -type f -maxdepth 1| more"}
{"English":"Force create a symbolc link named \"softlink_name\" to \"source_file_or_directory_name\" without dereferencing \"softlink_name\"","Bash":"ln -sfn source_file_or_directory_name softlink_name"}
{"English":"Find all directories under \/home\/username\/public_html\/modules  and set their permission to 750","Bash":"find \/home\/username\/public_html\/modules -type d -exec chmod 750 {} +"}
{"English":"List all files and directories in the \/home directory tree whose names are \"Trash\"","Bash":"find \/home -name Trash -exec ls -al {} \\;"}
{"English":"Display standard input as a table with \"${tab}\" separators","Bash":"column -s\"${tab}\" -t"}
{"English":"Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.","Bash":"find . -atime +30 -print"}
{"English":"Find all files\/directories under current directory that match the case insensitive extended regex .*\/(EA|FS)_.*","Bash":"find -E . -iregex '.*\/(EA|FS)_.*'"}
{"English":"find all the directories in the current folder which have been modified in 24 hours and move them to the folder  \/path\/to\/target-dir","Bash":"find . -depth -type d -mtime 0 -exec mv -t \/path\/to\/target-dir {} +"}
{"English":"Find all files in the current directory and below with extension .php and replace \"php\" with \"html\" in their names","Bash":"find .\/ -type f -name \"*.php\"  | xargs -r rename \"s\/php\/html\/\""}
{"English":"Output all lines from file1 except those present in file2, assuming both files are sorted.","Bash":"diff file2 file1 | grep '^>' | sed 's\/^>\\ \/\/'"}
{"English":"Print numbers from 1 to 10 with padded leading zeros","Bash":"seq -w 1 10"}
{"English":"Recursively prints paths to all text file in folder (ignores binary files).","Bash":"grep -RIl \"\" ."}
{"English":"Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script.","Bash":"dig @ns1.hosangit.com djzah.com +noall +authority +comments | awk -f script.awk"}
{"English":"Split \"$SOURCE_FILE\" into files of at most 100 lines each","Bash":"split -l 100 \"$SOURCE_FILE\""}
{"English":"Search for 'It took' in all $srch1* (case insensitive) files under current directory","Bash":"find . -iname \"$srch1*\" -exec grep \"It took\" {} \\; -print"}
{"English":"Find all files and directories whose names end in \".rpm\" and change their permissions to 755","Bash":"find \/ -name *.rpm -exec chmod 755 '{}' \\;"}
{"English":"Delete all files\/directories with node number $inum under current directory tree","Bash":"find . -inum $inum -exec rm {} \\"}
{"English":"Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir'","Bash":"find olddir -name script.sh -printf \"%p\\0\" -printf \"newdir\/%P\\0\" | xargs -0L2 cp -n"}
{"English":"List files in the current directory tree using echo","Bash":"find . -exec echo {} ;"}
{"English":"Set permissions for all direcotries under \/var\/www to 755","Bash":"find \/var\/www -type d -print0 | xargs -0 chmod 755"}
{"English":"Archive \".\/htmlguide\" to \"~\/src\/\" with resolved symbolic links and delete any extraneous files from \"~\/src\/\" not found in \".\/htmlguide\"","Bash":"rsync -av --copy-dirlinks --delete ..\/htmlguide ~\/src\/"}
{"English":"Send a single ping request with a TTL of 1 to \"192.168.1.1\"","Bash":"ping -c 1 -t 1 192.168.1.1"}
{"English":"Find all regular files on the system whose size is greater than 20000k","Bash":"find \/ -type f -size +20000k"}
{"English":"Print a count of all unique lines in \"ports.txt\" sorted from most frequent to least frequent","Bash":"sort ports.txt | uniq -c | sort -r"}
{"English":"find files which full path name is \/tmp\/foo\/bar under foo directory and print","Bash":"find \/tmp\/foo -path \/tmp\/foo\/bar -print"}
{"English":"Rename all files in current directory with names starting with \"fgh\" so they start with \"jkl\" instead","Bash":"rename 's\/^fgh\/jkl\/' fgh*"}
{"English":"find all files with pattern` '*.mp3'","Bash":"find \/ -name *.mp3"}
{"English":"Write \"Hello, world\" to standard output and to \"\/tmp\/outfile\"","Bash":"echo \"Hello, world\" | tee \/tmp\/outfile"}
{"English":"Print the path of all the network mounts","Bash":"mount | sed -n -e \"s\/\\\/\\\/mynetaddr on \\([^ ]*\\).*$\/\\1\/p\""}
{"English":"Recursively finds all files with whole word \"pattern\" in a current folder, and precedes found string with its number in file.","Bash":"grep -rnw `pwd` -e \"pattern\""}
{"English":"Find files\/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem","Bash":"find \/ -user tutonics -name \"file.txt\""}
{"English":"Print the list of files in the current directory tree skipping SVN files","Bash":"find . -path '*\/.svn*' -prune -o -print"}
{"English":"Find all files\/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem","Bash":"find \/ -user username -group groupname -name filename"}
{"English":"concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents","Bash":"head -n99999999 file1.txt file2.txt file3.txt"}
{"English":"Find all files\/directories that were modified after February 1st under '\/usr' directory tree","Bash":"find \/usr -newermt \"Feb 1\""}
{"English":"Print the characters in $b that match with any character in $a without printing any newline","Bash":"echo \"$b\" | grep -o \"[$a]\" | tr -d '\\n'"}
{"English":"Find suspicious PHP files","Bash":"find . -type f -name \"*.php\" -exec grep --with-filename \"eval(\\|exec(\\|base64_decode(\" {} \\;"}
{"English":"display all the files in current folder which have not been modified in the last 7 days","Bash":"find . -mtime +7"}
{"English":"Find all build* directories under \/var\/www\/html\/ and print all but first 5 appending with the string 'rf '","Bash":"find \/var\/www\/html\/ -type d -name \"build*\" | sort | tail -n +5 | xargs -I % echo -rf %"}
{"English":"Change directory to the real path of the directory containing the current script","Bash":"cd $(readlink -f $(dirname $0))"}
{"English":"Find all *.gz files\/directories under asia and emea directory","Bash":"find asia emea -name \\*.gz -print0 | xargs -0"}
{"English":"View history using \"vim\"","Bash":"vim <(history)"}
{"English":"find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1","Bash":"find . -name \\? -daystart -mtime +0 -mtime -3"}
{"English":"Find recursively the latest modified file in the current directory","Bash":"find . -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -f2- -d\" \""}
{"English":"Find all directories under \/home\/me\/\"$d\"","Bash":"find \/home\/me\/\"$d\" -type d"}
{"English":"Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.","Bash":"sort file | uniq | cut -f1 -d' ' | uniq -c | rev"}
{"English":"find files in current folder using name patterns and sort the display the file names in the sorted order","Bash":"find . -name \"S1A*1S*SAFE\" | rev | awk -F '\/' '{print $1}' | rev | sort -t _ -k 5"}
{"English":"Enables 'dotglob' shell option.","Bash":"shopt -s dotglob"}
{"English":"display all the .sh scripts and perl files in the current folder","Bash":"find . -type f \\( -iname \"*.sh\" -or -iname \"*.pl\" \\)"}
{"English":"Find all *.jpg files in *\/201111 paths","Bash":"find *\/201111 -name \"*.jpg\""}
{"English":"Print the current directory tree with file sizes","Bash":"tree -s"}
{"English":"Find all directories under var\/ directory and change their permission to 700","Bash":"find var\/ -type d -exec chmod 700 {} \\;"}
{"English":"split file \/usr\/bin\/firefox into pieces per 1000 lines","Bash":"split -n 1000 \/usr\/bin\/firefox"}
{"English":"Find all files in the current directory tree with extension .html and replace all occurences of \"php\" with \"html\" inside them","Bash":"find .\/ -type f -name *\".html\" | xargs sed -i \"s\/php\/html\/g\""}
{"English":"Recursively unzip files to stdout in \"\/some\/dir\/here\" and search for \"blah\"","Bash":"zcat -r \/some\/dir\/here | grep \"blah\""}
{"English":"Change permission to 000 of all directories named '.texturedata' under '\/path\/to\/look\/in\/' directory tree","Bash":"find \/path\/to\/look\/in\/ -type d -name '.texturedata' -exec chmod 000 {} \\; -prune"}
{"English":"find the file \"httpd.log\" in the folder \/home\/web-server\/ ( case insensitive search )","Bash":"find \/home\/web-server\/ -type f -iname httpd.log"}
{"English":"find all normal\/regular files in the current directory","Bash":"find . -type f -print"}
{"English":"From a script, output the name of the script itself, without containing directories - from a shell, output the name of the shell.","Bash":"basename -- $0"}
{"English":"Find all directories under current directory and replace all null delimiters with : in the output then remove the last :","Bash":"find -type d -print0 | sed -e \"y\/\\d0\/:\/;s\/:$\/\/;\""}
{"English":"Search for *pattern* in and below current directory","Bash":"find -name \"*pattern*\""}
{"English":"List files larger than 9MB residing in the current directory and below","Bash":"find . -size +9M"}
{"English":"Find all directories by the name `httpdocs' on the system","Bash":"find \/ -type d -name 'httpdocs'"}
{"English":"Find all 400 permission files under \/data directory with null character as the delimiter","Bash":"find \/data -type f -perm 400 -print0"}
{"English":"Remove containing directories from variable 'path' ie. \"\/some\/specific\/directory\" becomes \"directory\".","Bash":"path=$(basename $path)"}
{"English":"find not case sensitive all directories that names are 'apt'","Bash":"find  \/ -type d -iname \"apt\""}
{"English":"Remove regular files in the current directory tree","Bash":"find . -type f -print0 | xargs -0 -n1 echo rm | sh -x"}
{"English":"List environment variables whose name matches \".*X.*\"","Bash":"set | awk -F \"=\" '{print $1}' | grep \".*X.*\""}
{"English":"Change directory to the directory containing file path \"$1\"","Bash":"cd \"$(dirname \"$1\")\""}
{"English":"find al the files that are modified exactly 2 days ago","Bash":"find -daystart -mtime 2"}
{"English":"find all the files in the entire file system whose size is greater than 20MB","Bash":"find \/ -type f -size +20000k"}
{"English":"Replace all occurrence of \"log_errors = Off\" with \"log_errors = On\" in all 'php.ini' files in the current directory tree","Bash":"find . -name 'php.ini' -exec sed -i 's\/log_errors = Off\/log_errors = On\/g' \"{}\" \\;"}
{"English":"get all the files that are exactly 30 days old","Bash":"find . -mtime 30 -print"}
{"English":"Create all directories in the path specified by variable $tempWork","Bash":"mkdir -p $tempWork"}
{"English":"List the names of all file.ext files\/directories under present working directory","Bash":"find `pwd` -name \"file.ext\" -printf \"%f\\n\""}
{"English":"Prints all business days in a current month.","Bash":"cal -h | cut -c 4-17"}
{"English":"Find all files\/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~\/Library directory tree","Bash":"find ~\/Library\/ -iname \"com.apple.syncedpreferences.plist\""}
{"English":"Archive all *html files using tar.","Bash":"find . -type f -name \"*html\" | xargs tar cvf htmlfiles.tar -"}
{"English":"display the manual page of find","Bash":"man find"}
{"English":"Recursively finds strings with\"text string to search\u201d in files under 'directory-path', regarding provided options '[option]'.","Bash":"grep [option] \"text string to search\u201d directory-path"}
{"English":"create a list of all files in all subdirectories","Bash":"find . -type f -exec md5 {} \\;"}
{"English":"display all the files in the folders \/etc \/srv excluding the paths \/etc\/mtab and  \/srv\/tftp\/pxelinux.cfg","Bash":"find \/etc \/srv \\( -path \/srv\/tftp\/pxelinux.cfg -o -path \/etc\/mtab \\)  -prune -o -print"}
{"English":"Search the regular files from directory tree 'folder_name' for \"your_text\"","Bash":"find folder_name -type f -exec grep your_text  {} \\;"}
{"English":"Search for command \"tail\" in the maps of the process with PID 2671","Bash":"cat \/proc\/2671\/maps | grep `which tail`"}
{"English":"Print the first two bytes of \"my_driver\" in octal","Bash":"od --read-bytes=2 my_driver"}
{"English":"find all regular files in current directory and replace the word searc to replace in them.","Bash":"find . -type f -exec sed -i 's\/searc\/replace\/g' {} \\;"}
{"English":"Lists content of all subfolder (without recursion) in a current folder.","Bash":"ls -d -1 $PWD\/**\/*"}
{"English":"Delete all files\/directories with '.old' extension under current directory tree","Bash":"find . -name \u201c*.old\u201d -delete"}
{"English":"Find all files\/directories named Root under current directory and copy them to newRoot","Bash":"find . -name Root | xargs cp newRoot"}
{"English":"display all files in the current folder which start with met","Bash":"find -name met*"}
{"English":"find all the files in the file system which have the permission 777 and with the name \"dateiname\"","Bash":"find \/ -perm 777 -iname \"Dateiname\""}
{"English":"Format the time string @133986838 according to the default time format and save it to variable 'VARIABLENAME'","Bash":"VARIABLENAME=$(date -d @133986838)"}
{"English":"Find regular files under \/ that contain \"stringtofind\"","Bash":"find \/ -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \\;"}
{"English":"Search for 'whatIWantToFind' in all files under current directory","Bash":"find . -exec grep whatIWantToFind {} \\;"}
{"English":"Save the user name of the current user to variable \"me\"","Bash":"me=\"$(whoami)\""}
{"English":"Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.","Bash":"$ ls -Fltr *"}
{"English":"Find all *.htm files under current directory","Bash":"find -type f -name \"*.htm\""}
{"English":"Find all *FooBar* files\/directories under current directory and copy them to ~\/foo\/bar","Bash":"find . -name '*FoooBar*' | sed 's\/.*\/\"&\"\/' | xargs cp ~\/foo\/bar"}
{"English":"find regular files under the current directory and execute an md5sum command on each one","Bash":"find -type f -exec md5sum {} +"}
{"English":"find all the png files in the current folder which begin with the word image","Bash":"find . -name \"image*.png\""}
{"English":"Gets IP address of 'eth0' network interface.","Bash":"ifconfig eth0 | awk '\/inet addr\/{sub(\/[^0-9]*\/,\"\"); print $1}'"}
{"English":"search  in current directory downwards all files which were accessed exactly 7 days back","Bash":"find . -atime 7 -print"}
{"English":"Find all .core files on the system starting from \/ and delete them","Bash":"find \/ -name \"*.core\" | xargs rm"}
{"English":"Print the list of directories residing in the current directory tree","Bash":"find . -type d -exec ls -ld {} \\;"}
{"English":"Find all files\/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive)","Bash":"find . -iwholename \"*ACK*1\""}
{"English":"Find all files whose names end with \"~\" in the \/home\/peter directory tree, following symlinks, and delete them","Bash":"find -L \/home\/peter -name *~ -print0 |xargs -0 -r -n1000 rm"}
{"English":"Save the full path of command \"oracle\" to variable \"path\"","Bash":"path=`which oracle`"}
{"English":"Search directory foo for files containing \"\/tmp\/foo\/bar\" in their full names","Bash":"find foo -path \/tmp\/foo\/bar -print"}
{"English":"Unzip every \".gz\" file in the current directory tree","Bash":"find . -name '*.gz' -exec gunzip '{}' \\;"}
{"English":"List environment variables whose name contains \"X\"","Bash":"set | cut -d= -f1 | grep X"}
{"English":"Removes files ~\/.android\/adbkey and ~\/.android\/adbkey.pub without prompting.","Bash":"rm -f ~\/.android\/adbkey ~\/.android\/adbkey.pub"}
{"English":"find all the files in the folder \/home which are bigger than 10MB and smaller than 50 MB","Bash":"find \/home -size +10M -size -50M"}
{"English":"Change directory to the output of command '~\/marker.sh go \"$@\"'","Bash":"cd $( ~\/marker.sh go \"$@\" )"}
{"English":"create directory testExpress","Bash":"mkdir testExpress"}
{"English":"Sends current job to the background.","Bash":"bg %"}
{"English":"Remove all files matching the pattern *[+{;\"\\\\=?~()<>&*|$ ]* under current directory","Bash":"find . -name '*[+{;\"\\\\=?~()<>&*|$ ]*' -exec rm -f '{}' \\;"}
{"English":"Find writable regular files in the current directory","Bash":"find .  -maxdepth 1 -type f -writable"}
{"English":"Remove sess_* files that were modified more than 2 days ago","Bash":"find sess_* -mtime +2 -exec rm {} \\;"}
{"English":"Non-recursively finds all '*.pdf' files in a current folder and removes them.","Bash":"find . -maxdepth 1 -name \"*.pdf\" -print0 | xargs -0 rm"}
{"English":"Archive all files specified on standard input under \"\/path\/to\/files\" to \"\/path\" on host \"targethost\" as user \"user\" with escalated privileges","Bash":"rsync -av --files-from=- --rsync-path=\"sudo rsync\" \/path\/to\/files user@targethost:\/path"}
{"English":"Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to \"proxyhost\" port 8888 and a reverse connection from \"officefirewall\" port 22222 to \"localhost\" port 22","Bash":"ssh -fNT -L8888:proxyhost:8888 -R22222:localhost:22 officefirewall"}
{"English":"Remove all white space from \"infile.txt\" and wrap each line to 80 characters","Bash":"cat infile.txt | tr -d \"[:space:]\" | fold -80"}
{"English":"Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them","Bash":"find . -type d -ls | awk '{print $4 - 2, $NF}' | sort -rn | head"}
{"English":"Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically","Bash":"find \"$FOLDER\" -type d -printf \"%T@\\n\" | cut -f 1 -d . | sort -nr"}
{"English":"list in long format all files from \/ whose filename ends in \"jbd\", not descending into directories that are not readable while searching, and not descending into directories on other filesystems","Bash":"find \/ -mount \\! -readable -prune  -o  -path \/dev -prune  -o  -name '*.jbd' -ls"}
{"English":"list *.bmp and *.txt files under the \/home\/user\/Desktop directory.","Bash":"find \/home\/user\/Desktop -name '*.bmp' -o -name '*.txt'"}
{"English":"Read a line from standard input with prompt \"Continue (y\/n)?\" and save response in variable \"choice\"","Bash":"read -p \"Continue (y\/n)?\" choice"}
{"English":"change user and group of the file bin to user and group root:wheel","Bash":"sudo chown root:wheel bin"}
{"English":"Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them","Bash":"find $DIR -type f -mtime +450 -exec rm {} \\;"}
{"English":"find files in \/dir\/path\/look\/up directory that names are dir-name-here","Bash":"find \/dir\/path\/look\/up -name \"dir-name-here\""}
{"English":"Search directories \/opt, \/usr, \/var for regular file foo","Bash":"find \/opt \/usr \/var -name foo -type f"}
{"English":"find files which modification time is  7 days ago","Bash":"find . -mtime -7"}
{"English":"Sets shell option 'globstar'.","Bash":"shopt -s globstar"}
{"English":"Find files under current directory that contains the string '\/bin\/ksh'","Bash":"find . -type f -print | xargs    grep -il 'bin\/ksh'"}
{"English":"copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory","Bash":"find . | cpio -pdumv \/path\/to\/destination\/dir"}
{"English":"get the root user access","Bash":"sudo su"}
{"English":"Recursively changes group ownership of everything within a current folder to 'admin'.","Bash":"chgrp -R admin *"}
{"English":"Replace the leading spaces in the output of \"history\" with periods","Bash":"history | sed 's\/^ *\/&\\n\/; :a; s\/ \\(.*\\n\\)\/.\\1\/; ta; s\/\\n\/\/'"}
{"English":"Find all files\/directories with space in their names under current directory and rename them by replacing all spaces with _","Bash":"find . -depth -name \"* *\" -execdir rename \"s\/ \/_\/g\" \"{}\" \\;"}
{"English":"Creates temporary file in default folder and saves path to it in 'source' variable.","Bash":"source=`mktemp`"}
{"English":"Find all *.ogg (case insensitive) files\/directories under your home directory that are greater than 100MB in size","Bash":"find $HOME -iname '*.ogg' -size +100M"}
{"English":"Print mount point of the file system containing $path.","Bash":"df -P \"$path\"  | tail -1 | awk '{ print $NF}'"}
{"English":"Print name of the file system containing $path.","Bash":"df -h $path | cut -f 1 -d \" \" | tail -1"}
{"English":"Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory","Bash":"find \"$path_to_folders\" -name 'm?' -type d -exec mv {} {}.mbox \\; -exec mkdir {}.mbox\/Messages \\; -exec sh -c \"mv {}.mbox\/*.emlx {}.mbox\/Messages\" \\;"}
{"English":"Search  in current directory downwards all files whose size is greater than 10 bytes .","Bash":"find . -size +10c -print"}
{"English":"Change to folder where the oracle binary is.","Bash":"cd \"$(dirname $(which oracle))\""}
{"English":"Find all files and directories in the current directory recursively that contain spaces in their names","Bash":"find . -name '* *'"}
{"English":"change user and group of the file \"\/var\/run\/docker.sock\" to user root and group dockerroot","Bash":"sudo chown root:dockerroot \/var\/run\/docker.sock"}
{"English":"display all the regular files in the current folder excluding those that are present in the path \"git\"","Bash":"find . -path \"*.git\" -prune -o -type f -print"}
{"English":"Answer \"y\" to all prompts of \"rm -rf foo\"","Bash":"yes | rm -ri foo"}
{"English":"Copy the executable \"python2.7\" in $PATH to \"myenv\/bin\/python\"","Bash":"cp `which python2.7` myenv\/bin\/python"}
{"English":"Change permissions to 700 for directories at the current level and deeper","Bash":"find . -mindepth 1 -type d | xargs chmod 700"}
{"English":"Recursively change owner and group to \"tomcat7\" of \"webapps\", \"temp\", \"logs\", \"work\", and \"conf\"","Bash":"chown -R tomcat7:tomcat7 webapps temp logs work conf"}
{"English":"Display the file type description of \/bin\/bash, ie. symbolic link, ELF executable, etc.","Bash":"$ file \/bin\/bash"}
{"English":"Make directories \"bravo_dir\" and \"alpha_dir\"","Bash":"mkdir bravo_dir alpha_dir"}
{"English":"Finds shell options like 'checkjobs' with their state.","Bash":"shopt -p | grep checkjobs"}
{"English":"List all regular files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 -type f -exec ls -l {} \\;"}
{"English":"Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\\n'","Bash":"find .\/ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\\n'"}
{"English":"Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field","Bash":"cat text.txt | tr -s ' ' | cut -d ' ' -f 4"}
{"English":"Print the average round trip time of 5 pings to \"google.com\"","Bash":"ping -q -c 5 google.com | tail -n 1 | cut -f 5 -d '\/'"}
{"English":"forcibly create a symbolic link named \"linkname\" to file \"new_destination\"","Bash":"ln -sf new_destination linkname"}
{"English":"Search for \"www.athabasca\" in all files under current directory","Bash":"find . -exec grep \"www.athabasca\" '{}' \\; -print"}
{"English":"Search the current directory and all of its sub-directory for any PDF files.","Bash":"find . -name \"*.pdf\" -print"}
{"English":"Find all files\/directories named file1 in maximum 2 levels down the current directory","Bash":"find -maxdepth 2 -name file1"}
{"English":"Find all files under current directory","Bash":"find \"`pwd`\" -type f"}
{"English":"Copies \"\"$project_dir\"\/iTunesArtwork\", to the 'Payload\/iTunesArtwork', rewriting files if necessary.","Bash":"cp -f \"$project_dir\"\/iTunesArtwork Payload\/iTunesArtwork"}
{"English":"Removes resursively all files and folders named \".DS_Store\".","Bash":"find . -name \".DS_Store\" -print0 | xargs -0 rm -rf"}
{"English":"Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames","Bash":"find . -exec grep -H string-to-find {} \\;"}
{"English":"Save first IP address of domain 'google.com' in 'address' variable","Bash":"address=$(dig +short google.com | grep -E '^[0-9.]+$' | head -n 1)"}
{"English":"Identify CMS version\/releases accross all your Wordpress websites","Bash":"find \/var\/www\/vhosts\/*\/httpdocs\/ -type f -iwholename \"*\/wp-includes\/version.php\" -exec grep -H \"\\$wp_version =\" {} \\;"}
{"English":"search all the \".sh\" files in the \/usr folder and follow the symbolic links to their original file","Bash":"find \/usr -follow -name '*.sh'"}
{"English":"Prints folder where current script is located","Bash":"echo \"dirname: `dirname \"$0\"`\""}
{"English":"find the file \"filename.txt\" in the entire file system","Bash":"find \/ -name filename.txt -print"}
{"English":"Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under \/your\/dir","Bash":"find \/your\/dir -type f -exec touch {} +"}
{"English":"Set 644 permission to all regular files under current directory","Bash":"chmod 644 `find . -type f`"}
{"English":"Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]=\"0\" [1]=\"0\" [2]=\"1\" [3]=\"0\" [4]=\"1\")'","Bash":"true | true | false | true | false"}
{"English":"Count the number of .java files in all folders rooted in the current folder","Bash":"find . -name \"*.java\" | wc -l"}
{"English":"List directories in the current working directory and remove the trailing \"\/\"","Bash":"ls -1p | grep '\/$' | sed 's\/\\\/$\/\/'"}
{"English":"Count the *.html files residing in the \/usr\/src directory tree and containing string \"foo\"","Bash":"find \/usr\/src -name \"*.html\" -exec grep -l foo '{}' ';' | wc -l"}
{"English":"Find files in the current directory tree whose size is less than 24000 bytes","Bash":"find . -size -24000c"}
{"English":"Find all Subscription.java files\/directories under current directory and enter into the parent directory of the first one found","Bash":"cd $(find . -name Subscription.java -printf '%h\\n')"}
{"English":"display all regular files in the folder image-folder","Bash":"find image-folder\/ -type f"}
{"English":"find all normal\/regular files in current folder which end with \"~\" or which begin and end with \"#\" and and and delete them","Bash":"find . -maxdepth 1 -type f -name '*~' -delete  -or -name '#*#' -delete"}
{"English":"Show all lines in file2 that don't contain the first field of any line in file1.","Bash":"awk '{print $1}' file2 | comm -1 -3 file1 - | join file2 -"}
{"English":"Recursively search through all files in all directories for any lines containing \"pattern\" and whose second word is not \"Binary\".","Bash":"grep -Ri \"pattern\" * | awk '{if($1 != \"Binary\") print $0}'"}
{"English":"Remove all *.swp files under current directory","Bash":"find . -name \"*.swp\"|xargs rm"}
{"English":"Remove duplicates in variable \"variable\" and preserve the order","Bash":"variable=$(echo \"$variable\" | tr ' ' '\\n' | nl | sort -u -k2 | sort -n | cut -f2-)"}
{"English":"Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?'","Bash":"find . -regex '.*myfile[0-9][0-9]?'"}
{"English":"Split \"file.txt\" into files of at most 1 MiB in size with a numeric suffix, prefix \"file\", and additional suffix \".txt\"","Bash":"split -b 1M -d  file.txt file --additional-suffix=.txt"}
{"English":"Counts lines of all *.txt files in a current folder.","Bash":"cat *.txt | wc -l"}
{"English":"Remove files from the file system that are owned by nobody","Bash":"find \/ -nouser -exec rm {} \\;"}
{"English":"Find all broken symlinks under current directory","Bash":"find .\/ -type l -exec file {} \\; |grep broken"}
{"English":"Gets IP address of first listed network interface in system.","Bash":"ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | head -n1 | cut -f2 -d: | cut -f1 -d ' '"}
{"English":"Remove files whose names match regular expression '^.*\/[A-Za-z]+-[0-9]+x[0-9]+\\.[A-Za-z]+$' from the current directory tree","Bash":"find -regex '^.*\/[A-Za-z]+-[0-9]+x[0-9]+\\.[A-Za-z]+$' | xargs echo rm -f"}
{"English":"List the z* links in the \/usr\/bin directory and the file to which it points to","Bash":"find \/usr\/bin  -type l  -name \"z*\" -exec ls  -l {} \\;"}
{"English":"Prints calendars of July, 2009 and July, 2010 side-by-side.","Bash":"paste <(cal 6 2009) <(cal 6 2010)"}
{"English":"Unzip every \".gz\" file in the current directory","Bash":"gunzip *.gz"}
{"English":"List all regular files under the current directory and below it","Bash":"find . -type f -print0 | xargs -0 ls -l"}
{"English":"Recursively list all the files and directories that are only in directory \/dir1 with their full paths.","Bash":"diff -rq \/dir1 \/dir2 | grep -E \"^Only in \/dir1.*\" | sed -n 's\/:\/\/p' | awk '{print $3\"\/\"$4}'"}
{"English":"Find the top 25 files according to their size in the current directory and its subdirectories","Bash":"find . -type f -exec ls -al {} \\; | sort -nr -k5 | head -n 25"}
{"English":"Find all of jzb's files","Bash":"find -user jzb"}
{"English":"Print the names of any differing files in directories \"dir1\/\" and \"dir2\/\"","Bash":"diff  --brief --recursive dir1\/ dir2\/"}
{"English":"Find recursively all files under current directory tree that contain a colon in the filename","Bash":"find . -name \\*\\:\\*"}
{"English":"Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename","Bash":"find dir -type f -print0 | xargs -r0 sed -i 's\/ *$\/\/'"}
{"English":"Archive preserving permissions and ownership files in \"\/var\/www\/\" on host \"user@10.1.1.2\" to local \"\/var\/www\/\"","Bash":"sudo rsync -az user@10.1.1.2:\/var\/www\/ \/var\/www\/"}
{"English":"Search for files in your home directory which have been modified in the last twenty-four hours.","Bash":"find $HOME  -mtime 0"}
{"English":"Print all '-' separated digits in file 'infile' as dot ('.') separated digits","Bash":"grep -Eo '([0-9]+-){3}[0-9]+' infile | tr - ."}
{"English":"Find all files in the \/home\/ directory tree that are owned by bob","Bash":"find \/home -user bob"}
{"English":"Show the list of user wnj's files that are newer than file `ttt'","Bash":"find \/ -newer ttt -user wnj -print"}
{"English":"Find directories with permissions 777 and change them to 755 recursively","Bash":"find \/home -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"Print a listing of the `other' directory","Bash":"$ find other -maxdepth 1"}
{"English":"Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.","Bash":"cat files | sort -t- -k2,2 -n"}
{"English":"Print local files without descending non-local directories","Bash":"find . ! -local -prune -o -print"}
{"English":"find files which full path name is \/tmp\/foo\/bar under \/tmp\/foo directory and print","Bash":"find \/tmp\/foo -path \/tmp\/foo\/bar -print"}
{"English":"Set variable \"b\" to the first word of \"a\" converted to lowercase.","Bash":"b=`echo \"$a\" | awk '{ print tolower($1) }'`"}
{"English":"List the combined path of the current working directory and \"file.txt\"","Bash":"ls \"`pwd`\/file.txt\""}
{"English":"ERROR - Probably means -pgoDt (capital D)","Bash":"sudo rsync -pgodt \/home\/ \/newhome\/"}
{"English":"Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.","Bash":"find . -iname foo"}
{"English":"find all the text files in the file system and search only in the disk partition of the root.","Bash":"find \/ -xdev -name \"*.txt\""}
{"English":"Search for 'Attached: Yes' in all regular files under '\/proc\/scsi' directory tree matching the path '\/proc\/scsi\/usb-storage' and show only the matched filenames","Bash":"find \/proc\/scsi\/ -path '\/proc\/scsi\/usb-storage*' -type f | xargs grep -l 'Attached: Yes'"}
{"English":"Write \"hello world\" to the console and print number of bytes, symbols and strings in provided input.","Bash":"echo \"hello world\" | tee >(wc)"}
{"English":"Remove empty directories from directory tree \/srv\/${x}","Bash":"find \/srv\/${x} -type d -empty -exec rmdir {} \\;"}
{"English":"find all the regular\/normal files in the current folder which belong to the group \"flossblog\"","Bash":"find . -group flossblog -type f"}
{"English":"update the permissions of the directories in the folder folder_name to 775","Bash":"find folder_name -type d -exec chmod 775 \u2018{}\u2019 \\;"}
{"English":"Search decompressed \"filename.gz\" for case-insensitive \"user-user\"","Bash":"zcat filename.gz | grep -i user-user"}
{"English":"Merge the first \"$lc\" lines of \"current.txt\" and the last \"$lc\" lines of \"current.txt\" and display the result as a comma separated table","Bash":"paste <(head -\"$lc\" current.txt) <(tail -\"$lc\" current.txt) | column -t -o,"}
{"English":"Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.","Bash":"join -1 2 -2 1 -t, BigFile.csv LittleFile.csv"}
{"English":"Search for aaa in all files under current directory and count the number of matches","Bash":"find . -type f -exec grep -o aaa {} \\; | wc -l"}
{"English":"Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.","Bash":"uname -a"}
{"English":"Find files with the extension .conf in the \/etc directory","Bash":"find \/etc -name '*.conf'"}
{"English":"Find all hidden files in the current directory","Bash":"find . -type f -name \".*\""}
{"English":"Ping hostname, grep for 192.168.11 and print the IP from the output","Bash":"ping -c 1 hostname | grep 192.168.11 | grep 'bytes from' | awk '{print $4}' | sed 's\/:\/\/g'"}
{"English":"Report total file systems disk usage estimated in terabytes","Bash":"df --total -BT | tail -n 1"}
{"English":"Print a minimal set of differences between files in directories \"teste1\" and \"teste2\", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context","Bash":"diff -burNad teste1 teste2"}
{"English":"Traverse the filesystem just once, listing setuid files and directories into \/root\/suid.txt and large files into \/root\/big.txt.","Bash":"find \/       \\( -perm -4000 -fprintf \/root\/suid.txt '%#m %u %p\\n' \\) , \\( -size +100M -fprintf \/root\/big.txt  '%-10s %p\\n' \\)"}
{"English":"display all the files in the current folder along with the change time and display file names of the last 10 changed files","Bash":"find . -type f -printf \"%C@ %p\\n\" | sort -rn | head -n 10"}
{"English":"display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter","Bash":"find . -name \\? -mtime -1"}
{"English":"Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place","Bash":"find .\/ -type f -name \\*.php -exec sed -i \u2019s\/^.*iframe bla bla bla.*$\/\/g\u2019 {} \\;"}
{"English":"Locates Erlang distribution, and prints release number from 'RELEASES' file.","Bash":"awk -F, 'NR==1 {gsub(\/\"\/,\"\",$3);print $3}' \"$(dirname $(readlink -f $(which erl)))\/..\/releases\/RELEASES\""}
{"English":"Counts total lines in PHP and JS files.","Bash":"find . -name '*.js' -or -name '*.php' | xargs wc -l | grep 'total'  | awk '{ SUM += $1; print $1} END { print \"Total text lines in PHP and JS\",SUM }'"}
{"English":"download content from \"http:\/\/example.com\/textfile.txt\" and output to \"textfile.txt\"","Bash":"curl http:\/\/example.com\/textfile.txt -o textfile.txt"}
{"English":"Change owner of \"my_test_expect.exp\" to \"el\"","Bash":"sudo chown el my_test_expect.exp"}
{"English":"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.","Bash":"find . -name '*.pdf' -print"}
{"English":"Find files\/directories under \/tmp smaller than 100 bytes","Bash":"find \/tmp -size -100c"}
{"English":"Print content of each file under the current directory followed by that file name","Bash":"find . -type f -exec cat {} \\; -print"}
{"English":"Mount \"nifs\" filesystem \"\/dev\/mapper\/myldm\" on \"\/mnt\" as read only","Bash":"mount -t ntfs -o ro \/dev\/mapper\/myldm \/mnt"}
{"English":"Prints calendar for a current month.","Bash":"cal"}
{"English":"Unzip and untar \"openssl-fips-2.0.1.tar.gz\"","Bash":"gunzip -c openssl-fips-2.0.1.tar.gz | tar xf \u00ad-"}
{"English":"Count the number of total files and folders under current directory tree","Bash":"find . -print0 | tr -cd '\\0' | wc -c"}
{"English":"search for MP3 files in the current folder and subfolders except in dir1 subfolder.","Bash":"find ! -path \"dir1\" -iname \"*.mp3\""}
{"English":"Find all directories under maximum 1 level down the current directory and set their permission to 700","Bash":"find . -mindepth 1 -type d | xargs chmod 700"}
{"English":"Recursively removes all files and folders named '.svn' in a current folder.","Bash":"find . -name .svn -exec rm -rf {} \\;"}
{"English":"Revert $string value and print first 20 space-separated fields","Bash":"echo $string | rev | cut -d ' ' -f -20"}
{"English":"Search the current directory for HTML files whose names begin with \"a\"","Bash":"find . -maxdepth 1 -name a\\*.html"}
{"English":"List an empty environment (prints nothing)","Bash":"env -i"}
{"English":"Print a NULL-separated list of all directories of the current directory tree","Bash":"find . -type d -print0"}
{"English":"list jobs including its PIDs","Bash":"jobs -l"}
{"English":"Search in the current directory and all sub-directories except .\/D for the file named hi.dat","Bash":"find -path .\/D -prune -o -name hi.dat -print"}
{"English":"Search the \/home\/sdt5z\/tmp directory tree for files named \"accepted_hits.bam\"","Bash":"find \/home\/sdt5z\/tmp -name \"accepted_hits.bam\""}
{"English":"Filnd all files in root directory with 777 permission and change permision 644  with chmod commad .","Bash":"find \/ -type f -perm 777 -print -exec chmod 644 {} \\;"}
{"English":"Recursively removes all empty folders from the X folder.","Bash":"find X -depth -type d -exec rmdir {} \\;"}
{"English":"Find all directories under \/home\/username\/public_html\/sites\/default\/files and set their permission to 770","Bash":"find \/home\/username\/public_html\/sites\/default\/files -type d -exec chmod 770 {} +"}
{"English":"count all the html files having a specifc word in a folder.","Bash":"find \/usr\/src -name \"*.html\" -exec grep -l foo '{}' ';' | wc -l"}
{"English":"Check if the contents of file \"subset\" is a subset of file \"set\"","Bash":"comm -23 <(sort subset | uniq) <(sort set | uniq) | head -1"}
{"English":"Changes group ownership of 'target_directory' to 'target_group'.","Bash":"chgrp target_group target_directory"}
{"English":"list all files in the current directory recursively","Bash":"find ."}
{"English":"list regular files ending in .mbox","Bash":"find . -type f -wholename \\*.mbox"}
{"English":"Find all *.mov files under current directory","Bash":"find . -name \"*.mov\""}
{"English":"recursively change owner of the directory \/usr\/lib\/node_modules\/ to the current user","Bash":"sudo chown -R $(whoami) \/usr\/lib\/node_modules\/"}
{"English":"Print 10 \"#\" characters in a row","Bash":"yes '#' | head -n 10 | tr -d '\\n'"}
{"English":"list all regular files under the directory \"$directory\"","Bash":"find $directory -type f -name '*'"}
{"English":"Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames","Bash":"find . -name \u201c*.cc\u201d |xargs grep -n \u201cpattern\u201d"}
{"English":"Join columns in \"file1\" and \"file2\" if their first field matches and format the output as a table","Bash":"awk 'NR==FNR{m[$1]=$2\" \"$3; next} {print $0, m[$1]}' file2 file1 | column -t"}
{"English":"List all regular files matching the name pattern \"$1*\" (where $1 is a positional parameter) under '\/usr', '\/bin', '\/sbin' and '\/opt' directory tree","Bash":"find \/usr \/bin \/sbin \/opt -name \"$1*\" -type f -ls"}
{"English":"Search the file system for regular files whose pathnames are shorter than 25 characters","Bash":"find \/ -type f|awk -F'\/' '{print $NF}'| awk 'length($0) < 25'"}
{"English":"display all files in current folder which have been modified in the last 60 minutes","Bash":"find -mmin 60"}
{"English":"Find all files in the current directory recursively that were last modified more than 5 days ago","Bash":"find .\/* -mtime +5"}
{"English":"Delete all files in the \"${S}\/bundled-libs\" folder except \"libbass.so\"","Bash":"find \"${S}\/bundled-libs\" \\! -name 'libbass.so' -delete"}
{"English":"Print multiline text \"ONBOOT=\\\"YES\\\"\\nIPADDR=10.42.84.168\\nPREFIX=24\" to the terminal, replacing '\\n' with newline symbol, and append that text to file \/etc\/sysconfig\/network-scripts\/ifcfg-eth4 as root user.","Bash":"echo -e \"ONBOOT=\\\"YES\\\"\\nIPADDR=10.42.84.168\\nPREFIX=24\" | sudo tee -a \/etc\/sysconfig\/network-scripts\/ifcfg-eth4"}
{"English":"Search the current directory up to depth level 2 for files and directories","Bash":"find . -maxdepth 2"}
{"English":"Search the current directory tree for symbolic links named \"link1\"","Bash":"find . -type l -name link1"}
{"English":"find all files in the a direcotry which have been modified in exactly 1 day back","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"Find all regular files in the current directory tree and print a command to move them to the current directory","Bash":"find . -type f -exec echo mv -t . {} +"}
{"English":"A no-op on filename with sed","Bash":"sed -i \"s\/\\\\\\\\\\n\/\/g\" filename"}
{"English":"Find all 777 permission files in entire file system and set permissions to 644","Bash":"find \/ -type f -perm 0777 -print -exec chmod 644 {} \\;"}
{"English":"Print NS record for domain 'domain.' from 'some.other.ip.address' nameserver","Bash":"dig @some.other.ip.address domain. ns"}
{"English":"Change owner to \"root\" and group to \"wheel\" of \"adbind.bash\"","Bash":"sudo chown root:wheel adbind.bash"}
{"English":"Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree","Bash":"find . -name \"*.[!r]*\" -exec grep -i -l \"search for me\" {} \\;"}
{"English":"Read a line from standard input in an interactive shell with prompt in variable \"myprompt\" interpreted as PS1 is interpreted","Bash":"read -e -p \"${myprompt@P}\""}
{"English":"Find files that have a modification time of a day ago","Bash":"find \/ -mtime 1"}
{"English":"Show process tree with command-line arguments of a process that has id 20238.","Bash":"pstree -a -p 20238"}
{"English":"Find all *.c files under and below the current directory that contain \"wait_event_interruptible\"","Bash":"find . -name \\*.c -print0 | xargs -0 grep wait_event_interruptible \/dev\/null"}
{"English":"Creates temporary file with name formatted like 'emacs-manager.XXXXXX' in '\/tmp\/' folder and saves path to it in 'tmp_file' variable.","Bash":"tmp_file=`mktemp --tmpdir=\/tmp emacs-manager.XXXXXX`"}
{"English":"Find all files\/directories with '.txt' extension under '\/home' directory tree that are greater than 100KB in size","Bash":"find \/home -name \"*.txt\" -size +100k"}
{"English":"The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.","Bash":"find . | cpio -pdumv \/path\/to\/destination\/dirrectory"}
{"English":"Remove all directories called \"test\" from the current directory tree","Bash":"find -name \"test\" -type d -delete"}
{"English":"Print the filenames taken by the glob pattern * with null character as the delimiter","Bash":"find * -maxdepth 0 -type d -print0"}
{"English":"Search the current directory tree for all .java files that were last modified at least 7 days ago","Bash":"find . -name '*.java' -mtime +7 -print"}
{"English":"Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory","Bash":"find . -type f -exec grep -n -i STRING_TO_SEARCH_FOR \/dev\/null {} \\;"}
{"English":"Remount \"\/dev\/block\/mtdblock3\" on \"\/system\" with read and write permission","Bash":"mount -o remount,rw -t yaffs2 \/dev\/block\/mtdblock3 \/system"}
{"English":"Get domain name with 'google' from address $IP","Bash":"dig -x $IP | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"}
{"English":"Print a line of 3 '%' characters","Bash":"seq -s % 4|tr -d '[:digit:]'"}
{"English":"Print content of 'a' file, showing all non-printing characters including TAB characters, and displaying $ at the end of each line.","Bash":"cat -vet a"}
{"English":"Copies file '\/boot\/config-`uname -r`' to the  '.config', printing info message and prompting before owerwriting files.","Bash":"cp -vi \/boot\/config-`uname -r` .config"}
{"English":"Search the home directory tree for regular files modified yesterday","Bash":"find ~ -daystart -type f -mtime 1"}
{"English":"Find all files\/directories under current directory which have read-write permission for owner and only read permission for group and others","Bash":"find -perm -644"}
{"English":"Format \"file.txt\" as space separated columns 28 characters in width","Bash":"cat file.txt | column -c 28 -s \"\\ \""}
{"English":"Search .c and .h files in the current directory tree for \"expr\"","Bash":"find . -name '*.[ch]' | xargs grep -E 'expr'"}
{"English":"find all the files in the file system that start with \"win\" and searched only in the mounted file systems","Bash":"find \/ -mount -name 'win*'"}
{"English":"Make directory \"\/tmp\/new\"","Bash":"mkdir \/tmp\/new"}
{"English":"Count the *.html files residing in the \/usr\/src directory tree and containing string \"foo\"","Bash":"find \/usr\/src -name \"*.html\" | xargs grep -l foo | wc -l"}
{"English":"Set permission of \"file\" to read only for the owner","Bash":"chmod 600 file"}
{"English":"display all the files  in the current folder excluding those which are present in \".\/src\/emacs\" folder","Bash":"find  .  -path  '.\/src\/emacs'  -prune  -o -print"}
{"English":"Print full path of command \"python2.7\"","Bash":"which python2.7"}
{"English":"Enables shell option 'lastpipe'.","Bash":"shopt -s lastpipe"}
{"English":"Search for the query \"filename\" in the current directory and any subdirectories","Bash":"find -iname \"filename\""}
{"English":"search for files that are readable for everybody, have at least on write bit set but are not executable for anybody","Bash":"find . -perm -444 -perm \/222 ! -perm \/111"}
{"English":"display all the files in the home folder except text files","Bash":"find \/home ! -name \"*.txt\""}
{"English":"Find all files\/directories under current directory and sort them","Bash":"find | sort"}
{"English":"Find files that were modified less than 7 days ago and archive them","Bash":"find . -type f -mtime -7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`"}
{"English":"bind word \"pwd\\n\" to key code \"\\e[24~\"","Bash":"bind '\"\\e[24~\":\"pwd\\n\"'"}
{"English":"find file named foo.txt under current directory.","Bash":"find . -name foo.txt"}
{"English":"Find the total size of *.jpg files within the current directory tree","Bash":"find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'"}
{"English":"list all .c or .sh regular files.","Bash":"find . -type f \\( -name \"*.c\" -o -name \"*.sh\" \\)"}
{"English":"Prints process tree of a current process with id numbers and parent processes.","Bash":"pstree -sp $$"}
{"English":"Find files\/directories greater than 10MB in your home directory","Bash":"find ~ -size +10M"}
{"English":"Display the 5 smallest files in the current directory and its sub-directories.","Bash":"find . -type f -exec ls -s {} \\; | sort -n  | head -5"}
{"English":"Remove all files with names like \"vmware-*.log\" from the current directory tree","Bash":"find . -name \"vmware-*.log\" -exec rm '{}' \\;"}
{"English":"find all the hidden files in the temp folder","Bash":"find \/tmp -type f -name \".*\""}
{"English":"Print the full path of command \"cc\"","Bash":"which cc"}
{"English":"List all your files including everything in sub-directories","Bash":"find ~"}
{"English":"Print all files that exceed 1000 blocks and were modified at least a month ago","Bash":"find \/ -size +1000 -mtime +30 -exec ls -l {} \\;"}
{"English":"Find all JPG files under the \"$SOURCE\" directory and below","Bash":"find \"$SOURCE\" -type f -iname '*.jpg'"}
{"English":"Remove the regular files from the current directory tree that were last modified on November, 21","Bash":"find -type f -newermt \"Nov 21\" ! -newermt \"Nov 22\" -delete"}
{"English":"search for the word \"foo\" in all the regular\/normal files in the directory \"\/path\/to\/dir\"","Bash":"find \/path\/to\/dir -type f -print0 | xargs -0 grep -l \"foo\""}
{"English":"Find all executables in the current directory tree","Bash":"find .\/ -executable"}
{"English":"Archive directory specified by variable \"myFolder\" to current directory.","Bash":"rsync -av $myFolder ."}
{"English":"Print file name without the last two extensions assuming the file name doesn't contain any other dots.","Bash":"echo \"$FILE\" | cut -d'.' --complement -f2-"}
{"English":"Creates temporary folder and saves path to it in 'other' variable.","Bash":"other=\"$(mktemp --directory)\""}
{"English":"Create a symbolic link named \".profile\" to \"git-stuff\/home\/profile\" without dereferencing \".profile\"","Bash":"ln -sn git-stuff\/home\/profile .profile"}
{"English":"Set permission of all files in \"img\", \"js\", and \"html\" to 644","Bash":"chmod 644 img\/* js\/* html\/*"}
{"English":"Find SQL files with text `expression'","Bash":"find . -name \"*.sql\" -print0 -type f | xargs -0 grep \"expression\""}
{"English":"Display differences in \"\/tmp\/ksh-9725.log\" when compared to \"\/tmp\/ksh-9781.log\"","Bash":"diff \/tmp\/ksh-{9725,9781}.log | grep ^\\<"}
{"English":"Continuously send \"y\" to all prompts of command \"rm\"","Bash":"yes | rm"}
{"English":"Report file system inodes usage in human readable format","Bash":"df -ih"}
{"English":"Find all the files whose permissions are 777","Bash":"find . -type f -perm 0777 -print"}
{"English":"find any files or directories called \".svn\" under the current directory and run a recursive delete (without prompting) command on each one.","Bash":"find . -iname .svn -exec bash -c 'rm -rf {}' \\;"}
{"English":"find all log files larger then 100MB  in \/home directory and delete them .","Bash":"find \/home -type f -name *.log -size +100M -exec rm -f {} \\;"}
{"English":"display all the files in the file system which have been modified in the last 10 minutes","Bash":"find \/ -mmin -10"}
{"English":"Run an awk program on every TXT file found in the current directory tree","Bash":"find . -name '*txt' -print -exec awk 'BEGIN {nl=1 ;print FILENAME} $9 !=\"\" {if (nl<11) { print $0 ; nl = nl + 1 }}' {}  \\;"}
{"English":"find all the files in the current folder that have been accessed in today from the start of the day","Bash":"find -daystart   -atime 0"}
{"English":"Force the group stickiness for directories under \/var\/www","Bash":"find \/var\/www -type d -print0 | xargs -0 chmod g+s"}
{"English":"remove all the core files in the home folder","Bash":"find \/home -name core -exec rm {} \\;"}
{"English":"Print a list of regular files from directory tree sort_test\/ sorted with LC_COLLATE=en_US.UTF-8","Bash":"find sort_test -type f | env -i LC_COLLATE=en_US.UTF-8 sort"}
{"English":"Print \"a\\nb\\ncccccccccccc\\nd\" as two columns and neatly format into a table","Bash":"echo -e \"a\\nb\\ncccccccccccc\\nd\" | paste - - | column -t"}
{"English":"List the current directory recursively ignoring the \"dir1\" subdirectory's content","Bash":"find . -print -name dir -prune"}
{"English":"search in current directory downwards all files whose size is less then 10 bytes","Bash":"find .  -size -10c -print"}
{"English":"find .gif files in \/var\/www and below that were last changed between 90 and 180 days ago","Bash":"find \/var\/www -name *.gif -ctime +90 -ctime -180"}
{"English":"List current directory, waiting for user input at each page.","Bash":"ls | more"}
{"English":"Print the directories that are taken by the glob pattern $SrvDir*","Bash":"find $SrvDir* -maxdepth 0 -type d"}
{"English":"Find all regular files under $DIR directory tree whose paths match the regex \".*\\.${TYPES_RE}\" where ${TYPES_RE} expands as a variable","Bash":"find ${DIR} -type f -regex \".*\\.${TYPES_RE}\""}
{"English":"Returns exit status 0 and prints exit status of previous command.","Bash":"false | echo \"${PIPESTATUS[0]}\""}
{"English":"Find all .txt files under the current directory and below","Bash":"find . -name \"*.txt\""}
{"English":"Find recursively the files named \"file\" in the current directory ignoring the .git subdirectory","Bash":"find . -path .\/.git  -prune -o -name file  -print"}
{"English":"Search the current directory, except the subdirectory tree \".svn\", for files whose name is \"foo.cpp\"","Bash":"find . -name 'foo.cpp' '!' -path '.svn'"}
{"English":"Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.","Bash":"find . -type f -name \".*\" -newer .cshrc -print"}
{"English":"find all the files in the file system which have been modified in the last 30*24 hours","Bash":"find \/ -mtime -30 -print"}
{"English":"Dump \"file\" as ASCII characters","Bash":"od -t c file"}
{"English":"Lists all files in a current folder, separating names with comma.","Bash":"ls | sed '$!s\/$\/,\/' | tr -d '\\n'"}
{"English":"Search the regular files of the current directory tree for string \"texthere\"","Bash":"find -type f -exec grep -Hn \"texthere\" {} +"}
{"English":"display all the jpg files in the current folder and do not search in sub directories","Bash":"find . -maxdepth 1 -mindepth 1 -iname '*.jpg' -type f"}
{"English":"display all the html files in the current folder excluding search in the paths .\/foo, .\/bar.","Bash":"find . -path \".\/foo\" -prune -o -path \".\/bar\" -prune -o -type f -name \"*.html\""}
{"English":"long list al the files in the current directory which have only read permission to the group","Bash":"find . -perm 040 -type f -exec ls -l {} \\;"}
{"English":"find directories  that have been modified in the last seven days","Bash":"find . -mtime -7 -type d"}
{"English":"Print which files differ in \"folder1\" and \"folder2\" excluding \"node_modules\" recursively, output in two columns, and paginate the output","Bash":"diff -rqyl folder1 folder2 --exclude=node_modules"}
{"English":"Remove all files on the system that have been changed within the last minute","Bash":"find \/ -newerct '1 minute ago' -print | xargs rm"}
{"English":"Find a directory named 'project.images' in the entire filesystem and show it in long listing format","Bash":"find  \/ -type d -name \"project.images\" -ls"}
{"English":"find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.","Bash":"find . -mtime 4 -daystart -exec cp -a {} \/home\/devnet\/fileshare\\$ on\\ X.X.X.X\/RECOVER\/ \\;"}
{"English":"Find all files\/directories under \/var\/log directory","Bash":"find \/var\/log"}
{"English":"search in the current folder for the file \"myletter.doc\"","Bash":"find . -name myletter.doc -print"}
{"English":"Remove the path $1 from the PATH environment variable","Bash":"PATH=$(echo $PATH | tr \":\" \"\\n\" | grep -v $1 | tr \"\\n\" \":\")"}
{"English":"Display an amount of processes running with a certain name","Bash":"ab=`ps -ef | grep -v grep | grep -wc processname`"}
{"English":"Print the current working directory prepended by \"pwd: \"","Bash":"echo pwd: `pwd`"}
{"English":"Find a more recent version of httpd.conf file than \/etc\/apache-perl\/httpd.conf in entire file system","Bash":"find \/ -name httpd.conf -newer \/etc\/apache-perl\/httpd.conf"}
{"English":"Search for files whose name is \"filename\" and whose permissions are 777","Bash":"find \/ -perm 777 -iname \"filename\""}
{"English":"Find all files\/directories named $something under current directory","Bash":"find -name \"$something\""}
{"English":"Decompress 'file.gz' to standard output and execute the output in bash","Bash":"gzip -d --stdout file.gz | bash"}
{"English":"Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755","Bash":"find . -type f -perm 777 -exec chmod 755 {} \\;"}
{"English":"Save the first 3 lines output by 'yes' to 'file', and log the rest through 'more' which simply waits for user interaction at each page.","Bash":"yes | awk 'FNR<4 {print >>\"file\"; close(\"file\")}  1' | more"}
{"English":"Print a list of differing files","Bash":"diff -q \/dir1 \/dir2|cut -f2 -d' '"}
{"English":"Scan every file in \/etc for IPV4 addresses while trying to elminate false positives.","Bash":"find \/etc -type f -exec cat '{}' \\; | tr -c '.[:digit:]' '\\n' | grep '^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$'"}
{"English":"Write \"\\n\/usr\/local\/boost_1_54_0\/stage\/lib\" to standard output and append to \"\/etc\/ld.so.conf\"","Bash":"echo -e \"\\n\/usr\/local\/boost_1_54_0\/stage\/lib\" | sudo tee -a \/etc\/ld.so.conf"}
{"English":"Load keybindings from a file ~\/.inputrc","Bash":"bind -f ~\/.inputrc"}
{"English":"find all 'js' suffix files  exclue the path *exclude\/this\/dir*' under current dirctory","Bash":"find . -name '*.js' -not -path '*exclude\/this\/dir*'"}
{"English":"Print the first 5 characters followed by the next 5 characters on a new line for each line in \"input_file\" and split the result into files of at most 2000000 lines each with a filename prefix \"out-prefix-\"","Bash":"sed 's\/\\(.....\\)\\(.....\\)\/\\1\\n\\2\/' input_file | split -l 2000000 - out-prefix-"}
{"English":"Search the current directory tree for executable regular files","Bash":"find . -type f -executable -exec file {} \\; | grep -wE \"executable|shared object|ELF|script|a\\.out\""}
{"English":"find all the files in the file system which have been modified in the last 60 minutes","Bash":"find \/ -mmin -60"}
{"English":"Prefix all files and folders in the current directory with \"PRE_\"","Bash":"find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \\;"}
{"English":"Report only total size of file systems in terabytes.","Bash":"df -m | awk '{ SUM += $2} END { print SUM\/1024\/1024\"TB\" }'"}
{"English":"Print the directory of the full path to the current script","Bash":"echo $(dirname $(readlink -m $BASH_SOURCE))"}
{"English":"Print only name and login columns of the currently logged in users","Bash":"finger -s | awk '{printf(\"%s %s\\n\", $1, $2);}'"}
{"English":"Start program 'scriptname' with an empty environment.","Bash":"env - scriptname"}
{"English":"Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces","Bash":"find \"$dir\" -maxdepth 1 -type f | sed 's#.*\/#   #'"}
{"English":"Delete all files\/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter","Bash":"find . -name \"*.$1\" -delete;"}
{"English":"Display a long listing of all files\/directories that are bigger than 10MB under '\/var\/' directory tree","Bash":"find \/var\/ -size +10M -ls"}
{"English":"Finds recursively all files having extension .c, .h in '\/path\/' that contain 'pattern', and prints matched strings with string number and file name.","Bash":"grep --include=\\*.{c,h} -rnw '\/path\/to\/somewhere\/' -e \"pattern\""}
{"English":"Set variable \"filename\" to only the name of document specified by URL, in this case \"pic.jpg\"","Bash":"filename=\"`basename \"http:\/\/pics.sitename.com\/images\/191211\/pic.jpg\"`\""}
{"English":"Prints full path to files in a current folder.","Bash":"ls -1 | awk  -vpath=$PWD\/ '{print path$1}'"}
{"English":"Search the \/home\/user1 directory tree for files whose names end in \".bin\"","Bash":"find \/home\/user1 -name \"*.bin\""}
{"English":"Make directory \"~\/public_html\"","Bash":"mkdir ~\/public_html"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours","Bash":"find . -mtime 0"}
{"English":"Print count of unique lines in all files like 'list_part*'","Bash":"cat list_part* | sort --unique | wc -l"}
{"English":"display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems","Bash":"find \/ -nogroup \\( -fstype jfs -o -fstype jfs2 \\) -ls"}
{"English":"split file \"${fspec} into pieces named as \"xyzzyNNN\" with numeric prefix from 1 to 6","Bash":"split --number=l\/6 ${fspec} xyzzy."}
{"English":"Print canonical filename of \"\/path\/here\/..\"","Bash":"readlink -f  \/path\/here\/.."}
{"English":"Find all files\/directories with 'my key phrase' in their names under current directory","Bash":"find . -name '*my key phrase*'"}
{"English":"Count the number of unique 3 to 6 character file extensions are in the current directory tree","Bash":"find . -type f -name \"*.*\" | grep -o -E \"\\.[^\\.]+$\" | grep -o -E \"[[:alpha:]]{3,6}\" | awk '{print tolower($0)}' | sort | uniq -c | sort -rn"}
{"English":"Find all files\/directores under \/etc and run the file command on each of them","Bash":"find \/etc -print0 | xargs -0 file"}
{"English":"Locate the httpd.conf file on the system","Bash":"find \/ -name httpd.conf"}
{"English":"List all unique parent directories of .class files found under the current directory","Bash":"find -name '*.class' -printf '%h\\n' | sort -u"}
{"English":"change permission of all the files in the entire file system which have the permissions 777.","Bash":"find \/ -type f -perm 0777 -print -exec chmod 644 {} \\;"}
{"English":"search for dbmsspool.sql file in the current folder","Bash":"find . -print|grep ?i dbmspool.sql"}
{"English":"Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.","Bash":"is_nullglob=$( shopt -s | egrep -i '*nullglob' )"}
{"English":"Search the \/etc directory tree for symbolic links","Bash":"find \/etc -type l -print"}
{"English":"search for the file chapter1 in the folder \/work","Bash":"find \/work -name chapter1"}
{"English":"Make directory \"~\/temp\"","Bash":"mkdir ~\/temp"}
{"English":"Evaluate the output of recursively changing the owner and group of \"\/data\/*\" to \"mongodb\"","Bash":"`sudo chown -R mongodb:mongodb \/data\/*`"}
{"English":"print apparent size rather than disk usage","Bash":"du -B1 --apparent-size \/tmp\/foo.txt"}
{"English":"display long list of all the perl files in the current folder","Bash":"find . -name \"*.pl\" -ls"}
{"English":"Recursively find all files ending with '*.txt' and print they names and content","Bash":"find  . -name \\*.txt -print -exec cat {} \\;"}
{"English":"Print content of 'whatever' file","Bash":"cat whatever | egrep 'snozzberries|$'"}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 3 days ago","Bash":"find . -type f -mtime +3"}
{"English":"Prints process tree for the current process with ASCII line drawing characters.","Bash":"pstree -A -s $$"}
{"English":"Get a sorted list of the longest line with line number for each file under current directory","Bash":"find . -iname '*.page' -exec awk '{if(length($0) > L) { LINE=NR;L = length($0)}} END {print L\"|\"FILENAME\":\"LINE}' {} \\; | sort"}
{"English":"Find find symlinks pointing to \/mnt\/oldname* in the entire file system","Bash":"find \/ -type l -lname '\/mnt\/oldname*'"}
{"English":"Search the current directory tree for files named 'Subscription.java'","Bash":"find . -name 'Subscription.java'"}
{"English":"Search  in current directory downwards all files which  have not been accessed since last 7 days","Bash":"find . -atime +7 -print"}
{"English":"Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak","Bash":"find . -type f -name INPUT.txt -print0 | xargs -0 sed -i.bak '\/^#\/d'"}
{"English":"Print lines of 'file' reverted order, and reverted characterwise","Bash":"tac file | rev"}
{"English":"Print info about thread number of process with pid 1","Bash":"cat \/proc\/1\/sched  | head -n 1"}
{"English":"Find all *.[ch] files under current directory","Bash":"find . -name '*.[ch]'"}
{"English":"List all files matching regular expression '*foo*' in a human-readable form","Bash":"find . -name '*foo*' -exec ls -lah {} \\;"}
{"English":"Delete files with inode number 782263 under current directory","Bash":"find . -inum 782263 -exec rm -i {} \\;"}
{"English":"Find all files\/directories with 777 permission under '\/apps\/audit' and strip write permission for 'other' from them","Bash":"find \/apps\/audit -perm -7 -print | xargs chmod o\u2011w"}
{"English":"Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'","Bash":"find . -type f|grep -i \"\\.jpg$\" |sort| tee file_list.txt"}
{"English":"Find all files\/directories  under  \/eserver6 directory and follow symlinks if needed","Bash":"find \/eserver6 -L"}
{"English":"Recursively removes 'classes' folder, prompting user on each deletion.","Bash":"rm -r classes"}
{"English":"download contents from \"https:\/\/www.npmjs.com\/install.sh\" and execute","Bash":"curl https:\/\/www.npmjs.com\/install.sh | sh"}
{"English":"Search the .\/in_save directory for regular files and view the result using pager `more'","Bash":"find .\/in_save\/ -type f -maxdepth 1| more"}
{"English":"Count total number of lines in all *txt files  in current directory","Bash":"wc -l `find . -type f -name '*.txt' `"}
{"English":"Set permissions to 2770 for all directories in the current directory tree","Bash":"find . -type d -exec chmod 2770 {} +"}
{"English":"Send SIGTERM signal to last process sent to background by the current shell.","Bash":"kill $!"}
{"English":"Check whether \"\/full\/path\" is a mount point with no output and using the exit code","Bash":"df \/full\/path | grep -q \/full\/path"}
{"English":"find the type of all the regular\/normal files in the current folder","Bash":"find . -type f -exec file {} \\;"}
{"English":"Read a line from standard input with prompt \"<Your Friendly Message here> : y\/n\/cancel\" and save the response to variable \"CONDITION\"","Bash":"read -p \"<Your Friendly Message here> : y\/n\/cancel\" CONDITION;"}
{"English":"Sets 'extglob' shell option.","Bash":"shopt -s extglob"}
{"English":"Create a symbolic link named \"\/usr\/bin\/my-editor\" to \"\/usr\/share\/my-editor\/my-editor-executable\" and attemp to hard link directories","Bash":"ln -sF \/usr\/share\/my-editor\/my-editor-executable   \/usr\/bin\/my-editor"}
{"English":"Find files in the current directory tree whose status was changed within the last 60 minutes","Bash":"find . -cmin -60"}
{"English":"List all *.txt files\/directories under \/etc","Bash":"ls -l $(find \/etc -name \"*.txt\" )"}
{"English":"display the change owner command for all the regular files in the current folder.","Bash":"find . -type f -exec echo chown username {} \\;"}
{"English":"delete all the mp4 files in the folder \/home which are bigger than 10MB","Bash":"find \/home -type f -name *.mp4 -size +10M -exec rm {} \\;"}
{"English":"Clean the current directory from all subversion directories recursively","Bash":"find . -type d -name \".svn\" -print | xargs rm -rf"}
{"English":"list regular files under the current directory","Bash":"find . -type f"}
{"English":"Save the md5 sum of $twofish to variable 'twofish'","Bash":"twofish=`echo -n $twofish | md5sum | tr -d \"  -\"`"}
{"English":"find all files ending with \"js.compiled\" in current folder (print0 is used to handle files with newlines in their names)","Bash":"find .\/js\/ -name \"*.js.compiled\" -print0"}
{"English":"Find all empty files (zero byte files) in your home directory and its sub-directories.","Bash":"find ~ -empty"}
{"English":"find all directories that names are 'project.images'","Bash":"find  \/ -type d -name \"project.images\""}
{"English":"Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}\/${i}\/incoming directory and remove them","Bash":"find ${userdir}\/${i}\/incoming -mtime +2 -type f -size +200557600c -exec rm {} \\;"}
{"English":"Read a line from standard input into variable \"ans\" without backslash escapes","Bash":"read -r ans"}
{"English":"List all files\/directories under current directory","Bash":"find -ls"}
{"English":"Look for `regexp' in binary files","Bash":"find .  -type f -print|xargs file|grep -i text|cut -fl -d:    | xargs grep regexp"}
{"English":"Show the list of all files on the system whose names do not end in \".c\"","Bash":"find \/ \\! -name \"*.c\" -print"}
{"English":"Delete all hard links to the physical file with inode number 2655341","Bash":"find \/home -xdev -inum 2655341 | xargs rm"}
{"English":"Inserts \"new line\" after last occurrence of ScriptAlias in a file","Bash":"tac file | awk '\/ScriptAlias\/ && ! seen {print \"new line\"; seen=1} {print}' | tac"}
{"English":"Print which files differ in \"PATH1\/\" and \"PATH2\/\" recursively excluding any files that match any pattern in \"file1\"","Bash":"diff PATH1\/ PATH2\/ -rq -X file1"}
{"English":"Wrap standard input to fit in 10 characters per line","Bash":"fold -w 10"}
{"English":"Print the lines of file \"strings\" not specified in file \"index\"","Bash":"join -v 2 index <(nl strings)"}
{"English":"Read a line from standard input into variable \"message\" with escaped prompt \"\\nPlease Enter\\na Message: '\"","Bash":"read -p \"`echo -e '\\nPlease Enter\\na Message: '`\" message"}
{"English":"Find all files\/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension","Bash":"find . -regextype sed -regex \".\/test[0-9]\\{2\\}.txt\""}
{"English":"Print first field from semicolon-seprated line $string.","Bash":"echo $string | cut -d';' -f1"}
{"English":"List all available commands in Mac OS","Bash":"echo $PATH | tr ':' '\\n' | xargs -I {} find {} -maxdepth 1 -type f -perm '++x'"}
{"English":"kill all jobs","Bash":"kill $(jobs -p)"}
{"English":"Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago","Bash":"find -mtime +0"}
{"English":"Search \/usr\/src for filenames not ending in \"*,v\"","Bash":"find \/usr\/src ! \\( -name '*,v' -o -name '.*,v' \\) '{}' \\; -print"}
{"English":"Find all *.rpm files\/directories under current directory","Bash":"find . -name '*.rpm'"}
{"English":"Create an empty file called \"emptyfile.c\"","Bash":"cp \/dev\/null emptyfile.c"}
{"English":"Remove the first 7 characters of every line in the output of \"history\"","Bash":"history | cut -c 8-"}
{"English":"find all normal\/regular files in current folder and display the total lines in them","Bash":"find . -type f -exec wc -l {} +"}
{"English":"Recursively copies \"$appname.app\", preserving symlinks as symlinks to the 'Payload' directory.","Bash":"cp -Rp \"$appname.app\" Payload\/"}
{"English":"display all the directories in the current folder excluding those that are present in the aa directory tree","Bash":"find . -type d -name aa -prune"}
{"English":"Find all pdf files under \/dir\/containing\/unsigned with null character as the delimiter","Bash":"find \/dir\/containing\/unsigned -name '*.pdf' -print0"}
{"English":"Move all files that contain \"Subject: \\[SPAM\\]\" to \"your_file\"","Bash":"mv $(grep -l 'Subject: \\[SPAM\\]' | awk -F ':' '{print $1}') your_file"}
{"English":"find all the text files in the current folder","Bash":"find . -type f -name '*.txt' -print"}
{"English":"find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )","Bash":"find .\/ -daystart -mtime -3"}
{"English":"list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo'","Bash":"find . \\( -name '*.mp3' -o -name '*.jpg' \\) -name 'foo*' -print"}
{"English":"Find all files with the SUID bit set beginning with the root directory","Bash":"find \/ -perm -u+s"}
{"English":"Search directory trees \/tmp and \/var\/tmp for \"testfile.txt\"","Bash":"find \/tmp \/var\/tmp -iname \"testfile.txt\""}
{"English":"Search the current directory tree for regular files omitting directory `omit-directory'","Bash":"find . \\( -name omit-directory -prune -o -type f \\) -print"}
{"English":"Find all read only files in  \/home directory","Bash":"find \/home -type f -perm \/u=r"}
{"English":"Save absolute path of \"$path\" that may not exist to variable \"abspath\"","Bash":"abspath=$(readlink -m $path)"}
{"English":"Recursively copies 'SRCFOLDER' to the 'DESTFOLDER\/'","Bash":"cp -R SRCFOLDER DESTFOLDER\/"}
{"English":"Make directories to \"\/my\/other\/path\/here\/\" as needed","Bash":"mkdir -p \/my\/other\/path\/here\/"}
{"English":"Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.","Bash":"find ~\/ -name *.tar.gz -newer filename"}
{"English":"locate large files (> 100 MB) in \/home\/ for 'cleaning'","Bash":"find \/home -type f -size +100M -delete"}
{"English":"Replace all occurrences of word \"foo\" with \"bar\" in *.c and *.h files from the current directory tree","Bash":"find -name '*.[ch]' -exec sed -i 's\/\\<foo\\>\/bar\/g' {} +"}
{"English":"Find all files with '.db' extension (case insensitive) that belong to user 'exampleuser' and were modified exactly 7 days ago under '\/home' directory tree","Bash":"find \/home -user exampleuser -mtime 7 -iname \".db\""}
{"English":"Run an awk program on every TXT file found in the current directory tree","Bash":"find . -name \"*.txt\" -print -exec awk '$9 != \"\" {print; if(NR > 9) exit; }' {} \\;"}
{"English":"Find all files called \"INPUT.txt\" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak","Bash":"find . -type f -name INPUT.txt -print0 | xargs -0 -I file  sed -i.bak '\/^#\/d' file"}
{"English":"Print process tree, adjusting output width with a screen size.","Bash":"pstree | cat"}
{"English":"search for all regular\/normal files in current folder and display all the files which contain 16 lines","Bash":"find . -type f -print0 | xargs -0 grep -cH '.' | grep ':16$'"}
{"English":"Find all files\/directories under current directory tree with inode number 211028 and move them to 'newname.dir'","Bash":"find . -inum 211028 -exec mv {} newname.dir \\;"}
{"English":"Search the current directory for files whose names start with my","Bash":"find . -name 'my*'"}
{"English":"Find regular files modified within the last ten minutes under \/etc","Bash":"find \/etc -type f -mmin -10"}
{"English":"Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name\/path.","Bash":"find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"}
{"English":"List non-hidden regular files in the current directory tree that were last modified more than 500 days ago","Bash":"find . -type f -not -name '.*' -mtime +500 -exec ls {} \\;"}
{"English":"Find broken symlinks in current directory","Bash":"find -L -type l"}
{"English":"change the permissions of all the directories in the current folder","Bash":"chmod 751 `find .\/ -type d -print`"}
{"English":"Search for all files in the current directory recursively whose names begin with \"Linkin Park\"","Bash":"find . -name \"Linkin Park*\""}
{"English":"Copy all directories recursively from \"source\/\" to \"destination\/\" excluding all files","Bash":"rsync -a --include='*\/' --exclude='*' source\/ destination\/"}
{"English":"find regular files and directories that have been modified in the last seven days","Bash":"find . -mtime -7 -type f"}
{"English":"List all files in the current directory tree that were last modified between \"mar 03, 2010 09:00\" and \"mar 11, 2010\"","Bash":"find -newermt \"mar 03, 2010 09:00\" -not -newermt \"mar 11, 2010\" -ls"}
{"English":"Find files under current directory that are not newer than $date_time in regards of modification time","Bash":"find . -type f -not -newermt \"$date_time\""}
{"English":"Search the current directory tree for regular files whose names end in \".shtml\" or \".css\"","Bash":"find . -type f | egrep '\\.(shtml|css)$'"}
{"English":"For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format.","Bash":"join -11 -21 -o1.1,1.2,1.3,2.3 file1 file2"}
{"English":"Copy \"src\" to \"dest\" if \"src\" is newer than \"dest\"","Bash":"rsync -u src dest"}
{"English":"Print the PIDs of the current user's instances of \"firefox\"","Bash":"ps -u $(whoami) | grep firefox | awk '{printf $1}'"}
{"English":"Split \"$file\" into files with at most 1000 lines each and use a prefix length of 5","Bash":"split -a 5 $file"}
{"English":"Convert Unix `cal` output to latex table code.","Bash":"cal | sed '1d;2{h;s\/.\/ \/g;x};\/^\\s*$\/b;G;s\/\\n\/ \/;s\/^...\\(.\\{15\\}\\).*\/\\1\/;s\/...\/ &\\t\\&\/g;s\/\\&$\/\\\\\\\\\/'"}
{"English":"Delete all regular files named 'IMAG1806.jpg' under current directory tree","Bash":"find . -type f -name \"IMAG1806.jpg\" -exec rm -f {} \\;"}
{"English":"Find all *.php files under current directory and change their permission to 644","Bash":"find . -type f -name '*.php' -exec chmod 644 {} \\;"}
{"English":"find all the empty regular\/normal files in the current folder and delete them","Bash":"find . -type f -empty -delete"}
{"English":"Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago","Bash":"find -maxdepth 1 -type d -mtime -1"}
{"English":"search for a word in all the .C files( those having the extension \"c\") in current directory","Bash":"find . -type f \\( -iname \u201c*.c\u201d \\) |grep -i -r \u201ckeyword\u201d"}
{"English":"Discard the first letter from every line in $line and calculate the md5 sum of the remaining","Bash":"echo $line | cut -c2- | md5sum"}
{"English":"Find all pdf files excluding *_signed.pdf files under \/some\/dir with null character as the delimiter","Bash":"find \/some\/dir -name \"*.pdf\" ! -name \"*_signed.pdf\" -print0"}
{"English":"Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.","Bash":"find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}
{"English":"delete all the normal files in the current folder and do not delete those in the subfolders","Bash":"find . -maxdepth 1 -type f -delete"}
{"English":"find all c, cpp files in current folder","Bash":"find -name \"*.cpp\" -o -name \"*.c\""}
{"English":"search for soft links in current folder and display those links which are not pointed to files in current folder","Bash":"find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\""}
{"English":"Print output of script 'trap.sh'","Bash":"~ $ . trap.sh | cat"}
{"English":"Create a symbolic link named \"~\/bin\/subl\" to \"\/Applications\/Sublime Text 2.app\/Contents\/SharedSupport\/bin\/subl\"","Bash":"ln -s \"\/Applications\/Sublime Text 2.app\/Contents\/SharedSupport\/bin\/subl\" ~\/bin\/subl"}
{"English":"delete all the regular files in the temp folder which have not been changed in the last 15*24 hours","Bash":"find \/tmp\/ -ctime +15 -type f -exec rm {} \\;"}
{"English":"Print \"echo ping -c 2\" on each string in file 'ips'","Bash":"cat ips | xargs echo ping -c 2"}
{"English":"search for all the text files in the folder \/foo and delete them","Bash":"find \/foo\/ -name \"*.txt\" -exec rm -v {} \\;"}
{"English":"search for all the files in the current directory which belong to the user \"xuser1\" and change the owner ship of them to \"user2\"","Bash":"find . -user xuser1 -exec chown -R user2 {} \\;"}
{"English":"Copy the entire \"\/lib\" and \"\/usr\" directory including symlinks from \"pi@192.168.1.PI\" to \"$HOME\/raspberrypi\/rootfs\" and delete files after the transfer","Bash":"rsync -rl --delete-after --safe-links pi@192.168.1.PI:\/{lib,usr} $HOME\/raspberrypi\/rootfs"}
{"English":"Make directory \"\/tmp\/foo\"","Bash":"mkdir \/tmp\/foo"}
{"English":"Saves space separated content of $RAW_LOG_DIR in FILES variable","Bash":"FILES=`cat $RAW_LOG_DIR | xargs -r`"}
{"English":"View line 500 to line 500 + 501 in gzipped file \"bigfile.z\"","Bash":"zcat bigfile.z | tail -n +500 | head -501"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory and create an archive (somefile.tar) of all the files found","Bash":"tar -cvf file.tar `find var\/log\/ -iname \"anaconda.*\"`"}
{"English":"Search for 'mystring' in all *.txt files under current directory","Bash":"find . -name \"*.txt\" -print0 | xargs -0 egrep mystring"}
{"English":"List all regular files from the current directory tree that were modified less than 60 days ago","Bash":"find -type f -mtime -60"}
{"English":"Search for case-insensitive \"string\" in \"log.tar.gz\"","Bash":"zcat log.tar.gz | grep -a -i \"string\""}
{"English":"find all the directories in the current folder which begin with the words \"kt\" and end with a digit","Bash":"find . -regex '.\/kt[0-9] '"}
{"English":"Create intermediate directories ~\/foo\/bar\/ as required and directories baz, bif, bang","Bash":"mkdir -p ~\/foo\/bar\/baz ~\/foo\/bar\/bif ~\/foo\/boo\/bang"}
{"English":"Print a sorted list of directories from the ~\/Music tree containing files whose names begin with \"cover.\"","Bash":"find ~\/Music\/ -iname 'cover.*' -printf '%h\\n' | sort -u"}
{"English":"Print the file paths and their sizes for all files under full_path_to_your_directory","Bash":"find full_path_to_your_directory -type f -printf '%p %s\\n'"}
{"English":"Print summary of new\/missing files, and which files differ between folder1 and folder2.","Bash":"diff -arq folder1 folder2"}
{"English":"Look for any instance of \"HIGHMEM\" in the current kernel's compile-time config file.","Bash":"grep \u201cHIGHMEM\u201d \/boot\/config-`uname -r`"}
{"English":"Find all the files under \/home directory with name tecmint.txt","Bash":"find \/home -name tecmint.txt"}
{"English":"Prompt the user with a question \"This is the question I want to ask?\" and save \"y\" or \"n\" in variable \"REPLY\" in zsh","Bash":"read REPLY\\?\"This is the question I want to ask?\""}
{"English":"Find and remove multiple *.mp3 files","Bash":"find . -type f -name \"*.mp3\" -exec rm -f {} \\;"}
{"English":"Find all files with the extension jpg regardless of case","Bash":"find . -type f -iname '*.jpg' -print0"}
{"English":"Gets string with MAC addess of network interface eth0.","Bash":"ifconfig eth0 | grep HWaddr"}
{"English":"Print 'file' content, formatting output as 29-symbol wide column, regarding space symbol as a word separator","Bash":"cat file | fold -s -w29"}
{"English":"remove all text files from the current folder","Bash":"find -name \"*.txt\" | xargs rm"}
{"English":"Search the system for the file \u201ctestfile.txt\u201d","Bash":"find \/ -name \"testfile.txt\""}
{"English":"Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in file \"index.html\" and make a backup with suffix \"bak\" on OSX","Bash":"sed -i bak -e s\/STRING_TO_REPLACE\/REPLACE_WITH\/g index.html"}
{"English":"Remove the \"^M\" characters from all *.ext files under \/home directory","Bash":"find \/home -type f -name \"*.ext\" -exec sed -i -e \"s\/\\r$\/\/g\" {} \\;"}
{"English":"Disables shell option 'nocasematch'.","Bash":"shopt -u nocasematch"}
{"English":"Copy all *.data files under \/source_path to \/target_path","Bash":"find \/source_path -name *.data -exec cp {} \/target_path \\;"}
{"English":"Get current directory name without full path, ie. the part after the last \/","Bash":"pwd | awk -F \/ '{print $NF}'"}
{"English":"List all regular files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -type f -mmin -60 -print0 | xargs -r0 ls -l"}
{"English":"Create an empty file in each directory named \"mydir\" under current directory.","Bash":"find . -type d -name \"mydir\" -print |  sed 's\/$\/\\\/abc.txt\/g' | xargs touch"}
{"English":"Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress no more than 10 at a time","Bash":"find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &"}
{"English":"find all the files in the folder \"myfiles\" which have not been accessed in the last 30 days","Bash":"find \/myfiles -atime +30"}
{"English":"Run a \"rm\" process to recursively remove \"cache\", making it immune to all SIGHUP signals sent to it.","Bash":"nohup rm -rf cache &"}
{"English":"Recursively removes all files in a current folder but '*txt' files.","Bash":"find . -type f -not -name '*txt' | xargs rm"}
{"English":"find all the cpp files in the current folder","Bash":"find . -iname '*.cpp' -print"}
{"English":"Make directory and parents as needed to \"$FINALPATH\"","Bash":"mkdir -p \"$FINALPATH\""}
{"English":"copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4","Bash":"find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \\;"}
{"English":"Save Java home in variable \"JAVA_HOME\"","Bash":"JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin\/.*$::\" )\""}
{"English":"Find all files under \/path and below writable by `group' and `other'","Bash":"find \/path -perm -022"}
{"English":"Print 'infile' content with line numbers","Bash":"cat -n infile"}
{"English":"View the contents of \"file.txt\" with line numbers in the pager \"less\"","Bash":"cat -n file.txt | less"}
{"English":"Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files","Bash":"find . \\( ! -regex '.*\/\\..*' \\) -type f -print0 | xargs -0 sed -i 's\/subdomainA.example.com\/subdomainB.example.com\/g'"}
{"English":"Prints long recursive listing of all content of a current folder, saving output to 'output.file'.","Bash":"ls |& tee files.txt"}
{"English":"Search for 'pattern' in file 'file' and print the matched lines by separating them with spaces instead of newlines","Bash":"grep pattern file | tr '\\n' ' '"}
{"English":"display all the regular files in the current folder and do not search in sub folders","Bash":"find \"$dir\" -maxdepth 1 -type f"}
{"English":"Find all C source code files from the current directory tree that contain \"keyword\" in their pathnames, ignoring the case","Bash":"find . -type f \\( -iname \u201c*.c\u201d \\) |grep -i \u201ckeyword\u201d"}
{"English":"Recursively remove all \"*.txt\" files and answer \"y\" to any prompt","Bash":"yes | rm -r *.txt"}
{"English":"Copies all files with \"FooBar\" in the path under the current directory to the '~\/foo\/bar' directory.","Bash":"find . | grep FooBar | xargs -I{} cp {} ~\/foo\/bar"}
{"English":"Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories","Bash":"find . -name foo.mp4 -printf '%h\\n'"}
{"English":"Recursively add read and directory access to all permissions of all files and directories","Bash":"chmod -R a+rX *"}
{"English":"Prints hierarchical process tree.","Bash":"pstree"}
{"English":"Search the \/path directory tree for files lacking the group writable bit","Bash":"find \/path ! -perm \/020"}
{"English":"Search the current directory tree for files containing \"bash\" in their names","Bash":"find . -name \"*bash*\" | xargs"}
{"English":"Sends current job to the background.","Bash":"bg"}
{"English":"change the group to \"new_group\" and permissions to 770 for all the files in the current folder","Bash":"find . -name \"*\" -exec chgrp -v new_group '{}' \\; -exec chmod -v 770 '{}' \\;"}
{"English":"Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.","Bash":"find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html"}
{"English":"Execute the 'echo' command on each file from the current directory tree individually","Bash":"find . -exec echo {} \\;"}
{"English":"Build an \"svn hotcopy\" command for each subdirectory of \/usr\/local\/svn\/repos\/","Bash":"find \/usr\/local\/svn\/repos\/ -maxdepth 1 -mindepth 1 -type d -printf \"%f\\0\" | xargs -0 -I{} echo svnadmin hotcopy \/usr\/local\/svn\/repos\/\\{\\} \/usr\/local\/backup\/\\{\\}"}
{"English":"Split \"$in_file\" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file\"_\"","Bash":"awk '{if (NR!=1) {print}}' $in_file | split -d -a 5 -l 100000 - $in_file\"_\""}
{"English":"Find all the .c files in the current directory tree that contain the string \u2018stdlib.h\u2019","Bash":"find . -name '*.c' | xargs grep 'stdlib.h'"}
{"English":"Find all *.rb files\/directories under current directory","Bash":"find . -name \\*.rb"}
{"English":"List all directories under current directory","Bash":"find . -type d -exec ls -dlrt {} \\;"}
{"English":"Search the files from the current directory tree for \"chrome\"","Bash":"find . | xargs grep 'chrome' -ls"}
{"English":"Give rwx permissions to the user and group of the directory named \"files\" leaving others without any privileges","Bash":"find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Find all files\/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names","Bash":"find . -iname '*blah*' \\( -type d -o -type f \\) -mtime -2"}
{"English":"Find all `doc.txt' files in the current directory tree printing \"found\" for each of them","Bash":"find .\/ -name doc.txt -printf \"found\\n\""}
{"English":"Print the names of all files from the \/tmp\/dir1 directory tree","Bash":"find \/tmp\/dir1 -exec basename {} \\;"}
{"English":"Copy a file xyz.c to all the directories below the current one whose names begin with \"temp\"","Bash":"find . -type d -name \"temp*\" | xargs -n1 cp xyz.c"}
{"English":"Save the absolute path of the current script to variable \"SELF\"","Bash":"actual_path=$(readlink -f \"${BASH_SOURCE[0]}\")"}
{"English":"Recursively change the ownership of all files in \"\/Users\/xxx\/Library\/Developer\/Xcode\/Templates\" to \"xxx\"","Bash":"sudo chown -R xxx \/Users\/xxx\/Library\/Developer\/Xcode\/Templates"}
{"English":"Find all 0644 permission files\/directories under current directory tree and show only the first 10 of them","Bash":"find . -perm 0644 | head"}
{"English":"delete all the text files starting with the name \"oldStuff\" in the file system","Bash":"find \/ -name \"oldStuff*.txt\" -delete"}
{"English":"Find files\/directories named 'foo' under current directory tree without descending into directories named 'foo'","Bash":"find . -name foo -type d -prune -o -name foo -print"}
{"English":"Find files that were accessed in less than a day ago","Bash":"find \/ -atime -1"}
{"English":"this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _","Bash":"find . -type f -iname '*.mp3' -exec rename '\/ \/_\/'  {} \\;"}
{"English":"Remove all .mpg files in the \/home\/luser directory tree","Bash":"find \/home\/luser -type f -name '*.mpg' -exec rm -f {} \\;"}
{"English":"Find all regular files with permissions 777 under and below \/home\/user\/demo\/","Bash":"find \/home\/user\/demo -type f -perm 777 -print"}
{"English":"Delete all .svn subdirectories under current directory","Bash":"rm -rf `find . -type d -name \".svn\"`"}
{"English":"Calculate the md5 sum of the contents of the sorted list of files \"$FILES\"","Bash":"cat $(echo $FILES | sort) | md5sum"}
{"English":"find all the files in the entire file system whose size is between 50Mb to 100MB","Bash":"find \/ -size +50M -size -100M"}
{"English":"Print lines 10000 to 10010 from input \"seq 1 100000\"","Bash":"seq 1 100000 | sed -n '10000,10010p'"}
{"English":"Count the number of lines in all \".php\" files in the current directory tree","Bash":"wc -l `tree -if --noreport | grep -e'\\.php$'`"}
{"English":"search for all xml files in current folder and display them","Bash":"find . -name \"*.xml\" -exec echo {} \\;"}
{"English":"Copy all files with name pattern $j.sh (case insensitive) under '\/tmp\/2' directory tree to $i directory","Bash":"find \"\/tmp\/2\/\" -iname \"$j.sh\" -exec cp {} \"$i\" \\;"}
{"English":"Change permissions to 644 recursively only for files","Bash":"find . -type f -exec chmod 644 {} \\;"}
{"English":"Find files\/directories under \/users\/tom that matches both the pattern \"*.pl\" and  \"*.pm\"","Bash":"find \/users\/tom -name \"*.pl\" -name \"*.pm\""}
{"English":"search for the directory with the name aa in the current folder","Bash":"find . -type d -name aa"}
{"English":"Delete all files\/directories under current directory","Bash":"find -delete"}
{"English":"Find how many files are in a path","Bash":"find . -type f -exec basename {} \\; | wc -l"}
{"English":"Delete all hidden files under $some_directory","Bash":"find \"$some_directory\" -type f -name '.*' -exec rm '{}' \\;"}
{"English":"Find all files in the current directory tree that were last changed $minutes minutes ago","Bash":"find . -cmin $minutes -print"}
{"English":"find all the files with the name test in the current folder ( case insensitive )","Bash":"find . -iname test"}
{"English":"Search the current directory tree for files and directories whose names do not end in \".exe\" and \".dll\"","Bash":"find . -not -name \"*.exe\" -not -name \"*.dll\""}
{"English":"create a tar ball of all pdf files in current folder","Bash":"find . -name *.pdf | xargs tar czvf \/root\/Desktop\/evidence\/pdf.tar"}
{"English":"Setup a local SSH tunnel from port 1234 to \"remote2\" port 22 via connection to \"remote1\" as \"user1\" on port 45678","Bash":"ssh -L 1234:remote2:22 -p 45678 user1@remote1"}
{"English":"Numerically sort file \"file.dat\" by the second word of each line and output from greatest value to least value","Bash":"sort -nk 2,2 file.dat | tac"}
{"English":"Show all files in \/etc that are owned by root have been modified within the last minute","Bash":"find \/etc\/ -user root -mtime 1"}
{"English":"find all files in the current folder which are bigger than 10bytes","Bash":"find . \u2014 size +10 -print"}
{"English":"Wrap each line in \"file\" to fit in 80 characters and count the number of lines","Bash":"fold file | wc -l"}
{"English":"Prints last modified file in a current folder with modification time.","Bash":"find . -type f | sed 's\/.*\/\"&\"\/' | xargs ls -E | awk '{ print $6,\" \",$7 }' | sort | tail -1"}
{"English":"find all the .jpg files in \/ and copy them to the current folder.","Bash":"find \/ -type f -name *.jpg  -exec cp {} . \\;"}
{"English":"Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory","Bash":"find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox\/Messages' ';' -exec sh -c 'mv {}.mbox\/*.emlx {}.mbox\/Messages' ';'"}
{"English":"Print all business days in the current month without column titles","Bash":"cal -h | cut -c 4-17 | tail -n +3"}
{"English":"Change directory to the directory containing the \"oracle\" executable","Bash":"cd \"$(dirname $(which oracle))\""}
{"English":"Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them","Bash":"find .\/ -type f -name \"$2\" -exec sed -i \"s\/$3\/$4\/g\" {} \\;"}
{"English":"Recursively copy \"original_dir\" to \"copy_dir\" preserving file\/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files.","Bash":"rsync -Prt --size-only original_dir copy_dir"}
{"English":"display all the text files and pdf files in the current folder","Bash":"find . \\( -name \"*.txt\" -o -name \"*.pdf\" \\)"}
{"English":"Find files\/directories writable by group and others under the \/path directory","Bash":"find \/path -perm -022"}
{"English":"Find all *.tex files\/directories in maximum 2 levels down the current directory","Bash":"find . -maxdepth 2 -name '*.tex'"}
{"English":"Search directory lpi104-6 for files with inode number 1988884","Bash":"find lpi104-6 -inum 1988884"}
{"English":"Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed","Bash":"find ~ -used +365 -ok rm '{}' ';'"}
{"English":"Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .","Bash":"find .  -maxdepth 2 -name '*.tmp'"}
{"English":"bind \"\\C-i\" to \"complete\" function","Bash":"bind '\"\\C-i\":complete'"}
{"English":"find all the \".wma\" files in the folder \"$current_directory\"","Bash":"find \"${current_directory}\" -type f -iname \"*.wma\""}
{"English":"test if the 2nd column in file A is in the reverse order of the second column of file B","Bash":"diff --brief <(awk '{print $2}' A) <(tac B | awk '{print $2}')"}
{"English":"Prevent ssh from reading from standard input and execute \"touch \/home\/user\/file_name.txt\" on \"$R_HOST\" as \"$R_USER\"","Bash":"ssh -n $R_USER@$R_HOST 'touch \/home\/user\/file_name.txt'"}
{"English":"Make directory and parents as needed to \"~\/temp\/bluecove\/target\/\"","Bash":"mkdir -p ~\/temp\/bluecove\/target\/"}
{"English":"Display file type information for all instances of \"file\" in the current PATH.","Bash":"which file | xargs file"}
{"English":"Recursively removes all files like '4' under folder '.\/a' and removes folders with such files if they become empty.","Bash":"find a -type f -name '4' -delete -printf \"%h\\0\" | xargs -0 -r rmdir"}
{"English":"force delete all the files that have been modified in the last 3 days","Bash":"find . -mtime -3 -exec rm -rf {} \\;"}
{"English":"List all .jpg files in the home directory tree","Bash":"find . -name \"*.jpg\" -print0 | xargs -0 ls"}
{"English":"Print all files with a '-' after their name if they are regular files, and a '+' otherwise","Bash":"find \/ -type f -exec echo {} - ';' -o -exec echo {} + ';'"}
{"English":"find all the php files in current folder and search for multiple patterns in these files","Bash":"find -name '*.php' -exec grep -li \"fincken\" {} + | xargs grep -l \"TODO\""}
{"English":"Make directory and parents as needed for each unique mime type in the current directory","Bash":"mkdir -p `file -b --mime-type *|uniq`"}
{"English":"Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s\/(.*)\\n(.*)\/\\2 \\1\/' on the output","Bash":"find . -iname \"$srch1*\" -exec grep \"It took\" {} \\; -print |sed -r 'N;s\/(.*)\\n(.*)\/\\2 \\1\/'"}
{"English":"Put the absolute directory path to the current script to MY_DIR variable","Bash":"MY_DIR=$(dirname $(readlink -f $0))"}
{"English":"display a long listing of all regular files  in current folder which have been modified in the last 60 minutes","Bash":"find . -mmin -60 -type f -ls"}
{"English":"Decompress and extract 'libxml2-sources-2.7.7.tar.gz'","Bash":"gzip -dc libxml2-sources-2.7.7.tar.gz | tar xvf -"}
{"English":"Find all regular files in the current directory tree and count them","Bash":"find -type f -printf '.' | wc -c"}
{"English":"Make directories \"es\/LC_MESSAGES\" as needed and do not error if it exists","Bash":"mkdir -p es\/LC_MESSAGES"}
{"English":"Print content of all files found regarding seach options '[whatever]'","Bash":"find [whatever] -exec cat {} \\;"}
{"English":"Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place","Bash":"find . -type f -exec sed -i \u2018s\/.*abc.*\/#&\/\u2019 {} \\;"}
{"English":"Find all files in the current directory tree ignoring the \".git\" directory","Bash":"find . -type d -name '.git*' -prune -o -type f -print"}
{"English":"Archive \"\/usr\/local\/\" to \"\/BackUp\/usr\/local\/\" on host \"XXX.XXX.XXX.XXX\" via ssh and show progress","Bash":"rsync --progress -avhe ssh \/usr\/local\/  XXX.XXX.XXX.XXX:\/BackUp\/usr\/local\/"}
{"English":"search for the regular\/normal file \"foo.bar\" and force delete it","Bash":"find \/home -name foo.bar -type f -exec rm -f \"{}\" ';'"}
{"English":"Find all files\/directories named 'file' without descending into directories with the same name under current directory tree","Bash":"find -name file -prune"}
{"English":"display all files in the folder bar only in the path \/foo\/bar\/myfile (no output is generated)","Bash":"find bar -path \/foo\/bar\/myfile -print"}
{"English":"List each unique case insensitive character in \"file\" prefixed by number of occurrences and sorted from most frequent to least frequent","Bash":"grep -o . filename | tr '[:upper:]' '[:lower:]' | sort | uniq -c | sort -nr"}
{"English":"find for a word in all the regular files in the current directory","Bash":"find . -type f -exec grep -li '\/bin\/ksh' {} \\;"}
{"English":"Print which files differ in \"dir1\" and \"dir2\" recursively","Bash":"diff -rq dir1 dir2"}
{"English":"Find all *.ogg (case insensitive) files\/directories under your home directory that are not greater than 20MB in size","Bash":"find $HOME -iname '*.ogg' ! -size +20M"}
{"English":"recursively change owner of the directory \/usr\/local\/lib to the current user","Bash":"sudo chown -R `whoami` \/usr\/local\/lib"}
{"English":"Remove all files\/directories in the current directory without '.git' and '.gitignore'","Bash":"find -mindepth 1 -depth -print0 | grep -vEzZ '(\\.git(\/|$)|\/\\.gitignore$)' | xargs -0 rm -rvf"}
{"English":"Remove the \"^M\" characters from all *.ext files under \/home directory","Bash":"find \/home -type f -name \"*.ext\" -exec sed -i -e 's\/^M$\/\/' {} \\;"}
{"English":"Make hidden directory \".hiddendir\"","Bash":"mkdir .hiddendir"}
{"English":"Display 798 backwards","Bash":"echo 798|rev"}
{"English":"Find all files named \"filename\" in the current directory tree, not descending into \"FOLDER1\" directories","Bash":"find . -name FOLDER1 -prune -o -name filename"}
{"English":"prints top 10 commands used","Bash":"history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}
{"English":"Find directories starting from \/TBD that were modified more than 1 day ago","Bash":"find \/TBD -mtime +1 -type d"}
{"English":"Search the current directory tree for regular files whose names begin with \"orapw\"","Bash":"find . -name \"orapw*\" -type f"}
{"English":"Search the *.cc files in the current directory tree for string \"xxx\"","Bash":"find . -name \"*.cc\" -print -exec grep \"xxx\" {} \\;"}
{"English":"Find and delete all hard links in the \/home directory to file1","Bash":"find \/home -xdev -samefile file1 -exec rm {} +"}
{"English":"Mount \"vfat\" filesystem \"\/dev\/sda7\" to \"\/mnt\/my_partition\" with read and write permission, umask of files and directories set to \"0000\", and save in fstab and allow ordinary users to mount","Bash":"sudo mount -t vfat -o rw,auto,user,fmask=0000,dmask=0000 \/dev\/sda7 \/mnt\/my_partition"}
{"English":"Print the list of regular files in the current directory and all subdirectories","Bash":"find . -type f"}
{"English":"Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively","Bash":"find . -maxdepth 1 -type d -exec chmod -R 700 {} \\;"}
{"English":"find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours )","Bash":"find .\/ -daystart -mtime +3"}
{"English":"display the count of all the directories present in a folder","Bash":"find \/mount\/point -type d | wc -l"}
{"English":"search for the directory \"config\" in the current folder and change directory to the first instance of the search","Bash":"cd $(find . -name config -type d | sed 1q)"}
{"English":"Change permission to 755 for all directories under $d directory tree","Bash":"find \"$d\/\" -type d -print0 | xargs -0 chmod 755"}
{"English":"List all files in the \"test\" directory tree except those with '\/invalid_dir\/' in the pathnames","Bash":"find test -print | grep -v '\/invalid_dir\/'"}
{"English":"Print which files differ between dir1 and dir2, treating absent files as empty","Bash":"diff --brief -Nr dir1\/ dir2\/"}
{"English":"Run an awk program on every TXT file found in the current directory tree","Bash":"find . -name \"*.txt\" -print -exec awk '$9 != \"\" && n < 10 {print; n++}' {} \\;"}
{"English":"change the permission of all the php files in the folder \/var\/www\/ to 700","Bash":"find \/var\/www\/ -type f -iname \"*.php\" -exec chmod 700 {} \\;"}
{"English":"check if myfile has 0644 permissions","Bash":"find myfile -perm 0644 -print"}
{"English":"Find all .txt files in current  directory and rename with  .html .","Bash":"find  . -type f -name \"*.txt\" -exec mv {} `basename {} .html` .html \\;"}
{"English":"Print  \"Cannot acquire lock - already locked by \" followed by content of $lockfile file","Bash":"echo \"Cannot acquire lock - already locked by $(cat \"$lockfile\")\""}
{"English":"Find all files under \/var\/www directory and set their permission to 644","Bash":"sudo find \/var\/www -type f -print0 | xargs -0 chmod 644"}
{"English":"Save number of processors in system to 'NP' variable","Bash":"NP=`cat \/proc\/cpuinfo | grep processor | wc -l`"}
{"English":"Read a line of standard input with prompt \"Enter your choice: \" in an interactive shell and save the response to variable \"choice\"","Bash":"read -e -p \"Enter your choice: \" choice"}
{"English":"Find all directories named 'octave' under current directory tree","Bash":"find . -name \"octave\" -type d"}
{"English":"Find all regular files with permissions 777 under and below \/home\/user\/demo\/, and change their permissions to 755","Bash":"find \/home\/user\/demo -type f -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"display all the files with the names \"name1\" and \"name2\" in the current folder and do not search in the sub directories","Bash":"find . -maxdepth 1 -name \"name1\" -o -name \"name2\""}
{"English":"Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output","Bash":"find .  -type f -name \"CDC*\" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \\ | wc -l"}
{"English":"Find all *bar files\/directories under current directory","Bash":"find -name *bar"}
{"English":"Find all regular files that reside in the current directory tree and were last modified at least 1 day ago","Bash":"find . -type f -mtime +0"}
{"English":"display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours","Bash":"find \/ -size +1000 -mtime +30  -exec ls -l {} \\;"}
{"English":"Find all directories under 'A' directory tree excluding paths containing the directory 'a'","Bash":"find A -type d \\( ! -wholename \"A\/a\/*\" \\)"}
{"English":"find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in \/tmp and \/var\/tmp folder home folders","Bash":"find \/tmp \/var\/tmp ~ -type f -size +10M -mtime +60 -ctime -100 -exec file -N -i -- {} + | sed -n 's!: video\/[^:]*$!!p'"}
{"English":"Report total file systems disk usage.","Bash":"df --total | tail -n 1"}
{"English":"Search for symlinks pointing to anywhere within \/mnt\/oldname\/","Bash":"find \/ -type l -lname '\/mnt\/oldname*'"}
{"English":"Find all hidden (regular) files under \/tmp","Bash":"find \/tmp -type f -name \".*\""}
{"English":"Count non-blank lines in a file 'foo.c'","Bash":"cat foo.c | sed '\/^\\s*$\/d' | wc -l"}
{"English":"search for \"specified string\" in all the php files in the current folder","Bash":"find . -name \u201c*.[php|PHP]\u201d -print | xargs grep -HnT \u201cspecified string\u201d"}
{"English":"Find all files\/directories following symbolic links under current directory tree that are owned by 'root' user","Bash":"find . -follow -uid 0 -print"}
{"English":"List the files\/directories under \/PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers","Bash":"find \/PATH_to_SEARCH -ls | sort -n | awk '!seen[$1]++'"}
{"English":"find all the files in the file system which are bigger than 3 bytes","Bash":"find \/ -size +3 -print"}
{"English":"display long listing of first 10 directories in the current folder","Bash":"find . -type d -ls | head"}
{"English":"Remove sequence like '\\xEF\\xBB\\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.","Bash":"find . -type f -exec sed '1s\/^\\xEF\\xBB\\xBF\/\/' -i.bak {} \\; -exec rm {}.bak \\;"}
{"English":"Find all directories in maximum 1 level down the current directory and remove the . entry from the output","Bash":"find . -maxdepth 1 -type d | sed '\/^\\.$\/d'"}
{"English":"Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree","Bash":"find \"$DIR\" -type f -exec grep -q \"$SEARCH\" {} + ;"}
{"English":"Calculate the md5sum of all the files with name \"MyCProgram.c\", ignoring case","Bash":"find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}
{"English":"Sort content of files 'file1' and 'file2' by second of dot-separated fields.","Bash":"cat file1 file2 |sort -t. -k 2.1"}
{"English":"Find all regular files under $dir","Bash":"find $dir -type f"}
{"English":"Write \"2-1\" to standard output and to \"\/sys\/bus\/usb\/drivers\/usb\/unbind\"","Bash":"echo '2-1' |sudo tee \/sys\/bus\/usb\/drivers\/usb\/unbind"}
{"English":"Find all files that have wrong permission","Bash":"find \/ \\( -perm -006 -o -perm -007 \\) \\( ! -type -l \\) -ls"}
{"English":"Look for files with the name 'search' under current directory","Bash":"find . -name \"search\""}
{"English":"find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .","Bash":"find .  -type f  -exec ls -lrt {} \\; |awk -F' ' '{print $9}'"}
{"English":"List files greater than 1024KB under \/path\/to\/directory and print the time and size on stdout","Bash":"find \/path\/to\/directory -type f -size +1024k -exec ls -lh {} \\; | awk '{ print $8 \": \" $5 }'"}
{"English":"Calculate the total disk usage for each \".jpg\" file on the system and prepend the system host name to the output","Bash":"find \"$PWD\" \/ -iname '*.jpg' -exec du -s {} + | sed \"s\/^\/$(hostname): \/\""}
{"English":"Find regular files named 'findme.txt' under '\/usr' and '\/home' directory tree","Bash":"find \/usr \/home -name findme.txt -type f -print"}
{"English":"Print amount of space available on the file system containg path to the current working directory.","Bash":"df . | awk '$3 ~ \/[0-9]+\/ { print $4 }'"}
{"English":"Print which files differ in \"\/tmp\/dir1\" and \"\/tmp\/dir2\" recursively","Bash":"diff -qr \/tmp\/dir1\/ \/tmp\/dir2\/"}
{"English":"remove all the log files which have not been modified in the last 5 days","Bash":"find \/logs -type f -mtime +5 -exec rm {} \\;"}
{"English":"Read the raw input of \"\/dev\/input\/mice\" as hexadecimal bytes with 3 bytes per line","Bash":"cat \/dev\/input\/mice | od -t x1 -w3"}
{"English":"Find all *.txt files under current directory and copy them to .\/tmp","Bash":"find . -type f -name '*.txt' | sed 's\/'\"'\"'\/\\'\"'\"'\/g' | sed 's\/.*\/\"&\"\/'  | xargs -I{} cp -v {} .\/tmp\/"}
{"English":"Print out the contents of all *.txt files in the home directory","Bash":"find ~ -name '*.txt' -print0 | xargs -0 cat"}
{"English":"Print the base name of the current working directory","Bash":"pwd | xargs basename"}
{"English":"Report file system containing the current directory disk usage in kilobytes.","Bash":"df -k ."}
{"English":"search for the regular\/normal file \"Dateiname\" in the entire file system","Bash":"find \/ -type f -iname \"Dateiname\""}
{"English":"Recursively change the user and group of all files in \"\/var\/cache\/jenkins\" to \"root\"","Bash":"chown -R root:root \/var\/cache\/jenkins"}
{"English":"cope *.mp3 files to \/tmp\/MusicFiles","Bash":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;"}
{"English":"Create an empty file with a carriage return character in its name.","Bash":"echo -e \"Icon\\\\r\" | xargs touch"}
{"English":"Print \"#include\" statements found in \"file2\" that are not in \"file1\"","Bash":"comm -13 <(grep '#include' file1 | sort) <(grep '#include' file2 | sort)"}
{"English":"Count the number of lines in all \".php\" files in the current directory tree","Bash":"find . -name '*.php' -type f | xargs cat | wc -l"}
{"English":"Force create a symbolic link to \"$f\" in \"~\/my-existing-links\/\" with name the basename of \"$f\"","Bash":"ln -sf \"$f\" \"~\/my-existing-links\/$(basename $f)\""}
{"English":"Find all *.mp3 files in file system with more than 10MB and delete them using rm command","Bash":"find \/ -type f -name *.mp3 -size +10M -exec rm {} \\;"}
{"English":"Search the current directory recursively for regular files last accessed less than 2 minutes ago","Bash":"find . type -f -amin -2"}
{"English":"Send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable \"COUNTER\", and output only lines containing \"ms\" to standard output.","Bash":"ping -c 1 192.168.1.$COUNTER | grep 'ms'"}
{"English":"Find the top 5 biggest files","Bash":"find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}
{"English":"Display the named characters in \"line1\\r\\nline2\"","Bash":"echo -e \"line1\\r\\nline2\" | awk '{ print $0; }' | od -a"}
{"English":"Returns exit code 1 and terminates shell if 'set -e' was applied.","Bash":"a=$(false)"}
{"English":"Find all MP3 files in the home directory tree that were modified in the last 24 hours","Bash":"find ~ -type f -mtime 0 -iname '*.mp3'"}
{"English":"Print the IP addresses for the current host name","Bash":"hostname  -I | cut -f1 -d' '"}
{"English":"Get a list of files and directories in the current directory tree","Bash":"find . -print0 | xargs -0 echo"}
{"English":"Find files on the system whose names begin with either x or X","Bash":"find \/ -name \"[Xx]*\""}
{"English":"Find *.conf files\/directories only upto 2 levels down under \/etc directory and show a few lines of output from the end","Bash":"find \/etc -maxdepth 2 -name \"*.conf\" | tail"}
{"English":"Views text content of compressed FileB file in TarFile archive.","Bash":"tar -xOf TarFile FileB.gz | zless"}
{"English":"Find all directories under \/home\/username\/public_html\/sites\/all\/modules and set their permission to 750","Bash":"find \/home\/username\/public_html\/sites\/all\/modules -type d -exec chmod 750 {} +"}
{"English":"Count number of lines in all files matching \"*R1*.fastq.gz\"","Bash":"zcat *R1*.fastq.gz | wc -l"}
{"English":"Generate the Spanish alphabet and number each character","Bash":"echo -e {{a..n},\u00f1,{o..z}}\"\\n\" | nl"}
{"English":"Make a directory in the current working directory with a random 32 alphanumeric character name","Bash":"mkdir $(cat \/dev\/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)"}
{"English":"Print whether the sorted contents of \"set1\" and \"set2\" differ","Bash":"diff -q <(sort set1) <(sort set2)"}
{"English":"Prints dates of $m month in $y year, preceded by month number and slash like ' 10\/1'.","Bash":"cal $m $y | sed -e '1,2d' -e 's\/^\/ \/' -e \"s\/ \\([0-9]\\)\/ $m\\\/\\1\/g\""}
{"English":"find & Substitute Only When the Line Matches with the Pattern Using sed","Bash":"find . -type f -name \"*.txt\" -exec sed '\/\\-\/s \/\\-.*\/\/g'  {} \\;"}
{"English":"See all pages in section 3.","Bash":"apropos -s 3 ."}
{"English":"find all the normal\/regular files in the current directory which have been modified in the last 24 hours","Bash":"find . -mtime -1 -type f -print"}
{"English":"Recursively changes group ownership of everything in a '\/home\/user1\/project\/dev' folder to 'project_dev'.","Bash":"chgrp -R project_dev \/home\/user1\/project\/dev"}
{"English":"Saves date of the first Sunday in month $mo of year $yo in the 'do' variable.","Bash":"do=$(cal -m $mo $yo|awk 'NR>2&&!\/^  \/{print$1;exit}')"}
{"English":"Display variable 'var' without leading and trailing whitespace.","Bash":"echo $var | awk '{gsub(\/^ +| +$\/,\"\")}1'"}
{"English":"Search the current directory tree for regular files owned by user \"www\"","Bash":"find -type f -user www"}
{"English":"Prints full process tree with id number of each process.","Bash":"pstree -p"}
{"English":"force delete all the regular files with the name \"test.txt\"","Bash":"find \/home -type f -name test.txt -exec rm -f {} \\"}
{"English":"Find all *.php files under current directory and change their permission to 640","Bash":"chmod 640 $(find . -name *.php)"}
{"English":"Print the names of the directories from the paths expanded by the glob pattern \/path\/to\/directory\/*","Bash":"find  \/path\/to\/directory\/* -maxdepth 0 -type d -exec basename {} \\;"}
{"English":"sleep for 5 seconds","Bash":"sleep 5"}
{"English":"split file \/etc\/gconf\/schemas\/gnome-terminal.schemas into pieces per 1000000 lines","Bash":"split -n 1000000 \/etc\/gconf\/schemas\/gnome-terminal.schemas"}
{"English":"Finds if environment variable like 'DUALCASE' exists in environment.","Bash":"env | grep DUALCASE"}
{"English":"Find all files\/directories under current directory and print their paths","Bash":"find . -exec echo {} \";\""}
{"English":"list all running jobs","Bash":"jobs"}
{"English":"Recursively counts non-blank, non-comment lines in all *.c files in a current folder.","Bash":"find . -type f -name '*.c' -exec cat {} \\; | sed '\/^\\s*#\/d;\/^\\s*$\/d;\/^\\s*\\\/\\\/\/d' | wc -l"}
{"English":"Find directories in the current directory recursively that are not \"executable\" by all","Bash":"find -type d ! -perm -111"}
{"English":"remove all the core files in the current directory","Bash":"\/bin\/find -name \"core\" \u2014 exec rm {} \\;"}
{"English":"Save absolute path of \"\/home\/nohsib\/dvc\/..\/bop\" in variable \"absolute_path\"","Bash":"absolute_path=$(readlink -m \/home\/nohsib\/dvc\/..\/bop)"}
{"English":"Delete all files\/directories taken by the glob pattern * except the ones with the name 'b'","Bash":"find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf {} \\;"}
{"English":"Number every line of standard input as zero padded to 6 characters followed by \"-\"","Bash":"nl -s- -ba -nrz"}
{"English":"Find files in the \/var\/log folder which were modified modified 2 weeks ago","Bash":"find \/var\/log\/ -mtime +7 -mtime -8"}
{"English":"Find all *.rb (regular) files under current directory and count their line numbers","Bash":"find . -name \"*.rb\" -type f | xargs wc -l"}
{"English":"Search directory foo for files containing \"foo\/bar\" in their full names","Bash":"find foo -path foo\/bar -print"}
{"English":"Removes first and last parts of path 'test\/90_2a5\/Windows' and prints the result.","Bash":"echo 'test\/90_2a5\/Windows' | xargs dirname | xargs basename"}
{"English":"Set file permission to 664 and directory permission to 775 for all files and directories under htdocs","Bash":"find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +"}
{"English":"Find all .c and .C files in the current directory tree that contain \"main(\" and copy them to directory test1\/","Bash":"find -iname \u201c*.c\u201d -exec grep -l \u2018main(\u2018 {} \\; -a -exec cp {} test1\/ \\;"}
{"English":"Recursively removes all files with name like \"*.war\" in  \/home\/ubuntu\/wars folder.","Bash":"find \/home\/ubuntu\/wars -type f -name \"*.war\" -exec rm {} \\\\;"}
{"English":"Print login information of all users except the first two and replace all instances of \" \" with \", \"","Bash":"who | awk '{ if (NR!=1 && NR!=2) {print} }' | sed -e 's\/ \/, \/g'"}
{"English":"display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders","Bash":"find . \\( -name skipdir1 -prune , -name skipdir2 -prune -o -name \"*.txt\" \\) -print"}
{"English":"Search the current directory tree for regular files whose names match regular expression \".+-[0-9]+x[0-9]+\\.jpg\"","Bash":"find . -type f -regex \".+-[0-9]+x[0-9]+\\.jpg\""}
{"English":"Find all files\/directories with inode number 16187430 and move them to 'new-test-file-name'","Bash":"find -inum 16187430 -exec mv {} new-test-file-name \\"}
{"English":"Create directory dir2","Bash":"mkdir dir2"}
{"English":"Split the sorted and unique lines in files \"emails_*.txt\" into files with at most 200 lines each with numeric suffixes of length 4","Bash":"sort --unique emails_*.txt | split --numeric-suffixes --lines=200 --suffix-length=4 --verbose"}
{"English":"Find & calculate total number of worlds in all .txt file from current directory","Bash":"find .  -type f  -name '*.txt' -exec wc -w {} \\; | awk '{total += $1} END{print total}'"}
{"English":"Search for filenames matching \"android\" in the current directory and number the output","Bash":"ls | grep android | nl"}
{"English":"Show the last 10 .conf files found by `find' in the \/etc directory","Bash":"find \/etc -maxdepth 1 -name \"*.conf\" | tail"}
{"English":"Recursively print all directories in the current directory tree","Bash":"tree -d"}
{"English":"Print numbered list of all third-level files under the current directory","Bash":"ls -d -1 $PWD\/**\/*\/* | cat -n"}
{"English":"Case-insensitive search for \"error\" in file report.txt, display one page at a time, waiting for user interaction between each.","Bash":"cat report.txt | grep -i error | more"}
{"English":"Make directory \"testExpress\"","Bash":"mkdir testExpress"}
{"English":"Search for $GROUP at the beginning of each line in \/etc\/group and print the last colon (':') separated entry with comma replaced with newlines","Bash":"grep ^$GROUP \/etc\/group | grep -o '[^:]*$' | tr ',' '\\n'"}
{"English":"find all files under the current folder except dir1 dir2 dir3  folder","Bash":"find . -type d \\( -path dir1 -o -path dir2 -o -path dir3 \\) -prune -o -print"}
{"English":"Search everywhere for a file called `httpd.conf' that is newer than \/etc\/apache-perl\/httpd.conf","Bash":"find \/ -name httpd.conf -newer \/etc\/apache-perl\/httpd.conf"}
{"English":"Continuously print the seconds since Unix epoch and the ping time to \"google.com\"","Bash":"ping google.com | awk -F'[ =]' 'NR>1{print system(\"echo -n $(date +%s)\"), $11}'"}
{"English":"Search the current directory tree for regular files modified within the past 24 hours whose names do not end with \".DS_Store\"","Bash":"find . -mtime -1 ! -name '.DS_Store' -type f -exec basename {} \\;"}
{"English":"Delete all files named \"filename\" in the current directory tree, except those with paths ending in \"\/myfolder\/filename\"","Bash":"find . -name \"filename\" -and -not -path \"*\/myfolder\/filename\" -delete"}
{"English":"Gets MAC addresses of all active network interfaces.","Bash":"ifconfig | awk '$0 ~ \/HWaddr\/ { print $5 }'"}
{"English":"change the ownership of all regular\/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)","Bash":"find . -type f -print0 | xargs -0 chown username"}
{"English":"Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.","Bash":"cat text.txt | tr -s ' ' | cut -d ' ' -f4"}
{"English":"lines.txt contains a list of line numbers, one entry per line - output only these lines from text.txt omitting the rest of the file.","Bash":"cat -n text.txt | join -o2.2 lines.txt -"}
{"English":"check find version","Bash":"find --version"}
{"English":"Find all files\/directories under current directory tree that contain '1' or 'k' in their names","Bash":"find . -name \"*[1k]*\""}
{"English":"find all files in the current directory which are bigger than 2MB","Bash":"find -size +2M"}
{"English":"Find all files under the current directory whose filenames are not \"file.txt\", ignoring the case","Bash":"find . -maxdepth 1 -not -iname file.txt"}
{"English":"Search the \/path\/to\/directory tree for regular files modified 61 days ago and then remove them","Bash":"find \/path\/to\/directory -type f -mtime 61 -exec rm -f {} \\;"}
{"English":"Find and copy all log files in the current directory tree to \/tmp\/log-files","Bash":"find . -name \\*.log -print0 | xargs -I{} -0 cp -v {} \/tmp\/log-files"}
{"English":"display all directories which have not been accessed in the last 24*3 hours","Bash":"find -type d -and -atime +3"}
{"English":"Remove leading and trailing spaces or tabs from \"$string\"","Bash":"echo \"$string\" | sed -e 's\/^[ \\t]*\/\/' | sed -e 's\/[ \\t]*$\/\/'"}
{"English":"Find all your text files","Bash":"find . -name \"*.txt\" -print"}
{"English":"Remove all files whose names end with \"~\" in the \/home\/peter directory tree","Bash":"find \/home\/peter -name *~ -print0 |xargs -0 rm"}
{"English":"Find the first file\/directory named 'something' under current directory and quit","Bash":"find . -name something -print -quit"}
{"English":"Recursively copy \"dir_b\" to \"dir_a\" and delete any new files in \"dir_a\"","Bash":"rsync -u -r --delete dir_b dir_a"}
{"English":"Check if \"\/path\/to\/dir\" is a nfs mount point","Bash":"mount -l | grep 'type nfs' | sed 's\/.* on \\([^ ]*\\) .*\/\\1\/' | grep \/path\/to\/dir"}
{"English":"Save the first word of the first difference in \".dir_list_2\" compared to \".dir_list_1\" into variable \"extract_dir\"","Bash":"extract_dir=$(diff .dir_list_1 .dir_list_2 | grep '>' | head -1 | cut -d' ' -f2)"}
{"English":"Prints long listing of directories '\/tmp', '\/tnt' themselves bordered with '<--' and '--->'.","Bash":"ls -ld \/tmp \/tnt | sed 's\/^.*$\/<-- & --->\/'"}
{"English":"Print the column count of compressed file \"$file\"","Bash":"zcat \"$file\" | awk '{print NF}' | head"}
{"English":"find the file \"httpd.log\" in the entire file system","Bash":"find \/ -type f -name httpd.log"}
{"English":"Find all files\/directories under current directory and print their paths","Bash":"find . -exec echo {} +"}
{"English":"Find all directories under current directory and set read & execute permission for group and other for these files","Bash":"find . -type d -print0 | xargs -0 chmod go+rx"}
{"English":"Print the output of history without line numbers","Bash":"history|awk '{$1=\"\";print substr($0,2)}'"}
{"English":"Find all files\/directories named 'game' under current directory tree","Bash":"find . -name game"}
{"English":"Write \"Australia\/Adelaide\" to standard output and to \"\/etc\/timezone\"","Bash":"echo \"Australia\/Adelaide\" | sudo tee \/etc\/timezone"}
{"English":"Append all PNG and JPG files to tar archive 'images.tar'","Bash":"find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}
{"English":"Find all directories under ~\/code excluding hidden directories and replace all newlines with : in the output then remove the last :","Bash":"find ~\/code -type d -name '[^\\.]*' | tr '\\n' ':' | sed 's\/:$\/\/'"}
{"English":"Print the contents of \"~\/.ssh\/config\"","Bash":"cat ~\/.ssh\/config"}
{"English":"Search the \/path directory tree for files matching pattern '*.foo'","Bash":"find \/path -name '*.foo'"}
{"English":"display all the hidden directories in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search -path '*\/.*' -print"}
{"English":"display all the files in the current directory and do not search in sub directories","Bash":"find . -maxdepth 1 -print0"}
{"English":"Remove what follows the forth occurrence of the character \":\" in any field which contains it","Bash":"sed -r 's\/((:[^: \\t]*){3}):[^ \\t]*\/\\1\/g' file | column -t"}
{"English":"Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to \"google.com\"","Bash":"ping google.com | awk '{ sent=NR-1; received+=\/^.*(time=.+ ms).*$\/; loss=0; } { if (sent>0) loss=100-((received\/sent)*100) } { print $0; printf \"sent:%d received:%d loss:%d%%\\n\", sent, received, loss; }'"}
{"English":"Print a welcome message with the current user's user name","Bash":"echo -ne \"Welcome $(whoami)!\\n\""}
{"English":"find all the files in the current folder and search for the word \"vps admin\" in them.","Bash":"find . -exec grep -i \"vds admin\" {} \\;"}
{"English":"Create links for all files in the current directory tree that are more than 1000 days old in \"\/home\/user\/archives\"","Bash":"find . -type f -mtime +1000 -print0 | cpio -dumpl0 \/home\/user\/archives"}
{"English":"display all the directories in the current folder excluding those that are present in the folder secret","Bash":"find . -name secret -type d -prune -o -print"}
{"English":"Unsets 'history' shell option.","Bash":"shopt -u -o history"}
{"English":"Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.","Bash":"find *-name hi.dat"}
{"English":"The file \"files_to_find.txt\" contains a list of filenames, create each file or update its timestamp if it exists.","Bash":"touch `cat files_to_find.txt`"}
{"English":"Replace \"foo\" with \"bar\" in all PHP files in the current directory tree","Bash":"find . -name \"*.php\" -print | xargs sed -i 's\/foo\/bar\/g'"}
{"English":"Strips last section from the path $pathname, and prints basename of the rest part.","Bash":"echo $(basename $(dirname $pathname))"}
{"English":"Delete all files in the $DIR directory that have not been accessed in 5 or more days.","Bash":"find \"$DIR\" -type f -atime +5 -exec rm {} \\;"}
{"English":"find all the non compressed files in the current directory and compress them.","Bash":"find . \\! -name \"*.Z\" -exec compress -f {} \\;"}
{"English":"Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.","Bash":"set -e"}
{"English":"Delete all directories under '.cache\/chromium\/Default\/Cache\/' directory tree that are bigger than 100MB and are at least 1 level deep","Bash":"find .cache\/chromium\/Default\/Cache\/ -mindepth 1 -type d -size +100M -exec rm -rf {} \\;"}
{"English":"search for the file test2 in the current folder","Bash":"find -name test2"}
{"English":"List the unique parent directories of all .class files found under \"\/root_path\"","Bash":"find \/root_path -type f -iname \"*.class\" -printf \"%h\\n\" | sort -u"}
{"English":"Calculate md5 checksum of the list of all files\/dirs in \/path recursively including dot files and excluding the patterns 'run', 'sys', 'tmp' and 'proc', then check the checksum against the checksum saved in \/tmp\/file","Bash":"ls -alR -I dev -I run -I sys -I tmp -I proc \/path | md5sum -c \/tmp\/file"}
{"English":"Prints top-ten list of most used utilities from history.","Bash":"history | awk '{ print $2 }' | sort | uniq -c |sort -rn | head"}
{"English":"Search all the regular files in the current directory for \"example\"","Bash":"find -maxdepth 1 -type f | xargs grep -F 'example'"}
{"English":"find the file with inode $inum under the current directory and delete it","Bash":"find . -inum $inum -exec rm {} \\;"}
{"English":"View manual page of find utility","Bash":"man find"}
{"English":"Gets all IP addresses from host network configuration and prints first one.","Bash":"ifconfig | grep \"inet addr:\" | grep -v \"127.0.0.1\" | grep -Eo '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}'  | head -1"}
{"English":"Delete all files in the \/myDir directory tree that were last modified 7 days ago","Bash":"find \/myDir -mtime 7 -exec rm -rf {} \\;"}
{"English":"Find all the files whose permissions are 777 in the current directory","Bash":"find . -type f -perm 0777 -print"}
{"English":"Send one ping request to local machine.","Bash":"ping -c 1 127.0.0.1 #ping your adress once"}
{"English":"Kill the processes of user `myuser' that have been working more than 7 days","Bash":"find \/proc -user myuser -maxdepth 1 -type d -mtime +7 -exec basename {} \\; | xargs kill -9"}
{"English":"Find all *.cls files\/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' for each of them where $0 is expanded to the file\/directory path","Bash":"find . -iname \"*.cls\" -exec echo '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE\"L\"L}' {} \\;"}
{"English":"search for the file \"file\" in current folder and save the output to the same file","Bash":"find -name file -fprint file"}
{"English":"Find deb packages in the current directory recursively","Bash":"find . -type f -and -iname \"*.deb\""}
{"English":"create directories foo and bar","Bash":"mkdir foo bar"}
{"English":"Create 5 empty .txt files","Bash":"echo \"a.txt b.txt c.txt d.txt z.txt\" | xargs touch"}
{"English":"find regular\/normal files in the current folder","Bash":"find -type f"}
{"English":"Search for the Perl regex \"[\\x80-\\xFF]\" in *.xml files under current directory tree","Bash":"find . -name *.xml | xargs grep -P \"[\\x80-\\xFF]\""}
{"English":"Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz","Bash":"tar tf nginx-1.0.0.tar.gz | xargs dirname | sort | uniq"}
{"English":"Remove duplicate lines in \"file_name\" and print the output on stdout","Bash":"awk '{print(NR\"\\t\"$0)}' file_name | sort -t$'\\t' -k2,2 | uniq --skip-fields 1 | sort -k1,1 -t$'\\t' | cut -f2 -d$'\\t'"}
{"English":"find all the text files in the temp folder and search for the word hello in all these files and display the matched files","Bash":"find \/tmp -type f -name \u2018*.txt*\u2019 | sed -e \u2018s\/.*\/\\\u201d&\\\u201d\/\u2019 |xargs -n 1 grep -l hello|sed -e \u2018s\/.*\/\\\u201d&\\\u201d\/\u2019"}
{"English":"Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.","Bash":"find ~\/ -atime +100 -exec rm -i {} \\;"}
{"English":"Find all files\/directories that are newer than 'backup.tar.gz' by modification time","Bash":"find . -newer  backup.tar.gz"}
{"English":"Search the ~\/Books directory recursively for files named \"Waldo\"","Bash":"find ~\/Books -name Waldo"}
{"English":"search the file myfile.txt in the current folder","Bash":"find . -name myfile.txt -print"}
{"English":"display all files in the current folder which end with extension \"myfile\" followed by two digits","Bash":"find . -regex '.*myfile[0-9][0-9]?'"}
{"English":"show all directories in the current folder excluding those that are present only in the paths .\/media, .\/images and .\/backups","Bash":"find . -path '.\/media' -prune -o -path '.\/images' -prune -o -path '.\/backups' -prune -o -print"}
{"English":"display long listing of all the empty files in the current folder","Bash":"find . -empty -exec ls -l {} \\;"}
{"English":"Print the list of all files except files named BBB","Bash":"find . \\! -name BBB -print"}
{"English":"display the name and size of all the regular\/normal files  in the current folder which are bigger than 50MB","Bash":"find . -type f -size +50000k -exec ls -lh {} \\; | awk '{ print $9 \": \" $5 }'"}
{"English":"Greps domain $domain IP name from long dig listing.","Bash":"dig $domain | grep $domain | grep -v ';' | awk '{ print $5 }'"}
{"English":"Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder .\/ISOLATE","Bash":"find . -name '*.ISOLATE.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE .\/ISOLATE"}
{"English":"Find PHP files with abstract classes","Bash":"find . -type f -name \"*.php\" -exec grep --with-filename -c \"^abstract class \" {} \\; | grep \":[^0]\""}
{"English":"Display the contents of file 'filename' excluding lines starting with # or empty\/space-only lines, waiting for user interaction after each page.","Bash":"grep -v '^$\\|^#\\|^\\s*\\#' filename | grep -v \"^[[:space:]]*$\" | more"}
{"English":"Show the number of regular files in the current directory tree","Bash":"find . -type f | wc -l"}
{"English":"Find all broken symlinks under \/path\/to\/search directory","Bash":"find \/path\/to\/search -type l -xtype l"}
{"English":"Open all .java files in the current directory tree in the vim editor","Bash":"find . -name '*.java' | xargs vim"}
{"English":"Find all text files in the home directory","Bash":"find ~\/ -name '*.txt'"}
{"English":"Find all files\/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago","Bash":"find . -name \"R*VER\" -mtime +1"}
{"English":"Calculate the md5 sum of the contents of all files sorted in directory tree \"\/path\"","Bash":"find \/path -type f | sort -u | xargs cat | md5sum"}
{"English":"search for a shell script in the current folder and display the current folder path","Bash":"find . -name onlyme.sh -exec pwd \\;"}
{"English":"find all the css files","Bash":"find -name '*.css'"}
{"English":"Find all files\/directories under current directory with 'FooBar' in their paths and copy them to ~\/foo\/bar","Bash":"find . | grep FooBar | xargs -I{} cp {} ~\/foo\/bar"}
{"English":"Find all directories under maximum 1 level down the \/parent  directory and set their permission to 700 recursively","Bash":"find \/parent -maxdepth 1 -type d -print0 | xargs -0 chmod -R 700"}
{"English":"Split all files in the directory tree \"\/dev\/shm\/split\/\" into files of at most 1000 lines each and use the filename as the prefix","Bash":"find \/dev\/shm\/split\/ -type f -exec split -l 1000 {} {} \\;"}
{"English":"Find all files\/directories named 'file1' under current directory tree","Bash":"find . -name file1 -print"}
{"English":"find all the files in the current folder that have been modified exactly 24*3 hours ago","Bash":"find .\/ -mtime 3"}
{"English":"display all the files in the home folder which are smaller than 500 bytes","Bash":"find $HOME -size -500b"}
{"English":"Rename '.mkv' extension to '.avi' for all files\/directories under '\/volume1\/uploads' directory tree","Bash":"find \/volume1\/uploads -name \"*.mkv\" -exec rename 's\/\\.mkv$\/.avi\/' \\{\\} \\;"}
{"English":"Find files\/directories named 'TEST_3' under current directory tree","Bash":"find -name TEST_3"}
{"English":"Mount partition with label \"WHITE\" on \"\/mnt\/WHITE\" with read and write permission and have it accessible by user and group \"test\"","Bash":"mount -L WHITE \/mnt\/WHITE -o rw,uid=test,gid=test"}
{"English":"Display all lines contiaining 'funcname' in system map file matching current kernel.","Bash":"cat \/boot\/System.map-`uname -r` | grep funcname"}
{"English":"Rename file file.txt.123456 to file.txt","Bash":"mv file.txt.123456 $(ls file.txt.123456 | rev | cut -c8- | rev)"}
{"English":"Print first column of every line in every *.txt separated by a space","Bash":"paste -d':' *.txt | sed 's\/ [^:]*$\/\/;s\/ [^:]*:*\/ \/g;s\/:\/\/g'"}
{"English":"Print the file content of command \"[whatever]\"","Bash":"cat `find [whatever]`"}
{"English":"Find all files under current directory whose file type description contains \"image\", display only path to each file.","Bash":"find . -type f -exec file {} \\; | awk -F: '{if ($2 ~\/image\/) print $1}'"}
{"English":"Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers","Bash":"find .\/ -type f -exec grep -Hn \"Text To Find\" {} \\;"}
{"English":"Counts the number of lines in *.php and *.inc files in a current folder and subfolders.","Bash":"find . -name '*.php' -o -name '*.inc' | xargs wc -l"}
{"English":"Find all *.rb files\/directories under current directory","Bash":"find . -name *.rb"}
{"English":"delete all the trace files (\".trc\") from the folder $DBA\/$ORACLE_SID\/bdump\/ which have not been accessed in the last 7*24 hours","Bash":"find $DBA\/$ORACLE_SID\/bdump\/*.trc -mtime +7 -exec rm {} \\;"}
{"English":"Prints day of first Tuesday in a month.","Bash":"cal | awk 'NR>2{Sfields=7-NF; if (Sfields == 0 ) {printf \"%02d\\n\",$3;exit}}'"}
{"English":"Make directories \".\/es\/es_MX.utf8\/LC_MESSAGES\" as needed and do not error if it exists","Bash":"mkdir --parents .\/es_MX.utf8\/LC_MESSAGES"}
{"English":"Compress all files with '.txt' extension under current directory","Bash":"echo *.txt | xargs gzip -9"}
{"English":"Remove files that are less than 1MB in size under current directory","Bash":"find . -type f -size -1M -exec rm {} +"}
{"English":"Read a line from standard input into variable \"message\" with prompt \"Please Enter a Message: \" followed by a newline","Bash":"read -p \"`echo -e 'Please Enter a Message: \\n\\b'`\" message"}
{"English":"Print reverse lookup for IP address 72.51.34.34","Bash":"dig -x 72.51.34.34"}
{"English":"Print the list of 1st level subdirectories in \/fss\/fin","Bash":"find \/fss\/fin -d 1 -type d -name \"*\" -print"}
{"English":"Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days","Bash":"find . -type f -mtime -7 -print -exec cat {} \\; | tar cf - | gzip -9"}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","Bash":"find . -mtime 0 -not \\( -name '*.swp' -o -regex '\\.\/es.*' -o -regex '\\.\/en.*' \\)"}