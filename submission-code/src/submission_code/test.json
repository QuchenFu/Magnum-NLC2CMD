{"English":"find all the files which have been modified in the last 15 minutes excluding hidden files.","Bash":"find . -mmin -15 \\( ! -regex \".*\/\\..*\" \\)"}
{"English":"Move all files and directories matching \"*.boo\" in the current directory to \"subdir\"","Bash":"mv `ls *.boo` subdir"}
{"English":"Print the last line of the alphabetically sorted lines in file \"set\"","Bash":"tail -1 <(sort set)"}
{"English":"find all  files that match \"[a-f0-9\\-]{36}\\.jpg\" of grep","Bash":"find . * | grep -P \"[a-f0-9\\-]{36}\\.jpg\""}
{"English":"Replace all '\u7f6e\u63db\u524d' with '\u7f6e\u63db\u5f8c' in all regular files under current directory tree and modify them in-place","Bash":"sudo find . -type f -exec sed -i 's\/\u7f6e\u63db\u524d\/\u7f6e\u63db\u5f8c\/g' {} \\;"}
{"English":"Remount \"yaffs2\" filesystem \"\/dev\/block\/mtdblk4\" to \"\/system\" as read only","Bash":"mount -o ro,remount -t yaffs2 \/dev\/block\/mtdblk4 \/system"}
{"English":"Create an empty file (or update timestamp of file) specified by variable \"correctFilePathAndName\"","Bash":"touch \"$correctFilePathAndName\""}
{"English":"Count the number of times each person is logged in on the system","Bash":"who | awk '{print $1}' | sort | uniq -c | sort -n"}
{"English":"display all the files in the home folder","Bash":"find $HOME -print"}
{"English":"Make directories \"tmp\/real_dir1\" and \"tmp\/real_dir2\" as needed","Bash":"mkdir -p tmp\/real_dir1 tmp\/real_dir2"}
{"English":"Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.","Bash":"find \/ -type f -name *.zip -size +100M -exec rm -i {} \\;"}
{"English":"Remove all .mpg files in the \/home\/luser directory tree","Bash":"find \/home\/luser -type f -name '*.mpg' -print0 | xargs -0 rm -f"}
{"English":"find all the normal\/regular files in the current folder which are present in the pattern file \"file_list.txt\"","Bash":"find . type f -print | fgrep -f file_list.txt"}
{"English":"Copies file 'file1' to each of directories 'dir1', 'dir2', 'dir3'.","Bash":"echo dir1 dir2 dir3 | xargs -n 1 cp file1"}
{"English":"find all the files in the current folder which have set guid bit on and list the top 10 files.","Bash":"find . -perm \/g+s | head"}
{"English":"Decompress and unarchive \"hello-0.2.tar.gz\"","Bash":"gzip -dc hello-0.2.tar.gz | tar -xf -"}
{"English":"Print login name and full name of all users currently logged in","Bash":"finger -l | awk '\/^Login\/'"}
{"English":"Search the current directory tree recursively for the regular file named \"myfile\" ignoring \"work\" and \"home\" directories","Bash":"find .  \\( -name work -o -name home \\)  -prune -o -name myfile -type f -print"}
{"English":"find all png files in the current folder","Bash":"find . -type f -name '*.png'"}
{"English":"Print the contents of \"n\"","Bash":"cat n"}
{"English":"Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other","Bash":"find . -type d -name files -exec chmod ug+rwx,o-rwx {} \\;"}
{"English":"Search the ~\/Books directory recursively for regular files named \"Waldo\"","Bash":"find ~\/Books -type f -name Waldo"}
{"English":"Find every file\/directory under \/var\/spool that was modified more than 60 days ago.","Bash":"find \/var\/spool -mtime +60"}
{"English":"search for the file \".user.log\" in a folder","Bash":"find \/nfs\/office -name .user.log -print"}
{"English":"Unzip \"file.gz\", list the unique lines matching regex pattern '\"searchstring\":\"[^\"]*\"' prefixed by the number of occurrences, sort from least frequent to most frequent","Bash":"zcat file.gz | grep -o '\"searchstring\":\"[^\"]*\"'| sort | uniq -c | sort -n"}
{"English":"Monitor 3 specific process IDs: 18884, 18892, and 18919 (GNU specific)","Bash":"top -p 18884 -p 18892 -p 18919"}
{"English":"Find files\/directories named 'foo.bar' under '.\/dir1' and '.\/dir2' directory tree","Bash":"find .\/dir1 .\/dir2 -name foo.bar -print"}
{"English":"find all the files in the entire filesystem which belong to the group root and display the ten files.","Bash":"find \/ -group root | head"}
{"English":"Add group write permission to all files in the current directory","Bash":"find . -maxdepth 0 -type f -exec chmod g+w {} ';'"}
{"English":"Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.","Bash":"find . -type d -exec touch {}\/index.html \\;"}
{"English":"Find all files in current directory and search for 'searchName' in those files","Bash":"find .\/ -name \"*\" | xargs grep \"searchName\""}
{"English":"find all files under the \/etc directory and display any IP address patterns in them","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"Add prefix like number and \"^M${LOGFILE}> \" to every non-blank line received on standard input","Bash":"nl -s\"^M${LOGFILE}>  \""}
{"English":"Continuously answer \"y\" to any prompt from \"mv ...\"","Bash":"yes | mv ..."}
{"English":"find all files in the current folder that end with \",txt\"","Bash":"find . -name \"*,txt\""}
{"English":"Find all files\/directories ignoring *~ files\/directories without descending into .snapshot directory with null character as the delimiter","Bash":"find . -name .snapshot -prune -o \\( \\! -name *~ -print0 \\)"}
{"English":"find  file which case-insensitive name is too in currect directory","Bash":"find . -iname foo"}
{"English":"Read a line from standard input with prompt \"Are you alright? (y\/n) \" and save the response to variable \"RESP\"","Bash":"read -p \"Are you alright? (y\/n) \" RESP"}
{"English":"Sort lines in \"FILE\" to standard output preserving only unique lines","Bash":"sort -u FILE"}
{"English":"Print the newest *.txt file under current directory with timestamp and path","Bash":"find . -name \"*.txt\" -printf \"%T@ %p\\n\" | sort | tail -1"}
{"English":"Print the list of all regular files from the current directory tree that contain \"confirm\", case insensitive","Bash":"find . -type f -exec grep -il confirm {} \\;"}
{"English":"Report total file systems disk usage in 1T blocks.","Bash":"df --total -BT | tail -n 1"}
{"English":"execute a command in 10 seconds","Bash":"true | sleep 10"}
{"English":"Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way","Bash":"find -d MyApp.app -name Headers -type d -exec rm -rf {} +"}
{"English":"find all empty files in home directory","Bash":"find ~ -empty"}
{"English":"Archive all directories in \/path\/to\/directory\/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths","Bash":"find \/path\/* -maxdepth 0 -type d -exec sudo tar -zcpvf {}.tar.gz {} \\;"}
{"English":"Find all *.mp3 (case insensitive) files\/directories under \/tmp and remove them","Bash":"find \/tmp -iname '*.mp3' -print0 | xargs -0 rm"}
{"English":"Search the current directory tree for the files with extension \"trc\" and list them if they are more than three days old","Bash":"find . -name \"*.trc\" -ctime +3 -exec ls -l {} \\;"}
{"English":"List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time","Bash":"find \/ -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -printf \"%T+\\t%p\\n\" | sort | awk '{print $2}'"}
{"English":"Gunzip all files matching \"file*.gz\" and answer \"n\" to any prompts","Bash":"yes n | gunzip file*.gz"}
{"English":"find all the files in the current folder which are bigger than 10MB and less than 50MB","Bash":"find . -size +10M -size -50M -print"}
{"English":"Find x* files\/directories under \/tmp directory whose status was changed less than 1 day ago and move them to ~\/play","Bash":"find \/tmp\/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~\/play\/"}
{"English":"Search the regular files of the current directory tree for string \"stringYouWannaFind\", ignoring the case","Bash":"find .\/ -type f -print -exec grep -n -i \"stringYouWannaFind\" {} \\;"}
{"English":"find all files in the file system which are modified after the file \/tmp\/checkpoint","Bash":"find \/ -newer \/tmp\/checkpoint"}
{"English":"Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories","Bash":"find . -name foo.mp4 | sed 's|\/[^\/]*$||'"}
{"English":"Send SIGKILL signal to process ID 16085, killing it instantly.","Bash":"kill -9 16085"}
{"English":"search for the file \"filename\" in the entire file system","Bash":"find \/ -name filename"}
{"English":"find all the files that have not been modified in the last (24*7) hours.","Bash":"find . -mtime +7"}
{"English":"find all text files in the current directory and compress them to a cpio file","Bash":"find . -name '*.txt' | cpio -pdm \/path\/to\/destdir"}
{"English":"Save a line of 100 random characters either \".\" or \" \" in variable \"foo\"","Bash":"foo=$(cat \/dev\/urandom | tr -dc '. ' | fold -w 100 | head -1)"}
{"English":"Print the names of all files and directories in the current directory tree","Bash":"find ."}
{"English":"Search the directory tree \/tmp for regular files using zero delimiter for output","Bash":"find \/tmp -type f -print0"}
{"English":"display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )","Bash":"find . -mmin 0.5"}
{"English":"Find all files in \/dir1 and print only the filenames (not paths)","Bash":"find .\/dir1 -type f -exec basename {} \\;"}
{"English":"search for all regular\/normal files in the current folder and display the number of lines in the file","Bash":"find . -type f -print0 | xargs -0L1 wc -l"}
{"English":"Display the last dot-separated field, in this case \"com\".","Bash":"echo 'maps.google.com' | rev | cut -d'.' -f 1 | rev"}
{"English":"Print the current date followed by \": $line\"","Bash":"echo \"$(date): \" $line"}
{"English":"Find files named 'core' in or below the directory \/tmp and delete them","Bash":"find \/tmp -depth -name core -type f -delete"}
{"English":"Display the 5 largest files in the current directory and its sub-directories.","Bash":"find . -type f -exec ls -s {} \\; | sort -n -r | head -5"}
{"English":"Print unique lines of sorted file \"A.txt\" compared to sorted file \"B.txt\"","Bash":"comm -2 -3 <(sort A.txt) <(sort B.txt)"}
{"English":"find all regex  \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\" files","Bash":"find . -regextype sed -regex \".*\/[a-f0-9\\-]\\{36\\}\\.jpg\""}
{"English":"Print the 10 most used commands","Bash":"history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -n | tail | sort -nr"}
{"English":"Find all files\/directories under current directory and count the number of lines for the output","Bash":"find |wc -l"}
{"English":"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","Bash":"find \"$searchpath\" -name \"$filepat.[ch]\" -exec grep --color -aHn \"$greppattern\" {} \\;"}
{"English":"Search the .java files from the \/Applications\/ directory tree for TODO lines","Bash":"find \/Applications\/ -name \"*.java\" -exec grep -i TODO {} \\;"}
{"English":"display all the regular\/normal files in the current folder excluding the files with the name mmm","Bash":"find . -name mmm -prune -o -type f -print"}
{"English":"Add group write permission to all files and directories in the current directory including hidden files and excluding \"..\"","Bash":"chmod g+w $(ls -1a | grep -v '^..$')"}
{"English":"Counts lines of myfile.txt file.","Bash":"cat myfile.txt | wc -l"}
{"English":"Sets 'globstar' shell option.","Bash":"shopt -s globstar"}
{"English":"show all the regular files in current folder","Bash":"find . -type f -print0"}
{"English":"Count the number of \"x\" characters in \"filename\"","Bash":"sed 's\/[^x]\/\/g' filename | tr -d '\\012' | wc -c"}
{"English":"Find files named \"ppp.conf\" in the \/etc directory tree","Bash":"find \/etc -name ppp.conf"}
{"English":"Gets back to the foreground a job with number 2.","Bash":"fg 2"}
{"English":"Merge data in file1 and file2 where second field is common in both files","Bash":"join -j2 <(sort -k2 file1) <(sort -k2 file2)"}
{"English":"Replace \"firstWord\" with \"newFirstWord\", \"secondWord\" with \"newSecondWord\", \"thirdWord\" with \"newThirdWord\" in all XML files in the current directory tree","Bash":"find -name \"*.xml\" -exec sed -s --in-place=.bak -e 's\/firstWord\/newFirstWord\/g;s\/secondWord\/newSecondWord\/g;s\/thirdWord\/newThirdWord\/g' {} \\;"}
{"English":"Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files\/directories","Bash":"find . -not -path '*\/\\.*' -type f -name '*some text*'"}
{"English":"Prints number of days in a current month.","Bash":"cal $(date +\"%m %Y\") | awk 'NF {DAYS = $NF}; END {print DAYS}'"}
{"English":"Update the timestamp of 'filename', or create an empty file if it doesn't exist.","Bash":"touch filename"}
{"English":"Find all files\/directories that are not newer than Jul 01 by modification time","Bash":"find \/file\/path ! -newermt \"Jul 01\""}
{"English":"Search all files in the current directory tree whose names end in \"1\" for string \"1\"","Bash":"find . -name \"*1\" -exec grep \"1\" {} \\;"}
{"English":"find all symbolic links in the current folder","Bash":"find -type l"}
{"English":"Set up a local SSH tunnel from port 80 to port 3000","Bash":"ssh $USERNAME@localhost -L 80:localhost:3000 -N"}
{"English":"Remove trailing white spaces from all files under current directory ignoring .git and .svn directories","Bash":"find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 sed -i '' -E \"s\/[[:space:]]*$\/\/\""}
{"English":"Find files modified at least 5 days in the future","Bash":"find . -newermt \"5 days\""}
{"English":"Sort lines in \"set1\" and \"set2\" to standard output preserving only unique lines","Bash":"sort -u set1 set2"}
{"English":"Output the file name \"file.txt' from the path \"some\/unknown\/amount\/of\/sub\/folder\/file.txt\"","Bash":"basename \"some\/unknown\/amount\/of\/sub\/folder\/file.txt\""}
{"English":"Find all files named \"file.ext\" within the current folder and print the path where each one is located","Bash":"find `pwd` -name \"file.ext\" -exec echo $(dirname {}) \\;"}
{"English":"create directories a b c d e","Bash":"mkdir a b c d e"}
{"English":"Write output of \"ls -hal \/root\/\" to standard output and to \"\/root\/test.out\"","Bash":"ls -hal \/root\/ | sudo tee \/root\/test.out"}
{"English":"Find all *.txt files of user Tecmint under \/home directory","Bash":"find \/home -user tecmint -iname \"*.txt\""}
{"English":"Archive \"\/source\/backup\" to \"\/destination\" with compression during transfer","Bash":"rsync -ravz \/source\/backup \/destination"}
{"English":"Print file information of the executable file of command \"g++\"","Bash":"ls `which g++` -al"}
{"English":"Find *.css files in the current directory tree, skipping all directories that match pattern '*\/lang\/en.css'","Bash":"find . -path '*\/lang\/en.css' -prune -o -name '*.css' -print"}
{"English":"Search directory \/Users\/david\/Desktop\/ recursively for regular files with extensions .txt, .mpg, .jpg","Bash":"find \/Users\/david\/Desktop -type f \\( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \\)"}
{"English":"Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep","Bash":"find \/ -type l -print0 | xargs -0 file | grep broken"}
{"English":"display all file in the folder \/dir\/to\/search except \".c\" files","Bash":"find \/dir\/to\/search\/ -not -name \"*.c\" -print"}
{"English":"create directory certs","Bash":"mkdir certs\/"}
{"English":"Find directories named `build'","Bash":"find . -type d -name build"}
{"English":"Creates temporary file in a TMPDIR folder or \/tmp folder if TMPDIR doesn`t defined, with file name like current shell name and '-XXXXX'-formatted suffix, and saves created path to the 'tempFile' variable.","Bash":"tempFile=\"$(mktemp \"${TMPDIR:-\/tmp\/}$(basename \"$0\")-XXXXX\")\""}
{"English":"Copies all files under current directory like '*FooBar*' to the '~\/foo\/bar' directory.","Bash":"find -name '*FooBar*' -print0 | xargs -0 cp -t ~\/foo\/bar"}
{"English":"show all the mp3 files in the folder \/home","Bash":"find \/home -type f -name '*.mp3'"}
{"English":"Change permissions to 755 for all directories in the \/path\/to\/dir directory tree","Bash":"find \/path\/to\/dir -type d -exec chmod 755 {} \\;"}
{"English":"Save actual working directory in variable \"target_PWD\"","Bash":"target_PWD=$(readlink -f .)"}
{"English":"find all regular\/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes","Bash":"find . \\( -iname \"*photo*\" -or -name \"*picture*\" \\) -and ! -type d -and -mmin -30"}
{"English":"List all the file links","Bash":"find . -type l"}
{"English":"Search for 'some string' in all *js files under current directory and show the matched lines with line numbers","Bash":"find . -name '*js' | grep -n  'some string'"}
{"English":"Displays calendar for a previous, current and next month.","Bash":"cal -3"}
{"English":"Locate OGG files under the home directory smaller than 100 megabytes","Bash":"find $HOME -iname '*.ogg' -type f -size -100M"}
{"English":"Fetch a script from the web, and interpret it in the current shell.","Bash":"source <(curl -s http:\/\/mywebsite.com\/myscript.txt)"}
{"English":"display all the files in the user folder which have been modified after the files \/tmp\/stamp$$","Bash":"find \/usr -newer \/tmp\/stamp$$"}
{"English":"Prints all child processes of a process with id 20238, separated with comma.","Bash":"pstree -p 20238 | sed 's\/(\/\\n(\/g' | grep '(' | sed 's\/(\\(.*\\)).*\/\\1\/' | tr \"\\n\" ,"}
{"English":"Split \"input_file\" into files of at most 100 lines each with prefix \"output_file\"","Bash":"split -l 100 input_file output_file"}
{"English":"Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames","Bash":"find sources -type f -exec grep -H foo {} +"}
{"English":"Print the current directory tree with the date of last modification for each file or directory","Bash":"tree -D"}
{"English":"search for the ip \"192.168.1.5\" in all the files in \/etc folder","Bash":"find \/etc\/ -iname \"*\" | xargs grep '192.168.1.5'"}
{"English":"Find all .php files in all directory trees matching pattern `\/srv\/www\/*\/htdocs\/system\/application\/' and search those files for string \"debug (\"","Bash":"find \/srv\/www\/*\/htdocs\/system\/application\/ -name \"*.php\" -exec grep \"debug (\" {} \\; -print"}
{"English":"Write '\"myname=\"Test\"' to the console and append to \"$CONFIG\" as root","Bash":"echo \"myname=\\\"Test\\\"\" | sudo tee --append $CONFIG"}
{"English":"change owner of the file \"file\" to user user_name","Bash":"chown user_name file"}
{"English":"find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it","Bash":"find -iname \"MyCProgram.c\" -exec md5sum {} \\;"}
{"English":"find files (under root file system \/) that were accessed within the last 24 hours","Bash":"find \/ -atime -1"}
{"English":"Find all *.jpg (case insensitive) files under current directory","Bash":"find . -iname '*.jpg'"}
{"English":"Recursively changes group ownership of every file in '\/var\/tmp\/jinfo' to 'www-data'.","Bash":"chgrp -R www-data \/var\/tmp\/jinfo"}
{"English":"Rename \"original.filename\" to \"new.original.filename\"","Bash":"mv original.filename new.original.filename"}
{"English":"Change owner to \"$FUID\" and group to \"$FGID\" of \"$FILE2\"","Bash":"chown $FUID:$FGID \"$FILE2\""}
{"English":"display all the files in the current folder which are in the path ending with the folder f","Bash":"find .  -path '*f'"}
{"English":"Saves listing of a current folder in 'var' variable.","Bash":"var=$(ls -l)"}
{"English":"Counts all files in a current folder and subfolders.","Bash":"find `pwd` -type f -exec ls -l {} \\; | wc -l"}
{"English":"get all files in a current directory modified in the last 7 days","Bash":"find . -mtime -7 -print0 | xargs -0 tar -rf \/foo\/archive.tar"}
{"English":"Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days","Bash":"find \"$DIR_TO_CLEAN\" -mtime +$DAYS_TO_SAVE -exec rm {} \\;"}
{"English":"List empty directories in the current directory tree","Bash":"find . -depth -empty -type d"}
{"English":"find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ).","Bash":"find $HOME -mtime +365"}
{"English":"List all cron jobs for current user.","Bash":"crontab -l"}
{"English":"Remove all files containing 'sample' (case insensitive) in their names under '\/home\/user\/Series' directory tree","Bash":"\/usr\/bin\/find \/home\/user\/Series\/ -iname \"*sample*\" -exec rm {} \\;"}
{"English":"search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.","Bash":"find ~\/junk  -name 'cart[4-6]' -exec rm {}  \\;"}
{"English":"Print the current shell","Bash":"ps | tail -n 4 | sed -E '2,$d;s\/.* (.*)\/\\1\/'"}
{"English":"Find all files named \"filename\" in the current directory tree, not descending into \"FOLDER1\" directories","Bash":"find . '(' -name FOLDER1 -prune -o -name filename ')' -print"}
{"English":"Print file name without the last two extensions assuming the file name doesn't contain any other dots.","Bash":"echo \"$FILE\"|rev|cut -d\".\" -f3-|rev"}
{"English":"create a symbolic link with absolute path \"\/cygdrive\/c\/Users\/Mic\/mypics\" to file \"\/cygdrive\/c\/Users\/Mic\/Desktop\/PENDING - Pics\/\"","Bash":"ln -sf '\/cygdrive\/c\/Users\/Mic\/Desktop\/PENDING - Pics\/' \/cygdrive\/c\/Users\/Mic\/mypics"}
{"English":"Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name","Bash":"find . -type d | sed -e 's\/\\.\\\/\/\/g' -e 's\/\\.\/avoid\/g' | grep -v avoid | awk '{print $1\"\\t\"$1}' | xargs chgrp"}
{"English":"Report total size of the root filesystem disk usage in powers of 1000.","Bash":"df -H --total \/"}
{"English":"Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.","Bash":"find . -mtime -1 -prin"}
{"English":"find all files in current folder which have been accessed exactly 10 minutes ago","Bash":"find . -amin 10"}
{"English":"Creates temporary folder relative to directory '\/path\/to\/dir'.","Bash":"mktemp -d -p \/path\/to\/dir"}
{"English":"Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'.","Bash":"shopt -s expand_aliases extglob xpg_echo"}
{"English":"Search the entire file hierarchy for files larger than 100 megabytes and delete them.","Bash":"find \/ -size +100M -exec \/bin\/rm {} \\;"}
{"English":"Count the number of all directories under directory '\/mount\/point' non-recursively","Bash":"find \/mount\/point -maxdepth 1 -type d | wc -l"}
{"English":"Search for 'mystring' in all *.txt files under current directory","Bash":"find . -name \"*.txt\" -exec egrep mystring {} \\;"}
{"English":"change the permissions of all the directories to 755 in the folder \"\/home\/nobody\/public_html\"","Bash":"find \/home\/nobody\/public_html -type d -exec chmod 755 {} \\;"}
{"English":"Number each line in \"\/etc\/passwd\" as right-justified zero padded to a width of 9","Bash":"nl -nrz -w9  \/etc\/passwd"}
{"English":"Use awk command '{ ... }' on compressed files \"input1.vcf.gz\" and \"input2.vcf.gz\"","Bash":"awk '{ ... }' <(gzip -dc input1.vcf.gz) <(gzip -dc input2.vcf.gz)"}
{"English":"display a long list of all the files in the directory \"\/mydir\" which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours","Bash":"find \/mydir \\(-mtime +20 -o -atime +40\\) -exec ls -l {} \\;"}
{"English":"List all variables (names only) with names containing X.","Bash":"env | awk -F= '{if($1 ~ \/X\/) print $1}'"}
{"English":"Move all directories in the current directory tree that have been modified in the last day to \"\/path\/to\/target-dir\"","Bash":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir"}
{"English":"display all directories in the folder Symfony","Bash":"find Symfony -type d"}
{"English":"Moves file '$2' to the folder where '$1' file is located.","Bash":"mv \"$2\" \"`dirname $1`\""}
{"English":"change the extension of all the \".lst\" files in the current folder to \"a.lst\"","Bash":"find -name \u2018*.lst\u2019 -exec rename .lst a.lst {} \\;"}
{"English":"Find all the SGID files in the current directory tree","Bash":"find . -perm \/g+s"}
{"English":"Find files\/directories that are bigger than 10000 KB in size uder '\/usr\/local' directory tree","Bash":"find \/usr\/local -size +10000k"}
{"English":"display all regular\/normal files in a directory","Bash":"find $directory -type f"}
{"English":"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output","Bash":"find . -type f -exec grep California {} \\; -print | wc -l"}
{"English":"Removes '\/var\/lib\/mongodb\/mongod.lock' in 'sudo' mode.","Bash":"sudo rm \/var\/lib\/mongodb\/mongod.lock"}
{"English":"find all the files in the current folder which are exactly 1234 bytes","Bash":"find . -size 1234c"}
{"English":"Set permissions to ug=rw,o= for files inside the .\/default\/files tree","Bash":"find .\/default\/files -type f -exec chmod ug=rw,o= '{}' \\;"}
{"English":"find all the files in the entire file system which belong to the group \"staff\"","Bash":"find \/ -group staff -print"}
{"English":"Search the current directory tree for files whose names do not end in \"1\" and \"2\"","Bash":"find . -type f ! -name \"*1\" ! -name \"*2\" -print"}
{"English":"Removes all empty folders within $DELETEDIR folder.","Bash":"find \"$DELETEDIR\" -mindepth 1 -depth -type d -empty -exec rmdir \"{}\" \\;"}
{"English":"Find all *.foo files under current directory and print their contents","Bash":"cat $(find . -name '*.foo')"}
{"English":"Search the current directory recursively for .sh files whose names begin with \"new\"","Bash":"find . -name \"new*.sh\""}
{"English":"display the contents of all the files in the current folder which start with test (case insensitive search)","Bash":"find . -iname '*test*' -exec cat {} \\;"}
{"English":"Search for \"1234567890\" in every gzip file modified between 8:00 and 9:00 on 2014-04-30","Bash":"find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00' |xargs gunzip -c | grep 1234567890"}
{"English":"Grab the output of \"basename\" (in this case \"stuff\") and echo it to stdout, which basename would do by default anyway.","Bash":"echo $(basename \/foo\/bar\/stuff)"}
{"English":"Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor","Bash":"find . | grep -v \"\\.png$\" | grep -v \"\\.class$\" | vim -"}
{"English":"display all the files in current folder which have been changed in the last 24 hours","Bash":"find . -ctime -1 -print"}
{"English":"find all the files in the home folder that have been modified between 24 to 48 hours","Bash":"find $HOME -mtime -2 -mtime +1"}
{"English":"List all *.txt files\/directories under \/etc","Bash":"find \/etc -name \"*.txt\" -ls"}
{"English":"returns the first 100 bytes in the file","Bash":"head -c 100 file"}
{"English":"Remove all files under \/home\/user\/Maildir\/.SPAM\/cur","Bash":"find \/home\/user\/Maildir\/.SPAM\/cur -type f -exec rm '{}' +"}
{"English":"Make all regular files in the current directory tree world-readable","Bash":"find . -type f -print0 | xargs -0 chmod go+r"}
{"English":"List all files under current directory with their paths and sizes","Bash":"find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'"}
{"English":"Split \"\/path\/to\/large\/file\" into files with at most 50000 lines and use prefix \"\/path\/to\/output\/file\/prefix\"","Bash":"split --lines=50000 \/path\/to\/large\/file \/path\/to\/output\/file\/prefix"}
{"English":"Write out the entire directory hierarchy from the current directory","Bash":"find ."}
{"English":"List all directories in maximum 1 level down the current directory","Bash":"find . -maxdepth 1 -type d -exec ls -dlrt {} \\;"}
{"English":"display all the files in the folder \"\/Users\/Me\/Desktop\" which have read permission to them","Bash":"find \/Users\/Me\/Desktop -readable"}
{"English":"Copies file 'fileName.txt' to each of directories listed in the 'allFolders.txt' list.","Bash":"cat allFolders.txt | xargs -n 1 cp fileName.txt"}
{"English":"Remove all files under current directory","Bash":"find -exec rm '{}' +"}
{"English":"create symbolic links in current directory to all files located in directory \"\/original\" and have filename extension \".processname\"","Bash":"find \/original -name '*.processme' -exec echo ln -s '{}' . \\;"}
{"English":"Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree","Bash":"find . -type d -exec chmod u=rwx,g=rx,o= '{}' \\;"}
{"English":"Find all files whose names begin with 'Makefile' at the \/usr\/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.","Bash":"find \/usr\/ports\/ -name Makefile\\* -mindepth 3 -maxdepth 3 -exec egrep \"NOPORTDOCS|NOPORTEXAMPLES\" '{}' '+' | wc -l"}
{"English":"create a compressed archive \"compressFileName.tar.gz\" with verbose output","Bash":"tar -zcvf compressFileName.tar.gz folderToCompress"}
{"English":"Execute python script \"test.py\" with \"LD_PRELOAD=.\/linebufferedstdout.so\" and write the output to console and append to \"test.out\"","Bash":"LD_PRELOAD=.\/linebufferedstdout.so python test.py | tee -a test.out"}
{"English":"delete all the empty directories in the current folder","Bash":"find . -type d -empty -exec rmdir {} \\;"}
{"English":"Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded","Bash":"find \"${searchpath}\" -type f -print0 | xargs -0 grep -l -E \"${string1}\".*\"${string2}\".*\"${string3}\""}
{"English":"Duplicate directory tree under \/mnt\/usr\/lib to \/usr but creating symlinks to files instead of copying them.","Bash":"cp -rs \/mnt\/usr\/lib \/usr\/"}
{"English":"Print a tab separated table in \"table.txt\" with cell borders","Bash":"sed -e 's\/\\t\/_|\/g' table.txt |  column -t -s '_' | awk '1;!(NR%1){print \"-----------------------------------------------------------------------\";}'"}
{"English":"find all the normal\/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them","Bash":"find . -type f -atime -1 -exec ls -l {} \\;"}
{"English":"Finds users with X session in system and puts the result into USERS variable","Bash":"USERS=$(awk '\/\\\/X\/ {print $1}' <(w))"}
{"English":"Find all directories under \/path\/to\/base\/dir and change their permission to 755","Bash":"find \/path\/to\/base\/dir -type d -print0 | xargs -0 chmod 755"}
{"English":"Find all .txt files in the current directory tree and edit them with `vim'","Bash":"find . -name \"*.txt\" | xargs vim"}
{"English":"find all files  that names are 'apt' and display detailed list","Bash":"find  \/ -name \"apt\" -ls"}
{"English":"search for the word hello in all the text files in the temp folder and delete them","Bash":"find \/tmp -type f -name \u2018*.txt*\u2019 | sed -e \u2018s\/.*\/\\\u201d&\\\u201d\/\u2019 |xargs -n 1 grep -l hello|sed -e \u2018s\/.*\/\\\u201d&\\\u201d\/\u2019|xargs -n 1 rm -f"}
{"English":"This command find displays the files which are modified in the last 15 minutes. And it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output.","Bash":"find . -mmin -15 \\( ! -regex \".*\/\\..*\" \\)"}
{"English":"Find all *gz files under asia and emea directory","Bash":"find asia emea -type f -name \"*gz\""}
{"English":"Look for any files that have not been modified in the last two days","Bash":"find -mtime +2"}
{"English":"Find all your text files and page through them","Bash":"find . -name \"*.txt\" -print | less"}
{"English":"Find all files\/directories named file in minimum 4 levels down the current directory","Bash":"find -mindepth 4 -name file"}
{"English":"search for all empty directories in the folder \/home","Bash":"find \/home -type d -empty"}
{"English":"search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to \/path\/tonew\/dir","Bash":"find . -type f -iname \u2018HSTD*\u2019 -daystart -mtime 1 -exec cp {} \/path\/to new\/dir\/ \\;"}
{"English":"List all files in \/var\/www and below that have changed in the last 10 minutes","Bash":"find \/var\/www -cmin -10 -printf \"%c %pn\""}
{"English":"Select everything selected by * without descending into any directories","Bash":"find * -maxdepth 0"}
{"English":"Search the current directory tree for *bash* files","Bash":"find . -name \"*bash*\""}
{"English":"delete all the backup files in current directory","Bash":"find . -name \"*.bak\" -delete"}
{"English":"display all files in the entire file system","Bash":"find \/"}
{"English":"Compare files in \"\/tmp\/dir1\" and \"\/tmp\/dir2\", treat absent files as empty and all files as text, and print 3 lines of unified context","Bash":"diff -Naur dir1\/ dir2"}
{"English":"Find all files on the system whose names are 'drush'","Bash":"find \/ -name drush"}
{"English":"Prints current month calendar, without highlighting of a current date.","Bash":"cal -h"}
{"English":"Find all files on your system that are world writable","Bash":"find \/ -wholename  '\/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \\;"}
{"English":"Change the owner and group of \"it\" to \"root\"","Bash":"chown root:root it"}
{"English":"find all the files that have been modified in the last 2 day","Bash":"find -daystart -mitime -1"}
{"English":"Find all regular files under ${path} without following symlinks","Bash":"find ${path} -P -type f"}
{"English":"Find files whose data was modified within the given days of the month","Bash":"find .\/ -daystart -mtime -10 -and -mtime +1"}
{"English":"Report file system '\/dev\/disk0s2' disk usage","Bash":"df | grep \/dev\/disk0s2"}
{"English":"Remove all regular files from the current directory tree that were modified between August 10th and August 17th","Bash":"find . -type f -newermt \"Aug 10\" ! -newermt \"Aug 17\" -exec rm {} \\;"}
{"English":"Archive \"path\/subfolder\" to \"path\", skipping files that are newer at the destination.","Bash":"rsync -vuar --delete-after path\/subfolder\/ path\/"}
{"English":"show the sum of disk used by all the files that belong to the user \"test1\" in the entire file system","Bash":"find \/ -user test1 -exec du -sm {} \\;|awk '{s+=$1}END{print s}'"}
{"English":"Print how many files are inside each directory under the current one","Bash":"find *\/ | cut -d\/ -f1 | uniq -c"}
{"English":"find all readme files in a folder","Bash":"find \/usr\/share\/doc -name README"}
{"English":"Print 1 to 10 by separating them with colon (':')","Bash":"echo {1..9}: 10 | tr -d ' '"}
{"English":"Split \"\/etc\/gconf\/schemas\/gnome-terminal.schemas\" into 1000000 files of about equal size","Bash":"split -n 1000000 \/etc\/gconf\/schemas\/gnome-terminal.schemas"}
{"English":"Print content of '1' file","Bash":"$ cat 1"}
{"English":"Mount \"\/windows\" using \/etc\/fstab entry","Bash":"mount \/windows"}
{"English":"Delete all regular files named 'IMAGE1806.jpg' under current directory tree","Bash":"find . -type f -name 'IMAGE1806.jpg' -delete"}
{"English":"Print the entire saved command history","Bash":"history"}
{"English":"Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates.","Bash":"uniq -w12 -c file"}
{"English":"display all files in current folder excluding text files","Bash":"find . ! -name \"*.txt\""}
{"English":"Query about which keys invoke the named function","Bash":"bind -q complete"}
{"English":"Find all files under \/home\/username\/public_html\/modules  and set their permission to 640","Bash":"find \/home\/username\/public_html\/modules -type f -exec chmod 640 {} +"}
{"English":"Search the current directory recursively for MOV files, following symlinks","Bash":"find . -iname \"*.mov\" -follow"}
{"English":"Test if \"file.tar.gz\" is corrupt","Bash":"gunzip -t file.tar.gz"}
{"English":"Print first field from semicolon-seprated line <line>.","Bash":"echo \"<line>\" | cut -d \";\" -f 1"}
{"English":"display all the directories in the current folder for the files which have not been accessed in the last 48 hours","Bash":"find . -type d -atime +2"}
{"English":"Set the modification timestamp of file 'filename' to specified date\/time.","Bash":"touch -m --date=\"Wed Jun 12 14:00:00 IDT 2013\" filename"}
{"English":"display all the regular\/normal files in a folder","Bash":"find .\/subdirectory\/ -type f"}
{"English":"Read a line from standard input into variable \"password\" without echoing the input and using the prompt \"Password: \"","Bash":"read -s -p \"Password: \" password"}
{"English":"Find files\/directories named 'filename' in the entire filesystem","Bash":"find \/ -name filename -print"}
{"English":"Finds out what groups a current user has.","Bash":"groups"}
{"English":"Find all files which  are accessed after modifying \/etc\/passwd files.","Bash":"find -newer \/etc\/passwd"}
{"English":"Replace all instances of \"STRING_TO_REPLACE\" with \"REPLACE_WITH\" in file \"index.html\" and make a backup with suffix \"bak\"","Bash":"sed -ibak -e s\/STRING_TO_REPLACE\/REPLACE_WITH\/g index.html"}
{"English":"Display a character dump of \"oldfile\"","Bash":"od -c oldfile"}
{"English":"Update timestamps of all files (not directories) under current directory. Also works on older Unix systems with obsolete 'find' command.","Bash":"find . -print -exec touch {} \\;"}
{"English":"Find all files under \/path\/to\/dir and change their permission to 644","Bash":"find \/path\/to\/dir -type f -exec chmod 644 {} +"}
{"English":"Archive \"\/home\/user1\" to \"wobgalaxy02:\/home\/user1\" excluding hidden files","Bash":"rsync -av \/home\/user1 wobgalaxy02:\/home\/user1"}
{"English":"display all text files in current folder","Bash":"find . -name \"*.txt\""}
{"English":"Search for 'DOGS' in all files with '.txt' extension under ~\/documents and also print the file names","Bash":"find ~\/documents -type f -name '*.txt' -exec grep -s DOGS {} \\; -print"}
{"English":"Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory","Bash":"find . -name $1 -type f -exec grep -i $2 '{}' \\;"}
{"English":"Prints day of first Tuesday in a month.","Bash":"cal | awk 'NR==2 {for (i=1;i<=NF;i++) {sub(\/ \/,\"\",$i);a[$i]=i}} NR>2 {if ($a[\"Tu\"]~\/[0-9]\/) {printf \"%02d\\n\",$a[\"Tu\"];exit}}' FIELDWIDTHS=\"3 3 3 3 3 3 3 3\""}
{"English":"Execute commands from \"$file\" in the current shell.","Bash":"source \"$file\""}
{"English":"Remove all broken symbolic links in \/usr\/ports\/packages","Bash":"find -L \/usr\/ports\/packages -type l -delete"}
{"English":"Search the current directory tree for all files except SVN ones","Bash":"find . | grep -v \\.svn"}
{"English":"Find all *.php (case insensitive) files and *.js files\/directories (case insensitive) under \/home\/jul\/here excluding \/home\/jul\/here\/exclude\/* paths","Bash":"find \/home\/jul\/here -type f -iname \"*.php\" ! -path \"\/home\/jul\/here\/exclude\/*\" -o -iname \"*.js\" ! -path \"\/home\/jul\/here\/exclude\/*\""}
{"English":"Overwrites file $FILE with random content, then truncates and deletes it.","Bash":"shred -u $FILE"}
{"English":"Search the current directory tree for regular files omitting directory `omit-directory'","Bash":"find . -name omit-directory -prune -o -type f  -print"}
{"English":"Find all *.java files under current directory containing the string 'String'","Bash":"find . -name \"*.java\" -exec grep \"String\" {} \\;"}
{"English":"Exclude directory from find . command","Bash":"find . -type d -name proc -prune -o -name '*.js'"}
{"English":"List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest","Bash":"du -sh *\/ | sort -n"}
{"English":"Report file systems disk usage using POSIX output format.","Bash":"df -P"}
{"English":"Locate all *.csv files under the current directory tree","Bash":"find . -name \"*.csv\" -print"}
{"English":"Show version information of the find utility","Bash":"find -version"}
{"English":"Save the date 222 days before today to the variable 'date_222days_before_TodayDay'","Bash":"date_222days_before_TodayDay=$(date --date=\"222 days ago\" +\"%d\")"}
{"English":"Search the current directory recursively for regular files last accessed 2 minutes ago","Bash":"find . type -f -amin 2"}
{"English":"Get the directory with least access time under current directory","Bash":"find . -type d -printf \"%A@ %p\\n\" | sort -n | tail -n 1 | cut -d \" \" -f 2-"}
{"English":"Recursively prints .txt files in current directory","Bash":"find $(pwd) -name \\*.txt -print"}
{"English":"Find only directories","Bash":"find . -type d"}
{"English":"Find recursively the latest modified .zip file in the current directory","Bash":"find . -name \"*zip\" -type f | xargs ls -ltr | tail -1"}
{"English":"Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt","Bash":"find . -type f ! -regex \".*\/\\(textfile.txt\\|backup.tar.gz\\|script.php\\|database.sql\\|info.txt\\)\" -delete"}
{"English":"List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time","Bash":"find \/ -type f -name \"*\" -newermt \"$newerthan\" ! -newermt \"$olderthan\" -printf \"%T+\\t%p\\n\" | sort"}
{"English":"Change the owner to \"hduser\" and group to \"hadoop\" of \"{directory path}\"","Bash":"sudo chown hduser:hadoop {directory path}"}
{"English":"Add execute permission to \"ComputeDate\", \"col\", and \"printdirections\" for all users","Bash":"chmod a+x ComputeDate col printdirections"}
{"English":"Search for all *.ogg (case insensitive) files in the $HOME directory that have an access time of greater than 30 days","Bash":"find $HOME -iname '*.ogg' -atime +30"}
{"English":"Search the files from the current directory tree for \"foo\"","Bash":"find . -exec grep -l foo {} +"}
{"English":"delete all the text files in the current folder","Bash":"find . -type f -name \"*.txt\" -delete"}
{"English":"display all the files in current directory with each file name displayed twice in the same row","Bash":"find . | sed 's\/.*\/& &\/'"}
{"English":"find all the shell scripts or perl files in the current directory","Bash":"find . -type f \\( -name \"*.sh\" -o -name \"*.pl\" \\)"}
{"English":"Set the environment variable \"DISPLAY\" to the system host name followed by \":0 skype\"","Bash":"DISPLAY=`hostname`:0 skype"}
{"English":"Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.","Bash":"find . -name '*.js' | grep -v excludeddir"}
{"English":"split content of the file file.txt started from second line into pieces per 4 lines named as split_NNN","Bash":"tail -n +2 file.txt | split -l 4 - split_"}
{"English":"Finds recursion-related options of a 'grep' utility.","Bash":"grep --help |grep recursive"}
{"English":"Find all the files that were modified exactly one day ago","Bash":"find . -mtime 1"}
{"English":"Composes full process tree with process id numbers, and prints only those strings that contain 'git'.","Bash":"pstree -p | grep git"}
{"English":"start from current directory, skip the directory src\/emacs and print it then skip all files and directories under it, and print the names of the other files found","Bash":"find . -wholename '.\/src\/emacs' -prune -print -o -print"}
{"English":"Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only","Bash":"find . -name '*.pl' | xargs grep -L '^use strict'"}
{"English":"Repeat \"image.png\" 10 times on a single line","Bash":"yes image.png | head -n10 | xargs echo"}
{"English":"find all java files in the current folder and search for the pattern REGEX","Bash":"find . -name '*.java' -exec grep REGEX {} \\;"}
{"English":"Change permissions to 700 for files and directories deeper than the current directory","Bash":"find . -mindepth 2 | xargs chmod 700"}
{"English":"Find all hidden files under \/tmp","Bash":"find \/tmp -type f -name \".*\""}
{"English":"List all .c and .h files in the current directory tree that contain \"thing\"","Bash":"find . -name '*.[ch]' | xargs grep -l thing"}
{"English":"Find all files with extension .aac in the \/home directory tree","Bash":"find \/home -type f -name '*.aac'"}
{"English":"Find all directories under current directory","Bash":"find -type d"}
{"English":"Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.","Bash":"echo $b|grep -q $a"}
{"English":"change the owner and group of all the files in the folder  \/usr\/lpp\/FINANCIALS","Bash":"find \/usr\/lpp\/FINANCIALS -print | xargs chown roger.staff"}
{"English":"Removes 5 oldest files in the current folder.","Bash":"ls -t *.log | tail -$tailCount | xargs rm -f"}
{"English":"Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories","Bash":"find . -type f -not -path '*\/\\.*'"}
{"English":"Recursively finds all *.dbf files from the root folder and prints list of folders with such files.","Bash":"find \/ -name \\*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq"}
{"English":"Find all files\/directories named 'foo.bar' in the entire filesystem","Bash":"find \/ -name foo.bar -print"}
{"English":"Print each logged in user's full name","Bash":"finger | awk 'NR>1{print $2,$3}'"}
{"English":"Find and delete all .zip files in the current directory tree","Bash":"find . -depth -name '*.zip' -exec rm {} \\;"}
{"English":"display all the files in the current folder that are at least one week old (7 days) but less then 30 days old","Bash":"find . -mtime +30 -a -mtime -7 -print0"}
{"English":"Calculate md5 sum of files $source_file and $dest_file","Bash":"md5sum \"$source_file\" \"$dest_file\""}
{"English":"Prints top-ten of most used utilities from history.","Bash":"history | awk '{print $2}' | awk 'BEGIN {FS=\"|\"}{print $1}' | sort | uniq -c | sort -nr | head"}
{"English":"Find all *.sh files owned by user vivek","Bash":"find \/ -user vivek -name \"*.sh\""}
{"English":"Delete all files in the TBD directory that were modified more than 1 day ago","Bash":"find \/TBD\/* -mtime +1 | xargs rm -rf"}
{"English":"Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.","Bash":"find ~\/ -newer alldata.tar \t-exec tar uvf alldata.tar {} \\;"}
{"English":"Gets MAC address of eth0 network interface.","Bash":"ifconfig | grep -i hwaddr | cut -d ' ' -f9"}
{"English":"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","Bash":"find \"$1\" -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"}
{"English":"Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames","Bash":"find . -name * -print0  | xargs -0 grep -iH \"String\""}
{"English":"Delete all hidden files under $some_directory","Bash":"find \"$some_directory\" -type f -name '.*' -delete"}
{"English":"Print lines in the sorted contents of \"a.txt\" that are not in the sorted contents of \"b.txt\"","Bash":"comm -23 <(sort a.txt) <(sort b.txt)"}
{"English":"Print a count of all unique entries in \"ips.txt\" with the most frequent results at the top","Bash":"sort ips.txt | uniq -c | sort -bgr"}
{"English":"Search the current directory for files whose names start with \"messages.\" ignoring SVN, GIT, and .anythingElseIwannaIgnore files","Bash":"find -name 'messages.*' -exec grep -Iw uint {} + | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'"}
{"English":"Remount \"\/\" without writing in \"\/etc\/mtab\"","Bash":"mount -n -o remount \/"}
{"English":"Remove all regular files found in and below \/path","Bash":"find \/path -type f -exec rm '{}' +"}
{"English":"Change symbolic link \"$f\" into a file","Bash":"cp --remove-destination $(readlink $f) $f"}
{"English":"search for all the c files in the current folder","Bash":"find . -name \\*.c -print"}
{"English":"Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\\{1,2\\}'","Bash":"find . -regextype sed -regex '.*myfile[0-9]\\{1,2\\}'"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety","Bash":"find var\/log -print0 -iname 'anaconda.*' | tar -cvf somefile.tar -T -"}
{"English":"Force create a symbolc link named \"new_dir\" to \"\/other\/dir\" without dereferencing \"new_dir\"","Bash":"ln -sfn \/other\/dir new_dir"}
{"English":"Search for 'mystring' in all *.txt files under current directory","Bash":"find . -name *.txt | xargs egrep mystring"}
{"English":"Force pseudo tty allocation on connection to \"somehost\" and execute \"~\/bashplay\/f\"","Bash":"ssh -t somehost ~\/bashplay\/f"}
{"English":"find all the files which have been changed after the modification of a file.","Bash":"find -cnewer \/etc\/fstab"}
{"English":"search for all the regular\/normal mp3 files in the file system and move them to the folder \/mnt\/mp3","Bash":"find \/ -iname \"*.mp3\" -type f -exec \/bin\/mv {} \/mnt\/mp3 \\;"}
{"English":"Print a random number from 2000 to 65000","Bash":"seq 2000 65000 | sort -R | head -n 1"}
{"English":"From the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count.","Bash":"grep -Ff list1.txt list2.txt | sort | uniq -c | sort -n"}
{"English":"Find *.java files in the current directory and replace foo with bar in those files","Bash":"find . -name \"*.java\" -exec sed -i '' s\/foo\/bar\/g \\;"}
{"English":"Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.","Bash":"find . -type f -name \"*.py[c|o]\" -exec rm -f {} +"}
{"English":"find all the files which have size 0 bytes in temp folder","Bash":"find \/tmp -type f -empty"}
{"English":"Format bash array \"${arr}\" in columns","Bash":"echo \" ${arr[@]\/%\/$'\\n'}\" | column"}
{"English":"Search the current directory tree for all files matching pattern \"*.rb\"","Bash":"find . -name \"*.rb\""}
{"English":"Set permissions to ug=rwx,o= for directories under the $d directory tree","Bash":"find $d -type d -exec chmod ug=rwx,o= '{}' \\;"}
{"English":"Copy all files in \"\/mail\" to \"\/home\/username\" preserving the directory hierarchy and modification times","Bash":"find \/mail -type f | cpio -pvdmB \/home\/username"}
{"English":"Find all hidden regular files under \/tmp and below","Bash":"find \/tmp -type f -name \".*\""}
{"English":"find all the files in the folder \/opt which have been modified exactly 20 days ago","Bash":"find \/opt -mtime 20"}
{"English":"Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'","Bash":"find . -name '*.pl' | xargs grep -L '^use strict'"}
{"English":"List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time","Bash":"ls -alrt `pwd`\/*"}
{"English":"Search for files\/directories which are writable by both their owner and their group","Bash":"find . -perm -220"}
{"English":"Rename \"new\" to \"old\" and make a backup if \"old\" exists","Bash":"mv new old -b"}
{"English":"find all the config(.conf files) files in the folder \/home\/pat","Bash":"find \/home\/pat -iname \"*.conf\""}
{"English":"Create a report of the contents of a USB drive mounted at find \/path\/to\/drive","Bash":"find \/path\/to\/drive -type f -exec file -b '{}' \\; -printf '%s\\n' | awk -F , 'NR%2 {i=$1} NR%2==0 {a[i]+=$1} END {for (i in a) printf(\"%12u %s\\n\",a[i],i)}' | sort -nr"}
{"English":"Find all .mp3 files starting from the current directory and delete them","Bash":"find . -type f -iname *.mp3 -delete"}
{"English":"Print number of lines that equal in files '\/home\/xyz\/a.csv1' and '\/home\/abc\/tempfile'","Bash":"comm -12 <(sort -u \/home\/xyz\/a.csv1) <(sort -u \/home\/abc\/tempfile) | wc -l"}
{"English":"Move all directories in the current directory that match \"some-dir\" to \"x\/\"","Bash":"find .\/ -maxdepth 1 -name \"some-dir\" -type d -print0 | xargs -0r mv -t x\/"}
{"English":"Print a 2 byte hexadecimal value, printable character, and octal value of \"$1\"","Bash":"echo \"$1\" | od -xcb"}
{"English":"display all directories in the folder \"$ORIG_DIR\"","Bash":"find \"$ORIG_DIR\" -name \"*\" -type d"}
{"English":"Sort numerically and compare files \"ruby.test\" and \"sort.test\"","Bash":"diff <(sort -n ruby.test) <(sort -n sort.test)"}
{"English":"Copy \/my\/configfile to all empty directories of the $somedir directory tree","Bash":"find \"$somedir\" -type d -empty -exec cp \/my\/configfile {} \\;"}
{"English":"Print the first 10 files or directories found in the \/tmp directory tree by `find'","Bash":"find \/tmp  | head"}
{"English":"Move files older than 1 day to directory TMP","Bash":"find . -atime +1 -type f -exec mv {} TMP \\;"}
{"English":"Reversibly sorts content of the '${TMP}\/${SCRIPT_NAME}.kb' file, comparing human readable numbers in file strings.","Bash":"cat ${TMP}\/${SCRIPT_NAME}.kb|sort -rh;"}
{"English":"Change the ownership to the user daisy for all directories under current directory that are owned by harry","Bash":"find . -type d -user harry -exec chown daisy {} \\;"}
{"English":"Remove trailing whitespaces from all regular non-hidden files in the current directory tree","Bash":"find . -type f -name '*' -exec sed --in-place 's\/[[:space:]]\\+$\/\/' {} \\+"}
{"English":"Print the second space separated fields from standard input","Bash":"tr -s ' ' | cut -d ' ' -f 2"}
{"English":"print the last word in a.txt","Bash":"tac a.txt | awk 'NF{print $NF; exit}'"}
{"English":"Enable history and history expansion within a script","Bash":"set -o history -o histexpand"}
{"English":"Find all files under \/path\/to\/base\/dir and change their permission to 644","Bash":"find \/path\/to\/base\/dir -type f -exec chmod 644 {} +"}
{"English":"split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes","Bash":"split -C 100m -d data.tsv data.tsv."}
{"English":"Move all files in the current directory tree that match \"some_pattern\" to \"target_location\"","Bash":"find . -name some_pattern -print0 | xargs -0 -I % mv % target_location"}
{"English":"Find all files\/directories in entire file system less than 50 bytes","Bash":"find \/ -size -50c"}
{"English":"display the number of lines in all the \".c\" files in the current folder","Bash":"find . -name \"*.c\" -exec wc -l {} \\;"}
{"English":"display the number of lines in all the header files in the current folder","Bash":"find . -name \"*.h\" -print | xargs wc -l"}
{"English":"Find out all files owned by user vivek","Bash":"find \/ -user vivek"}
{"English":"search for a word in all the .C files in the current directory","Bash":"find . -name \"*.c\" -exec grep -ir \"keyword\" {} \";\""}
{"English":"display all the files in the home folder which are smaller than 500 bytes","Bash":"find ~ -size -500b"}
{"English":"Delete files with inode number specified by [inode-number] under current directory","Bash":"find . -inum [inode-number] -exec rm -i {} \\;"}
{"English":"Find all IP addresses in \/etc directory files","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"find all the files in current directory of size exactly 6MB.","Bash":"find . -size 6M"}
{"English":"Search the current directory for files whose names start with \"messages.\" ignoring SVN and CVS files","Bash":"find \\( -name 'messages.*' ! -path \"*\/.svn\/*\" ! -path \"*\/CVS\/*\" \\) -exec grep -Iw uint {} +"}
{"English":"List all *.c files in entire file system","Bash":"find \/ \\! -name \"*.c\" -print"}
{"English":"Print the full path of executable \"lshw\"","Bash":"which lshw"}
{"English":"Print numbers from 1 to 100","Bash":"seq 1 100"}
{"English":"Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*'","Bash":"find . -name '[mM][yY][fF][iI][lL][eE]*'"}
{"English":"List all files with their paths that have identical content.","Bash":"find * -type f | xargs md5sum | sort | uniq -Dw32"}
{"English":"Find the first file\/directory under $DIR which matches the $TMP_DIR in its path","Bash":"\/usr\/bin\/find $DIR -maxdepth 1 -ipath $TMP_DIR -print -quit"}
{"English":"beginning at the end of the file, prints lines matching \/2012\/ and exits after first non-matching line","Bash":"tac error.log | awk '{if(\/2012\/)print;else exit}'"}
{"English":"List \".java\" files that have the same contents","Bash":"md5sum *.java | sort | uniq -d -w32"}
{"English":"Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable.","Bash":"dir=\"$(mktemp aws-sync-XXXXX)\""}
{"English":"delete all the files in the current folder","Bash":"find . -print0 | xargs -0 rm"}
{"English":"Find all regular files starting from \/ that have permissions 777","Bash":"find \/ -type f -perm 0777"}
{"English":"Recursively finds file some_file_name.xml file and prints strings with \"PUT_YOUR_STRING_HERE\" preceding each found string with file name.","Bash":"find . -type f -name some_file_name.xml -exec grep -H PUT_YOUR_STRING_HERE {} \\;"}
{"English":"find all the html files in the current folder which have been modified exactly 7 days ago","Bash":"find . -mtime 7 -name \"*.html\" -print"}
{"English":"Save all directories under the current directory as a comma separated list in variable \"FOLDERS\"","Bash":"FOLDERS=$(find . -type d | paste -d, -s)"}
{"English":"Find all files in the current directory tree, except GIT files","Bash":"find -type f -name .git -prune -o -print"}
{"English":"Find all files starting from the current directory which are smaller than 100MB","Bash":"find . -size -100M"}
{"English":"print bindings for \"p\" and \"e\" with no case sensitivity","Bash":"bind -p|grep -i '\"[pE]\"'"}
{"English":"find all the normal\/regular files in \/etc\/sysconfig which have been accesses in the last 30 minutes","Bash":"find \/etc\/sysconfig -amin -30 -type f"}
{"English":"Remove everything in a current folder without prompting.","Bash":"rm -rf *"}
{"English":"find all the png files in current folder which are present in the pattern list file \"search.txt\"","Bash":"find . -name '*.png' | grep -f <(sed s?^?\/[0-9]_[0-9]_[0-9]_? search.txt)"}
{"English":"Display the files\/directories under current directory tree matching the regex '\/$prefix$ypatt' where $prefix and $ypatt expands in the current shell","Bash":"find . -print | grep \"\/${prefix}${ypatt}\""}
{"English":"Print second field from semicolon-seprated line <line>.","Bash":"echo \"<line>\" | cut -d \";\" -f 2"}
{"English":"Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.","Bash":"cnt=`ps -ef| tee log | grep \"cntps\"|grep -v \"grep\" | wc -l`"}
{"English":"Compress all \".txt\" files in the current directory tree with gzip","Bash":"find . -type f -name \"*.txt\" -exec gzip {} \\;"}
{"English":"find all txt files under the current folder except .\/directory folder","Bash":"find -name \"*.js\" -not -path \".\/directory\/*\""}
{"English":"Find all directories named \"nasa\"","Bash":"find . -name nasa -type d"}
{"English":"Recursively change owner to \"tomcat6\" of \"webapps\", \"temp\", \"logs\", \"work\", and \"conf\"","Bash":"chown -R tomcat6 webapps temp logs work conf"}
{"English":"Find all regular files under current directory","Bash":"find . -depth -type f -print"}
{"English":"Join comma-separated information in 4 files","Bash":"join -t, <(sort test.1) <(sort test.2) | join -t, - <(sort test.3) | join -t, - <(sort test.4)"}
{"English":"Print unique lines in \"file_a\" and \"file_b\"","Bash":"sort file_a file_b|uniq -u"}
{"English":"find all the files in the file system which belong to the user \"pat\" and with the name \"dateiname\"","Bash":"find \/ -user pat -iname \"Dateiname\""}
{"English":"Prints first found folder that contains 'ssh' file and has 'bin' in path.","Bash":"dirname `find \/ -name ssh | grep bin | head -1`"}
{"English":"Change user ownership to `foo' for files with UID=1005","Bash":"find \/ -user 1005 -exec chown -h foo {} \\;"}
{"English":"find all files in the file system which belong to the group users and having the word \"filename\" in their name.","Bash":"find \/ -group users -iname \"filename\""}
{"English":"search for files named \"WSFY321.c\" in a case-insensitive manner","Bash":"find . -iname \"WSFY321.c\""}
{"English":"Find all the SGID bit files whose permissions set to 644","Bash":"find \/ -perm 2644"}
{"English":"Find all files whose names end with \"~\" in the \/home\/peter directory tree, following symlinks, and delete them","Bash":"find -L \/home\/peter -name *~ |xargs rm"}
{"English":"archive all files in a current directory modified in the last 30 days","Bash":"tar czvf mytarfile.tgz `find . -mtime -30`"}
{"English":"create a symbolic link named \"-pdf-kundendienst\" to \"local--pdf-kundendienst\" file","Bash":"ln -s -- .\/local--pdf-kundendienst -pdf-kundendienst"}
{"English":"Counts all files in a current folder and subfolders.","Bash":"find -type f -printf '\\n' | wc -l"}
{"English":"find all the symbolic links in the current folder and follow to the original file","Bash":"find -L . -type l"}
{"English":"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding \"*\"  before it's passed to find.","Bash":"find . -name \\*.pdf -print"}
{"English":"search for all the directories ending with \".mp3\" in the file system and move them to the folder \/mnt\/mp3","Bash":"find \/ -iname \"*.mp3\" -type d -exec \/bin\/mv {} \/mnt\/mp3 \\;"}
{"English":"display a long listing of all the \"Trash\" files in the folder \/home","Bash":"find \/home -name Trash -exec ls -al {} \\;"}
{"English":"Removes all files but 5 newest ones from current folder.","Bash":"ls -tp | grep -v '\/$' | tail -n +6 | tr '\\n' '\\0' | xargs -0 rm --"}
{"English":"list all the sqlite files in the current folder","Bash":"find .\/ -name \"*.sqlite\" -ls"}
{"English":"Find all files and directories containing \"disc\" in their names","Bash":"find . -name *disc*"}
{"English":"Creates temporary folder and save path to that in a TMPDIR variable.","Bash":"TMPDIR=$(mktemp -d)"}
{"English":"find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder \/opt","Bash":"find \/opt \\( -name error_log -o -name 'access_log' -o -name 'ssl_engine_log' -o -name 'rewrite_log' -o  -name 'catalina.out' \\) -size +300000k -a -size -5000000k"}
{"English":"prints the last non-empty line of a file","Bash":"tac FILE |egrep -m 1 ."}
{"English":"Change ownership of \"\/vol\" to the current user","Bash":"sudo chown `whoami` \/vol"}
{"English":"Search the current directory tree for files whose names contain \"TextForRename\"","Bash":"find .\/ -name \"*TextForRename*\""}
{"English":"List all of the subdirectories in the current directory with no trailing slash.","Bash":"ls -d *\/ | cut -f1 -d'\/'"}
{"English":"Infinitely write \"1\" with line numbers to the console and \"\/tmp\/to\"","Bash":"yes 1 | nl | tee \/tmp\/to"}
{"English":"display all the regular\/normal files in the current directory","Bash":"find . -type f"}
{"English":"Find all *.txt files\/directories under current directory","Bash":"find . -name \"*.txt\" -print"}
{"English":"Rename the *.so files at level 2 of the current directory tree prepending their names with \"lib\"","Bash":"find . -mindepth 2 -maxdepth 2 -name \"*.so\" -printf \"mv '%h\/%f' '%h\/lib%f'\\n\" | sh"}
{"English":"Search for 'Processed Files' in all $srch* (case insensitive) files under current directory run the sed script 'N;s\/(.*)\\n(.*)\/\\2 \\1\/' on the output","Bash":"find . -iname \"$srch*\" -exec grep \"Processed Files\" {} \\; -print| sed -r 'N;s\/(.*)\\n(.*)\/\\2 \\1\/'"}
{"English":"display all symbolic links in the folder \"myfiles\"","Bash":"find \/myfiles -type l"}
{"English":"Find all syslog directories under \/var\/log directory","Bash":"find \/var\/log -name \"syslog\" -type d"}
{"English":"Search for files\/directories which have read and write permission for their owner, and group and only read permission for others","Bash":"find . -perm 664"}
{"English":"Copies all files like 'lib*.so' to '~\/usr\/gtest\/lib\/' directory.","Bash":"cp lib*.so ~\/usr\/gtest\/lib"}
{"English":"Merge already sorted files in the current directory starting with \"_tmp\" and write the output to \"data.tsv.sorted\"","Bash":"sort -m _tmp* -o data.tsv.sorted"}
{"English":"Find a single file called FindCommandExamples.txt under current directory and remove it","Bash":"find . -type f -name \"FindCommandExamples.txt\" -exec rm -f {} \\;"}
{"English":"Removes any empty folder that matches pattern ed*.","Bash":"rmdir ed*"}
{"English":"Create symbolic link \"$1\/link\" to the absolute path of \"$2\"","Bash":"ln -s \"$(readlink -e \"$2\")\" \"$1\/link\""}
{"English":"Execute zcat on every file matching \"*20120805.gz\" in the current directory and subdirectories","Bash":"find . -name *20120805.gz -exec zcat {} \\;"}
{"English":"find all the files in the current directory and change the permissions to 775.","Bash":"find . -exec chmod 775 {} \\;"}
{"English":"Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results","Bash":"od | cut -b 8- | xargs -n 1 | sort | uniq | wc -l"}
{"English":"Copy '\/path\/to\/source' from remote \"username@computer\" to local \"\/path\/to\/dest\"","Bash":"rsync -r username@computer:\/path\/to\/source \/path\/to\/dest"}
{"English":"Remove the last two components (directories) of $path","Bash":"echo $path | rev | cut -d'\/' -f4- | rev"}
{"English":"Print the sizes of all files from the current directory tree","Bash":"find . -iname '*.jpg' -type f -printf +%b"}
{"English":"Source executable \"virtualenvwrapper.sh\" found in $PATH","Bash":"source `which virtualenvwrapper.sh`"}
{"English":"display all file in the home folder except \".c\" files","Bash":"find $HOME \\! -iname \"*.c\" print"}
{"English":"Find all *FooBar* files\/directories under current directory and copy them to ~\/foo\/bar","Bash":"find . -name '*FooBar*' -exec cp -t ~\/foobar -- {} +"}
{"English":"Concatenate files containing `test' in their names","Bash":"find . -name '*test*' -exec cat {} \\;"}
{"English":"find all the perl files in the current folder and search for a pattern","Bash":"find . -name '*.pl' | xargs grep -L '^use strict'"}
{"English":"Change permissions to 644 for all regular files under the \/path\/to\/dir\/ tree unless these permissions are already set","Bash":"find \/path\/to\/dir ! -perm 0644 -exec chmod 0644 {} \\;"}
{"English":"Make directories to \"\/some\/path\" as needed","Bash":"mkdir -p .\/some\/path"}
{"English":"Adds %Pathname% to the dirs stack (Windows format).","Bash":"pushd %Pathname%"}
{"English":"Search for a pattern \"can't\" in all the files with the name \"file-containing-can't\" in the current directory tree","Bash":"find . -name \"file-containing-can't\" -exec grep \"can't\" '{}' \\; -print"}
{"English":"Find all .txt files in the user's home directory and below.","Bash":"find ~\/ -name '*.txt'"}
{"English":"List all .svn files\/directories under current directory","Bash":"find . -name .svn -exec echo {} \\;"}
{"English":"Find all files\/directories that do not contain 'photo' in their names under current directory tree","Bash":"find . ! -name \"*photo*\""}
{"English":"Change permissions to 600 for all regular .rb files in the current directory tree","Bash":"find . -name \"*.rb\" -type f -exec chmod 600 {} \\;"}
{"English":"Go to last directory with name starting with a number, useful for timestamped directory names.","Bash":"cd \"$(ls -rd [0-9]*\/ | tail --lines 1)\""}
{"English":"Run 'somecommand' in an environment without the FOO variable.","Bash":"env -u FOO somecommand"}
{"English":"Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories","Bash":"find . -maxdepth 1 -name \"*.jpg\" -size -50k -exec rm {} \\;"}
{"English":"Search the current directory recursively for files containing \"needle text\"","Bash":"find . -type f -print0 | xargs -0 grep -I \"needle text\""}
{"English":"Search all files under and below \/etc for IP addresses","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"Replace all spaces with underscores in directory paths under current directory.","Bash":"find -name \"* *\" -type d | rename 's\/ \/_\/g'"}
{"English":"Read a line from standard input into variable \"date\" with prompt \"BGC enter something\", and storing typed backslash as backslash symbol","Bash":"read -p 'BGG enter something:' -r data"}
{"English":"Find all files starting from the current directory which are exactly 100MB in size","Bash":"find . -size 100M"}
{"English":"display all the directories in the current folder excluding those that are present in the .svn directory tree","Bash":"find -type d -path '.svn' -prune -o -print"}
{"English":"Print the current working directory and the base name of \"$1\"","Bash":"echo \"$(pwd)\/$(basename \"$1\")\""}
{"English":"Recursively change the owner and group of all files in the current directory to \"apache\"","Bash":"find . -maxdepth 1 -not -name \".\" -print0 | xargs --null chown -R apache:apache"}
{"English":"ask user confirmation and delete all the files in the directory \/mydir which have not been accessed in the last 100*24 hours","Bash":"find \/mydir -atime +100 -ok rm {} \\;"}
{"English":"Find all the files in entire file system which are greater than 50MB and less than 100MB.","Bash":"find \/ -size +50M -size -100M"}
{"English":"display all mp3 files in the file system which have not been accessed in the last 24 hours","Bash":"find \/ -name \u201c*.mp3\u201d -atime +01 -type f"}
{"English":"Prints calendar of $month, $year, and redirects all output to the awk script 'cal.awk', with predefined variable 'day=$day'.","Bash":"cal $month $year | awk -v day=$day -f cal.awk"}
{"English":"Gets state of shell option 'dotglob' and saves it in 'rest_cmd' variable.","Bash":"rest_cmd=$(shopt -p dotglob)"}
{"English":"Find all .sh files in or below the current directory and move them to folder ~\/back.scripts","Bash":"find . -name \"*.sh\" -print0 | xargs -0 -I file mv file ~\/back.scripts"}
{"English":"display all files in the current folder after pruning those in the current folder ( dot is the output of this command )","Bash":"find . -prune -print"}
{"English":"Find all regular files under current directory tree excluding files from '.\/dir1' (except '.\/dir1\/subdir1\/) and '.\/dir2' directories","Bash":"find . \\( -not -path '.\/dir1\/*' -and -not -path '.\/dir2\/*' -or -path '.\/dir1\/subdir1\/*' \\) -type f"}
{"English":"Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'","Bash":"output=$(echo $input | fold -w4 | tac | tr -d \\\\n)"}
{"English":"Numerically sort each line of standard input","Bash":"sort -n"}
{"English":"Find all files in the home directory tree that are owned by another user and change their ownership to the current user","Bash":"find ~ ! -user $USER -exec sudo chown ${USER}:\"{}\" \\;"}
{"English":"Returns exit code 1.","Bash":"a=$(false)"}
{"English":"Find files starting with the word \"file\" in the current directory tree, ignoring the case","Bash":"find . -iname \"file*\""}
{"English":"Find all regular files starting from the current directory","Bash":"find . -type f"}
{"English":"find all the directories in the current folder and create the same directory structure in a remote machine using ssh","Bash":"find -type d | ssh server-B 'xargs -I% mkdir -p \"\/path\/to\/dir\/%\"'"}
{"English":"find all files in current folder which are more than 300MB","Bash":"find . -size +300M"}
{"English":"Find all *.foo files under current directory and print their contents","Bash":"find . -name '*.foo' -exec cat {} +"}
{"English":"create a backup of all the files in the home folder on a partition and save the log to a file","Bash":"find \/home -depth -print | cpio -ov -0 \/dev\/rmt0 | tee -a tape.log"}
{"English":"display all the files in the home folder which have not been modified in the last 365*24 hours","Bash":"find $HOME -mtime +365"}
{"English":"Find all files\/directoires that were modified more than 3 days ago under $dir directory tree","Bash":"find $dir -mtime +3"}
{"English":"Display a binary file as a sequence of hex codes","Bash":"od -t x1 file|cut -c8-"}
{"English":"search for the file \"foo.txt\" in the entire file system","Bash":"find \/ -name foo.txt"}
{"English":"find any files in the current directory that begin with a number","Bash":"find . -regex '.\/[0-9].*' -print"}
{"English":"search for the word \"nameserver\" in all the regular\/normal files in the \/etc directory and display the name of the file along with the matched line","Bash":"find \/etc\/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\""}
{"English":"Find all files\/directories under '\/etc' directory tree that are greater than 5MB and print their sizes and names","Bash":"find \/etc -size +5M -exec ls -sh {} +"}
{"English":"Find files whose content was modified at least 1 minute ago","Bash":"find .\/ -mmin +1"}
{"English":"Find all files\/directories under current directory tree whose names start with 'some_text_2014.08.19'","Bash":"find . -name 'some_text_2014.08.19*'"}
{"English":"Find all regular files under $FILES_PATH directory tree and save the output to 'FILES' variable","Bash":"FILES=$(find $FILES_PATH -type f -name \"*\")"}
{"English":"Search the system for regular files whose names are \"filename\" ignoring the case","Bash":"find \/ -type f -iname \"filename\""}
{"English":"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths .\/es* and .\/en*","Bash":"find \"$(pwd -P)\" -mtime 0 -not \\( -name '*.swp' -o -regex '.\/es.*' -o -regex '.\/en.*' \\)"}
{"English":"find all the directories in current folder and do not search in sub directories","Bash":"find . -maxdepth 1 -type d -print0"}
{"English":"Sort and print each unique line in \"myfile.txt\"","Bash":"cat myfile.txt| sort| uniq"}
{"English":"search for the file \"process.txt\" in the entire file system","Bash":"find \/ -name \"process.txt\""}
{"English":"find not case sensitive all directories that names are 'project.images'","Bash":"find  \/ -type d -iname \"project.images\" -ls"}
{"English":"Display standard input as printable characters or backslash escapes with no addressing radix","Bash":"od -cAn;"}
{"English":"Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree","Bash":"find $DIR -type f -mtime +60w -exec rm {} \\;"}
{"English":"Output the variable \"filename\" without the last dot-separated section.","Bash":"echo ${filename%.*}"}
{"English":"Read standard input until a null character is found and save the result in variable \"line\"","Bash":"read -r -d $'\\0'"}
{"English":"Make directory \"\/tmp\/googleTestMock\"","Bash":"mkdir \/tmp\/googleTestMock"}
{"English":"Search the XML files from directories \/res\/values-en-rUS and \/res\/xml for string \"hovering_msg\"","Bash":"find \/res\/values-en-rUS \/res\/xml -iname '*.xml' -print0 | xargs -0 -d '\\n' -- grep -i \"hovering_msg\" --"}
{"English":"Recursively search for all regular files below directory \"dir1\" in currentd directory, and output the name of each, without any containing directories.","Bash":"find .\/dir1 -type f -exec basename {} \\;"}
{"English":"Remove files under \/mnt\/zip matching \"*prets copy\" with confirmation","Bash":"find \/mnt\/zip -name \"*prefs copy\" -print0 | xargs -0 -p \/bin\/rm"}
{"English":"find all files in current folder having the name pattern \"some_pattern\" and move them to folder target_location (GNU VERSION)","Bash":"find . -name some_pattern -print0 | xargs -0 -I % mv % target_location"}
{"English":"Find all files with '.conf' extension under '\/etc' directory tree that have been modified in the last 30 minutes","Bash":"find \/etc -name \"*.conf\" -mmin -30"}
{"English":"Retrieve column number from column name \"Target\" in file \"table\"","Bash":"head -1 table | tr -s ' ' '\\n' | nl -nln |  grep \"Target\" | cut -f1"}
{"English":"Remove all core dump files from user's home directory","Bash":"find ~\/ -name 'core*' -exec rm {} \\;"}
{"English":"Change all directories under \".\/bootstrap\/cache\/\" to owner \"apache\" and group \"laravel\"","Bash":"sudo find .\/bootstrap\/cache\/ -type d -exec chown apache:laravel {} \\;"}
{"English":"Print \"y\" for each line in \"file2.txt\" found in \"file1.txt\" and a blank newline otherwise","Bash":"comm -2 file1.txt file2.txt | awk -F'\\t' '{print (NF==2?\"y\":\"\")}'"}
{"English":"Display differences between directories dir1 and dir2.","Bash":"diff -r dir1\/ dir2\/"}
{"English":"Print the file content of command \"f\"","Bash":"cat `which f`"}
{"English":"Remove files that are less than 1MB in size under current directory","Bash":"find . -size -1M -exec rm {} \\;"}
{"English":"Gets a job with defined number back to the foreground.","Bash":"fg 1"}
{"English":"Unzip every \".gz\" file in the current directory tree","Bash":"find . -name \"*.gz\" | xargs gunzip"}
{"English":"Copy all files in current directory that do not match *\/exlude-path\/* in their paths to \/destination\/ preserving directory structure","Bash":"find . -type f -not -path '*\/exlude-path\/*' -exec cp --parents '{}' '\/destination\/' \\;"}
{"English":"find all files in the current folder which start with pro","Bash":"find . -name pro\\*"}
{"English":"List all files in the current directory tree that were modified 60 minutes ago","Bash":"find -mmin 60"}
{"English":"Print the pathnames of all files from the \/tmp\/dir1 directory tree","Bash":"find \/tmp\/dir1 -exec echo {} \\;"}
{"English":"find the file \"dateiname\" in the current folder ( case insensitive search)","Bash":"find -iname \"Dateiname\""}
{"English":"Report total disk usage info on root file system, printing all sizes as power of 1000","Bash":"df -H --total \/"}
{"English":"Save the system host name in variable \"HOSTNAME\"","Bash":"HOSTNAME=\"`hostname`\""}
{"English":"find all the mp3 files in the file system","Bash":"find \/ -iname \"*.mp3\" -print"}
{"English":"find all the regular\/normal files in the \/path folder and delete them","Bash":"find \/path -type f -exec rm '{}' \\;"}
{"English":"find all the normal\/regular files in the current folder which have been modified two days ago and display a long listing of them","Bash":"find . -type f -mtime 2 -mtime -3 -daystart -exec ls -l {} \\;"}
{"English":"Archive \"myfile\" to \"\/foo\/bar\/\" and create directory \"\/foo\/bar\/\" if \"\/foo\/\" exists","Bash":"rsync -a myfile \/foo\/bar\/"}
{"English":"Search directory \/home\/ABCD recursively, starting from one level below, for regular files","Bash":"find \/home\/ABCD\/ -mindepth 1 -type f -print"}
{"English":"Decompresses file 'xac.bz2', redirecting output to standard out.","Bash":"bzip2 -dc xac.bz2"}
{"English":"display all the header files  and cpp files in the current folder","Bash":"find . -name \\*.h -print -o -name \\*.cpp -print"}
{"English":"Find all files\/directories that contain the string literal '`$VERSION`' in their names under current directory tree","Bash":"find . -name '*`$VERSION`*'"}
{"English":"Sets shell options 'globstar' and 'nullglob'.","Bash":"shopt -s globstar nullglob"}
{"English":"Sort and compare files \"$def.out\" and \"$def-new.out\"","Bash":"diff <(sort $def.out) <(sort $def-new.out)"}
{"English":"Recursively add \".jpg\" to all files in the current directory tree","Bash":"find . -type f -exec mv '{}' '{}'.jpg \\;"}
{"English":"Search the current directory tree for files whose names end in \"rb\" or \"js\"","Bash":"find . -name \"*js\" -o -name \"*rb\""}
{"English":"move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link","Bash":"find . -follow -iname '*.htm' -print0 | xargs -i -0 mv '{}' ~\/webhome"}
{"English":"Removes all empty folders under path '\/foo\/bar' and the path itself.","Bash":"find \/foo\/bar -type d -depth -exec rmdir -p {} +"}
{"English":"Get domain names from file '1.txt' and request TXT DNS record for each one","Bash":"cat 1.txt | xargs dig TXT"}
{"English":"Find all files\/directories under current directory with null character as the delimiter","Bash":"find -print0"}
{"English":"Prints listing of a root folder including hidden files, and saves output to 'output.file'.","Bash":"ls -a | tee output.file"}
{"English":"calculate the total size of jpg files in current folder","Bash":"find . -name \"*jpg\" -exec du -k {} \\; | awk '{ total += $1 } END { print total\/1024 \" Mb total\" }'"}
{"English":"Find all files\/directories under 'my key phrase' directory","Bash":"find 'my key phrase'"}
{"English":"Find all .jpg files in the current directory and below.","Bash":"find . -name \u201c*.jpg\u201d"}
{"English":"Sorts content of the $tmp file and filters out all strings with ':0'.","Bash":"sort $tmp | grep -v ':0'  #... handle as required"}
{"English":"Move all files matching case insensitive \".cpp\" in the current directory tree to \".\/test\/\"","Bash":"find . -type f -iname '*.cpp' -exec mv -t .\/test\/ {} \\+"}
{"English":"search for directories in the folder \"test\" which end with 5 digits using regular expressions","Bash":"find .\/test -regextype posix-egrep -type d -regex '.*\/[0-9]{5}$'"}
{"English":"List all leaf directories of the current directory tree","Bash":"find -depth -type d |sed 'h; :b; $b; N; \/^\\(.*\\)\\\/.*\\n\\1$\/ { g; bb }; $ {x; b}; P; D'"}
{"English":"search for files which are writable by either their owner or their group","Bash":"find . -perm \/u+w,g+w"}
{"English":"list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user","Bash":"find \/ -path \/proc -prune -o -perm -2 ! -type l -ls"}
{"English":"Delete all empty directories under root","Bash":"find root -type -d -empty -delete"}
{"English":"Add executable permission to \"pretty-print\"","Bash":"chmod +x pretty-print"}
{"English":"Enables shell option 'failglob'.","Bash":"shopt -s failglob"}
{"English":"find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end","Bash":"find . -type f -wholename \\*.mbox | sed 's\/\\(.*\\)\\.mbox\/mv \"\\1.mbox\" \"\\1\"\/' | sh"}
{"English":"find Texinfo source files in \/usr\/local\/doc","Bash":"find foo -path foo\/bar -print"}
{"English":"Find all '*~' files under current directory","Bash":"find .\/ -name '*~'"}
{"English":"Prints lines count in each *.c file of a current folder and total count.","Bash":"wc -l *.c"}
{"English":"Recursively finds all '*.png' files older than 50 days in a current folder and removes them.","Bash":"find . -name \"*.png\" -mtime +50 -exec rm {} \\;"}
{"English":"find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files","Bash":"find . -type f -ctime -3 | tail -n 5"}
{"English":"Search the current directory tree for files whose name is \".note\", case insensitive","Bash":"find . -iname '.note' | sort"}
{"English":"Display a dump of standard input as floating point values of double size","Bash":"od -t fD"}
{"English":"change the permissions of all the normal files in a directory","Bash":"find \/path\/to\/dir\/ -type f -print0 | xargs -0 chmod 644"}
{"English":"Archive \"path\/to\/working\/copy\" to \"path\/to\/export\" excluding files or directories named \".svn\"","Bash":"rsync -a --exclude .svn path\/to\/working\/copy path\/to\/export"}
{"English":"Count the number of unique duplicate lines in \"file1\" and \"file2\" combined","Bash":"sort file1 file2 | uniq -d | wc -l"}
{"English":"Send TERM signal to process with id listed in '\/var\/run\/DataBaseSynchronizerClient.pid' file","Bash":"kill `cat \/var\/run\/DataBaseSynchronizerClient.pid`"}
{"English":"Find all *.jpg files under current directory and print only unique names","Bash":"find . -name *.jpg | uniq -u"}
{"English":"Find all directories in \/path\/to\/dir\/ without going into sub-directories and append a null character at the end of each paths","Bash":"find \/path\/to\/dir\/ -mindepth 1 -maxdepth 1 -type d -print0"}
{"English":"force remove all the c files in the current folder","Bash":"find . -name \"*.c\" | xargs rm -rf"}
{"English":"delete all the empty files(files with size 0 bytes) in the current folder","Bash":"find . -empty -delete -print"}
{"English":"Find all directories recursively starting from \/ and count them","Bash":"find \/ -type d | wc -l"}
{"English":"Find all files\/directories under \/myfiles that are 2560 bytes in size","Bash":"find \/myfiles -size 5"}
{"English":"Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.","Bash":"find ~ -atime +100 -delete"}
{"English":"Find all directories named \"D\" in the current directory tree","Bash":"find . -name \"D\" -type d"}
{"English":"find all files in the entire file system whose size is more than 100MB","Bash":"find \/ -size +100M"}
{"English":"download contents of a website \"https:\/\/get.scoop.sh\"","Bash":"curl -L https:\/\/get.scoop.sh"}
{"English":"search for all the directories in the current directory and do not search in sub directories","Bash":"find . -mindepth 1 -maxdepth 1 -type d"}
{"English":"Find all directories under minimum 2 levels down the mydir directory","Bash":"find mydir -mindepth 2 -type d"}
{"English":"Find all empty files starting from the current directory and delete them","Bash":"find . -type f -empty -delete"}
{"English":"display all the files along with their group name in the folder \/home which do not belong to the group test","Bash":"find \/home ! -group test -printf \"%p:%g\\n\""}
{"English":"Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed","Bash":"find . -name \"*.php\" -exec chmod 755 {} + -printf '.' | wc -c"}
{"English":"Show all files in user's home directory that have read, write and execute permissions set for user, group and others.","Bash":"find ~ -perm 777"}
{"English":"find all files read less than 1 minute ago","Bash":"find . -amin -1"}
{"English":"display a long listing of all the files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime -1 | xargs ls -ld"}
{"English":"Find all php files whose name is tecmint.php in the current directory","Bash":"find . -type f -name tecmint.php"}
{"English":"Find directories in the current directory tree that were modified within the last 24 hours and move them to \/path\/to\/target-dir","Bash":"find . -type d -mtime -0 -print0 | xargs -0 mv -t \/path\/to\/target-dir"}
{"English":"Use \"\/var\/log\/wtmp\" and print IPs and search for \"^msw.*127.0.0.1\"","Bash":"who --ips \/var\/log\/wtmp | grep '^msw.*127.0.0.1'"}
{"English":"search for files which are writable by either their owner or their group","Bash":"find . -perm \/u=w,g=w"}
{"English":"change the permission of all the regular files in the folder \/home to 700","Bash":"find \/home -type f -perm 0777 -print -exec chmod 700 {} \\;"}
{"English":"Replace \"dummyvalue\" with the system IP address in \"filename\"","Bash":"sed -i s\/'dummyvalue'\/$(hostname -I | head -n1 | awk '{print $1;}')\/g filename"}
{"English":"Search the \/Path directory tree for files whose pathnames match pattern \"\/Path\/bar*\" and whose names match pattern \"file_name*\"","Bash":"find \/Path -path \"\/Path\/bar*\" -name \"file_name*\""}
{"English":"Find all files\/directories under current directory matching the case insensitive pattern 'pattern'","Bash":"find -iname pattern"}
{"English":"Prints process tree of the current command process.","Bash":"pstree -p $$"}
{"English":"Change permissions to 644 for all regular files under and below \/path\/to\/someDirectory\/","Bash":"find \/path\/to\/someDirectory -type f -print0 | xargs -0 sudo chmod 644"}
{"English":"Display all lines contained in 'dax-weekly.csv' in reverse order.","Bash":"cat dax-weekly.csv | awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }'"}
{"English":"find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format","Bash":"find -mmin -60 -exec ls -l {} \\;"}
{"English":"Lists all paths to all subfolders in a current folder.","Bash":"ls -mR * | sed -n 's\/:\/\/p'"}
{"English":"Prints path to folder that contains target of the symbolic link ..\/..\/..\/..\/etc\/passwd.","Bash":"$(dirname $(readlink -e ..\/..\/..\/..\/etc\/passwd))"}
{"English":"Prints calendar for a current month, replacing current data with asterisk.","Bash":"cal -h|sed -r \"s\/\\b$(date|cut -d' ' -f3)\\b\/*\/\""}
{"English":"Print all unique directory paths under \"dir1\" compared to \"dir2\"","Bash":"comm -23 <(find dir1 -type d | sed 's\/dir1\/\\\/\/'| sort) <(find dir2 -type d | sed 's\/dir2\/\\\/\/'| sort) | sed 's\/^\\\/\/dir1\/'"}
{"English":"Copy all .patch files from the current directory tree to patches\/","Bash":"find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches\/"}
{"English":"create directory practice into home directory","Bash":"mkdir ~\/practice"}
{"English":"remove all files that's older than 30 days in '\/tmp'","Bash":"find \/tmp -type f -mtime +30 -exec rm -f {} \\;"}
{"English":"Find all files\/directories under \/usr\/tom which matches the extended regex '*.pl| *.pm'  in their names","Bash":"find \/usr\/tom | egrep '*.pl| *.pm'"}
{"English":"Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.","Bash":"file=$( basename \"$1\" )"}
{"English":"Run 'join' with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files.","Bash":"join <(sort -n file1) <(sort -n file2)"}
{"English":"Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".","Bash":"rename 's\/(.*)$\/new.$1\/' original.filename"}
{"English":"Print as many dots as there are files named \"file.ext\" in the \/home\/kibab directory tree","Bash":"find \/home\/kibab -name file.ext -exec echo . ';'"}
{"English":"Search the current directory tree for files containing \"album\" and \"vacations\" in their names and not containing \"2015\"","Bash":"find . -name \"*album*\" -a -name \"*vacations*\" -a -not -name \"*2015*\""}
{"English":"Display human-readable file type description of utf8.txt","Bash":"file utf8.txt"}
{"English":"Send 5 pings to broadcast address \"10.10.0.255\" and print the unique IPs who responded","Bash":"ping -c 5 -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }' | sort | uniq"}
{"English":"Find all files named 'test' in the current directory tree, not descending into \"test\" directories","Bash":"find . -name test -prune"}
{"English":"create a gzip of all the files in the current folder excluding the already gzipped files.","Bash":"find . \\! -name \"*.gz\" -exec gzip {} \\;"}
{"English":"Search for first match of the case insensitive regex 're' in all *.coffee files under current directory","Bash":"find . -name \\*.coffee -exec grep -m1 -i 're' {} \\;"}
{"English":"find all files that have been used more than two days since their status was last changed","Bash":"find -used +2"}
{"English":"Update timestamps of all files and directories under current directory.","Bash":"find . -print0 | xargs -0 touch"}
{"English":"Find all directories on the system whose size is greater than 50k","Bash":"find \/ -type d -size +50k"}
{"English":"Mount partition with label \"WHITE\" on \"\/mnt\/WHITE\" with read and write permission","Bash":"mount -L WHITE \/mnt\/WHITE -o rw"}
{"English":"Read a line from standard input into variable \"password\" without echoing the input","Bash":"read -s password"}
{"English":"Exclude directory from find . command","Bash":"find -name \"*.js\" -not -path \".\/directory\/*\""}
{"English":"Search the \/home\/bozo\/projects directory tree for files modified within the last 24 hours","Bash":"find \/home\/bozo\/projects -mtime 1"}
{"English":"Archive \"\/path\/to\/sfolder\" to \"name@remote.server:\/path\/to\/remote\/dfolder\" compressing the data during transmission","Bash":"rsync -avlzp \/path\/to\/sfolder name@remote.server:\/path\/to\/remote\/dfolder"}
{"English":"Find all files under ~\/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last : (colon)","Bash":"find ~\/code -name '.*' -prune -o -type f -a -perm \/u+x -print | sed 's@\/[^\/]\\+$@:@' | sort | uniq | tr -d '\\n' | sed 's\/^\/:\/; s\/:$\/\/'"}
{"English":"Find all files\/directories that belong to the group 'audio' under '\/dev' directory tree","Bash":"find \/dev -group audio"}
{"English":"Recursively print all files and directories in the directory tree \"$absolute\/path\/of\/your\/dir\"","Bash":"tree $absolute\/path\/of\/your\/dir"}
{"English":"find for a filename with multiple patterns in the current folder","Bash":"find . -name \"photo*.jpg\""}
{"English":"Search the current directory tree for files whose names begin with 'my'","Bash":"find . -name 'my*'"}
{"English":"Look for file `Chapter1' under \/usr and \/home","Bash":"find \/usr \/home -name Chapter1 -type f"}
{"English":"Connect to port 1234 of specified IP address or hostname as ssh user \"user\", and copy all visible files in \/var\/www\/mywebsite\/dumps\/ on this host to local directory \/myNewPathOnCurrentLocalMachine - this directory must already exist on local host.","Bash":"scp -P 1234 user@[ip address or host name]:\/var\/www\/mywebsite\/dumps\/* \/var\/www\/myNewPathOnCurrentLocalMachine"}
{"English":"Print numbered list of all top-level files in the current directory, with name containing 'android'","Bash":"ls | grep \"android\" | cat -n"}
{"English":"Find all regular files in the current directory tree, except GIT files","Bash":"find .  -name .git -prune -o -type f -print"}
{"English":"Find all files\/directories named 'pattern' under current directory tree","Bash":"find . -name \"pattern\" -print"}
{"English":"Format each line as 3 columns based on extraneous columns","Bash":"awk '{for(i=3;i<=NF;i++){print $1,$2,$i}}' file | column -t"}
{"English":"Rename all files in current directory whose name starts with 'F0000', trimming a zero from any sequence of four zeroes in the name.","Bash":"rename s\/0000\/000\/ F0000*"}
{"English":"change the ownership of all regular\/normal files in the current directory after users confirmation","Bash":"find . -type f -ok chown username {} \\;"}
{"English":"Replace the occurrences of \"HOGE\" with \"MOGA\" once per each line of the files from the current directory tree","Bash":"find . -type f -print0 | xargs -0 sed -i -e \"s\/HOGE\/MOGA\/\""}
{"English":"display all the files in the home folder which begin with \"arrow\"","Bash":"find ~ -name 'arrow*'"}
{"English":"find all the \"error_log\" files in the folder \"\/home\" which are bigger than 5MB and force delete them","Bash":"find \/home -size +5000000b -name \"error_log\" -exec rm -rf {} \\;"}
{"English":"Find *.pl files\/directories under \/users\/tom","Bash":"find \/users\/tom -name \"*.pl\""}
{"English":"Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago","Bash":"find . -mmin -60 -mmin +5"}
{"English":"display the sum of disk used by all the access.log files in \/var\/www folder","Bash":"find \/var\/www\/ -type f -name \u00abaccess.log*\u00bb -exec du -k {} \\;|awk '{s+=$1}END{print s}'"}
{"English":"Search the \/path directory tree for files missing g+w and o+w bits","Bash":"find \/path ! -perm \/022"}
{"English":"Find files and directories modified within the last 7 days","Bash":"find . -mtime -7"}
{"English":"Shows size of compressed file in .bz2 archive.","Bash":"bunzip2 -c bigFile.bz2 | wc -c"}
{"English":"Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them","Bash":"find \"$DIR\" -type f \\! -newer \"$a\" \\! -samefile \"$a\" -exec rm {} +"}
{"English":"find all the files in the folder \/opt which have been modified between 20 to 50 days ago","Bash":"find \/opt -mtime +30 -mtime -50"}
{"English":"Find all regular files with '.r' and '.c' in their names under current directory tree","Bash":"find .\/ -type f \\( -name '*.r*' -o -name '*.c*' \\) -print"}
{"English":"List all files and directories residing in the current directory and below","Bash":"find | xargs ls"}
{"English":"Save the current date, system host name, and \"$changes\" with newlines removed to variable \"subj\"","Bash":"subj=\"$(date) - $(hostname) - $(echo \"$changes\" | sed \"s\/$\/,\/\" | tr \"\\n\" \" \")\""}
{"English":"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output","Bash":"find . -type f -exec grep -n California {} \\; -print | wc -l"}
{"English":"Delete all .pyc files in the current directory tree","Bash":"find . -name \"*.pyc\" | xargs rm -rf"}
{"English":"Find recursively the files named \"file\" in the current directory ignoring all .git directories","Bash":"find . -name .git  -prune -o -name file  -print"}
{"English":"Find .java files in the current directory tree that contain 'TODO', and print their pathnames","Bash":"find . -name \"*.java\" -exec grep -Hin TODO {} + | cut -d \":\" -f 1"}
{"English":"Print absolute path of \"YOUR_PATH\"","Bash":"readlink -f YOUR_PATH"}
{"English":"Delete all non digits from index \"$i\" in bash array \"depsAlastmodified\" and print the hex dump as characters","Bash":"echo \"${depsAlastmodified[$i]}\" | tr -cd '[[:digit:]]' | od -c"}
{"English":"Print the sorted unique column of usernames of users who are currently logged in","Bash":"finger | cut -d ' ' -f1 | sort -u"}
{"English":"Print the IP addresses for the current host name","Bash":"hostname -i"}
{"English":"Remove all *.log files from the current directory tree","Bash":"find .\/ -name '*.log' | xargs rm"}
{"English":"Find all files\/directories under \/path\/to\/dir\/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks","Bash":"find \/path\/to\/dir\/* -printf \"%TY%Tm%Td%TH%TM%TS|%p|%l\\n\""}
{"English":"Check all .txt files whether they contain \"needle\"","Bash":"find . -type f -iname \"*.txt\" -print | xargs grep \"needle\""}
{"English":"find all the files that have been modified since the last time we checked","Bash":"find \/etc -newer \/var\/log\/backup.timestamp -print"}
{"English":"Returns the single most recent file in a directory","Bash":"ls -t | head -n1"}
{"English":"Find files that were modified in less than 1 minute ago","Bash":"find \/ -mmin -1"}
{"English":"List unique series of 3 characters in file \"$1\" prefixed by the number of occurrences and sorted from most frequent to least frequent","Bash":"fold -w3 \"$1\" | sort | uniq -c | sort -k1,1nr -k2"}
{"English":"Print file size with the file name","Bash":"find . -name '*.ear' -exec du -h {} \\;"}
{"English":"find all read me files in a folder","Bash":"find \/usr\/share\/doc -name README"}
{"English":"Unhide all hidden files in the current directory","Bash":"find . -maxdepth 1 -type f -name '\\.*' | sed -e 's,^\\.\/\\.,,' | sort | xargs -iname mv .name name"}
{"English":"Print all lines from file 'report.txt' containing any-cased 'error' pattern","Bash":"cat report.txt | grep -i error"}
{"English":"Archive \"\/path\/to\/files\" on host \"remotemachine\" authentifying as user \"user\" and compressing data during transmission, copy symlinks as symlinks.","Bash":"rsync -avlzp user@remotemachine:\/path\/to\/files \/path\/to\/this\/folder"}
{"English":"Convert *.au files to *.wav files using `sox'","Bash":"find -type f -name '*.au' | awk '{printf \"sox %s %s\\n\",$0,$0\".wav\" }' | bash"}
{"English":"Move all files that contain \"Subject: \\[SPAM\\]\" to \"DIR\"","Bash":"grep -l 'Subject: \\[SPAM\\]' | xargs -I '{}' mv '{}' DIR"}
{"English":"find all the files ending with .ini in the current directory.","Bash":"find . -name *.ini"}
{"English":"start 2 sleep processes in the background","Bash":"sleep 100 | sleep 200 &"}
{"English":"Search for files\/directories with the case insensitive pattern anaconda.* in var\/log directory and create an archive (file1.tar) of the last block of files sent to xargs","Bash":"find var\/log\/ -iname anaconda.* | xargs tar -cvf file1.tar"}
{"English":"Print the help message for tree","Bash":"tree --help"}
{"English":"find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)","Bash":"find . -type f -daystart -mtime 1"}
{"English":"Show the list of files modified less than a minute ago","Bash":"find \/ -mmin -1 -print"}
{"English":"Find all the files in file system which are modified more than 50 days back and less than 100 days","Bash":"find \/ -mtime +50 \u2013mtime -100"}
{"English":"Find all files\/directories containing 'farm' in their names under '\/usr\/share' directory tree","Bash":"find \/usr\/share -name '*farm*'"}
{"English":"Recursively copy \"source\", \"dir\", and \"target\" to \"dir\" as a dry run","Bash":"rsync -rvc --delete --size-only --dry-run source dir target dir"}
{"English":"Find all files\/directories under \/path directory that were modified more than 30 minutes ago","Bash":"find \/path -mtime +30m"}
{"English":"Report file system containing path to the current working directory disk usage human-readable.","Bash":"df -h ."}
{"English":"Count all the mp3 files in the music user's home and subdirs.","Bash":"find ~music -type f -iname *.mp3 | wc -l"}
{"English":"Search all of \/usr for any directory named 'My Files', for each directory found, copy it to \/iscsi preserving full paths and attributes, then remove it.","Bash":"find \/usr -type d -name 'My Files' -exec rsync -avR '{}' \/iscsi \\;  -exec rm -rf '{}'\\;"}
{"English":"Wrap each line in \"longline\" to a maximum of 30 characters breaking at spaces","Bash":"fold -w30 -s longline"}
{"English":"Print a frequency count of column two for every file in the current directory","Bash":"awk -F '\\t' '{print $2}' * | sort | uniq -c | sort -nr"}
{"English":"Find all regular files that reside in the current directory tree and were last modified more than 2 days ago","Bash":"find . -type f -mtime +2"}
{"English":"Find all files\/directories in 1 level down the current directory","Bash":"find -mindepth 1 -maxdepth 1"}
{"English":"Recursively search for all files with names ending with \"_test.rb\", renaming them to end with \"_spec.rb\", using at most 4 concurrent processes.","Bash":"find . -name \"*_test.rb\" | xargs -P 4 rename s\/_test\/_spec\/"}
{"English":"Find all .php files in all directory trees matching pattern `\/srv\/www\/*\/htdocs\/system\/application\/' and search those files for string \"debug (\"","Bash":"find \/srv\/www\/*\/htdocs\/system\/application\/ -name \"*.php\" -print0 | xargs -0 grep -H \"debug (\""}
{"English":"Print the directory name of the physical current working directory","Bash":"dirname `pwd -P`"}
{"English":"Display difference between one.txt and two.txt side-by-side.","Bash":"diff -y one.txt two.txt"}
{"English":"Clean directories and subdirectories of the temporary files generated during normal use","Bash":"find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"}
{"English":"find all files that do not have execute permission to all","Bash":"find . -type d ! -perm -111"}
{"English":"Copy file linked to by \"file\" to \"file\"","Bash":"cp --remove-destination `readlink file` file"}
{"English":"find all the files in the file system which have been modified in the last 10 minutes","Bash":"find \/ -mmin -10"}
{"English":"Find recursively all files whose names begin with \"foo\"","Bash":"find . -name \"foo*\""}
{"English":"Decompress 'file.gz'","Bash":"gzip -d file.gz"}
{"English":"Print the directory name of the full real path to the current script","Bash":"echo \"dirname\/readlink: $(dirname $(readlink -f $0))\""}
{"English":"Delete files in \/var\/tmp\/stuff and below that have not been modified in over 90 days","Bash":"find \/var\/tmp\/stuff -mtime +90 -exec \/bin\/rm {} \\+"}
{"English":"forcibly and verbosely create symbolic links in directory \"~\/Library\/LaunchAgents\" to all files located in \/usr\/local\/opt\/mongodb\/ and that have filename extension \".plist\"","Bash":"ln -sfv \/usr\/local\/opt\/mongodb\/*.plist ~\/Library\/LaunchAgents"}
{"English":"List content of 'myfile' in a subshell and returns output to parent shell","Bash":"$(cat myfile)"}
{"English":"Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths","Bash":"find \"${DIR_TO_CLEAN?}\" -type f -mtime +${DAYS_TO_SAVE?} -print0"}
{"English":"Counts number of *.php files in a current folder and subfolders.","Bash":"find . -name '*.php' | wc -l"}
{"English":"Find all php files in a directory","Bash":"find . -type f -name \"*.php\""}
{"English":"Make 3 directories named \"$HOME\/Labs\/lab4a\/folder\" followed by a 3 width zero padded number from 1 to 3","Bash":"mkdir $(seq -f \"$HOME\/Labs\/lab4a\/folder%03g\" 3)"}
{"English":"Prints top-ten biggest top-level folders within a 'var' folder.","Bash":"sudo du -hDaxd1 \/var | sort -h | tail -n10"}
{"English":"Perform a case insensitive search for *.jpg files which are greater than 500KB in size under \/ftp\/dir\/ directory","Bash":"find \/ftp\/dir\/ -size +500k -iname \"*.jpg\""}
{"English":"Search for 'example' in all regular files under current directory tree and also print the filenames","Bash":"find . -type f -exec grep \"example\" '{}' \\; -print"}
{"English":"Look for any instance of \"ds1337\" in the modules.alias file matching current kernel release","Bash":"grep ds1337 \/lib\/modules\/`uname -r`\/modules.alias"}
{"English":"Check if current shell is running within a 'screen' process.","Bash":"pstree --show-parents -p $$ | head -n 1 | sed 's\/\\(.*\\)+.*\/\\1\/' | wc -l"}
{"English":"display all the files in the current folder which are bigger than 100MB and save the output list to the file \/root\/big.txt","Bash":"find \\( -size +100M -fprintf \/root\/big.txt %-10s %p\\n \\)"}
{"English":"Replace all ' ' with '-' from standard input","Bash":"tr  ' ' '-'"}
{"English":"List all aliencoders.[0-9]+ files\/directories under \/home\/jassi\/ directory","Bash":"find \/home\/jassi\/ -name \"aliencoders.[0-9]+\" |& xargs ls -lrt | awk '{print $9}'"}
{"English":"Find symbolic links under \/etc\/","Bash":"find \/etc -type l"}
{"English":"Find all the SGID bit files whose permissions set to 644 in the file system","Bash":"find \/ -perm 2644"}
{"English":"Get the total size of all files under dir1 directory","Bash":"find dir1 ! -type d |xargs wc -c |tail -1"}
{"English":"returns a list of  files create time is 1 minute ago under the root directory.","Bash":"find \/ -newerct '1 minute ago' -print"}
{"English":"Search for files greater than 20MB under your home directory (\/home\/user)","Bash":"find ~ -size +20M"}
{"English":"Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields","Bash":"cat log | tr -s [:blank:] |cut -d' ' -f 3-"}
{"English":"Recursively change the group of all files in \"\/tmp\/php_session\" to \"daemon\"","Bash":"chown -R :daemon \/tmp\/php_session"}
{"English":"Find all 777 permission directories and use chmod command to set permissions to 755","Bash":"find \/ -type d -perm 777 -print -exec chmod 755 {} \\;"}
{"English":"search for the file, filename.txt in the current folder ( case insensitive search )","Bash":"find . -iname filename.txt"}
{"English":"List files and directories one level deep in the current directory tree","Bash":"tree -L 2"}
{"English":"display all the directories in the current folder excluding those that have the name \"node_modules\"","Bash":"find . ! -name \"node_modules\" -type d"}
{"English":"Create a rsa key of 2048 bits with comment \"michael\" and store it in file \"key\".","Bash":"ssh-keygen -b 2048 -t rsa -f key -C michael"}
{"English":"Find all files\/directories under current directory tree excluding files\/directories with name 'query_to_avoid'","Bash":"find \\! -name \"query_to_avoid\""}
{"English":"Display differences between file1 and file2 side-by-side.","Bash":"diff -y file1 file2"}
{"English":"search for the file job.hostory in the folder \"\/data\/Spoolln\"","Bash":"find \/data\/SpoolIn -name job.history"}
{"English":"Find all TXT files in the current directory and copy them to directory \"$HOME\/newdir\"","Bash":"find \"$HOME\" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t \"$HOME\/newdir\""}
{"English":"Copy all files (not directories) in \"\/path\/to\/local\/storage\" to \"\/path\/to\/copy\" on host \"remote.host\" authenticating as user \"user\"","Bash":"rsync \/path\/to\/local\/storage user@remote.host:\/path\/to\/copy"}
{"English":"Find all 755 permission regular files under current directory tree","Bash":"find . -type f -perm 755"}
{"English":"Copy local file \"$1\" to host \"$2\" into host directory \"$3\"","Bash":"cat $1 | ssh $2 \"mkdir $3;cat >> $3\/$1\""}
{"English":"Copy a file xyz.c to all the .c files present in the C directory and below","Bash":"find .\/C -name \"*.c\" | xargs -n1  cp xyz.c"}
{"English":"Counts all *.mod files in a \/boot\/grub\/ folder.","Bash":"ls -l \/boot\/grub\/*.mod | wc -l"}
{"English":"Display bash function definition of \"foobar\"","Bash":"set | sed -n '\/^foobar ()\/,\/^}\/p'"}
{"English":"Print a list of each file with the full path prefix in the current directory tree excluding symbolic links","Bash":"tree -fi |grep -v \\>"}
{"English":"Move \"file1\", \"file2\", \"...\" to \"target\" directory","Bash":"mv -t target file1 file2 ..."}
{"English":"Remove files from the file system that are owned by nobody, asking the user before each removal","Bash":"find \/ -nouser -ok rm {} \\;"}
{"English":"display all the files  in the current folder excluding the current folder and do not search in the sub directories","Bash":"find . -maxdepth 1 -type d \\( ! -name . \\)"}
{"English":"Find files that were modified second last week and archive them","Bash":"find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date \u2018+%d%m%Y\u2019_archive.tar`"}
{"English":"Recursively changes group ownership of every folder in a current directory to the name of that folder.","Bash":"find . -type d | sed -e 's\/^\\.\\\/\/\/g' -e 's\/^\\.\/avoid\/g' | grep -v avoid | awk '{print $1\"\\t\"$1}' | xargs chgrp"}
{"English":"Change to directory 'foo' and print to terminal all received on standard input","Bash":"cd foo | cat"}
{"English":"Make \"bar\" executable","Bash":"chmod +x bar"}
{"English":"Print the grand total file system disk space usage with block sizes in units of TiB","Bash":"df --total -BT | tail -n 1"}
{"English":"Change permissions to 644 for all files showing the respective chmod command","Bash":"find .\/ -type f -print0 | xargs -t -0 chmod -v 644"}
{"English":"display a long list of all regular\/normal files in the file system which belong to the root and with suid bit set","Bash":"find \/ -type f -user root -perm -4000 -exec ls -l {} \\;"}
{"English":"Archive \"_vimrc\" to \"~\/.vimrc\" suppressing non-error messages and compressing data during transmission","Bash":"rsync -aqz _vimrc ~\/.vimrc"}
{"English":"find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file","Bash":"find \/ -name *.mp3 -fprint nameoffiletoprintto"}
{"English":"Find all files named `file1' on the system","Bash":"find \/ -name file1"}
{"English":"display files ending with \".ext\" in current folder excluding those that are present in the list list.txt","Bash":"find -type f -name '*.ext' | grep -vFf list.txt"}
{"English":"search for the file \"abc\" in the current folder or display all the directories","Bash":"find . -name abc -or -type d"}
{"English":"Request A record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching 'DIG'","Bash":"dig @$ns $d A | grep $d | grep -v \"DiG\""}
{"English":"Search in the current directory and all sub-directories except .\/D and any further sub-directories also named D for the file named hi.dat","Bash":"$ find . \\( -name D -prune \\) -o -name hi.dat"}
{"English":"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename \".svn\"","Bash":"find . -iname .svn -exec rm -rf {} \\;"}
{"English":"change the permissions of all the directories in the folder \"\/path\/to\/someDirectory\" to 755","Bash":"sudo find \/path\/to\/someDirectory -type d -print0 | xargs -0 sudo chmod 755"}
{"English":"Find *.scm files recursively in the current directory","Bash":"find . -name '*.scm'"}
{"English":"Search level 3 of the current directory tree for the directories whose pathnames contain \"New Parts\"","Bash":"find -mindepth 3 -maxdepth 3 -type d | grep \"New Parts\""}
{"English":"Find and show all files in the current directory tree that are smaller than 500 kB","Bash":"find . -size -500k"}
{"English":"Print the list of directories that are present in the \/mnt\/raid directory tree","Bash":"find \/mnt\/raid -type d"}
{"English":"Finds all users logged in via ssh.","Bash":"w | grep ssh"}
{"English":"recursively look for files ending in either .py or .py.server","Bash":"find . \\( -name \"*.py\" -o -name \"*.py.server\" \\)"}
{"English":"find all the files in the folder Musica and display them in a single line null separated","Bash":"find M\u00fasica\/* | egrep -Z \\\/\\\\. | xargs -0 echo"}
{"English":"Save the user name in upper case of the current user in variable \"v\"","Bash":"v=$(whoami | tr 'a-z' 'A-Z')"}
{"English":"Find all files under current directory excluding hidden directories","Bash":"find -name '.?*' -prune -o \\( -type f -print0 \\)"}
{"English":"Go into the first directory whose name contains 1670","Bash":"cd `find . -maxdepth 1 -type d | grep 1670`"}
{"English":"Unzip and extract \"userAgent=[^=]*'\" from \"input.gz\"","Bash":"zcat input.gz | grep -o 'userAgent=[^=]*' | sed 's\/ [^ ]*$\/\/'"}
{"English":"Recursively change ownership of \"\/usr\/local\" to the current user","Bash":"sudo chown -R `whoami` \/usr\/local"}
{"English":"Find all directories in 1 level down the \/home directory that have two consecutive vowels in their names and count them","Bash":"find \/home -mindepth 1 -maxdepth 1 -type d -name '*[aeiou][aeiou]*' -printf '*' | wc -c"}
{"English":"Copy *.mp3 files to \/tmp\/MusicFiles","Bash":"find . -type f -name \"*.mp3\" -exec cp {} \/tmp\/MusicFiles \\;"}
{"English":"display all the html files in the current folder that have been modified exactly 7*24 hours ago","Bash":"find . -mtime 7 -name \"*.html\" -print"}
{"English":"Remove empty directories","Bash":"find -type d -exec rmdir --ignore-fail-on-non-empty {} + ;"}
{"English":"find all files in the current folder that are modified exactly 1 minute ago","Bash":"find -mmin 1 -print"}
{"English":"List all SGID and SUID files in entire file system","Bash":"find \/ -type f \\( -perm -4000 -o -perm -2000 \\) -ls"}
{"English":"Display file type description of 'file-name' based on contents.","Bash":"file file-name"}
{"English":"Runs `file' on every file in or below the current directory.","Bash":"find . -type f -exec file '{}' \\;"}
{"English":"Replace \"inputfile\" with a sorted unique list of its contents","Bash":"sort inputfile | uniq | sort -o inputfile"}
{"English":"Append all *.mp3 files modified within the last 180 days to tar archive `music.tar'","Bash":"find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar"}
{"English":"Find all *.c files under \/home","Bash":"find \/home -name \"*.c\""}
{"English":"display all the regular\/normal files in the current folder which have been modified in the last 24 hours","Bash":"find . -mtime 0 -type f"}
{"English":"Find files modified within the past 24 hours","Bash":"find . -mtime 0"}
{"English":"Report file systems disk usage, elide all entries insignificant to available space, and produce a grand total.","Bash":"df --total"}
{"English":"Print relative path of device of disk with UUID \"b928a862-6b3c-45a8-82fe-8f1db2863be3\"","Bash":"readlink \/dev\/disk\/by-uuid\/b928a862-6b3c-45a8-82fe-8f1db2863be3"}
{"English":"display the version of find","Bash":"find --version"}
{"English":"Saves bytes count of the value of '$each' variable.","Bash":"a=$(echo $each | wc -c)"}
{"English":"Enables shell option 'expand_aliases'.","Bash":"shopt -s expand_aliases"}
{"English":"Find *.txt files in the current directory tree, ignoring paths .\/Movies\/*, .\/Downloads\/*, and .\/Music\/*","Bash":"find . -type f -name \"*.txt\" ! -path \".\/Movies\/*\" ! -path \".\/Downloads\/*\" ! -path \".\/Music\/*\""}
{"English":"Replace all instances of \"STRING_TO_REPLACE\" with \"STRING_TO_REPLACE_IT\" in \"index.html\" and write the output to standard output and \"index.html\"","Bash":"sed s\/STRING_TO_REPLACE\/STRING_TO_REPLACE_IT\/g index.html | tee index.html"}
{"English":"Remove leading and trailing spaces or tabs from \"   wordA wordB wordC   \"","Bash":"echo \"   wordA wordB wordC   \" | sed -e 's\/^[ \\t]*\/\/' | sed -e 's\/[ \\t]*$\/\/'"}
{"English":"Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under \/etc","Bash":"find \/etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \\;"}
{"English":"Find all of the character devices on the system","Bash":"find \/ -type c"}
{"English":"find all files beneath the current directory that begin with the letters 'Foo' and delete them.","Bash":"find . -type f -name \"Foo*\" -exec rm {} \\;"}
{"English":"List all files from the current directory tree that were modified less than 60 minutes ago","Bash":"find . -mmin -60 -ls"}
{"English":"search for pattern matched files in the current folder and subfolders exclude \"excluded path\"","Bash":"find .\/ -type f -name \"pattern\" ! -path \"excluded path\" ! -path \"excluded path\""}
{"English":"Change onwer of \"file\" to \"user_name\"","Bash":"chown user_name file"}
{"English":"Find all files\/directories greater than 100MB and print their list along with their size in \/root\/big.txt file","Bash":"find \\( -size +100M -fprintf \/root\/big.txt '%-10s %p\\n' \\)"}
{"English":"Merge lines from \"file_1\" and \"file_2\" and format the output as a table with tab separators","Bash":"paste file_1 file_2 | column -s $'\\t' -t"}
{"English":"sleep for 500 seconds","Bash":"sleep 500"}
{"English":"Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '\/root\/test.out' file.","Bash":"ls -hal \/root\/ | sudo tee \/root\/test.out"}
{"English":"Find all directories under current directory","Bash":"find . -type d -print"}
{"English":"Replace spaces with underscores in the names of all files and directories in the \"\/tmp\" directory tree","Bash":"find \/tmp\/ -depth -name \"* *\" -execdir rename 's\/ \/_\/g' \"{}\" \\;"}
{"English":"Change the owner of all files in the directory tree \"dir_to_start\" excluding directory \"dir_to_exclude\" to \"owner\"","Bash":"find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner"}
{"English":"Print IP addresses of the host name","Bash":"hostname -I | awk '{print $1}'"}
{"English":"Find regular files named \"expression -or expression\" under and below \/dir\/to\/search\/","Bash":"find \/dir\/to\/search\/ -type f -name 'expression -or expression' -print"}
{"English":"Print the contents of \"Little_Commas.TXT\"","Bash":"cat Little_Commas.TXT"}
{"English":"copy all files which do not have execute permission to another folder","Bash":"cp `find -perm -111 -type f` \/usr\/local\/bin"}
{"English":"use find -exec with multiple commands regardless of their success or failure","Bash":"find . -name \"*.txt\" \\( -exec echo {} \\; -o -exec true \\; \\) -exec grep banana {} \\;"}
{"English":"Print a line of 99 '=' characters","Bash":"seq -s= 100|tr -d '[:digit:]'"}
{"English":"Change permission to 755 of all files\/directories under current directory tree that have 777 permission","Bash":"find -perm 777 | xargs -I@ sudo chmod 755 '@'"}
{"English":"Move all *.emlx files\/directories under \/path\/to\/folders\/ to .\/Messages\/ directory","Bash":"find \/path\/to\/folders\/ -name \\*.emlx -print0 | xargs -0 -I {} mv {} .\/Messages\/"}
{"English":"Find `string' in all *.java files ignoring the case of that string","Bash":"find . -type f -name \"*.java\" -exec grep -il string {} \\;"}
{"English":"Save first one of space separated parts of each line in $LOCKFILE file to the 'CURRENT_PID_FROM_LOCKFILE' variable","Bash":"CURRENT_PID_FROM_LOCKFILE=`cat $LOCKFILE | cut -f 1 -d \" \"`"}
{"English":"Creates temporary folder in TMPDIR (if defined) or in '\/tmp\/', and stores path to created folder in 'dir' variable.","Bash":"dir=$(mktemp -d)"}
{"English":"Count files in the current path by modification month","Bash":"find . -maxdepth 1 -type f -printf '%TY-%Tm\\n' | sort | uniq -c"}
{"English":"Copy file or folder linked to by \"file\" to \"file\"","Bash":"cp -rf --remove-destination `readlink file` file"}
{"English":"Print the last line of \"$file1\" to the console and append to \"$file2\"","Bash":"tail -1 $file1 | tee -a $file2"}
{"English":"Save IP addresses of the host name in variable \"ip\"","Bash":"ip=$(hostname -I | awk '{print $1}')"}
{"English":"File 'save_pid.txt' contains a process ID, instantly kill this process with SIGKILL signal.","Bash":"kill -9 `cat save_pid.txt`"}
{"English":"Find all SGID set files under current directory and show a few lines of output from the beginning","Bash":"find . -perm \/g+s | head"}
{"English":"Merge already sorted files \"file*.txt\" and split the result into files of at most 100000 lines each with a prefix \"sorted_file\"","Bash":"sort --merge file*.txt | split -l 100000 - sorted_file"}
{"English":"search for perl files in the folder \/users\/tom","Bash":"find \/users\/tom -name \"*.pl\""}
{"English":"Save number of lines in '\/some\/big\/file' to 'LINES' variable","Bash":"LINES=$(cat \/some\/big\/file | wc -l)"}
{"English":"List all regular files in \/var\/www and below that have changed in the last 10 minutes","Bash":"find \/var\/www -cmin -10 -type f -printf \"%c %pn\""}
{"English":"Move all files from the `sourceDir' directory to the `destDir' directory","Bash":"find sourceDir -mindepth 1 -maxdepth 1 -exec mv --target-directory=destDir '{}' +"}
{"English":"Gets IP addresses of all active network interfaces.","Bash":"ifconfig | grep -oP \"(?<=inet addr:).*?(?=Bcast)\""}
{"English":"Change to folder where the oracle binary is.","Bash":"cd $(which oracle | xargs dirname)"}
{"English":"find all files in current folder which are less than 300MB","Bash":"find . -size -300M"}
{"English":"Counts all lines in $i file.","Bash":"cat $i | wc -l"}
{"English":"Find files\/directories that have no owner or group under \/path","Bash":"find \/path -nouser -or -nogroup"}
{"English":"Force create a symbolic link in \"\/usr\/bin\/\" for each file matching \"$javaUsrLib\/jdk1*\/bin\/*\"","Bash":"sudo ln -f -s $javaUsrLib\/jdk1*\/bin\/* \/usr\/bin\/"}
{"English":"Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '\/home\/u20806\/public_html'","Bash":"find \/home\/u20806\/public_html -daystart -maxdepth 1 -mmin +25 -type f -name \"*.txt\" \\ -exec rm -f {} \\;"}
{"English":"Find files\/directories named blah (case insensitive) under current directory","Bash":"find .\/ -iname blah"}
{"English":"Search files \"file-containing-can't\" in the current directory tree for the string \"can't\"","Bash":"find . -name \"file-containing-can't\" -exec grep \"can't\" '{}' \\; -print"}
{"English":"Copy all .pdf files in the .\/work\/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the .\/backup\/ directory","Bash":"find .\/work\/ -type f -name \"*.pdf\" -mtime +5 -size +2M  | xargs -r cp -t .\/backup\/"}
{"English":"Print a list of all *.code files from the current directory tree","Bash":"find . -name *.code"}
{"English":"Find all PHP files in the current directory recursively","Bash":"find . -name \\*.php -type f"}
{"English":"find all text files in current folder and delete all the files that have the word foo in their name","Bash":"find . -name \".txt\" | grep \"foo\" | xargs rm"}
{"English":"Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex \".*\\.$FILES_TO_PROCES\" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline","Bash":"find \"$DIRECTORY_TO_PROCESS\" -type f -iregex \".*\\.$FILES_TO_PROCES\" ! -name \"$find_excludes\" -print0"}
{"English":"List all environment variables containing 'USER' in their name or value that would result in running a command with 'sudo env'.","Bash":"sudo env |grep USER"}
{"English":"Read a line from standard input into the first argument (\"$1\") using an interactive shell with prompt \"> \"","Bash":"read -e -p '> ' $1"}
{"English":"Find all the files which are greater than 50MB and less than 100MB","Bash":"find \/ -size +50M -size -100M"}
{"English":"List files in directory \"one\" and \"two\" that do not exist in the other","Bash":"sort <(ls one) <(ls two) | uniq -u"}
{"English":"Find all *.rb files\/directories under current directory","Bash":"find . -name \"*.rb\""}
{"English":"find all the files in the current folder which have execute permission to all the users","Bash":"find . -perm \/u=x,g=x,o=x"}
{"English":"Search the file system for regular files whose names are shorter than 25 characters","Bash":"find \/ -type f| egrep -o \"\/[^\/]{0,24}$\" | cut -c 2-"}
{"English":"Find all *.php (case insensitive) files and *.js files\/directories (case insensitive) under \/home\/jul\/here excluding $EXCLUDE\/* paths","Bash":"find \/home\/jul\/here -type f -iname \"*.php\" ! -path \"$EXCLUDE\/*\" -o -iname \"*.js\" ! -path \"$EXCLUDE\/*\""}
{"English":"search for all the mp3 files in the folder \/home\/you which have been accessed 24 ago","Bash":"find \/home\/you -iname \u201c*.mp3\u201d -atime 01 -type -f"}
{"English":"find all the files in the folder \"\/mp3-collection\" which are bigger than 10MB excluding those that start with the word Metallica","Bash":"find \/mp3-collection -size +10000k ! -name \"Metallica*\""}
{"English":"search in the current folder for the file with the name \"test\"","Bash":"find . -name test"}
{"English":"SSH into server \"server.com\" as user \"remote_user\"","Bash":"ssh remote_user@server.com"}
{"English":"create a tar ball of all the jpg and png images in the current folder","Bash":"find . \\( -iname \"*.png\" -o -iname \"*.jpg\" \\) -print -exec tar -rf images.tar {} \\;"}
{"English":"Archive \".\/dir\" to \"user@host:\/path\" via ssh on port 2222 and display progress","Bash":"rsync -rvz -e 'ssh -p 2222' --progress .\/dir user@host:\/path"}
{"English":"Print current date as epoch seconds","Bash":"date +%s"}
{"English":"Find all files\/directories under current directory and put the output into full_backup_dir variable","Bash":"full_backup_dir=\"`find . -depth -print0`\""}
{"English":"Find all files and directories last modified less than a day ago and copy to \"..\/changeset\" creating directories as needed","Bash":"find * -mtime -1 -daystart -print0 | cpio -pd0 ..\/changeset"}
{"English":"Print \"huge-file.log\" starting at line 1000001","Bash":"tail -n +1000001 huge-file.log"}
{"English":"find all the regular\/normal files in the current folder which belong to the users with the user id's between 500 and 1000","Bash":"find . -uid +500 -uid -1000 -type f"}
{"English":"Recursively copy all \".txt\" files to \"user@remote.machine:\/tmp\/newdir\/\"","Bash":"rsync -rvv *.txt user@remote.machine:\/tmp\/newdir\/"}
{"English":"Repeat \"image.png\" 10 times on a single line","Bash":"echo $(yes image.png | head -n10)"}
{"English":"Split \"database.sql\" into files of at most 100000 lines each with prefix \"database-\"","Bash":"split -l 100000 database.sql database-"}
{"English":"Find all files files under the current directory except *.txt","Bash":"find . -maxdepth 1 -type f -not -regex '.*\\.txt'"}
{"English":"Filters only directories including hidden ones from long file listing of a current directory, and prints their names.","Bash":"ls -Al | grep \"^d\" | awk -F\" \" '{print $9}'"}
{"English":"Remove all .sh files in the current directory tree whose names begin with \"new\"","Bash":"find . -name \"new*.sh\" -exec rm -f '{}' \\+"}
{"English":"display all the files in the home folder which belong to the suer \"bruno\" and end with \".sxw\" and have been accessed in the last 3*24 hours","Bash":"find \/home -type f -name *.sxw -atime -3 -user bruno"}
{"English":"Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format","Bash":"find -type f -name \"*.htm\" | awk -F'[\/]' 'BEGIN{OFS=\"-\"}{ gsub(\/^\\.\\\/\/,\"\") ;print $1,$2, substr($4,3,2),substr($4,5,2),substr($4,8) }'"}
{"English":"Find all the files in entire file system  which are modified 50 days back.","Bash":"find \/ -mtime 50"}
{"English":"Find all *.html files under current directory","Bash":"find . -type f -name '*.html'"}
{"English":"Remount \"\/system\" with read and write permission","Bash":"mount -o remount,rw \/system"}
{"English":"Find all SGID files in entire file system","Bash":"find \/ -perm +g=s"}
{"English":"Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment","Bash":"env $(cat .env | xargs) rails"}
{"English":"Count the number of files in the \/usr\/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc\/rc.d\/'","Bash":"find \/usr\/ports\/ -name pkg-plist\\* -exec grep -l etc\/rc.d\/ '{}' '+' | wc -l"}
{"English":"Remove all files under \/home\/user\/Maildir\/.SPAM\/cur","Bash":"find \/home\/user\/Maildir\/.SPAM\/cur -type f | xargs rm"}
{"English":"Find all loadable modules for current kernel, whose name includes \"perf\"","Bash":"find \/lib\/modules\/`uname -r` -regex .*perf.*"}
{"English":"Count all the lines of all '*.c' files in current directory recursively","Bash":"find . -name \"*.c\" -print0 | xargs -0 cat | wc -l"}
{"English":"display all the symbolic links in the current folder","Bash":"find . -type l"}
{"English":"Print 1 byte from \"\/dev\/urandom\" as a signed decimal value and no address radix","Bash":"od -A n -t d -N 1 \/dev\/urandom"}
{"English":"Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file '","Bash":"find \"$somedir\" -type f -exec echo Found unexpected file {} \\;"}
{"English":"Print \"RDBMS exit code : $RC  \" to the console and append to \"${LOG_FILE}\"","Bash":"echo \" RDBMS exit code : $RC  \"     | tee -a ${LOG_FILE}"}
{"English":"Change permissions to 644 for all files in the current directory tree","Bash":"find . -type f | xargs chmod -v 644"}
{"English":"Read a line from standard input with prompt \"Are you sure you wish to continue?\"","Bash":"read -p \"Are you sure you wish to continue?\""}
{"English":"Find all files owned by user `comp'","Bash":"find \/ -user comp"}
{"English":"Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names","Bash":"find . -type d -a ! -name '.?*' -o -name '.?*' -a ! -prune"}
{"English":"find all files in the current folder which are of size 0 bytes.","Bash":"find . -type f -size 0b"}
{"English":"change the permissions of all the regular\/normal files in the current folder","Bash":"chmod 640 `find .\/ -type f -print`"}
{"English":"Find all 400 permission files under \/data directory","Bash":"find \/data -type f -perm 400 -print"}
{"English":"Identify CMS version\/releases accross all your Drupal websites","Bash":"find \/home\/*\/public_html\/ -type f -iwholename \"*\/modules\/system\/system.info\" -exec grep -H \"version = \\\"\" {} \\;"}
{"English":"Force create a symbolc link named \"\/usr\/local\/bin\/fpdf\" to \"\/usr\/local\/bin\/findpdftext\"","Bash":"sudo ln -s -f \"\/usr\/local\/bin\/findpdftext\" \"\/usr\/local\/bin\/fpdf\""}
{"English":"Remove the last two alphanumeric file extensions from \"mpc-1.0.1.tar.gz\"","Bash":"echo \"mpc-1.0.1.tar.gz\" | sed -r 's\/\\.[[:alnum:]]+\\.[[:alnum:]]+$\/\/'"}
{"English":"Print amount of space available on the file system containing path to the current working directory.","Bash":"df $PWD | awk '\/[0-9]%\/{print $(NF-2)}'"}
{"English":"Save \"something\" into variable \"param\" in ksh","Bash":"echo something | read param"}
{"English":"Find all the files in entire file system  which are accessed 50 days back","Bash":"find \/ -atime 50"}
{"English":"change permission of all the files in the entire file system which have permissions 777.","Bash":"find \/ -type f -perm 0777 -print -exec chmod 644 {} \\;"}
{"English":"Find all files\/directories in current directory and execute the script itself with minimal invocation for those files\/directories","Bash":"find . -exec $0 {} +"}
{"English":"Archive files (not directories) in \"sorce_dir\" to \"target_dir\"","Bash":"rsync -a --filter=\"-! *\/\" sorce_dir\/ target_dir\/"}
{"English":"List files under current directory according to their size in descending order","Bash":"find . -type f -exec ls -s {} \\; | sort -n -r"}
{"English":"Mount the \"vboxsf\" filesystem \"myFileName\" on \"~\/destination\"","Bash":"sudo mount -t vboxsf myFileName ~\/destination"}
{"English":"Print file information of command \"passwd\"","Bash":"ls -l `which passwd`"}
{"English":"Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.","Bash":"cat -vet file | less"}
{"English":"find all text files in the folder \"FFF\" and find the md5sum for them","Bash":"find FFF -name \"*.txt\" -exec md5sum '{}' \\;"}
{"English":"search for all pdf files in the folder \"\/home\/pdf\" which have been accessed in the last 60*24 hours","Bash":"find \/home\/you -iname \"*.pdf\" -atime -60 -type -f"}
{"English":"display all the regular files in the folder \"$(FOLDER)\" which are modified in the last $(RETENTION)*24 hours and excluding hidden files","Bash":"find ${FOLDER} -type f ! -name \\\".*\\\" -mtime -${RETENTION}"}
{"English":"Find all files under current directory and search for 'something' in those files","Bash":"find . -exec grep something {} +"}
{"English":"Calculate the md5 sum of all the file metadata in the current directory tree excluding \".svn\"","Bash":"find . -name '.svn' -prune -o -type f -printf '%m%c%p' | md5sum"}
{"English":"Find all files under images directory","Bash":"find images -type f"}
{"English":"Find all symbolic links under '\/proc\/$pid\/fd' directory tree with name pattern '$save_path\/sess_\\*' and update their timestamps","Bash":"find \"\/proc\/$pid\/fd\" -ignore_readdir_race -lname \"$save_path\/sess_\\*\" -exec touch -c {}"}
{"English":"Remove all regular files under '\/var\/log\/remote' directory tree that have not been modified in the last 14 days where day count starts from today","Bash":"find \/var\/log\/remote\/ -daystart -mtime +14 -type f -exec rm {} \\;"}
{"English":"list all regular files which path is not dir1 or dir2","Bash":"find dir -not \\( -path \"dir1\" -prune \\) -not \\( -path \"dir2\" -prune \\) -type f"}
{"English":"For each line which has a common first field in test.1 and test.2, output the first 2 fields of test.2 and the field 2 and 3 of test.1","Bash":"join -j1 -o 2.1,2.2,1.2,1.3  <(sort test.1) <(sort test.2)"}
{"English":"Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree","Bash":"find -name file -ok echo '-ok is an action so an implicit -print is not applied' \\;"}
{"English":"Find all the Sticky Bit set files whose permission are 551 in the file system","Bash":"find \/ -perm 1551"}
{"English":"Mount the \"vboxsf\" filesystem \"D:\\share_folder_vm\" on \"\\share_folder\"","Bash":"sudo mount -t vboxsf D:\\share_folder_vm \\share_folder"}
{"English":"count all the regular files that are present in a directory","Bash":"find . -type f | wc -l"}
{"English":"Print a summary of the command-line usage of find","Bash":"find --help"}
{"English":"Print all directories under $root appending a : (colon) at the end of each path","Bash":"find $root -type d -printf '%p:'"}
{"English":"Search for empty files","Bash":"find . -size 0k"}
{"English":"Find all SUID files in entire file system","Bash":"find \/ -perm +u=s"}
{"English":"Change the owner of all files in \"\/empty_dir\/\" to \"root\" using at most 10 files at a time","Bash":"ls \/empty_dir\/ | xargs -L10 chown root"}
{"English":"Read a single character from standard input with delimeter '' and no echo","Bash":"read -d'' -s -n1"}
{"English":"search for the file \"name_to_find\" in the home folder","Bash":"find ~ -name \"name_to_find\""}
{"English":"Disables overwriting existing files","Bash":"set -o noclobber"}
{"English":"Find files\/directories under current directory excluding the path .\/src\/emacs","Bash":"find . -path .\/src\/emacs -prune -o -print"}
{"English":"List the names of the directories in current directory without going into sub-directories","Bash":"find . -maxdepth 1 -mindepth 1 -type d -printf '%f\\n'"}
{"English":"get all the files that have been modified within the last 30 days","Bash":"find . -mtime -30 -print"}
{"English":"Copy \"*.cc\", \"*.h\", and \"SConstruct\" to \"rsync:\/\/localhost:40001\/bledge_ce\" using blocking IO","Bash":"rsync --blocking-io *.cc *.h SConstruct rsync:\/\/localhost:40001\/bledge_ce"}
{"English":"Find regular files in the current directory that are writable by their owner","Bash":"find -maxdepth 1 -type f -perm \/200"}
{"English":"display all the C files or Python files in the folder \"euler\"","Bash":"find euler\/ -iname \"*.c*\" -exec echo {} \\; -or -iname \"*.py\" -exec echo {} \\;"}
{"English":"change the group of all the files which belong to the user edwarda to pubs","Bash":"find \/ -user edwarda -exec chgrp pubs \"{}\" \\;"}
{"English":"Changes group ownership of 'public' and 'private' to 'god'.","Bash":"chgrp god public private"}
{"English":"Create intermediate directories \"b and \"c\" as required and directory \"c\"","Bash":"mkdir -p a\/b\/c"}
{"English":"Archive directory \"tata\" to directory \"tata2\", compressing data during copy.","Bash":"rsync -avz tata\/ tata2\/"}
{"English":"Print lines in file 'file' that do not match any word specified in file 'blacklist' (one word per line)","Bash":"grep -w -v -f blacklist file"}
{"English":"Find symbolic links in \/usr\/sbin and \/usr\/bin to files whose pathnames end in \"*\/systemctl\"","Bash":"find \/usr\/sbin \/usr\/bin -lname \"*\/systemctl\""}
{"English":"Count the number of lines in every regular .rb file in the current directory tree","Bash":"find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"}
{"English":"Delete all lines matching \"some string here\" in \"yourfile\"","Bash":"sed --in-place '\/some string here\/d' yourfile"}
{"English":"find all the cpp files in the current folder and move them to another folder","Bash":"find . -type f -iname '*.cpp' -exec mv {} .\/test\/ \\;"}
{"English":"Mount partition with label \"WHITE\" on \"\/mnt\/WHITE\"","Bash":"mount -L WHITE \/mnt\/WHITE"}
{"English":"Print the drive and mount point of the last mounted drive","Bash":"mount | tail -1 | sed 's\/^.* on \\(.*\\) ([^)]*)$\/\\1\/'"}
{"English":"Find all regular files under \/home\/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible","Bash":"find \/home\/www\/ -type f -exec sed -i 's\/subdomainA\\.example\\.com\/subdomainB.example.com\/g' {} +"}
{"English":"display the contents of all the text files in the current directory","Bash":"find . -name  '*.txt' -exec cat {} \\;"}
{"English":"split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes","Bash":"split -a4 -d -l100000 hugefile.txt part."}
{"English":"split the file \"file\" into pieces per 2 lines","Bash":"split -n2 infile"}
{"English":"Removes empty folder 'symlink'.","Bash":"rm -d symlink"}
{"English":"Search the directories matching pattern \"\/path\/to\/some\/dir\/*[0-9]\" for level 1 subdirectories","Bash":"find \/path\/to\/some\/dir\/*[0-9] -type d -maxdepth 1"}
{"English":"Filters unique lines by matching against the first column of a .csv file","Bash":"tac a.csv | sort -u -t, -r -k1,1 |tac"}
{"English":"Make a directory in the current working directory with a random 32 alphanumeric character name","Bash":"cat \/dev\/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1 | xargs mkdir"}
{"English":"find all the \".c\" files in the folder \"\/home\/you\" which have been accessed in the last 30*24 hours","Bash":"find \/home\/you -iname \"*.c\" -atime -30 -type -f"}
{"English":"Search for all non-hidden files","Bash":"find . -name '*'"}
{"English":"display all the regular files in the current folder excluding those that are present in the path \"git\"","Bash":"find . -path \"*.git*\" -prune -o -type f -print"}
{"English":"Finds users with X session in system and puts the result in USERS variable.","Bash":"USERS=$(w | awk '\/\\\/X\/ {print $1}')"}
{"English":"Delete all files\/directories named test under maximum 2 level down the current directory","Bash":"find . -maxdepth 2 -name \"test\" -exec rm -rf {} \\;"}
{"English":"Find all files\/directories under current \/export\/home\/someone directory and upload them to ftp:\/\/somehost\/tmp\/","Bash":"find \/export\/home\/someone -exec curl -u someone:password -vT {} ftp:\/\/somehost\/tmp\/"}
{"English":"split processed content of the file inout_file into pieces per 2000000 named as \"out-prefix-NNN\"","Bash":"sed 's\/\\(.....\\)\\(.....\\)\/\\1\\n\\2\/' input_file | split -l 2000000 - out-prefix-"}
{"English":"List each subdirectory name composing the current working directory","Bash":"pwd | cut -b2- | tr '\/' '\\n'"}
{"English":"Find all *.err files under current directory that are larger than 5120 bytes in size","Bash":"find . -type f -size +10 -name \"*.err\""}
{"English":"Display source and mount point of the file system containing \/some\/path.","Bash":"df '\/some\/directory' | awk '{print $1, $6}'"}
{"English":"From a script, output the name of the script itself, without containing directories.","Bash":"basename $0"}
{"English":"Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago","Bash":"find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete"}
{"English":"display the count of number html files in the current folder","Bash":"find . -name \"*.html\" -print | xargs -l -i wc {}"}
{"English":"Search  in current directory downwards all files whic  have permission 777 .","Bash":"find . -perm 777 -print"}
{"English":"List all files and directories from the current directory tree","Bash":"find . -print | xargs ls"}
{"English":"list files in \/usr modified after the time which \/tmp\/stamp$$ modified","Bash":"find \/usr -newer \/tmp\/stamp$$"}
{"English":"display all the files in the folder \/etc \/srv excluding those that are present in the path of .\/srv\/tftp\/pxelinux.cfg* and \/etc\/mtab","Bash":"find \/etc \/srv \\! -path \".\/srv\/tftp\/pxelinux.cfg*\" -a \\! -name \/etc\/mtab"}
{"English":"display all directories in vim folder do not search in sub directories","Bash":"find .vim\/ -maxdepth 1 -type d"}
{"English":"Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.","Bash":"big_lines=`cat foo.txt | grep -c \"$expression\"`"}
{"English":"Replace the \"openssl\" command executable with a symbolic link to \"\/usr\/local\/ssl\/bin\/openssl\"","Bash":"sudo ln -sf \/usr\/local\/ssl\/bin\/openssl `which openssl`"}
{"English":"search for a word in all the php files in the current folder and display the matching lines","Bash":"find . -name \\*.php -type f -exec grep -Hn '$test' {} \\;"}
{"English":"run ksh shell as user apache","Bash":"su apache -s \/bin\/ksh"}
{"English":"Send Output From Find The Find Command To A File","Bash":"find \/ -name *.mp3 -fprint nameoffiletoprintto"}
{"English":"Find all files\/directories named modules under current directory","Bash":"find . -name modules"}
{"English":"prints first line of $bigfile","Bash":"head -n1 $bigfile"}
{"English":"Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.","Bash":"find \/ -fstype ext3 -name zsh*"}
{"English":"Find all broken symlinks under current directory","Bash":"find -L . -type l"}
{"English":"Print numbers from 1 to 30 with a leading 0","Bash":"seq -w 30"}
{"English":"display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files","Bash":"find . -type f \\( ! -iname \".*\" \\) -mtime +500 -exec ls {} \\;"}
{"English":"Delete file with inode number 314167125","Bash":"find . -type f -inum 314167125 -delete"}
{"English":"display list of all the hidden directories in the directory \"\/dir\/to\/search\/\"","Bash":"find \/dir\/to\/search -path '*\/.*' -ls"}
{"English":"Forward port 3307 on localhost to port 3306 on 1.2.3.4 via 'user@gateway' on port 24222","Bash":"ssh -f user@gateway -p 24222 -L 3307:1.2.3.4:3306 -N"}
{"English":"Delete all regular files under $DIR directory tree that have been modified before file $a","Bash":"find \"$DIR\" -type f \\! -newer \"$a\" -exec rm {} +"}
{"English":"change the permissions of all regular\/normal files in the file system","Bash":"chmod 640 `find .\/ -type f -print`"}
{"English":"Records the number of occurences of 'needle' in the array 'haystack' into the variable 'inarray'","Bash":"inarray=$(echo ${haystack[@]} | grep -o \"needle\" | wc -w)"}
{"English":"search for files having python in filename","Bash":"find \/ -name '*python*'"}
{"English":"Find all the files which are modified in last 1 hour","Bash":"find \/ -mmin -60"}
{"English":"Find files owned by no group","Bash":"find \/ -nogroup"}
{"English":"List all *.java files\/directories under \/home\/bluher with their full paths","Bash":"find \/home\/bluher -name \\*.java"}
{"English":"Make directory \"\/etc\/cron.minute\"","Bash":"mkdir \/etc\/cron.minute"}
{"English":"Extract any line in \"file1.txt\" which does not appear as the first \";\" delimited entry in \"file2.txt\"","Bash":"comm -23 <(sort file1.txt) <(grep -o '^[^;]*' file2.txt | sort)"}
{"English":"Assign permissions 755 to directories in the current directory tree","Bash":"find . -type d -print0 | xargs -0 chmod 755"}
{"English":"find all the files that have been modified in the last 7 days,","Bash":"find . -mtime -7 -print"}
{"English":"Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and prints location of such files.","Bash":"diff -qr directory directory.original | cut -d' ' -f2 | xargs dirname | uniq"}
{"English":"Find image files and move them to the pictures directory","Bash":"find ~\/Desktop -name \u201c*.jpg\u201d -o -name \u201c*.gif\u201d -o -name \u201c*.png\u201d -print0 | xargs -0 mv \u2013target-directory ~\/Pictures"}
{"English":"find  symbolic link file that name match  '*sysdep.c'","Bash":"find . -lname '*sysdep.c'"}
{"English":"Find all *.p[lm] files\/directories under current directory","Bash":"find -name '*.p[lm]'"}
{"English":"Search for the files\/directories that were modified more than an hour ago","Bash":"find . -mtime +1"}
{"English":"Find recursively all files in the \".\" directory tree whose names end with \".class\" and delete them","Bash":"find . -type f -name \"*.class\" -exec rm -vf {} \\;"}
{"English":"Find all .txt files in the \/home\/user directory tree and copy them to \/home\/backup","Bash":"find \/home\/user -name '*.txt' | xargs cp -av --target-directory=\/home\/backup\/ --parents"}
{"English":"Replace \"version.old\" with \"version.new\" in the symbolic link target of \"SomeLibrary\"","Bash":"ln -f -s -T `readlink SomeLibrary | sed 's\/version.old\/version.new\/'` SomeLibrary"}
{"English":"Find all regular files under $d directory tree and change their permissions to 777","Bash":"find \"$d\/\" -type f -print0 | xargs -0 chmod 777"}
{"English":"Counts lines of \/dir\/file.txt file.","Bash":"wc -l \/dir\/file.txt"}
{"English":"find all the swap files (files ending with ~) in the current folder and delete them","Bash":"find . -name \"*~\" -delete"}
{"English":"Find all files with name \"file.ext\" under the current working directory tree and print each full path directory name","Bash":"find `pwd` -name file.ext |xargs -l1 dirname"}
{"English":"create a compressed archive \"filename.tar.gz\" with verbose output","Bash":"tar -cvzf filename.tar.gz folder"}
{"English":"Generate the obsolete 29 character Spanish alphabet and number each character","Bash":"echo -e {{a..c},ch,{d..l},ll,{m,n},\u00f1,{o..z}}\"\\n\" | nl"}
{"English":"find all the links in the current directory and print them in each line and display their names.","Bash":"find . -type l -print | xargs ls -ld | awk '{print $10}'"}
{"English":"Find files in the current directory and below that are newer than \/bin\/sh","Bash":"find . -newer \/bin\/sh"}
{"English":"Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts","Bash":"find . -name \\*.java | tr '\\n' '\\0' | xargs -0 wc"}
{"English":"Disables shell option 'nullglob'.","Bash":"shopt -u nullglob"}
{"English":"Remove all directories called \"test\" from the \/path\/to\/dir directory tree","Bash":"find \/path\/to\/dir -name \"test\" -type d -delete"}
{"English":"Find all regular files that were modified $FTIME days ago under current directory tree","Bash":"find . -type f -mtime $FTIME"}
{"English":"grep from bottom of file","Bash":"tac your.log | grep stuff"}
{"English":"Recursively change the group ownership to \"laravel\" in \".\/bootstrap\/cache\"","Bash":"sudo chown -R :laravel .\/bootstrap\/cache"}
{"English":"Print a colon-separated list of all directories from the $root directory tree, except those matching pattern \".[a-z]*\"","Bash":"find \"$root\" -name \".[a-z]*\" -prune -o -type d -printf '%p:'"}
{"English":"Find all regular files under current directory tree that match the regex 'tgt\/etc\/*' in their paths","Bash":"find . -type f -name \\* | grep \"tgt\/etc\/*\""}
{"English":"Find and print the names of all files found in the current directory and all of its sub-directories.","Bash":"find ."}
{"English":"Recursively find the latest modified file in the current directory","Bash":"find . -type f | xargs ls -ltr | tail -n 1"}
{"English":"display all normal \/ regular files in current folder in reverse order","Bash":"find . -type f | tac"}
{"English":"find all the pdf files in the current directory and display only the directory name in which the pdf file is present","Bash":"find . -type f -name '*.pdf' |sed 's#\\(.*\\)\/.*#\\1#' |sort -u"}
{"English":"Find all *FooBar* files\/directories under current directory and copy them to ~\/foo\/bar","Bash":"find -name '*FooBar*' -print0 | xargs -0 cp -t ~\/foo\/bar"}
{"English":"change the permissions of all the files ending with \"fits\" in the folder \"\/store\/01\" and save the output file names to a log file","Bash":"find \/store\/01 -name \"*.fits\" -exec chmod -x+r {} \\; -exec ls -l {} \\; | tee ALL_FILES.LOG"}
{"English":"Search the current directory and its sub-directories for any file that has \"bsd\" somewhere in its name.","Bash":"find . -name \"*bsd*\" -print"}
{"English":"Copy loadable kernel module \"mymodule.ko\" to the drivers in modules directory matchig current kernel.","Bash":"sudo cp mymodule.ko \/lib\/modules\/$(uname -r)\/kernel\/drivers\/"}